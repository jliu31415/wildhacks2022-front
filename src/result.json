{
    "course_code": "Student Report for COMP_SCI_101-0_20",
    "course_name": "Computer Science Concepts",
    "instructor": "Lawrence Birnbaum",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "3.09",
        "count": "76"
    },
    "course_rating": {
        "mean": "2.46",
        "count": "79"
    },
    "comments": [
        "this course is really useful if you are interested in computer science, but not sure which part of it. you get to hear about every aspect of the field and different applications of CS through guest lecturers. most of the lecturers were pretty interesting, and I discovered a field I was interested in that I never would have considered before. the weekly mini\u2013essays are sometimes annoying, but fine. it's interesting to read other people's though the peer grading system. if you just do the work, you'll be fine.",
        "Easy, mini\u2013essay every week. Interesting if you have no background in CS, but kinda boring otherwise. You don't really learn a lot unless you're completely unfamiliar with CS, and as a senior CS major taking this course it was all very redundant. Not sure why it's still a requirement for the major if it's not a prereq for any class.... A lot of seniors just have to take it. Bright side, its an easy A.",
        "101 is a good way to get introduced to what kind of research occurs in NU's CS department. It helped me to learn that I am interested in learning more about systems, and so I plan on taking a higher level systems class this spring. The class doesn't require too much work for each week, and you can have fun with the essays, so that you learn something new and interesting each week. This class may have a lot of negative reviews, but honestly it's not a bad class. I would take this class to offset some difficult classes in a quarter. Of course, as a CS major you can replace this class with a 300 level, but if you're interested about grad school and CS, then I think this class can provide a good overview, and even give you a chance to introduce yourself to professors you might want to do research with.",
        "This course was extremely disorganized and the professor would not answer any emails.",
        "Interesting learning the different parts of computer science.",
        "This course is extremely unorganized. There is an essay due every single week, along with two projects that are also essays. Basically, the class is a lot of busywork. It is not really what you would expect a computer science course to be: there is no coding at all and barely any technical content. I would only take this course if you are a CS major and it is required. Furthermore, the grading is extremely unintuitive on the essays. Some of your grade is based on how accurate your peer reviews are in comparison to a TA's.",
        "I found this to be an absolutely terrible course. For starters, the grading system was beyond messed up and created anxiety amongst students off the bat. I truly did not understand the rational for offering peer grading: at one point, one of the professors said that they used peer grading to avoid the TAs being inundated with grading, but that's how every other class on campus works! Reducing (necessary) work for TAs is no excuse for messing up our grades. Also, the peer grading system was totally unclear, and often students did not take it seriously. In terms of content, I found the class very hard to follow because we had a different instructor every week. Also, the content tended to be quite boring.",
        "It was a very easy course with little time commitment, but don't expect to learn anything.",
        "the course was very poorly organized. Half of the assignments weren't graded until after the final",
        "Worst part of the class: Disorganization exacerbated by the seemingly \"I don't care at all\" attitude of Professor Birnbaum. I am sure that others have detailed his lack of communication and inconsistencies throughout the class materials. In my opinion, this is unacceptable, even for a 101 class. It's not fair to all the people who signed up for the class and expect a basic level of clarity in terms of learning expectations and goals. It felt extremely disappointing when I realized that I was expected to submit every single essay to be graded at a high standard and absolutely not a minute late (or 0 credit), when the class staff were constantly late with everything, literally canceling a project at the last minute or constantly asking us to submit peer reviews the evening before they were due the next morning. When I started working on my final project, I had literally not received staff feedback on any of the 8 essays I had submitted throughout the quarter. The professor refused to do basic things like sending out emails and updating the Canvas page, and had a snarky attitude when students expressed frustration on Piazza. So much work therefore fell to the TAs. It was clear that this class was not the priority of the TAs, which is fair. However, they put in a good effort and improved throughout the quarter. While the disorganization and lack of effort from the professor was absolutely terrible, this class can be worthwhile if take it upon yourself to make it so. The guest lecturers deliver interesting ideas in their respective areas of expertise. Some were very good. I learned a bit about many disparate areas of computer science in lectures and skimming the weekly readings.",
        "The class isn't too difficult but the course administration can be frustrating. Expectations/guidelines aren't always made clear. The class is \"led\" by Larry Birnbaum but a lot of the actual work is done by two head TAs. Due to this understaffing, grades can often be delayed and some announcements occur with little notice.",
        "Take this class once you have some experience with Comp Sci. The class is currently being restructured and might change but we had to write a single\u2013spaced paper every week over what we learned and sometimes if you don't have a background in CS then it can be difficult to back up what you are saying. We also peer\u2013reviewed other people's essays (on average four a week) for a grade. We had two big essays this year. I recommend this class if you have at least a little bit of background and have time to write the essays (which does become easier) because it does have a curve in the end so you will not receive a bad grade.",
        "The lectures are very enjoyable. It is very fun to hear from many different professors about their experiences in CS. However, the busy work for this class makes it very unenjoyable overall. With a mini\u2013essay due every week which is peer graded, it makes the class a lot more stressful than it needs to be.",
        "This class is very heavy on the readings. It's supposed to be for freshman who are interested in CS to explore the different fields within it, but some of the readings are very technical and are not meant for beginners.This class is also very disorganized. Requirements for projects were unclear and due dates were changed pretty late (although the changes themselves were favorable).",
        "no learning at all.  just a ton of essays.  get caught up on the material, come up with an opinion, and say it.  very very very useless class.  some time needed, but not \"hard\"",
        "Larry was a really hilarious professor, and I wish I could have seen more of his lectures, but we mostly learned from new guest lecturers every week. Occasionally the lecturers had interesting things to say, but coming from a background of no computer science experience, I was frequently lost and often confused about the content. It was mainly an inability to understand the technical details of the information I was being taught by guest lecturers. The weekly essays are tedious and felt just like a way for me to waste time \"researching\" a topic I wasn't going to learn much about anyways. Overall, it's an easy class, but it feels useless.",
        "This course was very poorly organized and most of the time students just complained. The weekly essays were a waste of time and didn't actually result in any learning. The TA's were bad, too. I would not recommend taking it unless you really have to.",
        "Larry is the best, great guy. The class itself is not necessary to attend, and the work was super minimal. However, it was very disorganized and the TA's didn't communicate with the instructor and were always on different pages. I didn't mind taking the class because it's an easy A, but be prepared not to get much out of it.",
        "Do not take this class. The readings are long and boring, the lectures are not engaging, and we learn too many topics at such a shallow level that we end up not learning anything. Plus, the course is the most disorganized I have ever taken. The only good thing was that it's an easy A. Take 110 or 111 instead, you do not need to take this course.",
        "Is it an easy A? Probably. Is it an interesting course? Not really? Is it well run? Most definitely not. This is not a Comp Sci class, it's a writing class. If you are fine with writing about topics you barely know, go ahead and take this class and get the easy A. If you actually want to learn CS, stay away.",
        "Communication and organization were definitely lacking. The course has a lot of room to grow. Piazza was a bit of a mess. The mini\u2013essays were a good way to share our learning, although their frequency came at a great cost to quality.",
        "Was a little disorganized, but it's a 101 class, it's nothing outrageous. Just go with the flow, check canvas regularly and keep up with assignments and you'll come out with an A no problem.",
        "This course was not well planned out. It felt as if the professor in charge didn't spend time on organizing the course, and as a result everything felt up in the air all the time. We were told to write essays on topics that were introduced during lectures, but there were little to no guidelines on writing those essays, we didn't receive feedback on them so we didn't know how to improve our work, instructions on peer\u2013grading weren't clear, and TAs were giving different instructions... When I approached Prof. Birnbaum about these issues his only advice was for me to relax. I think the intentions were good and this course is great for introducing different topics in CS but the way it is built was very confusing and in the end I don't think we got out of it what we could have.",
        "The class was very disorganized and the professors coming in did a good job of explaining their focus, but the essay that was required seems pointless if we have to find out more about the topics ourselves",
        "I liked getting to hear about different computer science topics from a bunch of teachers in the department. That definitely helped me decide which topics and teachers to take classes with or avoid in the future.However, don't let the 101 number fool you. This class does not have a light workload for being an intro level class. It definitely feels more like an English or writing heavy class with a focus on computer science topics instead of a computer science class. Be prepared to write at least one essay a week.",
        "The method of peer reviews is unreliable and ineffective. The quality of the lecture entirely depends on the teacher, ranging from highly engaging to stimulating very little interest. The topics you write and learn about are very interesting.",
        "I am pretty confident that this is far by the most useless course at Northwestern. The idea behind why it was introduced as a CS major requirement in the first place seems reasonable: it invites a number of professors who are experts in their fields to speak about a variety of important topics in computer science. This is intended to give students a general introduction to CS and get them excited about the subject, although sadly, the opposite probably occurred. The execution and management of the class was extremely poor. The entire class is based around writing short weekly essays about different CS topics with a couple longer essays sprinkled in between. Conceptually, this isn't a terrible idea and is rather common among introductory courses, but was completely mishandled. About 75% of the grades for the class were returned the weekend before grades were due. A well organized class would never have a six week delay between when an assignment is due and when the grade is released, especially when students are expected to integrate feedback to improve subsequent assignments. The peer review system implemented to lighten the grading work for TAs was also comically unhelpful. An essay you spent 20 minutes on will likely receive the same comments and grades from peer reviewers as an essay you spent 3 hours on. Readings for topics instructors were going to speak about were not always assigned, and there was absolutely no incentive to attend class or discussion sections outside of the participation grade. I recommend taking any CS elective in place of this course unless you really need a joke class to balance a difficult schedule.",
        "This was probably the worst class I've taken at this school so far. Not even because it's hard, it's actually really easy. The one\u2013page essays each week aren't hard, and you can write them just based off a couple of the readings each week so there's no incentive to go to lecture. The projects, which are just essays, are also not difficult if you just do some of the readings and a little outside research surfing the internet. Easy A. What I didn't like about the class is how disorganized it was. The TA's and professor don't answer emails, deadlines constantly changed, especially close to when an assignment would be due, and the communication between the TAs and the professor was not where it needed to be. Prof. Birnbaum didn't even know the requirements of our finally essay after the TAs had changed them. The class was frustrating because of stuff like that, and feels more like busywork and than actual learning because it's so disorganized, but its an easy A for a distro or CS majors.",
        "The planning and execution of this class substantially below Northwestern standards. Every week, we are asked to write a single\u2013page essay, and once in a while, a 3\u20135 page long essay. It's currently December 7th, and the last grade I received for a homework was for one that was due October 30th. I wrote two 3\u20135 page essays (which are considered to be projects and determine 40% of your final grade). I submitted the first one on October 23rd, and still did not receive any feedback on it. I am expected to submit the second project on December 8th, but without knowledge of what the graders criteria is like, I have no clue how I can improve my writing for it. The weekly essays are graded by four other students who are taking the class; I have no idea what the graders are doing while we are being required to go through our peer's essays. I have no clue why McCormick makes this a mandatory class for CS majors. It might be a good introduction to different areas of the disipline for non\u2013CS students, but that's all it can be.On the flip side, it's an easy\u2013A.",
        "The structure of the course was a little boring. There definitely could have been more interactive classes. The miniessays were fairly easy but sometimes challenging based on the topic.",
        "This course beat my expectations for it. While I viewed it as a potentially easy CS class to take alongside a couple notoriously difficult classes, it wound up being pretty interesting. I wish I had taken this class as a freshman, because I think it actually did a great job providing a quick survey not only of CS in general, but of NU's offerings. A surprisingly enjoyable class that is easy while offering a nice opportunity to learn more about CS from a high level.",
        "Wow this class is low key a mess. I personally loved it because lectures were really interesting. We had really smart people from each subject within CS come in and give little lectures which was really cool for me as someone who knew nothing about CS and wanted to know more. But no one else went to lecture. Lectures were pretty much empty. And the assignments were so weird. We wrote mini essays and had weird peer reviews that were on a totally messed up grading scale. Also sections were a waste of time. People were really freaked out about grading but there was no reason to worry. This class is just a cool way to get to know a little about CS, especially if you don't freak out about the assignments and realize it's a 101 course. Also Larry is hilarious.",
        "This was my least favorite class by far. I didn't realize that we would have to write an essay every week. The grading in this class is awful, and I don't know what grade I'm going to get because there are assignments from months ago that haven't been graded. Nobody ever explained what the essays are supposed to look like, and for some reason your (anonymous) peer reviewers seem to hate you specifically. The entire class was so disorganized, and overall I was not a fan. By the end of the quarter, only like 10\u201315 people of 80 would even show up. Additionally, the professor never responded to one of my emails, which was annoying.",
        "Very unorganized. It was a hot mess of a class. Piazza posts were never answered promptly, probably because this course was way understaffed. There were a lot of miscommunication mishaps with the TAs, and deadlines were often times unclear. The details of the course weren't really hashed out, and there was a lot of last\u2013minute changes.",
        "Writing almost open ended essays was exciting for me, as I could literally make huge jumps in the direction of my writing. The course also involved different instructors giving lecture about their fields and specialization and this was engaging.",
        "The class Is just very disorganized. It is a relatively easy class; but the whole thing is unclear. There is a different lecturer every single week; each assignment is written; there is no actual coding. Some of the lecturers are interesting, while others are not. The main this is just the organization of the class. The first draft of the final paper is due today and I am yet to receive a grade for project one; the second biggest assignment of the quarter that was due before the midterm. I am skeptical that I am not going to get feedback on the first draft of my final before the final draft is due...",
        "I really liked that we got to hear from different professors each week. It helped me decide what CS classes I would like to take in the future and what areas of study are interesting to me. The structure of the class was not good. There was no syllabus until the second week of class. I didn't think that the mini\u2013essays or peer reviews reinforced what I learned in lecture. I wish that the weekly assignments had been something different \u2013\u2013 I don't think I am a better writer or better at peer reviewing now. There was not a lot of feedback on any of the essays or peer reviews, so it's hard to know what I could have improved.Because there was limited communication from the professor, it was hard to know how to do well in the course. The peer grading system seemed impersonal \u2013\u2013 I felt like my grade depended on my classmates instead of on someone qualified giving me feedback.   Although I appreciated that we did not have to buy clickers, I definitely think that there should be a way to account for people who go to the classes \u2013\u2013 most people didn't go. I did not appreciate that the people who did attend were singled out and asked to discuss the readings and then embarrassed if they couldn't answer questions by a few of the professors. It was really hard to understand how we were supposed to discuss the readings in a lecture setting \u2013\u2013 it detracted from the information about computer science that the lecturers could have given us and didn't make a lot of sense. I think the course needs to be restructured, and I do not understand how it can be so hard to put together a functioning class. I wish I had taken the additional breadth course instead of this class. It would have been much more useful and probably less stressful. I would not recommend the class.",
        "This course was extremely disorganized.  Instructors never were prepared, we had to write an essay every week with no feedback given, and section was very boring and the TA was illprepared.",
        "This was a nonsense course. The fact that it is required as a CS requirement speaks to how poorly thought out NU\u2019s CS program is. It\u2019s an easy A, but ultimately should be scrapped as it\u2019s a major waste of time and tuition money. Easy A though so if you want a GPA boost definitely take it.",
        "workload can be ridiculous but i'll take it over some 300\u2013level Comp Sci classes",
        "This course was not what i expected at all. It was a lot of busy work which was challenging simply because I came into the class with no knowledge of computer science (as it is a 101 level class). The weekly readings and mini\u2013essays were often hard as they required lots of outside research on my behalf to even understand the content being discussed. The class is an odd mix of freshman with no experience and seniors who either had to take this class or another 300\u2013level class and are therefore far more knowledgable about CS than myself and many of my peers. This class was quite a hassle for no reason, because I hardly learned a thing. Love Larry though, even though he wasn't there for most of the guest lectures (which are every week). Overall, poor communication and organization, especially about projects, work takes forever to be graded (I have no idea what grade I have in the class right now, during reading week), and about 10% of the class shows up to lecture every class. Just take 110 or 111, skip this class.",
        "It's cool to have a new guest lecturer every week, though overall I felt like the lectures were too high\u2013level/vague/general for me to constructively take something away from them. With that being said, the overall setup of the class in surveying a number of topics in the field of CS at a high\u2013level is something I liked. We read a lot of cool and interesting articles and homework assignments (weekly mini\u2013essays) compelled us to think critically about each of the topics covered in the class. Not too hard, in terms of difficulty, if you do all of the work.",
        "This class was very disorganized. We didn't have a Canvas for the first week and a half and lectures felt like a waste of time. Assignments were hardly graded on time and overall, this felt like a very useless class.",
        "I don't think this course is a good intro to computer science for new students",
        "The way in which this class was run clearly induced significant frustration among the students. I personally didn't really mind since I'm a senior and don't mind an easy class, but the assignments and expectations out of this course need to be refined significantly if this is going to serve as a good 101 course for the CS major. For example, there was significant confusion over the latter two projects, what their deadlines were, and whether they would allow partners or not. The statements made by the TAs often conflicted with what the syllabus said on Canvas. I understand that this is a ported\u2013over class and slapped together quickly since you couldn't find anyone else to teach 101 this quarter, but for the future I really would just sit down for a couple of hours and clarify what time each weekly assignment will be due and when the three projects are due, and finalize that in writing on the syllabus. The peer grading + TA system is confusing at best and adversarial at worst \u2013 why would you incentivize students to give lower grades to their peers in hopes of 'matching' TA grades more accurately and raising their own scores?",
        "Disorganized course",
        "This class was a mess. We didn't get our syllabus until the second or third week of school, and we were not given any of our project grades before the drop deadline, so I was not sure how I was doing, and honestly still not sure as I still haven't gotten my project grade back yet. The fact that you are graded on your peer grading skills is crazy because you are graded pretty harshly on them. There is an essay due every week with 2 (or 3) projects which are 2\u20135 pages of writing single spaced.",
        "This course really needs to be reevaluated. This course is not constructive for CS majors, and I really have a hard time believing this course makes ANYONE from another major want to switch to CS. I think the entire course needs to be updated for future students.",
        "I had low expectations for this class because my friends told me it was an easy A. My expectations were shattered. it wasnt an easy A, it was an easy A+ but with a lot of stress and a professor that did not care at all. The peer review system is trash and the TA's are so useless. But you know lol its an easy A but take it at your own discretion (unless your a cs major then you have to take it)",
        "Terrible course \u2013 should be taken out of the major.",
        "I did not like this class because of the way it was conducted. Our professor did his best and it wasn't his fault",
        "I enrolled in this class under the assumption that it was going to provide a beginner\u2013friendly overview of Computer Science. It does not. Honestly, the lectures though (sometimes) interesting were not beginner\u2013friendly at all which would have been okay if we had background information or time to digest the material. We did not. Instead, this class demands heavy readings and 1 single\u2013spaced paper every week of material that honestly few students understood from the lecture. Now, the grading system for this class is not only obscure but subjective. The professor does not grade you. The TAs do not entirely grade you. There is an algorithm created by Jason Hartline (Northwestern CS Professor) that uses student feedback to grade other students and as an \"incentive\" for you to grade accurately, when grading other students you are penalized if you do not grade the exact way the TA grades. What all this means is that your grades are being determined by other students and when peer grading you are not trying to give helpful constructive feedback, instead you are forced to begin guessing the way the TA would feel about the essay. Further, when students tried to ask for clarification with their grades, the TAs were unhelpful as was the professor. My TA though a lovely person had no idea what was going on with the grading and because it is so subjective, students have no way to advocate for themselves if their TA  gave them a grade they did not feel they deserved. DO NOT TAKE THIS CLASS. PLEASE DO NOT TAKE IT. PLEASE.",
        "This class was not well organized, but that meant due dates getting pushed back and a few assignments just getting canceled. You can do the weekly essays in a couple of hours. If it was run the same way, I'd take it again.",
        "This course has the huge potential to teach interesting aspects of computer science to those new to the field or who haven't had the opportunity to explore much of the department at Northwestern, but it is structured so poorly. The grading system shouldn't set an 80% as equivalent of doing everything you're supposed to do well. The course was also generally pretty disorganized and due dates and expectations for assignments and projects were often communicated poorly.",
        "The course is really disorganized. The syllabus wasn't prepared and there wasn't even a Canvas page set up until later. While Canvas is not the best website, this course's was especially messy since it just linked back to previous years' pages which meant that dates were off and the name of the professors coming in to lecture wasn't updated. The assignment scheduling wasn't all that consistent either but at least Larry and the TAs were flexible about it. It's shame that the class attendance dwindled though since I felt that the latter half of quarter had some of the better presentations: Hartline on algorithms, Pardo on AI/ML, Cossairt on computer vision, Rogers on databases, etc. I don't really recommend the course too much. If you don't mind open\u2013ended weekly essays (1 page), I'd say it'd make for an ok 5th course on your schedule.",
        "The class is a total mess; assignments take forever to get graded, the workload is insane for a 101\u2013level class, and communication is terrible",
        "Possibly the worst course I have taken so far in Northwestern. This is not due to the quality of instruction or course material. The professor was fantastic and genial, the TAs were helpful, the guest lecturers were all great. It's pretty much just that I happened to take this course in a tumultuous time, when (to my understanding) a new instructor was being dragged into teaching the course without too much forewarning or time to prepare. Grading was hugely delayed\u2013 I started receiving the grades for assignments around the middle of the quarter. The Canvas site was also quite disorganized and assignment/lecture descriptions didn't match up. Things started coming together around the last four weeks (that's including reading and finals week), but that was a little too late for my grade. Hopefully this course will be better organized and prepared for the next body of students, but my recommendation is to stay away for at least a year until course organization and heading stabilizes.",
        "It was a good beginning course to take especially if you haven\u2019t taken any CS related classes in the past. However, the course wasn\u2019t organized in terms of the schedule and grading was somewhat inaccurate by peers.",
        "At the cost of being extremely exasperated, take this class for a kind of easy A.",
        "This course is kinda wack despite being interesting. Hopefully this will improve with time, but the course structure is completely disorganized. Until 2 days before final grades were due a large majority of my grades in the class hadn\u2019t been completed. That being said if these issues didn\u2019t exist I could definitely recommend this class as the topics covered are quite interesting and expose you to a lot of areas of computer science.",
        "The lectures for this class were really interesting and I enjoyed going to them. However, the assignments were quite obnoxious and the feedback on them was not very good. Overall an easy course though.",
        "This class is poorly managed, and the lectures can be very boring. The discussion section was always interesting. It was nice to hear a the perspective of a grad student who has done research in CS and has a solid understanding of the CS industry. Take this class if you wanna know about the contemporary developments in the CS industry or the history of CS, but not if you want to know what field of CS you'd be interested in or if you want to code. It's too broad of a class, and we really only read from articles that are published by journalists.",
        "Took this class for CS major requirement and I thought it would be interesting; the class was horribly organized, no TAs really seemed to know what was ever going on as the professor himself was virtually uncontactable. Multiple times they provided erroneous information on the deadline of an upcoming project. Different parts of the syllabus also sometimes said conflicting things about project details. It was pretty nerve\u2013wracking because sometimes something would go wrong i.e. there was one week where CANVAS messed up and I wasn't assigned peer reviews and I had no idea if this would end up hurting my grade. Overall, class materials may have been pretty interesting but the way everything was organized just made it a horrible class to take. However I will say that it was quite an easy class to do well in because there aren't any midterms or finals and grading is pretty lax. If you don't mind writing an essay a week then you'll be fine.",
        "I have never seen such a disorganized and useless class. Everything about this class was a disaster. The only silver lining is that it was blow\u2013off class.",
        "Very disorganized class. Never really knew what was happening. Interesting speakers, gives a good look into whats happening in computer science, but also never knew when assignments were due."
    ]
}{
    "course_code": "Student Report for COMP_SCI_110-0_20",
    "course_name": "Intro to Computer Programming",
    "instructor": "Sarah Van Wart",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.76",
        "count": "165"
    },
    "course_rating": {
        "mean": "5.51",
        "count": "166"
    },
    "comments": [
        "It was good. It started slow so I thought I didn't need to pay attention at first but everything builds on the previous class so its important to really follow along and then things won't get too confusing.",
        "I really liked it, it was super fun. I liked that we didn't just do math programs but we worked with visualizations and things that we use daily to make the coding more fun and more relatable to real life.",
        "Learned what I wanted to, could've done a bit more with data analysis though",
        "Work is time consuming, and for me, it was difficult. Sara is a great professor and will help you if you ask for it though. Pay attention and follow lecture, it will save you.",
        "This course was very straightforward; the quizzes very directly reflected the content we were learning in class. There was so much support from Sarah and the TAs. I felt comfortable to make mistakes and ask questions.",
        "This class was very doable. I wouldn't say I really enjoyed it though. If there's one thing this class taught me it's that programming is not my thing. Besides that, great professor, great TA's, lectures were helpful, homework and quizzes were always doable.",
        "I really enjoyed this course. It is not too challenging. Sarah is a fantastic professor, and there are a lot of resources available to help such as the tutorial sections and office hours. Definitely recommend for a major requirement or Area II distro!",
        "LOVED this course!! Office hours are crucial for the projects and they help so much.",
        "This was a really great course. Sarah is a fantastic teacher and the workload was really manageable. There are also a lot of opportunities to get help if you need it.",
        "This course is really great if you want to get an introduction to programming! You really only need to get the basics of each unit down in order to succeed, but the course definitely gives you so many opportunities to explore and get creative.",
        "I had no prior experience with programming and Sarah is the absolute best. She made what we were learning feel applicable to things outside of this course, and she was so kind, thoughtful, and made the course concepts feel doable when I thought they would be daunting. Absolutely take this course with her if you're just interested in programming and want some sort of experience with it before you graduate.",
        "The instruction was really effective and the homeworks and projects pushed my coding knowledge farther.",
        "The professor is wonderful and understanding. She wants everyone to succeed and do well...rather than just creating a curve/grade distribution.",
        "This class is great!",
        "Sarah is one of the sweetest professors! She tries to make class as stimulating and enjoyable as possible, while also going through all the necessary materials. There were 2 weekly assignments, 2 projects, and 3 quizzes. The assignments were relatively straight forward and followed lectures closely. Many of them were in preparation for the projects and so they were helpful. The class also has a lot of peer mentors, and so you are constantly surrounded by resources and people to ask help for if you are stuck. This is a good intro class to Python if you are new to coding and just want to learn Python. Overall, I would recommend!",
        "SARAH IS THE BEST literally makes it so accessible even if you have no comp sci experience. sweetest professor and teaches so well",
        "Sarah is the best! I came into this class with 0 coding experience, and it was very manageable with the way the course was structured. Make sure to go to office hours if you are struggling because the projects are worth a decent bit of your grade.",
        "The class is really interesting and Sarah is an amazing professor. There is leniency built into the course to help you get the best grade possible. It is completely possible to get a good grade and learn a lot from this class if you take advantage of office hours.",
        "I walked into the course not really interested in CS and walked out with wanting to pursue CS way more than I thought I would. It is an easy class if you put the work into it (which isn\u2019t that much) but it also gives you confidence in your coding skills.",
        "I really liked the content but it was too much lecturing. In addition to the 3 50 minute classes a week, there was also a 50 minute tutorial (like a discussion) that was not advised on Canvas. More annoying than that, before most lectures, she would upload old lectures that take about 1 hour each. So instead of the class being 150 minutes, a week liked advertised on Canvas, it's much closer to 320 minutes. Overall good class and Van Wart is very nice and smart.",
        "As a student studying political science, history, and philosophy, I was a bit worried about exploring a subject outside my humanities comfort zone, but the course was designed for students with no prior coding experience, and though it was at times quite challenging, Professor Van Wart and the Peer Mentors did an amazing job explaining the course concepts clearly and logically. If you are taking this course, I would recommend going to office hours and the exam review sessions because they were extremely helpful. Everyone was very kind and willing to meet me where I was at based on my lack of coding experience, and I gained some very useful Python skills! I would recommend this course for anyone who it interested in starting to code!",
        "This course is very non\u2013CS\u2013major\u2013friendly!!! Do not be intimidated by this class even if you are not a CS person! I was not expecting to love this course but I actually had a great time! Sarah is a GREAT professor. She is an engaging lecturer and super knowledgeable. Definitely take this class if you're considering it",
        "Perfect teacher for the job. Very fun class! Would recommend!",
        "Professor Van Wart is so, so sweet and helpful. She always took time out of class to answer anyone's questions, and stayed long after class time was over to continue doing so. She was great at explaining CS concepts in easily understandable ways, and her enthusiasm helped a lot too. You're also guaranteed to get a 100+ on most assignments as long as you follow the parameters.",
        "This is a great introduction to programming and Python.",
        "This was by far my favorite course of the quarter. There wasn\u2019t any busy work. Sarah is extremely understanding and is actually interested in what she teaches I would definitely recommend",
        "The content was very well organized and easy to follow as a beginner in programming. Lectures were mostly engaging and tutorials were very helpful!",
        "Professor was spectacular. I had no business taking a CS class, but was very pleased with my time in this class. Not hard at all and the TAs are very helpful.",
        "this course is a great intro course! you get out of it what you put in. The prof was very understanding and the TAs were always available when you needed help!",
        "Sarah Van Wart is such an amazing professor. Because in a CS class you use your own computer, there are a lot of times individual issues with different students. She (and her team of TAs) is so helpful when it comes to solving problems, all you have to do is ask. My only gripe with the course is that you spend a lot of time working with simulations, shapes, etc. which doesn't have a lot to do with the data\u2013processing aspect of python \u2013 where my primary interest lay. I understand that these preliminary units are in place to teach you techniques in python, but I feel like there may be a more applicable way to do this.",
        "I took this class without any previous knowledge. I was afraid that things will be hard for me, but I learned everything from the scratch. The TAs and teachers were available to offer help with debugging our codes.",
        "I really enjoyed this course. I did spent a LOT of time on it, but that was 100% by choice... the course load is entirely manageable. When doing homework I felt as though I really was learning and not just completing things to get a grade. I spent so much time on the class because I really enjoyed it and so pursued random stuff in my own time. I had never coded prior to this class and now feel much more knowledgable about the subject.",
        "I really enjoyed this course. Sarah is an awesome teacher, and explains things in a way that students can understand, no matter their prior understanding of comp sci. I knew nothing about comp sci coming into this course, but the topics that were covered and the way we had to apply them through projects and homework really helped me understand the basics of Python. I highly recommend this course to anyone.",
        "Again, I learned so much in this class. I really loved it. It was nicely structured for flexibility\u2013I never attended lectures, I just watched them back whenever I had free time. It wasn't hard to get an A in this class if you work to understand the concepts. Some weeks had more work than others, but I really enjoyed the cool projects we did, so it wasn't too boring for me. Prof. Van Wart was great as well\u2014her lectures were very understandable and concise. I never really used my Peer Mentor, but I heard others had good experiences with them.",
        "This course has inspired me to pursue CS as a minor/major\u2013\u2013that's how dope it is! As long as you try just a little bit, it's very easy to be successful in CS\u2013110. The assignments are often creative and fun in addition to obviously being educational.",
        "I am glad I learned the fundamentals of coding. Now I feel I can go out and learn new languages.",
        "The professor was really motivating and super helpful in terms of choosing class content and keeping the class applicable to all students regardless of previous experience",
        "This class was amazing. Considering this was online, the professor did an amazing job of explaining the content while being open to answer questions after class. Lectures are recorded so you don't have to attend every class. The TAs in this class were amazing and always open to answering questions. If you're taking this course, make sure you utilized both the professor and TAs to the max, especially with the homework and projects.",
        "I think this class is great for everyone, even if you aren't interested in coding.",
        "Let me just say. I knew absolutely nothing about computers before this class. Literally nothing. Sarah is such an amazing professor and I feel like I learned SO MUCH. Even thought this was taught over Zoom, lectures were fun??? I thought she was super organized, professional, helpful, and I really can tell how much she loves what she does. Take this class it was honestly so much fun.",
        "A great intro to programming course. I came in which no knowledge of programming and it was very doable. If you have any experience with CS at all the course will be very easy for you. The second project involved generating spotify playlists and was fun and interesting. Prof Van Wart is super nice and energetic.",
        "This was a really good class\u2013\u2013although I thought it might be hard to follow a CS class in a remote setting, Professor Van Wart made it easy to follow and also was very approachable to get help from after class and in office hours.",
        "I loved this class. It was a perfect intro to coding with no prior experience and was very manageable",
        "Great course, Sarah is the best!",
        "This course was beyond amazing despite remote instruction. Sarah was extremely accommodating and seemed to be my only professor who recognized the pandemic. This course offers tons of help from weekly tutorials, to tons of office hours, etc. Lecture was worth attending and the workload was very manageable.",
        "Sarah and the TA are both very nice and clarify everything well!",
        "This class was amazing! Prof. Van Wart clearly cares about computer programming and her enthusiasm is infectious. I had no experience with or even interest in computer science, but this class has made me want to take more COMP SCI classes at Northwestern! If you are at all intrigued by computer science, take this course!",
        "Sarah is insanely organized and it's great, also a really fun professor",
        "Loved this class. I had heard great reviews about CS110, and they were all true\u2013\u2013I came to love coding in Python through this class. As an engineering student I highly recommend this class as an intro to programming, especially because Matlab coding is taught so poorly in EA1. Sarah is an amazing teacher who always makes class enjoyable and cares a lot about the students.",
        "Sara and the TAs were super helpful. Pretty easy and straightforward class.",
        "Sarah was super friendly and helpful and I really liked her class. Comp sci is very much out of my comfort zone, but she made it very accessible and I feel like I've learned a ton thanks to her. Also the TAs were great!!",
        "This was a great intro course and taught me how to use Python. I learned how to write code and other practical applications of Python. This was a super fun class! We wrote our own computer programs to make animations and recommendation apps!",
        "This course (a previously self\u2013proclaimed 'humanities person') made me want to double major/minor in CS! I really enjoyed learning Python, and Professor Van Wart is so engaging and helpful. Seeing our projects come to life was very rewarding.",
        "Sarah is the best professor I have had in my time so far at NU. This class is challenging but also has many opportunities for getting help. Highly recommend if you have any interest.",
        "Great course. Weekly homeworks, two quizzes, and two projects. Drops 1 homework and 1 quiz so don't need to do those if you do well on everything else. Overall, great class. Just show up to lecture and tutorial and homeworks should be a breeze.",
        "This class was good for a fourth class without too much work where you can be certain of doing well if you do the work. I didn't watch any of the recorded lectures or go to all the live ones, but the tutorial sections taught everything we needed to know for homework",
        "I LOVED this class and priofessor. I took it with an interest in pursuing Computer Science as my major and it was definitely a great introduction!!!",
        "This class was very helpful in getting me started learning Python. I thought that the pace was pretty good, and not too fast. There were tutorials and homework each week, 3 exams but only 2 of them counted, and 2 projects. I thought the projects were pretty interesting, the first was an interactive animation and the second was a recommendation app working with data from Yelp and Spotify.",
        "This is an awesome intro to coding. Sarah and the TAs are excellent, and your grade reflects the work you put in.",
        "I was able to learn a great deal, but the assignments were very difficult and required a lot of time and effort for a first\u2013time coder.",
        "Sarah was wonderful at teaching to nonmajors because she herself learned how to code after college. Office hours are held really often, and all the TAs are super patient and knowledgable.",
        "This class was very easy to be honest. It was also very fun and I looked forward to doing all the assignments and going to the class. Sarah also did a great job teaching the course and made it very enjoyable.",
        "This course was amazing and Sarah is awesome! I was really worried about this class because I had no previous computer science experience, but all of my worries were for not. I loved this course and learned so much from it! 10 out of 10",
        "This was a super chill and cool class. I learned a ton about the building blocks of python code and how to program/troubleshoot in python. Also, Professor Van Wart is awesome and she does a great job of making sure the class moves at a pace that is comfortable for everybody. She is super accommodating with office hours and so are all of the peer mentors/TAs. The quizzes in the class aren't bad at all and the homework assignments are generally pretty simple and easy except for the last few but they're doable.",
        "This was a great distro and pretty easy! I had no prior experience with coding whatsoever, but Professor Van Wart helped my understanding by going pretty slowly at first. The overall grades were determined by weekly submissions of tutorials (can drop 2), homework assignments (can drop 1), 2 out of 3 exams, and 2 large projects. I highly suggest going to office hours for help on any assignments and your tutorials because the peer leaders were very helpful. Overall, good experience with this class, but probably won't continue in any comp sci classes. Easy distro",
        "SARAH IS THE BEST \u2013 TAKE THIS CLASS WITH HER IF YOU CAN AND WANT TO LEARN PYTHON BUT HAVE LIKE 0 EXPERIENCE WITH CODING!!! I learned a lot in this class even though it was via Zoom. Lectures were synchronous and recorded too. There's tutorial but they're actually helpful for learning the program and how to work through a lot of the hw. There are tons of office hours during the week and the peer mentors/ta have always been super helpful. Our grades consisted of tutorial assignments, hw, 2 projects (i.e. mideterm + final), and 3 quizzes (you can drop the lowest quiz grade though). Overall, everything was straightforward, didn't require too much time outside of class. If you just work hard and pay attention in the beginning to get a really firm grasp on everything, the latter end of the class shouldn't be difficult. Don't work on things last minute!! Always put in time for assignments so that if something goes wrong, you can pop into office hours to figure it out. But whatever the case, I think you'll have a lot of fun in this class with Sarah and feeling super cool when your codes runs and the programs that YOU WRITE actually work!",
        "I really enjoyed doing the projects because it uses what we learned and make amazing, unique code.",
        "If you have any significant computer programming experience then you should probably consider other cs classes. This class was great, but having done part of an MIT OpenCourseWare python course (as well as a programming class in freshman year of high school), I found most of the first half of this course redundant and all but the projects and the last few homework assignments felt like busywork. That being said, if you have little or no experience with programming this course will probably be great for you.",
        "I cannot say enough good things about Professor Sara. She is the most considerate, passionate, smart, and kind professor. I did not know much about computer science/coding other than taking a short course over the summer. I think Sara is very excited about the topic and made me want to learn more. She is understanding of students and has a very straight\u2013forward grading/teaching method. I am very glad I took this course.Regarding her remote teaching, it was the best of all the classes I took. She had a very active tutorial/discussion section style that allowed for students working together. She also had a synchronous/asynchronous lecture style, so that those who work better with synchronous classes could attend and those with time zone conflicts could watch the lecture later.I would say\u2013 I took this course to assess my interest in computer science and the possibility of majoring in it, but I do not think this class gives anything toward the comp sci major which was disappointing to learn towards the end of the course. It is simply an introduction and I think it also covers a distribution. I believe comp sci 111 is much more useful for the major, but this is a great intro for sure.",
        "I loved this class. Originally took it because I figured I should learn how to program (had zero prior knowledge) and discovered a new serious interest. Thinking about pursuing.",
        "The class is ridiculously time consuming, with pre\u2013lecture videos, weekly tutorials, homework, exams, and projects. But Sarah and the TAs are super accessible and helpful through it all. I really did learn a lot and I'm glad I took this class to fill a distro. Learned a valuable skill that I wouldn't have had the resources to learn otherwise.",
        "Everything is easy understand if you watch the pre recorded videos and attend lecture. You can get by with not showing up to lecture if you find the applications not that complicated. Sarah does a really good job of going over how each part of a program works. Working on the homework can be a little frustrating because you may not know where your errors are coming from, but going to office hours is always a good solution. The quizzes were very easy and do not cover the overly complicated stuff. Overall, not as bad as I thought is was going to be.",
        "I feel like there was an assignment/activity for everyone in this class. I personally enjoyed both of the bigger projects, but they were very different\u2013\u2013the first was an animation and the second was a web crawler.",
        "I'm really glad I took this! A really great intro to computer programming, Sarah is super easy to talk to and not intimidating.",
        "This class was fantastic! Professor Van Wart is truly incredible. She cares about her students as much as she cares about CS (which is a lot), and her passion for the subject made me excited to learn each new topic. I only took this class because it was a requirement for my Linguistics major, but I'm planning on taking more CS classes in the future because of how much I enjoyed it.",
        "Even though I had no interest in computer programming before, the class was pretty engaging. It was hard to learn sometimes because the structure of lectures seemed a bit unorganized.",
        "I loved this course. It seemed as though it's easier to take this course remotely than in\u2013person. There are so many opportunities for office hours. Sarah has the best intentions for her students and clearly wants you to walk away with a stronger understanding of programming.",
        "Extremely easy class, with many chances to improve if you make a mistake. Van Wart is easily one of the best professors at NU.",
        "I learned a lot about CS having no prior experience, but it's important to attend lecture to stay on track of new concepts that will be covered in homework and projects",
        "This course is amazing. Sarah is an awesome professor and such a kind human being. I have learned a lot about coding and discovered an interest in this area.",
        "I had almost no experience in computer programing prior to this course and was unaware for how many errors can occur and how to successfully troubleshoot said error. This course did a good job of taking this into account and there was help available almost all day for help on assignments. Instead of teaching on set way of accomplished task, we were encouraged to creatively apply concepts we learned and create unique solutions which immensely helped in developing an even better understanding of how to use everything learned in class.",
        "Sarah is the absolute best! She makes computer science so accessible and the projects you get to work on while seeming intimidating when you hear about them in the start are easy because of her instruction. The projects are a lot of fun to work on\u2013 an animation and a music/food recommendation app. Both of which have real life applications. It's very satisfying to see the results of your programming in a final product. Totally doable for beginners.",
        "I loved this class! Prof. Van Wart is one of the coolest professors I've had so far. She was very kind and understanding, and her lectures never felt like a chore. The TAs were also great, and tutorial time was a good opportunity to practice what was given in lecture, as well as get a head start on homework sometimes.Assignments were very light: A homework almost weekly that took maximum of an hour to finish (usually a lot less than that), tutorials weekly where you do the work during the tutorial session with your TA (where you can ask anything, as well as get instruction), and you can just submit it then and there, and 2 projects that might seem intimidating at first, but are actually not that hard/time\u2013consuming. The 3 quizzes were simple and to the point (and you can skip/drop one of them).All in all, this class was a great introduction to programming and computer science in general, so I definitely would recommend it to anyone not sure about CS.",
        "Sarah is a very kind person and professor and it is easy to do well in this class, just go to office hours. Not all of the lectures are super helpful, but they are all recorded so you can go back and watch just the parts you need.",
        "Tutorials were useful.",
        "I think the best part of this course was the practical assignments/applications that we had to do. Our second project tasked us with designing a recommendation app and it provided us a way to test our skills with a real life applications.",
        "I took this course because I wanted some knowledge of programming and not because of any requirement. I went into it with little experience, and the course was well paced. Definitely not a class you want to slack on, but if you keep up with the material, it's very doable to do well.",
        "I love this class. Even though I spent quite a few hours on the project, I still enjoyed the outcome.",
        "There are two major projects in this class and 3 quizzes. Sarah is so nice and her office hours are always helpful especially if there's a project coming up. TA office hours are a bit crowded especially on Thursdays and Fridays when assignments are due. Overall you will learn the basic logic of Python, a great start to CS.",
        "this class is so hard only take it if u have to. but the ta's and professor are absolutely fantastic. i just hate computer science",
        "This course was definitely interesting, I'm a fan of project\u2013based work, and I loved that we were always working toward a larger end goal. Overall, I found the course to be pretty easy \u2013 it shouldn't be too hard to get an A \u2013 but I still felt like I learned the content well.",
        "This class is fun if you have a friend in the class with you. You learn a lot and sarah is the greatest professor ever.",
        "I loved the tutorial sessions every week. Not only did it give us easy points as long as we attended, but it also gave us a chance to ask questions one on one with our TA since our class size was so large. I also loved that there were almost always office hours going on. Because there were so many TAs, every day there were at least 3 of 4 office hours we could attend and ask questions at.",
        "This is the class you need to take if you're interested in computer programming! It provides a fantastic launchpad and teaches you an actually useful programming language\u2013\u2013python. Plus Sarah is an icon and her dog, Seamus, is an angel uwu",
        "Very informational and understand teaching style. I learned a lot and this class didn't stress me out. I would recommend.",
        "IT WAS ACTUALLY A GOOD CLASS!!!!!!! Sarah is so nice and understanding!!! Students come to office hours at all points of their projects. Sarah has no judgment. THE CLASS IS BUILT SO YOU CAN SUCCEED. Lectures help with tutorials, tutorials help with homework, homework helps with your projects. Homework may take some time if you get stuck, but you can get help during office hours, which occur several times a day!!! There were 3 quizzes and you get to drop 1 (or you can replace your quiz 1 score with your quiz 2 score, or both for your quiz 3 score). You can drop 1 homework. You can drop 2 tutorials. Tutorials are easy points and help you learn!! There are extra credit opportunities. As long as you don't get behind and do what's expected, you can be relatively stress\u2013free about this class.Computer science seemed really scary to me at first, but this class is anything but scary!",
        "This class is one of those classes where you get what you give. If you put in enough work, you will get the grade you want. There's also a lot of opportunities for extra credit in homeworks or projects. The quizzes are also really relaxed, short, and not challenging. They just test your knowledge on things covered in lecture, and they don't have trick questions to stump you.",
        "coming in to the course without knowing one line of code. The course is informative and not overwhelmed for beginners. I end up with knowing how to write some simple (complex yo me) programs. It's a good start with cs. The professor is so nice, she wants you to learn the materials and not to worry too much about grades.",
        "This was a great course and Sarah is an amazing professor. Highly recommend! I did have some experience in java coming in but I think that someone who doesn't know anything about coding would be completely fine.",
        "Great intro class. Not too much work and keeps you interested in the subject.",
        "Great course, the professor was super nice and engaging and taught at a very reasonable pace. Quizzes/homework were extremely fair and you will learn a lot from this class.",
        "I thought this class was going to be very hard because I had no other computer programming experience but I absolutely loved this class. Sarah is amazing and makes learning comp sci fun. The projects are actually really enjoyable. This is probably one of my favorite classes I've take at NU.",
        "great",
        "I LOBE SARAH. She is so accommodating for deadlines and other students' needs. You get to drop at least one tutorial and he and there are SO MANY OH that it is so easy to meet with the professor or a TA. Some projects were a bit challenging but you can definitely do it on your own or easily get help if you need it.",
        "This is a great intro class for computer science. The projects are very fun and show multiple aspects of computer programming and Python. If you already have some background in computer programming, this class will likely be pretty slow and easy. Professor Van Wart is super helpful and really cares about the students, and works well with the TAs. The class was a little disorganized as lectures were supposed to be watched before class but were posted at random times.",
        "The Professor was amazing and Office Hours were always available. Projects were enjoyable and deadline were always stated well in advanced. Very well organized class."
    ]
}{
    "course_code": "Student Report for COMP_SCI_110-0_1",
    "course_name": "Intro to Computer Programming",
    "instructor": "Connor Bain",
    "year": "2022",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.57",
        "count": "141"
    },
    "course_rating": {
        "mean": "5.04",
        "count": "140"
    },
    "comments": [
        "Professor Bain is a great professor! He is knowledgeable and truly cares about the success of his students. Highly recommend taking a class with him!",
        "It was a fun course to start learning to code through python. Exams are pretty good if you go through most of the lecture quizzes and practice tests.",
        "very good intro class, prof Bain is Nice and lots of extra credit opps",
        "Great professor, manageable workload, interesting projects, not a hard A",
        "I thought this course was a really good class for beginners. It has a lot of TAs, so there are always office hours to go to. Also, the professor explains things in depth and is receptive to students, so getting help shouldn't be a problem. Personally, I think the class is an easy A but it depends on the student as always. Not a big time commitment though.",
        "The professor is great, he's interactive and understanding. There are two assignments a week, 2 projects and 3 quizzes, one of each can be dropped. Lots of work, but that's understandable considering you are learning a new language. I had absolutely no prior compsci experience, and I still did pretty well in this class.",
        "I was truly able to get a grasp on the basics of computer science, which is exactly what I wanted out of this course.",
        "There isn't a lot of pressure while taking this course, and there's a LOT of leniency. Work thoroughly on projects and take advantage of extra credit opportunities in the projects. Quizzes don't matter as much but are still helpful.",
        "I really enjoyed this course. It was very straightforward and helped give me a strong understanding of programming basics and Python 101. It was pretty easy and sometimes lectures moved a bit slower than I would I have liked (I feel like we could have covered more material if we went a bit faster) but overall I feel like this class was interesting and valuable as a non\u2013CS major. Plus Prof. Bain is a great instructor!",
        "This is a good intro to the world of coding. It can be difficult to understand at first if you have no prior knowledge, but Professor Bain did a really good job explaining concepts if you looked for more help. I had fun with the projects and the grading system is fair for people who have never tried coding.",
        "The HWs and projects were way more challenging than anything discussed in lectures. I wish the lectures would've been more comprehensive and gone further into more difficult material so that we could be prepared for the complexity of the homeworks and projects.",
        "Professor Bain was extremely helpful, clear and succinct in his explanation of course materials and instructing of logistics. It's not too hard of a class if you go to your tutorial section and office hours.",
        "It was an easy class and interesting because the professor was so good at explaining things in engaging ways",
        "I really enjoyed this class and learned the logic needed for computer programming. I thought all assignments were very fair and expectations were effectively communicated. The instructor and TAs were very available and helpful.",
        "This class taught A LOT. It's super flexible so super easy to get an A in. I had no prior experience to programming before this class, so it was quite difficult for me at times but the professor and peer mentors were all super helpful! Expect to put work in \u2013 I was in office hours almost every day to get help on assignments.",
        "Highly recommend taking this course!!!! Definitely don't be intimidated if you have no experience because I didn't. This class moves pretty slowly, but you can always put more effort into the projects and home works if you want more of a challenge. There is also a lot of support! I really enjoyed it.",
        "I really liked this course! As someone who doesn't have much interest or experience with computer science, Prof Bain made the class really interesting and easy to follow!",
        "Professor Bain is amazing!! He makes the class easy to manage, and makes sure to take his time so that you can grasp the concepts. There is not a lot of work in the class, no midterms or final. Three quizzes, 1 of which you can drop. 2 projects, and weekly homeworks and tutorials, but you can drop one of those each as well. Overall, a really good intro to CS class, and the activities we do are fun and interesting as well.",
        "good intro course for non\u2013stem people. not hard to do well if you spend time on the assignments & studying throughout the week instead of cramming",
        "As someone with no computer science background, I think the course did a great job explaining the basics but moving at a good enough pace that by the end of the course, we're able to create full programs.",
        "This was a great class to take, if you do the work, go to office hours + tutorial you will get a good grade in the class. Not only that, but the projects are fun and if you ever feel stuck there is always someone who can help.",
        "This course provided a smooth transition into learning more about computer science. This is something that I did not have previous exposure to and this class provided a battering ram for charging through a wall of doubts surrounding comp sci.",
        "The class was very interesting and a great first class. Sometimes the assignments were difficult and unrelated from the specifics of what we are learning.",
        "super easy intro to comp sci, minimal work. professor Bain is the nicest and all the ta\u2019s are also SO helpful. Office hours are key!!!",
        "Good class but teacher moved slow at moments and too fast at moments which could make the material confusing.",
        "nice class. easy A if you just do the work.",
        "This class wasn't unmanageable work or content wise. But, it was sometimes hard to connect lecture content to actual coding. I got lucky and had a good peer mentor who connected those ideas for me but other friends of mine did not get helpful peer mentor and were some times lost on the assignments.",
        "The tutorial sessions were definitely the spaces where I learned the most!",
        "Definitely challenging and presented some difficult\u2013to\u2013grasp concepts at times, but the class was ultimately very rewarding.",
        "Great course! Super organized. Intellectually challenging, but not frustrating. Very well constructed course.",
        "The professor was great, however, the curriculum/tutorials/homework was not. Not only did the lectures not prepare us for tutorials/homework, they were extremely difficult for an intro class. Also, I think that there are other ways of teaching intro to python that don't spend the majority of the course learning how to animate shapes and make \"creatures\" in Tkinter. It wasn't until the last couple of days did we finally start learning how to read files and stuff like that, which actually has more practical use than animating creatures.",
        "I did not think that I would be interested in CS before taking this class, and now I'm possibly considering it for a minor. The work was very fun and rewarding and Professor Bain was very helpful and approachable.",
        "This course was sold as a coding class for kids who never coded before, and the lectures certainly felt like that, but the assignments did not. He would go into the very basic definitions and uses during the lectures and then the tutorials and homeworks were like waaaaaaaaaay beyond anything he explained. The bulk of the time I spent working outside of class was me scratching my head about how any of our assignments related to what we were talking about. If you have former comp sci experience, then this is a nice class. If you do not, you will be teaching yourself python and going to multiple office hour sessions a week just to have the most basic level of understanding. I would not take this again.",
        "This course was a good distribution requirement. It was REALLY hard though, but luckily the professor is very understanding and gives a TON of extra credit. He is very lenient with the grading: He drops your lowest 2 tutorial assignments and your lowest homework and your lowest quiz. I will admit that this course is not easy though. I had to work so hard. We have class 3x a week and then you also have a weekly tutorial assignment and you also have a weekly homework assignment that requires you to teach yourself some material. If you are going to take this class, be sure to have a friend or acquaintance that you can meet up with to do the work together. Although I will finish with a decent grade (even though I received 2 Fs on the midterm quizzes... his extra credit rocks!), this course was exhausting at times. You must attend every single lecture if you want any chance of finishing with an A or B. Bain is a great professor though and has a lot of enthusiasm which makes the course worthwhile.",
        "This was a super great course! Very easy to do well if you put in the work. You can drop one quiz/hw/2 tutorials which is super nice. You can also get hw extensions and the office hours are very helpful. Great introduction to compsci and python!",
        "I was completely new to the field, and this course was excellent in introducing me to Python's basic ideas and skills. Professor Bain is a fantastic professor, and I would highly recommend taking the course with him. He keeps us entertained even at 9 am and is super helpful on Campuswire and easy to reach over email. Professor Bain is also flexible in grading and cares about every student's improvement. Also, he tells the best jokes!",
        "Overall positive experience. 3 midterm quizzes (30pts each), 6 homework (8 pts each)(drop 1), 9 tutorials (3 pts each)(drop 2), and two projects (40pts each). Overall decent class. Not too difficult to get an A given that there is a total of 16 possible extra credit points for the semester given on projects. You also get to drop one midterm quiz. If you do good on the first two you do not have to take the final midterm. Start projects early, the deadline always comes quicker than expected.",
        "Professor Bain is an amazing professor. I thought his explanations were very clear and easy to follow. I had no experience working with Python or coding in general and was worried that everyone else would already have an understanding. However, this class is definitely for people with little to no experience. I will say that as long as you put in the work, such as doing every tutorial and homework assignment and the project you will definitely get an A in the class. The biggest thing is to go to the office hours to ask for help because I definitely would not have been able to go through this class without the office hours of the peer mentors. There are two major projects which are also not bad and if you can get extra credit points, it definitely helps your grade. This class is very manageable overall.",
        "Prof. Bain is such an incredible teacher. He is so kind and helpful and you can tell that he really cares about his students, especially with how attentive he is on campuswire and how willing he is to stay after class to answer questions. I couldn't recommend a better professor for this class. 10/10 teacher! The class was challenging at times, especially for someone with no comp sci background, but Prof. Bain really tries his best to make it engaging and interactive with the projects and examples. There are also lots of extra credit opportunities which are really helpful, especially if you aren't the best test\u2013taker. Even though it was hard at times, I had a great time in this class and I can definitely see why people would pursue a major in computer science.",
        "As an introductory course, I thought it was very interesting although I'm not sure how applicable it can be in other aspects. It was very fun learning python and as long as you do the assignments and pay attention to the details it goes by fast.",
        "Professor Bain was amazing \u2013\u2013 his teaching is great. There are lots of resources available, along with a plethora of office hours to attend. That said, you get what you put in, and if you don't pay attention or ask for help, you're going to struggle. There's built in lee\u2013way in the class so if you mess up on something, the lowest gets dropped (2 lowest tutorials out of 9, 1 lowest homework out of 6, 1 lowest test out of 3).",
        "Though it may seem scary at first, programming is not so bad. I went into the course scared that I was going to do badly, but this course may have been my highest grade this quarter. I learned about many important fundamentals of coding and had a fun time doing such. The key to this class though is ASKING FOR HELP. If you do not understand something, do not waste your time trying to figure it out on your own out of pride. You will be much better off having a TA help you, and this will improve your class experience. Also the professor was amazing and you can really tell that he cares about students doing well in the class. The class is also so forgiving in that you can drop a homework, a quiz, and a couple tutorials. I don't know any other class this forgiving. If you ever get the chance, go to professor office hours and just have a conversation with him. If you are looking for a class to fulfill a distro or are just interested in coding but not sure you want to pursue a major/minor, this is a good course for you.",
        "The class is not super easy but doable, there are a lot of homework assignments (2 per week), so it is a little time consuming. I recommend going to office hours a lot to ask help on homework assignments, I found it very useful. Professor Bain is very enthusiastic and is very understanding.",
        "The lectures have almost no relation to the homework and it\u2019s extremely frustrating. Why do I have to go to office hours constantly just for material that could be stated in class? Also some TAs are mean. You have to find the ones you like, which is fine I guess because there are so many TAs in the course to fit your schedule. Prof Bain is nice and understanding but this course was not for me.",
        "This course taught me so much about CS. I had never taken a CS course before, and while the pacing was a bit slow at times, I learned a lot and I think I have come out of this course with a lot of new tangible skills. All of the assignments were really helpful to my learning and I also found them enjoyable.",
        "This course had weekly lectures where you learned about Python and then you would have a homework and tutorial each week and the tutorial is supposed to help you with the homework. Overall, I enjoyed the class.",
        "I really liked how organized the course website is. Every resource I needed was super easy to access. Personally, I didn't go to in\u2013person lectures but still managed to get a really good grade for this course.",
        "This is a really great course that I highly recommend taking especially if you have no experience with coding. Professor Bain is one of the kindest professors I've encountered. He makes a big effort to make everyone feel welcome and appreciated both in class and at office hours. He makes the content of lectures very clear and the homework assignments and projects are challenging enough to be interesting without feeling overwhelming. This course has made me want to pursue computer science further which is not something I thought I would say.",
        "Prof Bain is very good in lecture, course is structured for you to do well as long as you put in effort, very easy to get help if you need it",
        "I knew nothing about coding going into this and I took it for IMC. Professor Bain is really nice and helpful in office hours, however, his lectures do not help you learn to code. They are very theoretical and less application based. You really only learn in tutorial sessions and office hours. OLIVIER WAS THE BEST TA. I was not in his session, but I went to his office hours and he was great. My TA, Cindy, was awful. She did not teach me a single thing and her zoom links were constantly not working. Her tutorial session was absolutely useless. GO TO YOUR TUTORIAL AND OFFICE HOURS AND YOU WILL GET THROUGH THE COURSE",
        "This course helped me learn how to do basic coding, while making the content digestible and manageable.",
        "The way the course was structured was really appealing. The flexibility in being able to drop your lowest quiz, project, tutorial, and hw grades were really useful.",
        "A fun and easy course to get a basic understanding of programming.",
        "Great intro course, would highly recommend over CS\u2013110 if you are a complete beginner. Definitely can follow along with the class if you attend/watch lectures and go to office hours if you need. There were office hours basically any time of the week, which was really helpful. Super interesting class that actually even made me consider doing something in CS.",
        "This was really great at supporting beginner students and i always felt like I could get help.",
        "I liked this course the professor was very helpful and and made learning about new topic that previously intimidated me much more manageable",
        "This class is great! Challenging, but doable with time and efforts. Professor Bain is so cool, and the TAs are so helpful. The lectures are easy to digest and give great examples for required skills in the course work.",
        "Though challenging, this course was definitely worth taking. Not an easy A, but a lot of extra credit is offered on projects. A lot of my and my classmates experiences were dependent on which PM you are assigned to, but it is easy to attend the tutorials/office hours of alternate PMs. Overall, I feel that this class has taught me skills that I will use in the future and I am glad to have taken it.",
        "Not bad if you don't have a very heavy workload already. Make sure you have a good tutorial person though (you can change if you need to, it's not a big deal).",
        "loved it",
        "I really enjoyed this course. I'm not much of a STEM fanatic, but Prof Bain really helped people who were completely knew to the subject leave feeling like they can code. The projects were also super fun and the end result was always so interesting. Prof Bain is also just a really nice guy and an amazing prof.",
        "This is a great course for someone who doesn't have any experience in a coding language. The assignments can be frustrating at times but that's simply because you're trying to learn something new and there are a lot of unknowns. If you put in enough effort and go to tutorials and office hours (I can't stress enough how important it is to go to these!!!!) you will learn a lot from this class. Prof. Bain is a great instructor, his lectures are fun and engaging and he is always ready to answer all questions and help.",
        "i loved learning intro to comp sci",
        "This course is primarily catered towards people who have little to no experience in coding. It is extremely beginner friendly and can be taken to see if you have interest in computer science. Homework is very easy and tutorials help a lot, quizzes are not stressful and are graded very leniently. Highly reccomend",
        "Prof Bain is a great prof! I think the overall structure/grading of the class allows you to get an A as long as you put in some effort and ask for help.. i have some thoughts about assessments in CS classes to test knowledge of code, but that does not affect my overall view of the prof or things I have learned!",
        "This class is great! Connor is an amazing teacher. I was really intimidated to take this because I\u2019ve never done comp sci, but that was not a problem. There is a good amount of work, but it pays off and is interesting! Its like learning a language. I didn\u2019t love the last week or two of lectures because it got really complicated for no reason and the second project was way more complex than the first.",
        "This class was a great introduction to coding in Python! I found that the workload was just the right amount of challenging, as someone who isn't particularly STEM.",
        "This was honestly was super incredible challenging. The lecture itself did not exactly line up with the assignments nor HW so it is a lot of self studying and going to OH. There are a lot of leniency built in however.",
        "This course offered a great intro into computer science and coding. We focused a lot on animating drawings and manipulating data.",
        "i really liked that the professor was very accessible. the course materials included a website, which laid out every assignment, linked to the class recording, and resources that would be helpful. the prof was incredibly good about communication, and making sure everything we need is in one place. super organized, which made me learn in a very smooth process",
        "I was very nervous going into this course because I have no coding experience and everything at Northwestern is difficult. Although this class way confusing at times, I'm so glad I took it. It's definitely doable given the resources available to us though, especially the countless office hours. Professor Bain is so amazing too! Very energetic at 9 in the morning, cracking jokes, and handing out candy on the last day. I didn't attend class in person on most days... I did rewatch the lectures though and enjoyed watching Professor Bain teach.",
        "I went into this course so nervous \u2013 it was a prerequisite, and I am not a STEM student. I was pleasantly surprised. The course is laid out so well, with countless TA office hours and a website to submit questions. Prof. Bain answered questions late at night before projs/homeworks were due. He is very accommodating and fair. He made the content accessible to non\u2013STEM students. I enjoyed this class a lot. It was one of my favorite classes so far at NU, and I'm planning to take more computer science to fulfill my science requirements. GREAT CLASS!",
        "I loved this course! It was such a good introductory course and offered a ton of resources for absolute beginners to programming in python. It is very manageable as I took this course with bio and orgo plus labs. It was honestly a breather from my other classes.",
        "Absolutely fascinating class\u2013 I LOVED it. I came into it with absolutely no programming experience whatsoever and had no idea what to expect, but I found it really interesting and enjoyable! It made me want to take more CS classes even though I don't need to for my major. I liked how straightforward it was, either your code works or it doesn't, so you pretty much always know if you're gonna get 100%. With the exception of the 3 quizzes (lowest gets dropped), there's really no reason to not get 100% on every assignment as long as you give yourself enough time to complete it and go to Office Hours if something isn't working right. Prof. Bain and the TAs and Peer Mentors are super helpful in Office Hours and will always be able to fix your errors if your code is messed up. Prof. Bain is one of my favorite instructors I've had at NU so far. He's funny and uses really fair and accommodating policies in his class. He lets you drop your lowest or 2 lowest scores for each type of assignment and will almost always grant extensions whenever you need them for any or no reason. Lectures are a good mix of notes and examples so they're not boring, and they're all recorded so you can always skip class and watch them later (I did this frequently for my 9am section lol). Anyway overall amazing class. I honestly think everyone should take it even if it has nothing to do with your major. It's super easy and honestly really enjoyable. Being able to figure out how to code something correctly when you've never coded anything before is just a really rewarding feeling, and it\u2019s definitely a GPA booster even if you do the absolute bare minimum. They grade really easily and there are a lot of extra credit opportunities on the projects. I\u2019m ending with above 100% and I had never coded before this class.",
        "This course is a good intro to learning Python. Make sure you go to office hours/tutorial section otherwise this course becomes very difficult (coming from someone who didn't have any previous programming experience). Prof Bain is a very enthusiastic and fair professor.",
        "The course was great. It was a great introduction to coding.",
        "GREAT DISTRO! lectures were always recorded so didn't have to worry about attending lectures. Professor is great and super nice, he makes lectures bearable and super simple to understand. Theres like s discussion section but its only mandatory the first week, the rest u can just submit the tutorial for (usually super simple and the discussion section is meant to go through it completely so I suggest always attending) theres always Office hours which is super nice of them because all the TAs are happy to help. homework assignments are also simple and easy to navigate through. best 2/3 quizzes so I recommend rocking the first 2 (super easy if u understand the topics and are keeping up to date) 2 40 point projects but are very similar to homework. Def recommend!",
        "This is a really good intro class and made me discover an interest in comp sci.",
        "This is a very good introductory course to computer science. They help you out a lot in this class and there are lots of resources to learn.",
        "This course can be very frustrating and time consuming at times but it is problem\u2013solving. If you like trial and error, debugging, and feeling proud of your creations it is the class for you.",
        "This class will be fun if and only if you connect with the teacher, your TAs and your classmates. DO NOT do what I did and try coding on an island away from everyone else; Something will go wrong, and Python is ruthless in its specificity.",
        "Prof. Bain is an amazing teacher and the class is an easy A if you put in the work for the quizzes and projects!",
        "This class made me switch to CS. I came in uninterested in CS, but Bain makes it so interesting that I've taken a liking to it.The projects are fun, but start them early and take advantage of the insane amount of office hours they offer. You'll learn more in five minutes there than two hours that two hours trying to figure stuff out on your own.",
        "It\u2019s an excellent introduction to coding and it\u2019s very well structured.",
        "People say this course is easy but it was not for me, as a beginner in programming.",
        "I really enjoyed this course! The projects and homeworks, although they definitely took time and effort to complete, were always rewarding. There are a bunch of different office hours, so you can always get the help you need. If you're thinking about CS as a major/minor, I think this course lays a great foundation for the type of work you'll be doing in the future since the class focuses on math, logic, quizzes, and projects.",
        "It's an okay class. Not too difficult to get an A as long as you do all the work (Hw, Tutorials, Projects, quizzes). The quizzes weren't too bad if you looked at the reviews/practice quizzes. It is fairly easy to get full credit for Hw and tutorials. Projects give a lot of extra credit.",
        "This was a pretty solid intro to CS! If you're on the fence about CS and haven't done any programming before, you should definitely take this class. It's super chill and really eases you into working with Python. I really didn't know that much about coding before, but I didn't think this course was terribly difficult at all.",
        "would not recommend for a distro! I spent 10\u201315 hours a week on this class alone.",
        "I loved this course, it was a 9 am class though. But I loved it. The professor is so sweet and organized. He was always prepared and the way everything was organized for students is something I loved about the course. There are a lot of office hours too which is so nice.",
        "It\u2019s relatively easy to get a good grade in this class because of extra credit, but I really struggled to understand a lot of the key concepts and found this class very hard.  Professor Bain is great, but the class overall is tough.  Homework every week is difficult",
        "I thought Professor Bain did a great job with this course. I think everything was taught in a very easy\u2013to\u2013understand way and he provided enough office hours, examples, practice exams, etc. that I think with a little bit of effort anyone can get an A and walk away more interested in CS than before.",
        "I loved this class bc of the professor. I think it could be improved by covering some of the tutorial work in class bc the tutorials are optional. Some TAs could be more helpful too. Generally an outstanding class altogether. Prof Connor is the best!",
        "This is a great course for people who have never coded or done anything programming related before. There are a lot of weekly assignments which can be a bit time consuming, but the Professor builds a lot of flexibility into the course schedule. If you stay caught up with the lectures and assignments an A is super attainable. Professor Bain is a great professor and whatever you learn in this course will definitely stay with you."
    ]
}{
    "course_code": "Student Report for COMP_SCI_110-0_20",
    "course_name": "Intro to Computer Programming",
    "instructor": "Willie Wilson",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.41",
        "count": "44"
    },
    "course_rating": {
        "mean": "4.30",
        "count": "44"
    },
    "comments": [
        "weekly quizzes in class had way too much weight in the grade (each point being a percent), but the homework assignments were usually interesting and helped learn python",
        "Although I really was never all that interested in coding (just took this as a requirement), this class was great for building a foundational understanding of concepts that felt super abstract before. It's pretty chill overall and the workload isn't too bad.  Willie was absolutely great and you can tell that he really cares about both the course content and the students.  Even though it was a big class, he knew a lot of students by name and even went out of his way to ask me if I needed help after I did poorly on a quiz.  Going to office hours helps so so much for the assignments and all the TAs were great. Recommend!",
        "I was expecting this class to be challenging (since its like learning a new language). I was expecting to learn more in class than I did.",
        "an intro course to python and learned the basics. Willie is great one on one but didn't always get a lot out of his lectures. Lot of work and learning on your own time.",
        "A true intro to coding in that Willie (Prof. Wilson) treats students as if we don't have any coding experience and walks us through concepts in class. However, the assignments and 2 massive projects were much more difficult than the material presented in class. Most students were very not prepared for the level of coding needed for all the homeworks and both projects. You WILL NEED TO GO TO OFFICE HOURS to get help with the work, I think it would have been impossible to do any of it alone. Willie is very helpful and enthusiastic about helping students understand and get engaged, however the class should be better organized so class content is more matched with the homeworks. We also had weekly quizzes (sometimes 2) usually on Canvas that weren't too bad. Overall, just make sure you MAKE TIME for this class's workload.",
        "I enjoyed this class. Disorganized at times, but overall it was refreshing in comparison to other McCormick classes in terms of the pace and time commitment outside of class. The prof and TAs were very warm and inclusive.",
        "Literally the entire time that I was in the class I was just waiting for it to be over. Will never use anything from this class ever again in my life",
        "Assignments get a little tedious, but very doable if the time is put in.",
        "class completes its purpose, relatively easy and still teaches you useful skills",
        "IF YOU HAVE NO COMPUTER SCIENCE BACKGROUND THIS CLASS IS VERY DIFFICULT! I learned nothing in this class. The only way I did well was by going to TAs for every assignment, I failed every quiz but got 100 on every assignment and I feel like that is pretty telling on how approachable this class is for someone with no comp sci experience. I had no idea what was going on every lecture. I could not do a single thing or write a single piece of code without a TA's help, which is super super time consuming, so not worth it for a distro. The lectures are so hard to follow, you can't take notes, and then they just expect you to be able to code on your own. It is like sitting in a Swahili language class where they just start speaking Swahili at you with no notes and then expect you to write an essay on it. AGAIN, I LEARNED NOTHING IN THIS CLASS BECAUSE IT IS SO HARD TO FOLLOW.",
        "I took this class just for fun and I really learned a lot! I think it was a great introductory class to learn python. I had no experience going into the class and did not feel like I was at a disadvantage at all. I learned all the basic fundamentals and now feel really comfortable coding in Python. Willie is a great instructor who wants everyone to learn. The course has no tests, just 3 point quizzes every week and weekly homework assignments. There are also two projects, one as a final project. Nothing is too bad and office hours really help.",
        "This course was horrible. I learned nothing. It was far more stressful and time consuming than it was worth for a distribution credit. It was almost as if you were expected to have some background in coding before taking this class. This was largely due to the professor. Do not take this class with this professor.",
        "This course is amazing. I had never coded before and was terrified of coming in. Willie makes sure everyone is comfortable regardless of their coding background and teaches content in a very approachable way. The Homeworks are time\u2013consuming and the products were somewhat hard. However, go to office hours because the TAs are amazing. It's good if you know people who can code that are willing to help you. Overall great course, learned a lot and enjoyed the process",
        "This class is hard, and has a pretty significant difficulty curve if you come in with no programming experience other than HTML5/CSS, but the end results of seeing your programs work the way they are supposed to is very rewarding. You'll have to put in a LOT of hours to do well, though (like 10\u201315 a week on average when adding up time spent on homework and the two projects). There are unannounced in\u2013class quizzes (so you have to show up), but most lectures felt like a waste of time. It's an exercise in getting started on something and then Wille moving on to the solution three minutes later when you've only got the first two lines written. By the time we really got going with the sample code for the day's lesson, the class was over. I honestly felt that I started doing better when I began ignoring the lectures/in class practice work in favor of looking at the provided answers to the in\u2013class sample code and applying that knowledge to projects and homework assignments instead, it felt like a better use of class time. Also, woe will be upon you if you can't come to office hours because of other classes or work (they're only offered 9\u20135, Monday through Friday). The TA's and professor are theoretically always accessible via Piazza (an online question\u2013answer forum) but in practice Piazza was pretty garbage... I think seeing questions and responses there was only helpful like once or twice? I mostly ended up relying on a combination of the in\u2013class sample code/googling/and asking my friend who knows Python to explain concepts, but that's not a viable solution for everyone.",
        "Willie is an energetic professor, but sometimes the energy can be a bit much at 10 am in the morning when I'm still waking up. But overall, he did a great job teaching the course and I liked the fact there were small quizzes instead of midterms and finals.",
        "It was a good intro to coding but it didn't always feel like we were on the same page as the course material",
        "Class was engaging with Willie (Prof. Wilson). However, concepts learned in class did not help with weekly homework completion...lecture material was way too easy, and thus in order to complete the homework you HAD TO go to office hours (otherwise you were completely lost). Quizzes were fair (based on lecture material) although some of the quizzes were really difficult. Expect 1 or 2 really difficult quizzes out of the 10 (you don't get to drop any, sadly). Be sure to make time in the week to go to office hours...expect each homework assignment to soak up at least 4 hours of your time outside of class each week.",
        "underwhelmed, I felt like I learned some python but class was not engaging for me at all (I only went when we had quizzes). the quizzes felt super random and without purpose, plus the grading was all over the place.",
        "Homework takes a long time. Not what I expected for an intro course. Learned a lot tho.",
        "This course was super helpful in teaching me python which pretty helpful for some personal projects I am working on. If you want to do that this is the course for you. Otherwise I wouldn't recommend it.",
        "The professor was great, the pace of the class was great, lots of opportunities to get help if you needed it. Weekly quizzes, 2 projects, no midterms or finals.",
        "Definitely take this with Willie! He's awesome and really easy to approach with questions. He is open to feedback and wants to make sure everyone is doing well and understands the material. Class goes by quickly with all the examples and demonstrations we do and the quizzes aren't too bad. If you're confused, definitely go to office hours because the TAs are SUPER helpful at answering questions and helping with homework and projects. There are 6 homeworks and 2 projects, no finals. The projects are actually really cool and make the coding part fun.",
        "Fine class. prof was kind of disorganized. Graded on in\u2013class quizzes, homework, and projects. Go to office hours!! It's super helpful.",
        "I really liked this class. I thought it was pretty fun and interesting. Willie was a pretty fun teacher and he was able to get his point across pretty well. I wish he would upload files he worked on in class more so we could see what he did. Otherwise I think this class was pretty perfect and I liked that it was just based on homeworks, projects, and quizzes instead of midterms and finals. I also feel like they were pretty fair about how they graded things.",
        "This course was difficult, but the TAs are super helpful so be sure to go to office hours!",
        "This course was a great introductory course to coding. The projects help you realize that there are many different ways for you to do what you want, and it's cool to see your programs run with the code that you wrote yourself.",
        "I was super nervous to take this course, but it pleasantly surprised me, and actually ended up being one of my favorite courses at northwestern. Even though they are tricky and require hard work, the homeworks and projects are interesting, fun, and rewarding to complete. Willie is absolutely the most kind, helpful, and approachable professor I've ever had. He makes a very strong effort to know us individually, even though it's a relatively big lecture class. Even though he's obviously incredibly knowledgable, he does a better job than any other professor at never making a student feel dumb for asking a question or being confused. I like that he balances teaching/lecturing with free time during class for us to work out problems on our own. The TAs are also super super helpful during office hours\u2013\u2013 I couldn't have survived the class without them!",
        "Nice and simple course. Take it if you don't want to do CS, and you'll learn an actually worthwhile language. Not much work and no exams.",
        "Just go to office hours and you'll be fine"
    ]
}{
    "course_code": "Student Report for COMP_SCI_110-0_20",
    "course_name": "Intro to Computer Programming",
    "instructor": "Sarah Van Wart",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.63",
        "count": "144"
    },
    "course_rating": {
        "mean": "5.29",
        "count": "144"
    },
    "comments": [
        "Great course and instructor but again, I feel tutorials could have been better in some areas (more demonstrative, like a guide us through it then we try to do it ourselves structure).",
        "Great class and great teacher!",
        "It is very easy to fall behind in this class. Go to the tutorials, ask questions, and DON'T start homework or projects the day before the deadline. If you do all of those, the class is manageable and extensive learning will occur.",
        "This was such a great class, honestly not that hard and you learn so much \u2013 it's a great intro class and the professor is super nice.",
        "Take this class! Even if you are not planning on pursuing a major/minor in C.S. I would highly recommend taking this course; Professor Sarah is an amazing teacher who makes the lectures engaging. It is fairly easy to secure an A but you need to make sure you keep up with lectures/homework if you do not have any prior C.S. experience. There are also no midterms/finals which is awesome. If you have taken C.S. courses in the past or are already comfortable with Python then this class may seem a bit boring.",
        "This course takes a lot of work, but you get out of it what you put. Python is a good program to know.",
        "If you actually want to learn applicable computer science skills, I would recommend taking the CS 111 section. CS 110 teaches how to use different functions of Python, but all of the assignments seem near pointless. Half the class seems to be based around making a fun animation using python, when in reality, python would never be used to make an animation. Moreso, the side program Tkinter is rarely used, so it was a little upsetting that the whole class required mastery of this particular program.",
        "Van Wart is a super nice professor and is willing to go over any problems or answers with the greatest desire to teach. The course content is definitely not terrible, and I've never done any cs prior to this. If you're looking to see how cs works in python I highly recommend this course.",
        "Very interesting, recorded lectures, animation heavy, really set up for you to succeed",
        "this class is great if you have never taken any CS before in your life. Sarah is amazing and always available to help and a very good lecturer. Projects and homework are actually kind of fun too.",
        "This is a great introductory CS course. There is a lot of help available if you need it through office hours (definitely recommend going for help on homework and projects). Overall, this was a great class that I would recommend to someone interested in learning more about CS/to someone who needs it as a major/minor requirement. Sarah is also a great professor and cares a lot about the success of her students.",
        "Love how Sarah taught the class. Was very informative & practical at the same time! Projects, homework, and tutorials are fun and great opportunities to practice.",
        "Sarah is so good and the course is very manageable. Lectures are all recorded, quizzes are drop lowest, and there is a lot of extra credit.",
        "This course was very interesting and engaging. It moves at a fast pace, but it was definitely doable for someone who had never had any prior computer science or coding experience. Sarah cares a lot about her students and is very helpful and passionate about the subject area. She also builds leniency into the course and is very fair with grading. The weekly tutorial sessions were also helpful, if you had the right TA, and office hours were constantly held by TAs. The weeks where there was a tutorial and a homework due were slightly overwhelming, and the projects were definitely challenging, but there were plenty of opportunities for additional help and extra credit. The quizzes were also very fair and not too difficult. Some of the lectures were very interesting and engaging, others not as much, but it was nice that you never necessarily had to attend the lectures in person as they were always recorded and posted online. That being said, I found it helpful to actually attend the lectures to stay on top of the workload and material. Overall, this was a very manageable course and definitely a good introduction to coding with Python.",
        "Sarah is a great professor and the class was not too bad. The only thing I disliked was the flipped classroom where we had to watch lectures before the actual class.",
        "This is a good class to take when you have a lot of more difficult classes. It makes computer science fun and is a great beginner course!",
        "She's a great professor! So nice, good structure, too much tkinter stuff though very annoying to draw so much and it's not very accessible.",
        "Such a good class!!!! Prof Van Wart is the best!! She explains concepts really well, makes class very engaging and is always willing to give help. I did not have a background in python at all, and so was a little bit worried, but everything was explained really clearly and with TAs and peer mentors there was a ton of support. While this class did take time and there were a lot of assignments, it was really easy to do well if you put in some effort. Would definitely recommend!",
        "I enjoyed the homework. The problems were sometimes pretty fun. Tutorials were sometimes a pain to attend, but they do help you with the homework. Leniency was also built into the class and the professor was always so supportive. Overall, pretty good class.",
        "Professor Van Wart is fantastic! She did a great job keeping the course organized as well as being understanding given the current pandemic. Hope to take more programming courses in the future.",
        "This course is a really great option if you're interested in programming but aren't actually sure if it's what you want to do or if you have no background experience. Sarah makes the content super accessible to people with no clue what they're getting themselves into but still keeps the class engaging for people who might have a foundation in CS. That said if you've done any coding I would recommend just starting with CS 111.",
        "This course challenged me a lot. But the professor and TAs are very helpful and really helped me understand the material. They are here for you and are always wanting you to understand the material outside the scope of what we have learned.",
        "The class was the perfect level of challenge for me. It was not extremely easy to absorb everything about programming, but it was not hard to turn everything in and get a good grade either. I was extremely interested in the material because we got to create a lot of fun programs, and problem\u2013solving with code was quite fun. I was also easily able to skip lecture when I wasn't feeling good and watch the recording later.",
        "This course is great as a distribution requirement. As a person who is interested in the field of Computer Science but had no previous experience, I think this course is a great introduction. It balances the fun aspects like animations with the more practical aspects like data analytics. Even though I had no prior knowledge I was able to keep up with the material because help both in\u2013person and online was so readily available. It's also great that you can drop the lowest score of Quizzes/ Tutorials/ Homeworks so even if you have a rough start, it's very possible to bounce back. Prof Sarah is also incredibly sweet and helpful.",
        "SARAH IS THE BEST. I was nervous about taking a CS class, as I had basically no coding experience. Also, I felt like the only identity I saw represented in coding in my high school and in the world immediately around me was cis men. As someone who is not a cis man, that made me more nervous to take a coding class. Sarah was amazing. She was so approachable and knowledgable and friendly. Above all, Sarah is the best ~teacher~ I have ever had at Northwestern. The way she broke down coding concepts and made them building blocks to help understand the whole course was invaluable. TAs are also all a great resource, I would just go to whatever office hours fit into my schedule and all were easygoing and willing to help.",
        "Loved the class. Sarah is a great professor. She makes sure that everyone is on the same page and attend office hours if you can. Overall course is a great introductory python class.",
        "the class is a lecture but there's ample opportunity after class, during tutorial sessions and office hours to get help. The TA's and other classroom assistants are really useful and good at what they do, and professor Van Wart is a very good lecturer and one\u2013on\u2013one teacher. this class can be completed remotely, which is what i did for the last couple weeks, and i had no issues for the most part, as there were virtual options to participate in tutorial sessions and office hours.",
        "The pre\u2013lecture recordings are a bit too much, and sometimes the lectures are not as challenging.",
        "This course helped me learn so much about computer science since I hadn't done any previously. The combination of projects, homeworks, and tutorials helped me learn so much!",
        "engaging teacher",
        "It's a cool class and Sarah is a really cool person. It's easy for non\u2013majors to take and by the end you'll know quite a bit about coding.",
        "This course is pretty manageable at first and it starts getting quite difficult in the last few weeks in terms of the complexity of the content. The structure of the course made it really easy to just not show up to class since it's a flipped classroom and everything is recorded. The whole course is really well organized and there are tons of TAs to help when you're confused. Overall pretty easy A and if you have friends in the course you'll be fine.",
        "There was just so much done in this course that I really loved. The projects are amazing and Sarah gives enough time for students to work on projects that are actually cool. Sarah is super flexible with the tutorials, homework, and quizzes. This course also just teaches students valuable skills in problem\u2013solving and in just creating something that's someone's own work. I thoroughly enjoyed this course!",
        "Sarah is an amazing professor and truly understands how much of the class has zero background in coding or python. I had never even thought of coding before in my life and was able to handily manage the course and thought it was a great break from loads of essays.",
        "Just go ahead and attend this class. It is fantastic and not difficult at all.",
        "I took 111 and had to drop it because it was so hard and fast paced, but 110 was actually fun and WAY easier so I did really well. Would definitely recommend over 111 if you are Neuro/cog sci.",
        "This was pretty interesting especially as a non cs major (and doable), but there is a lot of info that you need to learn on your own outside of live lectures (through lecture videos). There's a ton of leniency built into the course which I appreciated, and Sarah + the TA team are super open and helpful for students and questions. DEFINITELY utilize office hours and go to tutorials if you are new to computer science. Overall, while I'm unsure if I'll continue doing cs after this, this was a good introduction and I learned a lot of useful skills, and the staff running this class are very helpful.",
        "CS110 is hard for someone without any coding experience. It is one of those subjects that you get or don't. However, if you need the distribution credit, Sarah and the TA team are extremely helpful and offer you a lot of one\u2013on\u2013one support. Even if you fail the quizzes, there is a lot of chance for redemption through extra credit, and you essentially can get an A if you work for it. Sarah is the best!",
        "This class was much easier with a better language compared to CS111. Homeworks, tutorials, and projects were not too difficult.",
        "I was SO excited to take this course when I registered for it. The CTECs were great and I've always been interested in coding. However, this class was really hard as someone who has no coding experience. Let me start here: Sarah, our professor, was so nice and provided so many opportunities to get help. There are like 15 peer helpers/TAs who all have office hours, so there are office hours for multiple hours every day of the week and they will all help you with your homework and projects. Grading is really fair as well (we are allowed to drop one quiz, one homework, and two tutorials). There are no finals/midterms (there are three quizzes) but there are two really long and difficult projects. The problem with the class is that it is a whole new language, and sometimes it was hard to go from what we learned in class to the homework/projects. Also, we do have to meet four times a week instead of the MWF that is advertised on the webstie. That is because we have a weekly tutorial that we have to sign up for at the beginning of the class. Overall, the class is VERY hard but doable if you are putting in a ton of work and taking advantage of the help available. Not an easy A at all though.",
        "I really enjoyed this course. I had never taken a prior computer science class and this class was meant for my very low skill level. Office hours were definitely helpful. Sarah is an amazing professor and is clearly very passionate about her work.",
        "This course is very beginner friendly. The biggest tip is to take advantage of office hours they are so helpful and will be a lifesaver. It is a great course if you have lots of time in your schedule.",
        "Love this class! Sarah is an amazing professor. She only teaches what you need to know and is very helpful and active on email and Campuswire. I would highly suggest taking this class if it's just a major/minor requirement for you and you aren't pursuing Computer Science. Quizzes aren't difficult and for HW assignments and projects, there are many many times for office hours where HAs can help.",
        "Sarah is a really nice professor who is fair with grading and gives many opportunities to get an A. That's definitely a plus to taking this course, but I did feel as though the lectures were much easier than the homework and project assignments. I felt like I had to teach myself a lot of things through the internet or by going to office hours while the lectures were spent completing pretty simple tasks and problems. I would be able to do the in\u2013class lecture problems pretty easily but I would be stuck on the homework and tutorials for hours before reaching out to the TAs. I will say that the TAs and Sarah are easy to reach and ask for help, so that's a plus.",
        "i was told this class was super easy. it is if you study for exams and do well on projects, which can be difficult. i knew nothing about comp sci before taking this course and will never take a comp sci course again. sarah is great in that she wants you to succeed and is there to help, but the lectures were fast, boring, and the projects were difficult, especially the last one",
        "Not the easiest class, but definitely manageable. I enjoyed the projects that we did but it was hard to keep up with material at times.",
        "Prof Van Wart is very kind and helpful.  There are also many TAs to help you.  The biggest issue is that there is too much content and confusing assignments, especially towards the end of the course.  I ended up having a good grade, since they are thankfully very lenient in grading, so that is why my review of the course isn't too bad.  However, although your grade will most likely remain fine after this course, you will struggle a lot and want to cry sometimes.  I'm conflicted on how I feel about the course.  Would I recommend it?  Yes, since Prof Van Wart is a good starting teacher for this and you will most likely need computer programming skills in many jobs in the future.  However, if you really don't think you like comp sci, I wouldn't recommend taking this then.",
        "As someone who had never programmed before, this class was an amazing introduction into the possibilities and how to accomplish different things. \u2028Professor Van Wars was amazing and really invested in students\u2019 learning, and I would recommend this class to anyone wanting to explore computer programming. This was a great distribution for science.",
        "This class is great as an intro to CS, there are lots of opportunities to get help if you're lost, and the homework is a good tool to help you learn.",
        "I came in not thinking I would love coding and this course completely changed my mind about it! Great course, stimulates interest, Prof. Van Wart is a great teacher and it felt like a 10 person class even though it was a large lecture hall. The homework did not feel like work and I learned a lot from the class as a whole.",
        "This class was a pretty easy formal studies distro for someone with no computer science experience. You can also drop quiz grades and assignment grades which is an easy grade booster. Would recommend",
        "Amazing class and amazing professor! As long as you put in the work you'll do very well.",
        "Really good intro python class, professor was great, learned a lot of basic skills",
        "Sarah is super nice and funny! she is super clear with her instruction and watching the videos posted definitely helps cement what youre learning before you even get into class. Sometimes she moves pretty quickly so there might be some kinks to work out with your computer and pathways, but these hiccups will happen at the start of the quarter and get solved as they come. Eventually you should be able to keep up with live coding in class if you pay attention and can type quickly. She is super nice and approachable and tutorials with Cooper is he is an option is the best. Highly recommend taking this course with Sarah. attend tutorials! they help you with homework too. projects are really fun too!",
        "I definitely learned the most during the tutorials. If you don't understand a concept, you really have to ask questions about it, which I felt was difficult during the lectures & diminished their usefulness. The projects were challenging for me as someone who had absolutely no prior coding experience, but there are so many office hours available that I felt like I could always get help.",
        "Easy course that is very interesting.  Sarah is a phenomenal professor and provides so many resources for students.",
        "An amazing course for someone with 0 prior coding experience. All the lectures are super helpful in learning the content, and Sarah is an incredible lecturer and helps answer questions so well. The tutorials and homework assignments are nit hard and the quizzes are straightforward. The projects take more time but are also not bad at all. Really take advantage of office hours because you learn so much and are a life saver.",
        "The first half of the class is very drawing focuses, which made me a bit annoyed to be fair. It get better cause the latter one is more centered on data mining. The tests are not hard and graded leniently. An easy A.",
        "I really enjoyed this class!!! Sarah is a great professor and she really tries to give students lots of support (TAs, office hours, etc). I wanted to brush up on python and this class helped me. It\u2019s not a stressful coding class and it\u2019s definitely designed to encourage not weed people out",
        "This class was easy;  highly recommend taking it with Sarah. There is a leniency in grading (dropping lowest quiz/hw/tutorial) and many opportunities for office hours so passing the class was a breeze. Sarah also posts asynch lectures and online lectures (of her doing demos) that basically outline how to do assignments. There was 2 projects, 3 quizzes, 6 weekly homework, and 9 weekly tutorials (only the projects + quiz is high stake). I learned so much and it motivated me to go beyond what is assigned (opportunities for extra credit). Wish I had taken it earlier because it has motivated me to pursue other CS classes (as a non\u2013CS major).",
        "Prof. Van Wart is super nice and wants to help you success! And all the TAs are extremely helpful, I felt like there was always somewhere to turn if i needed help with anything",
        "I came into this class absolutely terrified of computer science and needed to take it as a prerequisite for another program. I was really nervous since I had no prior exposure to CS, but it ended up being my favorite class this quarter. Sarah is an amazing professor, the TAs are incredibly helpful, and the assignments are intellectually challenging in the best way possible. I cannot say enough good things about this course, and I want to reiterate that I was not interested in CS at all before taking it. It made CS feel way less intimidating, and I'm strongly considering taking more classes in the CS department. If you're thinking of taking this course and don't have any CS experience (specifically python), I strongly encourage you to go  to office hours / tutorial sessions. There is OH, either run by a TA or Sarah, almost everyday, and oftentimes multiple sessions per day, so take advantage of them!",
        "This course was much easier than expected when attending office hours to receive extra help.",
        "This was a great class. It\u2019s decently easy with a homework assignment and tutorial every week that do not take very long. There are also three quizzes (you can drop one) and two projects. Although this seems like a decent amount of work, none of it takes very long and there are a plethora of opportunities to get help if you are struggling. Take this class if you\u2019re even slightly interested in CS.",
        "This course was so well designed!  Lectures were very helpful and the various homeworks helped build the next (tutorials truly helped with the homework, the homework truly helped with the projects).  Sarah is a wonderful professor: she's very knowledgeable and skilled at explaining concepts \u2013 or leading students to discover them for themselves, and while often reminding students that doing the bare minimum is absolutely enough, she often encourages them to go beyond and learn more for themselves.  This really shows her genuine interest in the subject and desire to foster that same interest in others.",
        "Great intro to python. I learned a lot in this course. Tutorial is optional but a game changer for understanding the material. Homeworks aren't bad if you go to tutorial. Projects take a while but aren't bad if you go to class/office hours. Overall a great class. I learned a lot.",
        "definitely recommend taking this with Sarah!!!!! if you're a neuroscience major and need a compsci class,, take this class with her!! you learn a lot and it took time to do homework/tutorials/projects but Sarah and the ta's are all super helpful and answer questions well. quizzes aren't too bad and distribution of grades is very fair. also no math in this class which is great!",
        "This is a great course if you're looking to learn more about the basics of coding and Python! By nature of the material, there is quite a bit of material that you have to cover each week, especially in the middle of the course, but it's pretty manageable. Sarah is a great lecturer and instructor and is so knowledgeable about the course content. The thing that I really enjoyed about the class was the amount of resources and people that we available to help at all times during the week. There are multiple office hours slots each week, tutorial instructors, and an online forum to get help whenever. I think you really get out of the course what you put in. If you're really into the coding, there are plenty of opportunities to go above and beyond. But if this is just a distro, you can do the bare minimum and still get a good grade and learn some useful tools. Overall highly recommend; I think everyone is set up to succeed and get an A in this course based on the way it's designed.",
        "I went into this class with zero coding experience but left feeling like I had a solid foundation. The course was enjoyable, not too much work, but would also challenge you intellectually at times.",
        "This course is actually pretty easy if you follow along. No cap, I didn't lmao so I got lost. But for real trust me when I say this is prolly the most manageable formal study ever. Professor Van Wart is so nice, like too nice, and makes the concepts so easy to understand. Literally just pay attention and you'll pass with flying colors. She lets you drop lowest quizzes and homework and all that. I know the title is scary but you got it for real trust me.",
        "This course was a great intro class. I learned a lot about the basics of comp sci, and now I\u2019m pursuing a minor in it. The teacher is super nice and understanding too. I really enjoyed it!",
        "This class is definitely worth it. It is very much a beginner\u2019s course. If you have Sara Van Wart, her and the TAs are super amazing and helpful. They are so kind and will solidify you through. The material isn\u2019t super challenging and the class doesn\u2019t move too fast.",
        "The course presented the right amount of challenge with the homeworks and projects. The course material was helpful with assignments and the peer mentors and TAs were extremely helpful as well. The professor makes it easy to understand the subject matter and is also extremely helpful in office hours. There is no worries in taking this course if you have never coded a da in your life.",
        "I struggled in this course a bit, but not nearly as much as I thought I would as a complete beginner to computer science. The professor was amazing, and although there are a couple of really difficult concepts, I was pleasantly surprised with the number of resources offered in this course. It might just be that I don't have a standard for beginner\u2013level comp sci classes, but this one is pretty solid, I'd say.",
        "I did a little Python in high school and taking this class now explains things a lot better and I feel a lot more confident in my command of Python. The professor was really good at explaining things and it was pretty easy to get help when I needed it.",
        "Good class. Not difficult, not that much work.",
        "I really liked the use of projects, which allowed us to apply our knowledge.",
        "Amazing class! Came in with 0 CS knowledge and left wanting to take more CS classes. Sarah is so nice and does a great job of explaining concepts. The tutorial sections were helpful as well. Not a challenging class, but one where you can get a lot out of it if you're willing to put in the time/have fun.",
        "I thought this course was not only really fun, but also pretty intellectually challenging. I learned a lot of useful concepts that are applicable to many different fields. Great class!",
        "The professor is just incredible!",
        "The class is a very well structured introduction to Python. It is very easy to learn in this class, even for people who have detested coding or never done coding in their lives before. It demystifies the subject and makes it easier to understand.",
        "Enjoyable class, Sarah is super nice and helpful! A very doable CS class if you have no CS experience.",
        "TAKE THIS COURSE!!! I went into this class knowing nothing about Comp sci and now have a much better understanding of python. The work can be overwhelming and it can be easy to fall behind but there are plenty of resources available online if need be. I love Comp sci now and will continue to take more classes",
        "Structured and organized course. A good introduction course if you have no previous knowledge about coding at all, but otherwise a little slow \u2013\u2013 did not cover as much as I hoped.",
        "This class was relatively straightforward and easy to do well as long as you complete the assignments with some effort. Sarah was a great and very understanding professor; I would highly recommend taking this class with her. I had never taken computer science before this class, but it was pretty easy to pick up python. Sarah recorded lectures, which was really nice, but it did mean that most people never showed up to class. The quizzes were pretty easy, the tutorials were relatively short, and the projects were interesting, although a little time\u2013consuming. The grading in the class is very lenient, as you can drop your lowest quiz grade, skip a homework, and drop two tutorials, and with extra credit on the projects, you have a lot of room to make up for poor grades on other assignments. I also really appreciated having peer mentors run the tutorials and office hours, as I attended many office hour sessions to get help with homework and projects. Would overall recommend this class to anyone.",
        "Sarah is the best of the best. I knew absolutely nothing about coding, and really struggled, but she was understanding, and so were many of the mentors for office hours. This made it much more easier. There's also a lot of leniency built in the class, so if you pay attention, watch the lectures, and do the assignments/tutorials \u2013\u2013 you should be good!",
        "Professor Sarah is amazing and this course is a great intro to coding in Python. The assignments and projects aren't too difficult, especially if you go to all the lectures.",
        "This class is really great for beginners and even though it moves quickly, as long as you stay on top of the work it is very manageable (even fun).",
        "Even if you have no experience, this class is super manageable and the grading structure is very forgiving. As long as you stay on top of assignments and go to office hours when you need to the content is very easy to navigate. Sarah is a really good lecturer as well.",
        "Best class, best prof. Prof. Van Wart is amazing and all the TAs are super helpful. All intro classes should be like this one. Some students will realize they enjoy coding, some will realize they don't but everyone will leave the class knowing all the basics of python. Personally, this class was a lot of fun. I'm normally a big procrastinator but I did all the homework and projects days before because I was excited to try them out. You should 100% take this class if you think you may be interested in the subject but have ZERO experience.",
        "I was challenged but the class also provide support to help me through those challenges.",
        "Very useful and easy class.",
        "This class is alright \u2013 Fine for a science/formal studies distro requirement but you definitely have to pay attention and do a decent amount of work on your own. Sarah is super great and understanding \u2013 I never felt like I had a dumb question. It's definitely possible to get a good grade without going to class, but you have to do well on the projects and quizzes. I liked this class overall, but it's not very technical \u2013\u2013 it's very intro level and you do a lot of drawing/programming with things you probably won't use in the future.",
        "A really great first\u2013time programming class. On a weekly basis the work is very manageable but the two projects are difficult if you've never coded before and will probably require a lot of time in office hours.",
        "Came into it thinking it\u2019d be a fun introduction to comp sci. This class killed me, was pretty easy at the beginning but turned into very stressful weeks at the end trying to figure out the homework and projects with minimal help from the peer mentors. Maybe it was just me I don\u2019t know",
        "This was a good intro to Python and the projects were helpful in checking my knowledge.",
        "As someone who had no coding experience before this course, I really enjoyed this class and learned a lot from it with little stress. The class had a flipped structure, with pre\u2013recorded lectures and optional in\u2013class exercises. I actually had never been interested in CS and thought I wouldn't like it, but I actually really enjoyed learning Python with Sarah! It was cool to problem\u2013solve, and the applications we learned\u2014such as the animation project\u2014allowed us to be fun and creative. Additionally, Sarah was extremely helpful, and so were all of the TAs and Peer Mentors.",
        "Actually amazing class. You really learn a great foundation of coding, and it makes you want to take more cs classes. I wish i went to office hours more, not because i needed help, just because prof Van Wart was so nice to talk to. She was so encouraging, likely the more encouraging professor I have had",
        "I 100% recommend taking this class with Sarah. By far the most organized class I have taken at NU so far and pretty easy to get an A. I was pretty nervous to take a CS class here at first but Sarah gives plenty of resources to get help if you need it. Homework assignments are enjoyable as well, and there is a lot of leniency built into the course which is very helpful (drop a quiz grade, skip 2 of the 9 weekly tutorials, and drop a homework assignment).",
        "I enjoyed taking this course as it provided a strong foundation into the world of computer programming. Completing the assignments while also focusing during lecture videos was sufficient enough to understand the material.",
        "No prior experience in coding is required although I'm not sure how applicable the course content actually is in real life; there's quite a heavy emphasis on Tkinter. The quizzes are really easy and straightforward, no need to overthink it. The course grading is made up of weekly tutorials+homeworks, 3 quizzes and 2 take\u2013home projects; you get to drop your lowest quiz/homework/tutorial grades. Easy A and probably a good distro to balance out a humanities\u2013heavy quarter.",
        "As someone who had no previous experience in computer science, I found the first few weeks pretty tough, as there was so much information to grasp so quickly. Despite being a beginner's class, it felt as though some coding experience was expected. However, once I'd learned the basics of coding the class was pretty manageable and I found myself getting really into some of the homework tasks.",
        "Best intro class. Definitely go take it.",
        "The course focused on different aspects of python and gave me a broad coding experience which included things ranging from making animations to making tic tac toe games.",
        "10/10",
        "If you put the work in, you will get an A. The grading system is very generous\u2013 all homeworks are graded based on whether you gave it a solid effort, and you can drop your lowest of three quizzes. I have no prior coding experience and I had absolutely no trouble succeeding in this course. Be willing to utilize office hours because a TA can spot an error in your code after looking for 10 seconds whereas it may take you hours to find your mistake.",
        "Very good, straightforward course\u2013\u00a0the projects were a bit hard though so be wary of that. Make the most of office hours because they help a ton (especially with getting extra credit)",
        "Professor Van Wars is amazing. The assignments are actually fun to do. I thought I would literally hate this class, but I ended up loving it, thinking it was fun, and am now looking into taking more compsci classes. I thought everything was like a puzzle you were trying to solve. I loved logic puzzles growing up, and still do, so this was not work for me. On top of that, Professor Van Wars is one of the nicest human beings I've ever met."
    ]
}{
    "course_code": "Student Report for EECS_110-0_20",
    "course_name": "Intro to Computer Programming",
    "instructor": "Sarah Van Wart",
    "year": "2019",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.26",
        "count": "50"
    },
    "course_rating": {
        "mean": "4.76",
        "count": "51"
    },
    "comments": [
        "I really enjoyed the course, and a large part was because of Professor Van Wart, who is one of the best professors I have had. She is incredibly dedicated to her students, which shows in the amount of resources she makes available to us. Also, she really understands the pedagogical trappings that many beginner CS students fall into and is incredibly patient in helping us work through problems in her many office hours. I've taken EECS 111 before, and I was able to find a lot of value in this course, so you should definitely consider!",
        "Gave me a good background in python. I wanted to know how to do some programming and this course provided the knowledge.",
        "This course is not bad at all if you have no computer science background. Most of the lectures were actually interesting and there were many opportunities to get help on homework or projects.",
        "This course, while difficult to get a hang of at first, turned out to be a rather enjoyable addition to my curriculum.  Professor Wart is a very enthusiastic and helpful professor who made learning about Python enjoyable, and her availability and willingness to answer questions also contributed to my enjoyment of the course.  It is worth noting that, while the lecture slides and files are uploaded to the course website, allowing you to learn at your own pace, I would still highly recommend going to lectures, as the slides are not nearly as helpful by themselves as a full lecture, and you will likely miss out on a lot of important information.  Beyond that, as long as you manage your time wisely with regards to the homework and study even a little bit for the exams, you should have no problem getting a decent grade in this class.",
        "The course was definitely a big change of pace for me, a liberal arts major, and I found that its coursework was stimulating, challenging, and digestible.",
        "Challenging and can be difficult if you don't put in the effort to learn the material.  Going to office hours will really help!",
        "Very good class! Sarah is great. She is really, really patient and explains the concepts pretty clearly. Occasionally, the class is a little confusing due to technical issues, but generally you learn a lot about basic programming. Assignments might be kind of hard, but they are really interesting and you really learn more through completing the homework and projects.Overall great class.",
        "I started the course with zero programming knowledge, and now can consider myself 0.75/1. Overall, the class is very challenging, took  a long time to study in general and complete its homeworks, assignments and projects. Professor Sarah is one of the best professors I have ever met, and she did her best to help us with the subject both in person and electronic communications. The only thing is that the class is challenging, there is little time to stop and ponder about what we learn and how to apply it in the field. We had to switch to a different topic every week, and I feel like we know a little about everything, we are not fully knowledgeable on one topic.",
        "Sarah Van Wart is a very nice person and clearly cares about her students, but wasn't the best lecturer. In fact, I found that the tutorial sessions were much more useful than actual class lectures. She did offer lots of Extra Credit which made it easier and less stressful, so THANK YOU!",
        "If you have any amount of coding experience, this class will not be too bad at all.",
        "Overall, I think that this course was pretty challenging. However, it was not that difficult to get a bad grade. Just attend office hours frequently. Sarah is absolutely amazing\u2013\u2013 by far one of the best professors I've had here. She truly wants you to succeed, which is why she exceeds the time allotted for her office hours. The class also has TAs, who are very helpful.",
        "I really enjoyed the professor, she is amazing and made the class fun and enjoyable for me.",
        "Solid overview of applying Python to solve real\u2013world problems, but tutorials a bit redundant",
        "This course is great in introducing a basic level of computer programming, it just takes a lotta effort and persistence to ge what you want out of this course",
        "Have never done programming before but I think this class was a great introduction into python programming. Even at introductory level, I feel like I'm leaving the class with a cool new skill set and mindset (think like a computer). The tests are a little tricky but doing the practice problems from lectures and tutorials are a big help. Also there's ample amount of office hours to ask questions. Projects are long and can be confusing so GO TO OFFICE HOURS!",
        "I really liked the course and thought it was well outlined. I wish we could have dropped a homework instead of the EC because there was definitely a week where we could kinda get a freebie but other than that it was a good course.",
        "I took this class out of pure curiosity and its been the hardest class ive taken since ive been here. I came in knowing nothing about CS and it kinda smacked me in the face. Only way i was going to get through it without failing was to go to OH which i did and that helped a bunch. I will say for those who seemed like they've had experience programming, they seemed like they loved it. there were 2 projects, 2 exams, and 6 homework assignments. Hard Class.",
        "Loved this course. Hard at times since we were the first class, but the teacher is attentive and more than willing to provide feedback and help on the homework. Class was challenging at times but really rewarding. It was nice to take a class for non\u2013majors that taught applicable coding. Great class if you want to see if computer science is for you, or if you just want to learn one language with official instruction.",
        "This is a great course. I went in with NO experience at all and still did great. A lot of the work is homework/tutorials/projects so you are able to go to the TAs whenever and have them help you with the work. 2 tests \u2013 both written \u2013 and they're pretty easy. Sarah is a great teacher also!",
        "I knew nothing about programming or computers so I was terrified about taking this course. But she taught this at an extremely learnable pace and used helpful examples. I learned so much and actually gained an interest in programming.",
        "Sarah is awesome! Extremely approachable and a super kind and knowledgeable professor. Even though it was her first time teaching the class, she really shows that she cares about students' time and technical growth, and she really goes out of her way to make sure you're doing well. The class did have elements of learning coding that were at times difficult to get by, but Sarah definitely makes the class fun and let's you do your own thing, when it comes to figuring out the code and creatively expressing yourself on the graphics homework and projects. All in all, an awesome class if your interested in the fundamentals of Python!",
        "Sarah is probably the nicest professor I have ever come across. She will go the extra mile to help students if they need it. She gives plenty of opportunities to get extra credit and improve your grade if that is what you are looking for. I am planning to take more computer sciences classes just to have Sarah as a professor again. I had no experience with coding before this class. I learned soooo much. That being said, it is a lot of work. You have a homework or project due every week which takes hours to complete. My only pet peeve about this course was that this class was meant for students with no coding experience. However, more than half the class knew the language and would not show up to class while creating an unnecessary standard for the rest of us. The expectations are set so much higher for students who have no experience and are learning it for the first time.",
        "I get why this class would be hard if you have never coded before. If you have, however, it's a great way to learn python and a bit of data analysis.",
        "Honestly was a bit difficult for a beginner course in CS, but office hours and tutorials are helpful for completing assignments. Exams are much easier than assignments.",
        "This course is great! So cool that at the end of the course I was able to understand parts of the python language and able to code my own functions, programs etc. The course was a little more intense than I had expected for a non major and very basic computer science class. We covered too much material and not enough time to really delve in and practice each concept before moving on. There was also a lot of work and time required to do well in this class. The professor often underestimates the amount of time and effort needed for someone who has no experience with coding to complete each assignment. Thus, I was pretty stressed out and felt frustrated a lot of the times. The TAs were great though as they were very understanding of student's struggle and were willing to explain things step by step and were advocating for us.",
        "The homework takes hours, tutorial sections are not helpful, but exams are reasonable. It's an easy A mostly because homework and tutorials are graded on completion but it takes a lot of work to be able to actually complete the homework. Office hours are what got me through this course.",
        "SARAH IS THE BEST!!! I have never felt more connected to a professor in my life and it literally made learning feel so effortless. Even though it was her first time teaching the class she literally knocked it out the park.",
        "I really felt like I gained the ability to do some cool things with Python. I started to look forward to the challenge of each homework, seeing if I could solve the puzzles.",
        "EECS110 with Professor Sara Van Wart is an amazing course. You learn a lot about programming with a broad range of topics. These topics include graphics with tkinter, audio, web APIs and web scraping, data analytics, and even SQL",
        "Sarah and the TAs were all really great and helpful! They were super responsive even outside of office hours, and very cognizant of the fact that basically no one was a CS major and thus held us all to an appropriate standard.",
        "As I had never had any experience in coding, I didn't really know what aspects of it were important. However, this course definitely gave me a good foundation of knowledge of basic Python utilization",
        "The workload might be heavy and the homework somehow is very hard to complete. However, the professor is SUPER GREAT and very tolerant to give extension on project and homework. If the homework is too hard, do tell the TAs. Professor will cancel the extremely hard homework and giving more time on project. Exams are not hard and on Final there will be extra credit. Remember to complete all practice questions for exam then you will be fine. Not necessary to go to class and not necessary to learn at all. The only thing you need to pay attention is to go to tutorial session. Exams are easy to practice for.",
        "Good course if you only want to take this course and no other EECS courses. It doesn't help you be eligible to take other EECS courses since the prerequisites in that department are very strict. That said, I learned a good amount and its enough to do some programming for jobs, etc.",
        "Sarah is amazing! She is so caring and puts the students first. She also offers extra credit and is willing to help each student individually during office hours. Honestly, she is one of the greatest professors I have had at Northwestern",
        "This course is not very difficult and it provides a solid basis of understanding Python. I feel like I could teach myself a lot of Python code after taking this course because I was given a great understanding of the fundamentals. This class is great.",
        "I loved the intersection of theory and practice. The projects really helped apply CS in a front\u2013end, real\u2013world context and served to reinforce all the learning. Sarah was always available for us and I understand exactly how much time she had to devote to OH/additional OH. She really wanted everyone to succeed in the course and come out of it with a better skillset."
    ]
}{
    "course_code": "Student Report for COMP_SCI_110-0_20",
    "course_name": "Intro to Computer Programming",
    "instructor": "Sarah Van Wart",
    "year": "2021",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.69",
        "count": "150"
    },
    "course_rating": {
        "mean": "5.42",
        "count": "152"
    },
    "comments": [
        "Great foundation for learning the Python language at a great pace with some challenging elements",
        "This class is super easy. Highly recommend!",
        "Sarah is a wonderful human. She is a great introductory comp sci professor and the class is balanced really well in terms of learning information and assignments.",
        "This course is so fun and you learn so much! Definitely one of those things where you get out of it what you put into it, but there\u2019s so much support (literally like office hours are available for hours every day) that it is doable!",
        "I was terrified going into this class because I had zero CS experience, but I ended up loving it. Sarah is such a great professor, and made the course very beginner\u2013friendly. I feel like I have a very solid foundation of CS skills now. The assignments are reasonable and can be interesting if you are engaged in them. All of the TAs are also super helpful \u2013 go to office hours with any questions and they'll help you fix your code/answer any questions. I would highly recommend this class for anyone who needs a distro, or just wants to learn about CS.",
        "This is one of the best classes I've ever taken\u2013\u2013and I couldn't be more surprised given its content. I was so nervous coming into the class having never programmed before. I not only left the class with a solid intro to python, but an actual desire to continue learning about computer science and possibly even taking more classes. Sarah and the peer mentors actually made the learning fun and it always felt extremely rewarding. If you put in the effort, it's not hard at all to do well in the class. But more than that, if you put in the effort, you'll leave the class a better programmer, student, and (honestly) person.",
        "The tutorials and office hours were very helpful, and there was a wide variety of office hour times. The instruction was very effective and everyone wanted to make sure you understood anything you were confused about.",
        "it was cool",
        "Ideal for programming beginners! Sarah is really nice, nothing super challenging unless you personally want to go the extra mile, so many opportunities for bonus points that it seems like you're basically guaranteed an A.",
        "I appreciated the flexibility of the course attendance and grading system. I liked that help was readily available throughout the quarter.",
        "For an intro class, 110 will give you all the tools you need in order to begin fully learning coding. You gain a solid grasp of python.",
        "My goal in taking this course was to simply grow in my knowledge and abilities. I had some background in coding prior to this class, and with this course's focus on gradual learning and implementation using fun and engaging exercises, I was able to develop my skills and reach this important goal, while being challenged intellectually!",
        "I had to take this course for my Linguistics major, and I wasn't super happy about it because I am not a STEM person. But Sarah was truly amazing. She is so enthusiastic and ready to help everyone. I just recommend taking advantage of office hours and the helpful TAs. This is a challenging class if you've never done programming before, but it's possible if you keep up with the pre\u2013recorded lectures and tutorials!",
        "Fun intro comp sci course, and you will learn a lot about beginning with Python. Lots of office hour times available so there were always people to help if you got stuck with your code.",
        "this course was so much better than i anticipated, especially since i had no prior coding experience. you get what you put into it, but sarah is so passionate she really makes you want to try. i really enjoyed this course and it very much is possible to get an A in this class as long as you stay on top of lectures and hw assignments/tutorials.",
        "This class is really nice. Prof van Wart is really awesome and the class is set up to maximize student's learning and success. The only \"negative\" is that it can sometimes seem a little too slow\u2013moving, but that's just because its the most intro class into computer science",
        "I knew nothing about coding going in, but Sarah and her team really break everything down for you and help every step of the way. Lots of available office hours and opportunities for help. Weekly homeworks, tutorials (in\u2013class work), a few quizzes, and two projects. If you keep up with the work, it's totally manageable.",
        "An A is definitely attainable in this course even if you have 0 coding/tech experience. There are just a lot of assignments that you\u2019ll need to keep track of. But Sarah is an amazing professor who really cares about her students learning.",
        "Professor and TAs were super accessible at all times, assignments were tough but not unfair, and hard work was rewarded.",
        "meh",
        "Before this course, I did not have any experience with computer programming. However, the way this class was set up made it very easy to learn basic coding in python. I really enjoyed the homework assignments and projects because each one allowed us to put our own creative spin to it. Additionally, the tutorials were very helpful for understanding the concepts each week. The professor is very enthusiastic and willing to answer any questions or help with confusing aspects of the course. Overall, I highly recommend this class if it is your first time taking computer science.",
        "fun and easy intro to Python, Prof Van Wart is clear and super positive and there are tons of opportunities to do more and lots of office hours times, the projects and homeworks are easy and fun. It's a class that won't take up too much of your time and can still learn a lot in!",
        "This was a really great class! I was nervous at first because I was coming in with no programming background, but this class helped me get a great start. And Sarah is so sweet and a great professor!",
        "I'm a big fan of this course. As someone who wanted to learn python for social science research, this course taught me the basics and I feel like I have a good grasp of python because of it. While not an easy A in the sense that you'll have to work, if you put in the work you will get an A, with how much tutorials/hw/projects are worth there's little opportunity to choke on exams and hurt your grade.",
        "solid.",
        "I really enjoyed this course! I mostly study humanities subjects so this was a nice change of pace. Sarah was super informative and the lectures were helpful, but tutorial and the homework/project exercises really helped me learn. And office hours were super accessible and the TAs were really helpful with any coding bugs or issues!",
        "The concepts in this course were interesting and fun once you understood them. However, the homework and tutorials were ahead of the actual lessons, which made this course challenging. Sarah was an okay professor, but she felt a little unprepared a lot of the time. I learned a lot in tutorial (which I didn't know about prior to signing up for this class). The coursework felt manageable, but the additional lectures beyond live lectures was a lot of time and it felt excessive.",
        "This course is great! I honestly enjoyed how dynamic it is because it makes you keep up with all the content. After you get over the learning curve, it feels awesome to make things work yourself! There are weekly tutorial tasks due (and you can drop 2 out of 7) and the tutorial is led by undergrad TAs that are surprisingly SUPER helpful. Weekly homework assignments and the last one was optional. 2 projects and 3 quizzes (first two mandatory; third is optional) that are pretty much midterms in terms of the format BUT they weigh a little when it comes to the overall grade. Also plenty of office hours, so you can work through anything that's confusing to you. Sarah is super nice and always answers any questions in class, so the lecture is also quite engaging (even though the lecture would often run behind what we do in tutorials and what the homework is on). It's also very useful to have that basic knowledge in a coding language because you get how a lot of things are done virtually. I took it as a Neuro requirement but would recommend it even as a class to take for fun!",
        "The professor is so nice and helpful and understanding. she made the material so fun to learn and was so attentive to my questions and concerns. I learned so much in a fun and hands on way.",
        "Great class \u2013 Professor van Wart teaches the basics of Python really well.",
        "This course was super fast\u2013paced, but I feel like I have a good grasp of the basics of Python. Sarah was such a kind professor and the whole tutorial/peer mentor system supplemented what we did in class. Some downsides are that the projects are pretty time\u2013consuming and stressful, and the homework is often much more challenging than what we do in class. Other than that, good class and good professor!",
        "This class is so hard if this subject doesn't come easily but you will be okay if you either a) have time to go to office hours every week or b) take it with a friend/friends. Collaboration will save you in this class. There are a lot of office hours you can go to, but you have to be realistic with yourself about whether or not you have the time/energy to go.",
        "This class is so great for people that are new to coding. Sarah moves slowly enough for everyone to understand, but I never felt like topics were dragging on. In this class, you learn a lot by doing, and there are so many opportunities to practice what is introduced in lectures. Everyone\u2014Sarah and the peer mentors\u2014are so patient, kind, and always willing to help.",
        "I had a lot of fun. There's very clear guidelines on assignments which makes it easy to complete assignments, but there's also a lot of room to customize and get creative with the code you wrote. I will say that how much time I would have to spend on a given assignment was really all over the place because if you know how to do it right away it can go really quickly but if you don't know it, or your code isn't working for some reason you can't discern, you can end up banging your head against the wall for hours trying to figure it out. But I guess that's just the nature of coding.",
        "This course is a really wonderful and gentle introduction to computer science. I will admit I found out pretty quickly that I'm not a person who enjoys coding so I didn't put in as much as other people and therefore learned less than perhaps I could've, but even so it's so reasonable and well\u2013paced I'd still recommend it to anyone curious about coding but intimidated by the other CS courses. Far better than CS 111 for beginners and so many opportunities for extra credit and a fair amount of leniency (can drop 1/3 quizzes, 1 homework, 2 tutorials) so if you put in some work you should be able to achieve an A. Prof is wonderfully supportive and stresses how approachable coding can be/that the course is for beginners.",
        "Great introduction to python in an easy, low\u2013pressure class environment. Highly recommend for an easy formal studies distro or just to take for fun, like I did!",
        "This class is a great introductory class. I had no background coming in, but still managed to do well in this class.",
        "This class was fun and pretty easy. Professor van wart is the sweetest person ever and is very forgiving in grading. There are plenty of assignments so unless you fall behind getting a good grade wont be too hard.",
        "If you were intimidated by CS before, TAKE THIS COURSE!! Sarah and all the TAs were so helpful and they always make sure we understand the content. The perfect introductory course.",
        "I liked this course as my first exposure to computer science, the pacing was good/not too fast and explanations were thorough.",
        "This course was great and a lot of fun, speaking as someone who never had an interest in programming and had 0 experience going into this class. You learn a lot of the basics and get a sense of the key ideas in programming and overall it's just really a great, straightforward class.",
        "This class is awesome! Take it",
        "I really liked this class. It was a great introduction to computer science, and it definitely has sparked my interest in taking more computer science courses in the future. The workload is pretty light and if you pay attention to lectures for the first two quizzes, you're basically guaranteed an A as they drop your lowest quiz score, tutorial, and homework grade.",
        "This course was so great. I knew nothing about coding before taking this course and now feel confident with basic python skills. Sarah is also an awesome professor. She is so clear in her lectures and is super forgiving with homework, exams, etc. allowing many extra credit opportunities. There's also office hours everyday which is super helpful. I would highly recommend this course with Sarah if you're new to coding because she was such a great prof, and I love coding because of this course and her.",
        "Friendly to students to CS, challenging, lots of help available, I will likely need it in the future",
        "This class is good! I think it teaches some basic, really valuable skills just so you kind of understand how very basic coding works. I am really not a stem person at ALL but Sarah made this class a whole lot easier and I think the TA's saved me for real. You will end with an A.",
        "This course is excellent. Sarah Obviously cares a lot about students and is very understanding. Grading is very generous too which I appreciate given the difficult subject matter",
        "Phenomenal class, didn't even take for any credit just for learning and it was perfect",
        "Teacher was very enthusiastic and clear and consice.",
        "This is an awesome introductory course to computer programming. As someone who has no prior programming experience, I thought the course was perfect for my lack of programming background with its pace and its focus on a very versatile/useful language (Python). What I loved most was this course's focus on actually teaching you the material rather than trying to make the class as hard as possible \u2013\u2013 that being said, while it wasn't super difficult, I would still definitely recommend going to office hours. Quizzes were fair and the projects are worth a lot of your grade but they are fun and you can get extra credit on them which can help your grade a lot.",
        "This course was well structured, well taught, and well organized. However, I came into this course having had prior Python knowledge, and since I am not pursuing a CS major I did not want to take CS 150. Thus, it was a tad too easy for me and I found myself wanting more. For those looking to get into CS however, this is a great intro course.",
        "I was really surprised at how much I liked this course. Not only was it fun to learn, there was also so much help provided to the class from Sarah and the TAs.",
        "Sarah is a great teacher. I had no interest in computer science before this class, but I was pleasantly surprised.",
        "Loved Dr. Van Wart's lectures. Loved this course. Loved doing homeworks. Very stress\u2013free, and Dr. Van Wart is an excellent Python teacher.",
        "This course helped me learn so many things that I wasn't aware of prior to taking the class. I learned so many concepts and hope to take another CS course sometime in the future!",
        "I love working with computers, so this course helped me learn how a computer processes things. There were so many things that I learned that I did not expect to. The workload wasn't as bad as I thought it would be and it was just enough so that I was able to enjoy it to its full extent.",
        "This is an excellent class! Workload is very manageable and everything is made really easy to understand. Assignments are fun, but prepare to do a lot of work on projects!",
        "the content was still relatively easy to understand despite being a first time coder; professor is very very nice and makes you want to learn",
        "This was my first CS class and I found it a perfect class for a complete beginner, I learned so much, the instructor is so kind and really made the class accessible especially during a time of remote learning so that if you worked hard it was very easy to get an A! Made coding super fun, challenging but extremely doable if you keep up with lectures.",
        "We learned python in this class which is very useful. It was a fun class and Sarah was a great professor. As long as you listened in lecture, you should be able to understand stuff. The peer mentors helps a lot too.",
        "Wonderful teacher. She is open to all questions and is so kind and cares about all her students. Class material can be fast at times so going to OH can be really helpful if you needed more time to comprehend the ideas that week.",
        "The easiest class I've ever taken. So many opportunities for extra credit and the only place you can really get points off is in the quizzes, which aren't even that bad. There's also a lot of leeway with dropping low scores, at least for this quarter. All the course staff for this are always super helpful and ready to provide any guidance you may need. I learned a lot in this course and was also never stressed out by any assignments so definitely a win\u2013win situation.",
        "This course teaches the basics of python, which I found useful. The TAs were especially helpful in answering questions. Sometimes the professor spent a lot of time explaining a basic concept like variables (anyone who's taken algebra knows what a variable is) and less time explaining something more complicated, but for the most part the instruction was clear and helpful. The one thing that annoyed me was the required tutorials because it wasn't clear from the course description that I would have to attend an extra hour of class per week.",
        "the combination of weekly homework AND tutorial assignments and the two projects near the end and quizzes throughout the quarter were far too much work. each thing requires hours of work. would never take this class if i didnt have to",
        "This course surprised me because I genuinely enjoyed it! The assignments were honestly fun, and they let me be creative. The assignments were also definitely manageable!",
        "I enjoyed this course because the assignments were like puzzles. As long as you watch the uploaded videos from the class website and attend tutorial sessions, the assignments are pretty straightforward. It is very easy to find help through office hours and the Piazza discussion boards.",
        "Loved the net\u2013services stuff, but really just dives into python grammar not much too complicated stuff",
        "the prerecorded lectures were short and easy to follow along, as well as the actual 3\u2013day a week lectures. there is flexibility built into the course with the dropping of a quiz and the course website is so beautifully organized it's very easy to know  what you need to do to complete it.",
        "I gained a new interest in computer science",
        "I had very little programming experience when I signed up for the class, but the class does a very good job of easing you into Python. The homework is sometimes challenging, but it's not infuriating to work out. The projects were also a lot of fun and satisfying to make.",
        "The class was pretty easy even for someone like me who had never seen a line of code before. Sarah is an awesome professor and really easy to ask for help",
        "This is a great course! I came in knowing nothing about computer programming (aside from middle school Scratch coding) and I did fine. Professor Van Wart is an excellent instructor who genuinely wishes for the success of her students, and both she and the TAs are often available for help outside of class. As long as you pay attention in lecture and get your work done, you will be fine\u2013\u2013besides, a lot of the work is really fun!",
        "This was a great class as an introduction to cs. It was as interesting and engaging as an online class can be, taught me a ton about computer science, and Sarah is absolutely amazing. Super super great teacher and very nice.",
        "This course is a challenge, but Sarah made CS really engaging and interesting to learn. Regularly attending tutorial sessions and office hours really helped me succeed in the course. I knew nothing about CS when I started, but now recommend this course to anyone that is interested in CS but is not sure if it's something that they want to pursue as a major/minor. This course has encouraged me to continue learning CS.",
        "If you think you might be interested in CS, even a little bit and not even as a minor/major, take this class. Prof. Van Wart is great at explaining class principles in a way that is easy to pick up, and the homeworks and projects were interesting and fun to complete. There's a ton of opportunities to get help with stuff you don't understand, and the grading is flexible. This class also gives you a lot of knowledge in Python and web APIs, which I think would be super helpful for a lot of careers that aren't in CS. Great course overall and highly recommended.",
        "I liked how we learned from pre\u2013recorded lectures. The practice quizzes were super helpful for the actual quizzes, which were very straightforward. 2 projects, which weren't too bad either. Overall, an easy distro.",
        "It opened up computing and coding to me in ways I wasn't necessarily expecting, and supplied the resources to get help and better understand the material when I needed it.",
        "I feel like this is one of the few classes you can take that benefitted from remote learning.",
        "I loved this course. I learned so much and I really enjoyed how the professor taught the class.",
        "Sarah is an amazing teacher who seems really invested in making sure students learn; this was especially invaluable during remote classes. This course strikes a great balance between ensuring students know key concepts and sparking their interest and creativity through projects. I didn't think I would take any other computer science after this but ended up liking it so much that I'm taking 111 and considering a minor, I highly recommend taking this even if you don't know anything about comp sci or think it won't be up your alley.",
        "As someone who knew nothing about CS coming in, this course was very useful to give me a general idea of what it's about.  The course can be very challenging at times, but it all pays off when you finish your projects and hard work that makes you feel good.",
        "There's a lot of opportunity for help. Take advantage of office hours.",
        "The class was structured so that I did not have to attend most lectures and I could still do well in the class. There were a lot of extra opportunities for you to get a good grade. However, the basics that are covered in this class are extremely good to learn especially for learning how to code efficiently.",
        "Fun class! Very flexible in terms of grading and not too hard to do well in if you go to office hours. At least one of each assignment is dropped except the projects. Lots of extra cred opportunities.",
        "Great class! Recommend.",
        "Having no background in computer science, I was nervous for this course. However, Sarah and the peer mentors are amazing people who genuinely care for each student and their learning. They were always available and willing to work with me if I needed help or didn't understand something. I learned a ton and felt supported throughout the course. Highly recommend.",
        "Take this class with Sarah Van Wart! She is an incredible professor. I took comp sci in high school and absolutely hated the course, so when I found out I had to take it again at a college level I was super nervous. Sarah made this class not only enjoyable and bareable, but if presented the opportunity I would happily take more courses in the future. The class is such a fair amount of work and she really emphasizes demonstrating your knowledge through homeworks and projects. The quizzes are not a big deal and the endless office hours makes getting help very accessible!",
        "Great class for computer science beginners! The projects are a little difficult though so make sure to start them early.",
        "This class was challenging but always interesting.",
        "This course is a stellar introduction course to comp sci. The course is super manageable, very interesting, and will teach you a lot about coding. If you know that you are going to major in computer science and have some background, take 111. But if you're not sure or have all the credits in the world, take 110 because it might just convince you to major in CS. This class also functions as a fantastic distro.",
        "This course is amazing! I came in with no cs knowledge and will very easily get an A. low\u2013stress environment focused completely on learning. This course is a must take and it really inspired me to take future cs classes for non\u2013majors!",
        "This was my first cs class, and it made me realize that I don't really like programming. The class material can be challenging for beginners, and you should be prepared to spend a lot of time on it. Sarah really wanted every to succeed, and she won't let you fail as long as you don't give up yourself. However, I still don't think that I really learned many things that I could apply to my daily life. But it's really a good course to take if you want to find out whether you like programming or not.",
        "As someone with no experience in computer science Sarah and the peer mentors made the class so fun and accessible! There are weekly tutorials and homework due but the grading rubric is lenient because the purpose is to learn. There are 2 projects (1 landscape animation + recommendation app). If you want any support there are many student peer mentors who can help! Sarah is an amazing prof and super helpful in office hours. Take this class if you need it for a major/minor requirement!",
        "The most important aspect of this course to me was the availability of the professor and the Peer Mentors throughout the quarter. There were a lot of times when I was stuck with a homework or a project and going to office hours for a few minutes cleared up everything.",
        "It is a very interesting course that is not too much work, but I still felt like I learned a lot.",
        "This class gave me such a positive introduction to coding and has led me to consider a computer science major. The pace was comfortable and allowed us to really solidify our knowledge of Python basics while also giving extra (and enjoyable) challenges to those who could master the topics more quickly. The tasks we worked on were also interesting and enjoyable and made me more enthusiastic/interested in learning computer programming.",
        "Great class that served as a foundation in teaching the basics of a highly sought after skill.",
        "Loved this class. As a non\u2013CS person, I didn't know anything going into the course, but the professor is very patient and the grading scale is set up to support learning through hw, quizzes, and projects. Not stressful at all.",
        "I really enjoyed this class. It was very relaxed but still presented important coding concepts through fun homework and projects.",
        "Really enjoyed this class. The lectures did a good job explaining things, and the tutorials and homework were helpful in practicing the programming skills.",
        "AMAZING CLASS! Sarah is INCREDIBLE \u2013\u2013 best prof ive had \u2013\u2013 and is so so amazing to work with! The TAs have like 4 or 5 office hours per day so they make it SUPER accessible to get help and the class is really easy to follow! take this class!!!!",
        "Great course \u2013 Prof. Van Wart helps explain everything very well and I never felt like I couldn't go to her for help.",
        "This course was great! I went into the class with zero interest in computer science and am now thinking about taking more classes in it! Sarah was a great lecturer and if you do not understand something from class, there are so many office hour slots you can attend with the TAs. It's a great way to fulfill a distro if you are not super into STEM.",
        "It was cool to learn the basics of python and coding.",
        "The class was very interesting and was easy to follow. One thing I noticed is that I needed to put time into the class but overall this class is great.",
        "Great course. Sarah is a great teacher and very approachable. Often times the homework will be extensions of what is covered in class, so going to office hours is a must. It would also help to start homework early as it will often take a couple of hours to complete. I am a non major but this class peaked my interest in programming so I will definitely use these skills in the future. Highly recommend for those who are interested in dipping their toes into CS!",
        "It's a pretty basic intro to Python. There are essentially unlimited extra credit points. If you have prior coding experience, take another computer science course. Projects are pretty fun.",
        "I loved this course! Professor Van Wart is one of the kindest, most approachable professors I've had at this school. The format of the course was really conducive to success and the material you learn is so useful. The workload is manageable as long as you attend lectures and tutorials. Highly recommend.",
        "This class was amazing overall, and I would highly recommend as a distro or just to start the CS track. It's a very light work\u2013load, interesting content, and plenty of opportunities for extra\u2013credit."
    ]
}{
    "course_code": "Student Report for COMP_SCI_110-0_20",
    "course_name": "Intro to Computer Programming",
    "instructor": "Aleksandar Kuzmanovic",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "4.82",
        "count": "71"
    },
    "course_rating": {
        "mean": "4.89",
        "count": "72"
    },
    "comments": [
        "very organized course. The prof is super cute!",
        "This class was not nearly as bad as I thought. If you pay attention in class, you'll probably understand the information. Going to the tutorial sessions is also really useful if you have the time. Coming from an arts major, you do not have to have any computer background or stem based thinking to succeed in this class.",
        "This is a good introductory course. Most of the students in it are taking it as a rec for something and the professor knows that. He does a nice job introducing coding to people who have never coded before.",
        "Look, I was reading the CTEC's from last quarter, and people criticized Professor Kuzmanovic.  However, he is a great professor and provides so many avenues to learn such as pre\u2013recorded lectures, live lectures, and numerous extra practice problems.  Further, there is so much opportunity for extra credit that you really can control your own destiny (grade wise).  Altogether, I would recommend 110 with Professor Kuzmmanovic.",
        "This course was an excellent introduction to computer science for non\u2013majors. The projects were tough, but incredibly rewarding. This class offered me real practical skills, and I'm now considering a CS double major.",
        "It was difficult to try to learn CS from lectures but the tutorials and TAs were very helpful and explanatory and the assignments definitely help you figure out the material on your own",
        "I liked how the homeworks, quizzes, and projects followed what we discussed in class.",
        "If you are taking it with this professor (regardless of coding experience, trust me I have none) do not worry about your grade. Easy A. BUT if you're expecting to get a good background on python as a beginner maybe don't take this class. I heard there's a better professor for that...I think Sarah? The structure of the class is very confusing and unorganized. Be prepared for that.",
        "Somewhat, the material can be somewhat confusing",
        "loved this class. Office hours were SO helpful, i went to them literally all the time and it made the class a lot easier. interesting to learn python, i think it will be a good skill to have in the future. i liked the projects. kuzmanovic was funny",
        "This course was fairly standard in terms of intro Comp sci, and the most helpful part of the course was the large number of office hours throughout the week, so regardless of when you need help, there's always a time that a TA is available.",
        "I enjoyed this course. It was an effective introduction to Python that taught me useful skills without being too stressful. I enjoyed figuring out writing code for the classwork.",
        "okay this course is great, im someone w no experience in python, and this course made me want to continue learning about cs and go into tech",
        "The projects were super interesting and stimulating.",
        "odds are youre taking this for a requirement, its pretty easy, just go to class and you'll be fine, anybody can understand the topics, its very basic",
        "very easy python course for beginners. easy A, minimal hour commitment",
        "This is a fantastic class. Would highly recommend. Not too difficult or demanding, and TAs help. Virtual format deems to make more sense than in person, being honest.",
        "i would recommend this course, as it was not too hard.",
        "I didn't know how to code very much before taking this class, and now I can say I understand the basic concepts of it pretty well. The hands\u2013on application of the code that we learn in class really helps. Make sure to start the projects early or else you'll end up like me spending 7 hours on the day before dying trying to fix a bug that is eluding you.",
        "I was amazed by how well the schedule for the quarter was set up. All the materials were straight forward and easy to look over with little confusion on understanding what to do.",
        "The course is definitely worthwhile for people who have had no background in programming.",
        "This class really focuses on your learning and not your grade \u2013 there is a fair amount of grading leniency which is nice if you're super type A as you can not focus on the grade and instead focus on learning. I would not say it is a particularly hard course, but coding is a big time eater, so just keep that in mind. Would definitely recommend though. This class was typically not one of my stressors.",
        "This was a pretty good course. I didn't always know what was going on in the end but OH are super helpful. Most people did not attend live lectures but the professor was readily available for questions if you did which was super nice. Overall, if you want to learn some basics on python I would recommend.",
        "Not a bad class \u2013 remember to go to tutorials, attend classes, complete assignments, and review before quizzes. The grading is really reasonable, at least in my mentor group. Would recommend this class to any python beginners.",
        "My reaction to this course was mixed \u2013\u2013 at first I thought it was going to be good to learn how to code, but after this class, I realized it was no worth the stress",
        "I've never taken a Comp Sci course before and this course made me absolutely fall in love with it. Dr K is amazing!",
        "great first intro to python. helps to know some people in the class. its fun to do things together. aleks is a great teacher and very funny and enthusiastic, even over zoom. I'm sure he'll be great in person.",
        "Easy course, good for beginners. A good amount of extra credit available on projects.",
        "It was a straightforward class, I didnt attend lectures and still managed to get an A. The homework's are really straightforward and in the given case you can't complete them, the TA's are happy to help. There is also leniency and a lot of extra credit in the class so theres no reason not to get an A. The quizzes were a little difficult, but you get to drop one. I dont have anything to say about the professor, but the class overall was very easy.",
        "This class is structured a little poorly. For instance, a lot of us had our tutorial before lecture, and our TA would be trying to teach us that content in only an hour so we could do the tutorial. I personally struggled to engage with the lectures, but that's also a Zoom issue. However, as someone who had never coded before, I definitely came away with some important Python skills.",
        "Good class that gives a great foundation for coding and the possibilities in python. Class was very structured and help was always available.",
        "I really enjoyed the topics that the two projects focused on, which were both very interesting and fulfilling to complete.",
        "I never had coded before, and they facilitated learning very well. I thoroughly enjoyed this class and recommend it to anyone with little to no coding experience.",
        "They were good on covering some of the basics.",
        "Lectures were not very helpful, but definitely a doable A with some extra effort.",
        "This class is very easy for those who have Python experience, but it is quite helpful for those with no experience. The lectures are long, but they are helpful. The structure of assignments in this class are quite helpful in improving your programming skills, and there are a lot of opportunities for extra credit in projects.",
        "Definitely take this if you want an intro to CS and you\u2019ve never coded before. It\u2019s not overly challenging and doesn\u2019t take up too much of your time. Definitely doable but make sure you go to office hours when your code isn\u2019t working, etc",
        "This class is really interesting and easy to follow. If you do the tutorials and homework it is really easy to understand what is going on.",
        "Very interesting course, learned a lot.",
        "I learned basics in coding which will hopefully help me in the future",
        "This class was difficult for me, because I think it takes a different type of thinking to do well in CS. Regardless, the prof and TAs really go out of their way to help. There is a decent amount of work for this class (with tutorials and HW and projects).",
        "The class was pretty demanding in terms of tutorials, homework, quizzes, and projects, yet if you keep up with it you will definitely do fine in the class. I really enjoyed a glimpses into comp sci.",
        "This class was pretty straightforward as long as you do the work assigned. The grading was extremely forgiving due to the pandemic, which I appreciated, because it felt like I was still learning, I could just not stress about if I could not get an assignment done once or twice. Overall, this course gave me a solid introduction to Python, and I would recommend the class to anyone vaguely interested in coding.",
        "I loved being able to learn a new programming language. I loved how available to TAs were when I had questions and concerns. If you keep up with the lectures and do the problems outside of class, it really helps you understand",
        "As a junior, I can say that this is easily the worst course I have taken in my time at NU. Professor Kuzmanovic does not care about his students. He insulates himself from understanding the poor design of this course by always deferring to the TAs to try guiding students through his extremely extensive tutorial and homework assignments that we are very ill\u2013prepared to handle based on what he teaches in lectures and pre\u2013lecture videos. His lectures were filled with instances of him randomly introducing new Python functions with very little explanation. If the professor would hold his own office hours to help students, I believe he would begin to understand the many problems plaguing this class, but instead his office hours were nonexistent. I could not find anything on the syllabus or course schedule mentioning the professor's office hours, so it seems that he always hides behind his TAs. That would not be as much of an issue if the TA\u2013to\u2013student ratio were reasonable, but it was not. This course had over one hundred students and not enough TAs to go around. I would often arrive two minutes after office hours began just to wait in a queue for ninety minutes in order to speak with a TA for ten minutes. With a tutorial due on every Wednesday and homework due on every Friday, this is unacceptable. My tutorial section was also completely useless because my peer mentor would often just rush through a couple steps of the assignment while hardly explaining and tell us to try the rest on our own, that is, if he showed us anything at all. Often he would just say something like \"This stuff is pretty easy, so just do it on your own and let me know if you have questions.\" This was extremely alienating to struggling students like me who had trouble getting started on our own.This class was designed for those with previous programming experience, and if you were a beginner, you clearly were not welcome. I took this class because I had a bit of interest in programming and needed a formal studies distro credit, but I sorely regret it now. Although I must admit that I did learn some programming knowledge and even had enough interest to do a creative final project in another course as a program, it was simply not worth everything that I had to put up with those ten weeks.",
        "This is a fun and easy course for anyone who's interested in learning some basic programming. The assignments aren't super difficult, and completing them actually helps you practice the concepts and work on problem\u2013solving. Nothing in this course is too difficult, and there are plenty of extra\u2013credit opportunities to take advantage of. Honestly, as a non\u2013STEM major, I had a great time learning how to code and I'd take this course again in a heartbeat!",
        "Grading was fair and assignment expectations were clear.",
        "This course was fun and had a lot of cool programming techniques that I learned.",
        "I liked the tutorials because they allowed you to ask questions and learn the material"
    ]
}{
    "course_code": "Student Report for EECS_110-0_20",
    "course_name": "Intro to Computer Programming",
    "instructor": "Sarah Van Wart",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.55",
        "count": "65"
    },
    "course_rating": {
        "mean": "5.27",
        "count": "66"
    },
    "comments": [
        "professor is amazing. very nice and helpful. there is lots of extra credit opportunities and lots of office hours (which are not helpful).",
        "very easy and manageable when taken with Sarah",
        "Relatively simple course, can be taken by non\u2013majors and you will not suffer. Office hours are definitely a must though.",
        "Not too challenging. A great course for programming beginners!",
        "Came into the course never seeing a line of code in my life. The class is really generous to beginners and they want you to learn without the academic pressure that comes with a lot of STEM classes. Only 2 exams, 6 homework assignments and 2 projects. If you did well on 1 exam you could replace the other score with that. Homework and projects really didn't take too much time either. Sarah is really great\u2013\u2013 she's different from a lot of other computer science professors. Way more down\u2013to\u2013earth and understands how to teach beginners. Now that I'm done I feel confident knowing how to program. It's a cool feeling. Really good formal studies or science distro, highly recommend the class.",
        "It was a really great time, I learned a lot about programming",
        "Sarah is like a fuzzy pair of lotion\u2013infused socks. Before taking this class I was so very scared of \"Technology' and she so Gently taught me how to code I didn't even realize when the information entered me.",
        "This class was pretty hard, but Sarah really cares about your success and gives you multiple opportunities for extra credit. The office hours are helpful, but they need more because they are often super packed.",
        "Good class. Moves at faster pace than I expected, but the problem sets help with understanding the key concepts",
        "The lectures were very engaging and Sarah is a very supportive and enthusiastic professor. I was always interested in the homework assignments and projects we did, and always felt encouraged and challenged while coding in office hours.",
        "Lots of materials to learn a new language. Office hours really helped flush out difficult ideas. The TAs and professor Sarah were extremely kind, patient and helpful to students. Homework every week. 2 exams. 2 projects (the first project which is about graphics or sound were not that practical, but the second project about using Yelp or Spotify's api to create your own restaurant recommendations or playlist was extremely useful).",
        "This course was a lot of fun and I really enjoyed it. I knew nothing about computer science before this class but Sarah was incredibly helpful.",
        "This course is a great way to get some exposure to programming if you are a beginner. That said, it requires a lot of self\u2013teaching and trial\u2013and\u2013error, which can be frustrating at times. The instruction isn't that helpful in class, but Sarah is really nice in office hours.",
        "Sarah is so nice and interesting. This course is really good for beginners and for people who like puzzles and problem solving.",
        "I previously had experience with Java and MATLAB so I already had plenty of knowledge of the basics so the whole class was a breeze. But what separates this class with any other programming class is that you get to do COOL, USEFUL projects unlike the dumb and boring linear algebraic EA projects.... you get to do make an animation or MAKE YOUR OWN EDM SONG BY CODING. AND AT THE END OF THE YEAR PROJECT YOU GET TO MAKE A WHOLE PROJECT ON SPOTIFY SONG RECOMMENDATIONS. with all my years of coding ive never done something so easy, cool, and fun. SARAH IS THE BEST AND THE COOLEST TEACHER. she went to yale but you would never have guessed because of how easy going, fun, and humble she is.",
        "I learned a lot about the basics of computer programming but don't feel I gained a mastery of these topics because we had to move between topics so quickly. Sarah is a great professor and wants all of her students to succeed!",
        "Sarah is such a wonderful human and professor!! she's so helpful and kind and understanding and did I say helpful? I was so scared to take this class (I knew nothing about anything related to programming), but I genuinely learned so much and even had fun?? Assignments are very closely related to what's being covered in lecture, and going to office hours (which across all the TAs they times throughout everyday of the week) is always VERY helpful. everyone really just wants you to succeed, and its super possible to get an A. even the exams are fair and pretty easy. I had such a good time that I want to learn more about programming because it was just kinda cool and fun! there's also no required textbooks or anything to buy, so that's always nice.",
        "I went in with having 0 idea what coding was but learned a lot. Need to go to office hours tho. Like seriously. Go. And also take it with Sarah. She really pulled thru",
        "It\u2019s hard but fulfilling when you crack the code",
        "Difficult if you've never tried coding. But yo9u feel very accomplished when you start getting the hang of it. Good formal studies distro",
        "There are at least 20% of the students in this class who have already known how to program so that they will pull up the average grade of the exams but luckily this class doesn't have a curve so all you need to do is be prepared for the homework and projects.",
        "Overall, the class was pretty good!!  If you have to take this class for any requirement and don't have any coding background, TAKE IT WITH SARAH!!  She was so helpful, kind and patient, and overall she definitely made this experience more positive.  Otherwise, I felt the material was a bit too hard for those without any coding background like myself.  Also, this course has quite a bit of work especially if you're not majoring in this field, so make sure you have enough time to do the projects (which are super long!) and homework assignments.  But Sarah was so sweet; she gave SO much extra credit that definitely boosted my grade!!",
        "Overall the class is not too bad just like the title suggests. The spring quarter is taught by Van Wart who specializes in Python and didn't even get her bachelor's degree in CS so she is very understanding towards those who have never programmed before in their life. The class basically consists of 6 hw assignments, 2 projects, and 2\u2013ish exams. HW is pretty straightforward but highly recommended that you go to class so that you have enough of an idea to finish it without having to scour the internet. Projects however definitely require plenty of time to get right depending on how much experience you have. There are 2 schedule exams however we were given the option to skip the second one if we were satisfied with the first exam score. It isn't that hard to do very well but if you make small mistakes, it may hurt you as well so make sure to do well so that you can avoid taking the 2nd exam.",
        "This was a wonderful class. I am not a computer science person but needed an EECS class for Neuro. Sarah is a great professor who's very understanding of her students and is willing to put in the time in energy to make sure we all succeed. For example, in just two days during finals week she committed to over 6 office hours to help us with our final projects. She also offers a lot of extra credit so you can worry about learning python without shortcuts rather than stressing over your final grade. I went from no coding experience to feeling generally proficient in python in just one quarter.",
        "This course was very straightforward and Sarah is super lax! If you are even slightly familiar with code this class will probably feel extremely easy. The projects are pretty satisfying and office hours are super helpful, so you can definitely get what you want out of the class based on how much time you want to put in.",
        "Professor VanWart is great, python is a super useful language, and I learned a lot without a lot of stress.",
        "If you're looking to just try programming, this is a solid introduction. FUN PROJECTS like I made a song and other people animated a fish. Also, Sarah is amazing. Generous with her time and with grading.",
        "Great intro course to Python, made me realize how much I enjoyed CS.",
        "Great course, learned new skills.",
        "Easy class: 2 midterms, 6 Hw assignments, 2 projects. All doable even if you don't know python. Great TA resources if you ever need help and you really learn a lot of python for an intro course.",
        "Sarah is amazing \u2013 she's extremely patient and really wants you to succeed. This course is useful for anyone and I think everyone should take this class to have a basic understanding of programming.",
        "Sarah is amazing, must take this with her. Coding is really hard but if you take advantage of office hours this class is doable (coming from a non\u2013CS person).  Undoubtably really time consuming though between homeworks, projects and exams.",
        "Easy A if you go to office hours and are on top of deadlines",
        "An amazing class covering the basics of Python as well as Pandas and API packages. Sarah is great and deeply cares about the class!",
        "I love how the course is really \"introductory\" since I have no previous experience with coding whatsoever. The material is digestible, the professor and TAs are more than approachable and we have lots of assistance with homeworks.",
        "This a pretty easy class. Prof Van Wart is very helpful and nice when helping student debug their code. I thought half of the homework assignments were not very useful in helping me to learn, but the final project is fun and useful in helping me to gain proficiency in Python.",
        "I came into this course with some programming experience, and found it very easy. That said, I think it's a really great introduction to computer programming concepts for people with no experience, and Sarah is a really friendly and down\u2013to\u2013earth professor. If you don't have programming experience, the homework and projects might be tough, but overall I think it's very manageable.",
        "Great intro class for Python especially if this is your first time programming! Be sure to go to office hours to get any help you need for hw and projects",
        "Sarah is the best. Course was friendly to people who have never taken a comp sci class but want to learn. Go to OH, even if you don\u2019t go to class. That is where you learn.",
        "It was great. Perfect for an intro to programming class. The right amount of work and just challenging enough."
    ]
}{
    "course_code": "Student Report for COMP_SCI_111-0_20",
    "course_name": "Fund Comp Prog",
    "instructor": "Sara Owsley",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.70",
        "count": "134"
    },
    "course_rating": {
        "mean": "5.25",
        "count": "134"
    },
    "comments": [
        "good class",
        "I greatly enjoyed this course and having access to so many different peer mentors was incredibly useful throughout this time.",
        "Sarah is an amazing teacher and was super accommodating to students. They definitely make sure that you have access to lots of help resources through peer mentor hours, small groups in class, Campuswire, etc. As long as you take advantage of those you will be fine.",
        "Great intro to computer science class, and Sara Hernandez is an amazing teacher!!",
        "Having taken this class after 211, I was doubting whether it was worth my time or if I should have waited and placed out. The answer: yes! It was worth it! I had never programmed using functional style programming before so this class was great at teaching me how to use lambdas and the functional paradigm. It was also a great way to boost my recursion skills going forward for 214. Also Sara Sood is a true gem and talk to her whenever you can about whatever.",
        "Professor Sood is an excellent and very understanding professor.  She is always there to help, and even met with us one on one to talk about our plans for CS in the future.",
        "Sara is amazing, CS 111 is great and kind of inspiring and I liked Racket",
        "This class is an ideal CS intro class, because it lays the foundation for principles. However, the only downside is that this class is taught in Racket, which is not highly applicable language in real\u2013life software engineering settings.",
        "Good class overall, but Racket is annoying haha",
        "Very easy course! Class time was time to work on assignments or you can submit it for participation points after. No tests or projects either which made the class very laid back. I didn't ask for much help during the quarter but I could tell that there was a lot of help offered to finish homework! Great intro class!",
        "This class was super manageable and fun. Sara is an excellent teacher who will go to great lengths to ensure her students succeed. The peer mentors are great and will always help you with the homework assignments.",
        "Tough language but professor made it a manageable class.",
        "I learned and retained a lot more in this class than I did in 110. Sood is very good at breaking down concepts and explaining the homework assignments constructively",
        "this class wa a good! i think it gives a very good basis of how to think about coding and languages, LOVE the prof.",
        "Top tier class. Interesting material, good structure, and more resources for help than you know what to do with.",
        "Like everyone else will say: Sarah is amazing. She is what every professor should be. To the point, polite, personal, able to understand how the class is going and adapting accordingly. The course was just superbly designed, even if it was in a language no one uses \u2013 reality is languages keep on changing and the goal is to be able to learn how to learn, and I feel I did.",
        "This course was a great introduction to comp sci, as the topics were relatively simple to understand yet are very useful. The PA and professor were also very helpful with everything",
        "We had weekly modules with quizzes that were basically pre\u2013recorded lectures. We had weekly homework assignments and tutorials that we would work on in class with a TA that would help us. It was a nice way to do stuff during class and not have to worry about doing work outside of class.",
        "This was my first computer science class, and I really enjoyed it. The course is well\u2013organized and the material is not too difficult; there is a bit of learning curve at first, but once it clicks the difficulty evens out.",
        "Sara is a fantastic professor and it's a really solid intro course. Backwards class structure (watched the lectures/did all the learning outside of class and \"class time\" was devoted to working on the assignments with our teams), so take what you want from that.",
        "take this course with sara! she is an excellent teacher and super nice. she actually wants you to do well and learn, so definitely go to office hours and ask for help. this course isn't too hard, and the weekly assignments are pretty doable if you don't procrastinate too hard",
        "It was a very good course because there were many resources and office hours throughout the day and Sara is very accommodating.",
        "The class is taught in racket, which I'm not sure is helpful when transferring cs fundamentals over to a more useful language. Otherwise, the assignments are engaging and the content is well developed and taught in an engaging manner",
        "The course is taught in racket, which puts every student on the same page as it is a language that essentially none of us are familiar with. This was a great introductory course that you can definitely take without cs experience (which I did!).",
        "This class was a great intro to computer science concepts. I have never learned anything about computer science before, and I think it was a good survey of topics and I feel ready to dive deeper if need be.",
        "This course was a great introduction to Racket and basic programming. Professor Sara Sood is fantastic, and despite the class having almost 200 students, she went out of her way to make sure that each student felt supported. The course is taught in a flipped classroom style, where class time is dedicated to asking questions.",
        "I really enjoyed this course. I came in with no experience of programming, so I didn't know what to expect. Professor Sood  is fantastic and her lectures (which she recorded and posted asynchronously this quarter) were engaging. She was so helpful, and I feel like I now have a significant amount of programming knowledge. I will definitely continue to take computer science classes because this really exceeded my expectations. Also, it isn't too hard to do well, as half of your grade is composed of participation and daily(ish) quizzes, which are farily straightforward. The other half is weekly assignments, which were usually challenging and engaging.",
        "Good instructions and professor was understanding",
        "The course is great and the professor is great. If you had any prior computer science experience in any language, I'm pretty sure you'll be fine and the course won't be too challenging, otherwise the language and the concepts might seem intimidating.",
        "This class was pretty easy, but the professors were very helpful. If you watch the asynchronous lectures, this class will be very straight forward.",
        "It was good to get some computer science experience. I really liked the professors. They were very nice and relaxed.",
        "Professor was great, but the language was not fun to code in",
        "This class was great. I needed a distro to fulfill math/science requirements and this was the perfect one. It was stimulating and interesting, and Sara and the peer mentors were so helpful and understanding. It's clear they really want you to succeed.",
        "I really liked this class. Good regardless of how much experience (if any) you have with comp sci. No exams in this class at least for the virtual format of it which I liked",
        "Sara is great and super nice. Use the TAs for help they are nice and willing to help.",
        "The course was great with a lot of content but manageable coursework",
        "The course was a very good introduction if you have no prior coding experience. It also teaches you the basics of everything. Professor Sara is very good at explaining the material. In addition, she is very helpful when it comes to assignments. The assignments aren't long and the peer mentors will definitely help you if you are stuck. We didn't have any exams; only a simple quiz on each module.",
        "This class is really good! It's a great introduction to computer science and especially to the best approaches for learning a new computer language. I don't have much prior coding experience at all, but I have still definitely been able to complete the assignments well and to understand the concepts discussed in class. I also like that the class setup allows for discussion and collaboration on the assignments.",
        "I wish this class was conducted in a different language other than racket.But, it is a good introductory course overall.",
        "Professor Sood is the best! Great class!",
        "Perfect introduction to CS. Not too hard as to be daunting but really makes you think. Prof. Sood is an amazing communicator and introduces concepts very intuitively, and is very generous with deadlines/understanding of students' schedules. Weekly exercises can be long, but there are over 20 hrs/week of office hours from student helpers so help is always accessible. No final or midterm, all lectures are asynchronous. Highly recommended!",
        "Before this, I took Comp Sci 110\u20130 and it was about Python. This class is focused on Dr Racket and I have to say that they are very different. It was a bit more tough for me. But the course offers many officer hours which helped out greatly.",
        "Good class",
        "Nice class, my fav part was the groups we had since we were able to work on the assignments together and help each other out, as well as having our own TA there that we got to know and that helped us whenever we were stuck. Very smooth and stimulating intro class to comp sci, although Racket is not my favorite language. Not too hard, just make sure to watch lectures and understand how to do the HWs. Very easy quizzes as well.",
        "This class is great. I had some previous experience with programming, which definitely helped me grasp recursion a lot faster than some of my peers, but having background isn't a requirement to do well in this class. The only issue I have is that I don't feel like I could manage on my own with Racket. I think we had a very cursory introduction, so it feels as though there's something missing from my grasp of the language. Also, Racket is objectively one of the worst languages to code in. Other than that, Sara is awesome and really great at explaining things. If you're questioning whether you should major or minor in CS, she is a great resource. Easy A.",
        "As a intro course, it helps me gain interests in CS. But I feel the course could do a better job introducing us to the interesting world of CS rather than directly jumping into programming and syntaxes.",
        "Professor Sood is great. An excellent communicator, as shown by her lectures. Always willing to answer any questions. Peer mentors were also very helpful.",
        "THIS CLASS WAS SO FUN! I am a humanities major who, prior to taking this class, was pretty uninterested in (and scared of tbh) computer science. I genuinely believed that I would be terrible at it because of my inaptitude in math and science courses. And yet, Sara proved me wrong. The video lectures are super accessible and understandable, even to someone (like me) who had no prior background in CS. Also, each class session is just a long work period for you to work on assignments with the peer mentors and Sara there to offer any support, if needed. This class structure really helped me learn AND stay on top of my assignments AND learn to enjoy CS. So, if you're looking for a fun distribution requirement that also helps you learn, I highly recommend taking this class!!!!",
        "This course was great for me as a beginner coder and has me very excited for any programming in the future.",
        "Great course! The prof and peer mentors were super helpful and there was always space to ask questions. I will warn students that the content gets a little confusing towards the end of the quarter, but again, there is always room to get help it just might take more time/work towards the end.",
        "Super chill class with weekly homeworks that aren't too hard at all. There wasn't a test for this class which made it much less stress. The homeworks are engaging with Racket and get more interesting as time goes on. They really helped with the concepts used that week. Professor Owsley is really great at answering questions and not only helping with course materials but also friendly and willing to help with guidance about future CS courses and routes.",
        "I think this class would be helpful for someone with no comp sci experience. It is odd they use racket because you will never use it again",
        "If all the CS courses in the dept were taught by Sara, I would be a CS major",
        "I thought it was able to provide a lot of interesting content, with us building actual graphical programs by the end.",
        "I really enjoyed the programming practice I got from this course, and look forward to taking my knowledge/the process of programming to future courses. The way we could structure our work schedules independently, getting as much help as we did or didn't need, was very effective.",
        "Overall I think this is a great introductory course for comp sci, speaking as someone with next to no coding experience prior to taking the class. Prof. Sood is great at explaining the more difficult concepts and is always very helpful. Make sure to ask for help when you need it or are confused and you should be fine. Office hours helped a lot.",
        "Not too hard, quizzes around 3 times a week and exercises make up the vast majority of your grade. Class time is just spent in breakout rooms working.",
        "If you've never programmed before, this class could be pretty difficult, but even with that it is still doable. I highly recommend asking for help from either the Peer Mentors, TAs, or Professor.",
        "Assignments help enforce the concepts learned in the videos",
        "It was a fun, easy, stimulating introduction to coding",
        "Sara is an absolute angel",
        "I really enjoyed this course, it was super well structured and really well taught. The peer groups were very useful and the exercises were perfectly challenging.",
        "Good course. Covers fundamentals. Not very difficult.",
        "If you not interested in this dont take it",
        "TAKE THIS CLASS WITH SARA SOOD SHE IS THE LITERAL BEST. She is so understanding and really tries to help you out. This class is pretty easy, and if you are struggling just go to TA OH and you will be fine.",
        "This course is a good introduction into the syntax and feel of coding, even if the language itself doesn't exist outside of Northwestern. I would say that even though Racket isn't an applicable language I still got a lot out of the class both academically and otherwise...",
        "Sara Sood is an absolute goat; she ACTUALLY ACTUALLY tries to make life easier for her students. The way she structures the class is amazing, and she really takes an individual interest in each student. The language, Dr.Racket, isn't my fav, but she made it more than tolerable."
    ]
}{
    "course_code": "Student Report for COMP_SCI_111-0_20",
    "course_name": "Fund Comp Prog",
    "instructor": "Sara Owsley",
    "year": "2020",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.74",
        "count": "241"
    },
    "course_rating": {
        "mean": "5.18",
        "count": "243"
    },
    "comments": [
        "It is a good class with Sara, but I'm not sure if you should take this class if you know you're not going into CS. CS110 is a better choice to just learn basic coding from what I've heard.",
        "Professor Sood is a really good teacher and the peer mentor hours are very helpful for completing assignments. The tests were difficult, but you'll do fine overall as long as you put in the hours for the assignments.",
        "This class starts off easy and progressively gets very difficult. The weekly assignments were hard but doable, especially with the help of peer mentors. While the class is hard, it's very doable and Sara makes the coursework manageable and attainable.",
        "I walked into this class saying to my father that has worked in Computer Science my whole life and said \"Dad, I'm ready to completely and thoroughly disappoint you\"I had no experience in this field. I had no DESIRE to have experience in this field. And yet, I did not disappoint him, and like magic, I learned a lot. Focus in the beginning of the class, REALLY understand what she says, and you'll be fine.",
        "The instructor was terrific and there were lots of resources to help us succeed in this course",
        "This course was great. The instruction was very helpful and the assignments were challenging but rewarding.",
        "Take this course with Sara!! It might get annoying at times, and tutorials aren't always that helpful depending on your peer mentor, but I enjoyed having assignments every week. It forced me to keep up with the concepts and helped me confront and practice anything I was struggling with. It might seem like a lot of work, but it's definitely worth it!!",
        "SARA IS THE BEST. This course teaches you ab racket. Even though you may not be using it in the future, you learn more about how to learn a new language and apply it.",
        "TAKE IT! It's a great intro class and Sara is the best! Not too difficult but great way to start learning CS",
        "Sara is such a sweet professor and really goes out her way to make sure her students understand the course content. This class made me like programming a lot more.",
        "The professor was excellent and highly committed to making sure all students were capable of understanding and synthesizing the information presented.",
        "This class was harder than I expected but Sara was an amazing professor and was always there to help if you needed.",
        "Pretty good class. The exercises are hard but Professor Sood is a great lecturer.",
        "This class requires a ton of work and an incredible amount of extra hours but is rewarding sometimes.  Professor Sood is a great teacher.",
        "Sara makes this course super easy to digest and is able to provide further depth for those who already have coding experience.",
        "Good class. Sara is a great professor and the teaching assistants are helpful, especially during discussion section.",
        "It helped me learn coding basics for someone who had not coded before.",
        "Great class to take if you have an interest in computer science and are unsure.  Exams are straightforward and fair; weekly assignments are explained thoroughly and aren't terribly strenuous.  Could be a 5th class if your other 4 aren't extremely heavy.  Sara is one of the best professors I've had at Northwestern.",
        "Sara is a great lecturer, but I found lectures pretty unengaging anyways \u2013 I think that's generally the nature of a computer programming (not computer science) class.  The homework's were pretty intellectually challenging, which I liked.",
        "Bless Sara Sood. She\u2019s amazing, and if you take this course, take it with her!",
        "While the course itself is not the greatest, it definitely does help you understand the fundamentals of computer programming. Racket is somewhat useless in the real world, but in the course, it helps you understand the underlying concepts that other languages use. If you can, take this course with Sara.",
        "I did not find CS111 to be as easy as previous CTECs made it seem to be. The first few weeks were pretty manageable, but I found recursion to be very difficult. A lot of the programming assignments also take a lot of time, and although the tests are not too difficult if you understand the code in the lectures, a few small mistakes can lower your score significantly. The exams and the homework are weighted equally, though, so it is possible to make up for mistakes on tests. Also, Racket is a confusing and nonintuitive language, and there were many times when I was stuck trying to figure out how to write a line of code that I could have easily written in another language.",
        "The course covers all the key aspects of computer programming, and Sara is a great professor.  If you really want to learn you should attend office hours, but you can get by without.",
        "Sara is a really good professor and the live coding she does in front of the class is extremely helpful. Using DrRacket was a big adjustment at first, but it was nice because everyone had to start out from scratch and learn together.",
        "I definitely would've had to drop this class if Sara wasn't teaching it. She's one of the best professors I've had so far because she cares so much about her students. In general, computer science is a frustrating topic, and even though I won't be taking any more CS classes, this course taught me a lot about perseverance. It takes up a lot of your time as a beginner programmer",
        "ehhhhhhhhh i mean you gotta take course for CS. kinda useless tho...",
        "TAKE THIS CLASS WITH SARA! Sara is an amazing lecturer and explains topics very clearly. As someone with no prior programming experience, I felt that this class was fairly easy and I was able to learn a lot from it. There are two short noncummulative exams, weekly programming assignments, and a final programming assignment. Highly recommend",
        "Sara is amazing!!! This is a pretty standard intro programming class, not too challenging. If you have programming experience you'll find Racket a bit odd but it's not too difficult to get the hang of. For new programmers, I don't think this class is too difficult as Sara is an amazing professor. She takes the time to feel out how how difficult the material is for students (if she's going too fast, too slow, or at a good pace) and is very kind and helpful in office hours.",
        "Sara is amazing. Don't take CS111 with another professor. She is so willing to help you and so so approachable. 10/10 would recommend to a friend.",
        "Sara is a great professor, really cares for the students. Great lecturer. Although studying in ryan aud is always hard to concentrate, Sara's lecture is very engaging. There are quite a lot of homework, as is any CS class. Easy tests. Take it if you want to learn about cs.",
        "Sara is such an amazing professor! The lectures are large, but she will anonymously ask how is the pace of which she's teaching at, which is good. I really didn't like working with Racket, but the course is a good one to have for learning the basics of programming and how code works. Use the peer mentor hours to help with the assignments; they can be pretty helpful (but also a bit difficult at times).",
        "Don't be scared to take the class if you don't have programming experience, racket isn't too difficult to pick up and the course makes sure everyone is on an equal playing field, so you can certainly do well.",
        "Racket is stupid but Sarah is great if she teaches this class so procede with caution. If you have previous programming experience, you will rage hard because of how stupid and dumb the syntax for Racket is. It is inefficient and a pain.",
        "This class was taught very well. Professor Sood does a really good job at explaining the concepts to both newer programmers and experienced ones, and the assignments were not too easy or too challenging. There was a lot of potential to dive deeper into topics as well, with advanced tutorials and the extra lectures at the end as well.",
        "SARA IS AMAZING! Take this course with her and you will fall in love with the subject",
        "Going into this course, I had zero experience with computer programming and was very worried about it. But Sara is an amazing professor and really does a great job at making sure that her course material is at a level where everyone can learn from it. This course does not favor those with experience and I felt really comfortable in this class and was always able to ask for help when necessary.",
        "Concepts are cool and interesting. The language, Racket, is very basic and boring however.",
        "This is a good intro course, and not too hard if you've taken comp sci before. Racket is definitely a strange programming language, so that takes some getting used to at first, but Sara is a a great lecturer.",
        "I really enjoyed this course. Never took computer science before. Good intro course to comp sci. Learned a lot about how to understand functional programming so I'm happy I took this course. Definitely a bit challenging at times but once you understand a concept you're good.",
        "I was scared but Sara really helped me understand and eased my fears. It is truly an amazing start if you are thinking about being a CS major",
        "Sara is the best! Racket is a bit tedious. I found the course to get a lot easier with a small bump in the middle. (Trees are hard!)",
        "For those unfamiliar with coding/programming, CS 111 is THE course for said newbies. Yes, you will feel overwhelmed at several points, but the assignments are comprehensive and a good overview of the subject at\u2013hand.",
        "sick class.",
        "This is a very interesting course if you have never programmed before. It is challenging, especially if you are a non\u2013McCormick major, as most of the class has some background, at least with Matlab. If you put effort into the assignments and try to learn the most from them, you will most likely do well on this course, but the exams are a bit tricky.",
        "good class.",
        "Initially I was a little nervous about being taught Racket, but I'm glad that I chose to take this class. It can definitely be frustrating at times, but it's also fairly easy to reach out and ask TA's or Sara for help. The class helped me take a step back from my typical CS background of Java and C++ and understand what I was coding.",
        "This class is great. Professor Sood does a great job of being flexible and paying attention to her students' needs. The assignments are manageable and there are a lot of resources for help so take this class if you get the chance.",
        "This is a very interesting and well\u2013organized class!! I feel like it was the perfect introductory course, especially given that Sarah was the one teaching it. She was an amazing professor, very kind and patient, and I would definitely recommend taking it with her!",
        "Great class, great professor. Learned a lot about computer programming.",
        "This course made me want to pursue a degree in computer science.",
        "Take this course with Sara!! She is the absolute best! If you go to her office hours to work on the homework, you will get it done, and actually learn the material.",
        "This was an excellent introductory computer science course! Although Racket is probably not a useful language for the future, I really enjoyed this course. Professor Sood is a great lecturer and really stimulated my interest in the subject. She wanted everyone to succeed and would constantly allow time for questions even in a 300 person course. Make sure you go to peer mentor hours for the assignments, as that will help you get through everything. Finding a specific peer mentor to go to every week was great for me, as they became invested in helping me. Definitely a manageable and A\u2013attainable course that I enjoyed!",
        "A really great course to introduce coding. Sara is amazing.",
        "The assignments took a lot of time because racket is a very marginal language, with no online support community to speak of. Because we never get access to the whole language, we are often hamstrung by the constraints of the language.",
        "compsci is super useful, but racket is not. I understand that it is a beginner language, but its formatting is very convoluted and can thus be a bit frustrating to work with",
        "I enjoyed this class. Sara Sood is a great professor who gives engaging lectures that are easy to follow. She truly wants students to succeed and checks with the class if she is going too fast during lectures. The weekly exercises were fun and challenging, but not too hard or time consuming. I highly recommend this class as an introduction to programming even if you are not majoring in comp sci.",
        "hard, but worth it! sara is an awesome professor and the weekly tutorial sessions are very helpful in understanding the ideas of the course. definitely a lot of work each work so wouldn't recommend taking on top of an already difficult courseload.",
        "Wow. What a ride. This quarter was definitely unorthodox due to the actions of the university reacting to COVID\u201319. Sara was very accommodating with completing assignments and deadlines as well as how the exams were graded. The class itself, though it was supposed to be an introductory course, was sometimes very difficult to keep up with. It was very fast\u2013paced and there are assignments each week. It takes a lot of time and practice to understand the awful syntax of Racket, though it was more so better towards the end of the quarter in terms of material. Peer mentors were very helpful as well as office hours so I would highly recommend getting help if you are struggling.",
        "Sara is fantastic! I waited to take this course with her. I recommend taking this as a fifth class during your freshman winter \u2014 I really wish I took it then, instead of as a sophomore. One program per week, tutorial once a week, and two midterms. Very easy.",
        "This was a great introduction course \u2013 I didn't feel like the exercises were too difficult, though the exams were pretty tough. Sara is an excellent professor, and I learned a lot, having never taken programming courses before. I really enjoyed this one, though I do feel like I didn't learn super applicable skills. Good introduction, but if you want to program in the real world, you'll have to continue in the sequence.",
        "I actually found this class pretty engaging and enjoyable. Sara is a GODDESS, literally the best, most fair, most understanding professor I\u2019ve had and she makes understanding concepts so easy. This class was a breeze with her!! Racket isn\u2019t too bad as long as you go to class, she breaks everything down really well and the weekly exercises can be fun sometimes",
        "This class was pretty tough but it was a great intro class. The tests are pretty hard but the activities are doable and the grade is split up very nicely.",
        "I've never taken anything related to computer science ever and genuinely enjoyed being in this course. But it was a lot of work. I spent a lot of time in Office Hours (which there are plenty of\u2013\u2013 every weekday and Sunday).I loved getting to know Sara, Daniel, and all the other TA's. I have a new interest for something now that I didn't have the chance to be exposed to before college. Please take this class and don't be scared of it. ANYONE can do it as long as they utilize the many resources that come with the course. Also, this particular course was taught as COV\u201319 became more serious.  Sara was SO accommodating and responsive. She truly cares about her students.",
        "I did not like using Racket in place of a more common language.",
        "I really liked the tutorials because they were very helpful in reviewing material covered in the lectures.",
        "Sara is an amazing Professor who is so kind and helpful and knowledgeable. The work load is reasonable though it does require a lot of outside of class time (peer mentor hours saved me). You get out of this class what you put into it.",
        "Prof. Sood is one of the best I have had! I had never programmed before and after taking this class I want to major in Computer Science. The exercises are a bit tricky but there are a ton of office hours. I spent most of my time there doing my homework and got perfect grades in all of them while also learning a lot. The tests can be a bit tricky but they are fair!!",
        "I came into this class having taken APCS A in high school, and so I knew Java. I was quite suspicious of Racket, but I came to like it. It was a new way of thinking and I learned a ton.",
        "Sara is a really helpful, encouraging professor. She made this course so much easier to understand and process. Definitely recommend taking 111 with her.",
        "Worth taking the class because Sara is so good. The information she teaches is not really worth knowing unless you are going to do the major or minor. Id recommend taking 110 for more pertinent languages.",
        "The fact that we had to use Racket was a blessing and a curse. It forced me to pay more attention and to learn more, but there were some times where I only had frustration for the language.",
        "Take this class with Sara, she's a great professor and really cares about her students and wants them to do well. If you pay attention in lecture and go to office hours you'll do great.",
        "So obviously Sara is the best teacher for intro CS classes. She goes over personally and writes code and adjusts to the learning pace of the students. Though she goes fast sometimes, paying attention to what she is saying throughout is really helpful and you can learn a lot from it. But towards the end of the quarter you will find yourself falling asleep a lot.",
        "I had never coded before this class, but with computers becoming more and more relevant I thought I'd take an introductory class and see what the hype was all about. After taking this class,  wish I had started coding years ago! Looking back, we learned so much in this course, but Sarah taught it so clearly that I feel like we could have covered even more and it wouldn't have been a problem. This is honestly the first class that left me wanting more and not wanting to move on and never look back. CS111 was easily the best course I've take at NU and Sarah was easily the best instructor. I highly recommend this class, especially with professor Sood.",
        "CS 111 is a great course for anyone at Northwestern. It introduces you to a very valuable skill that you may find to be very interesting. Taking this course for no requirement has made me want to take more classes in computer science. Sara is amazing, truly the best.",
        "The exams are exactly like the practice exams so there are no surprises. Sara is one of the best professors in McCormick, she is the nicest and most caring professor ever. She'll make you want to be a CS major",
        "It was fine, got the job done, not terribly difficult",
        "Mastering recursion becomes so easy once you take this course.",
        "A pretty fun course after four quarters of Matrix Laboratory haha. Definitely solidifies the basics of programming useful for future programming skills. Recommended for both CS and non\u2013CS majors! Sarah's so engaging!",
        "Interesting class, not that difficult. Sara is great professor. Going to class not super important as long as you understand the assignments.",
        "This is a great course. If you are interested in programming at all, I highly recommend taking this course \u2013 especially with Sara. DrRacket as a language is kind of annoying, but it is very good at teaching you the basics of programming. Assignments are often fun, and tutorials are useful in helping you learn the material. I generally looked forward to lectures and to doing the assignments. They were almost like puzzles. Also, Sara is amazing.",
        "Sarah is very nice. Definitely take this class with her.",
        "this course has a lot of good material and is pretty easy but you won't really understand much.",
        "Defining variables, classes (structs), and recursion are the main topics. I thought it was pretty interesting. Make sure to do your best to do the hw yourself or the midterms will be really confusing!",
        "I had to put extra work into understanding the concepts because I had no previous experience in coding, but office hours always helped",
        "Sara is amazing. I'm just terrible at Comp Sci.",
        "This course was beneficial in learning the fundamentals of coding, but only in a very abstract sense, as Drracket is not a useful language.",
        "This was a good course. Sara is the best person ever and the work is difficult, but rewarding when finished.",
        "Was generally easy. You can not pay attention in lecture and still be able to do all the homework and tests. Sara Sood was incredibly nice.",
        "I really liked this class, Sara is great, but the content is definitely a bit difficult.",
        "Sara was a great professor, extremely helpful, open and engaging, as were many of the peer mentors. The assignments are a lot harder than the exams and can be time consuming but going to peer mentor hours is very beneficial. As someone who came in with no programming experience, this course was definitely doable and surprisingly enjoyable to an extent.",
        "It was a helpful introductory class to computer science.",
        "To be honest, I had no idea what was going on at any point. I tried paying attention, but it felt like the class was geared towards those who already had some coding knowledge. The exercises were pretty hard, I had to do them with friends every time.",
        "This was an easy and fun class. Sara is a really enthusiastic lecturer and it was enjoyable to come in and learn new things.",
        "This was a difficult class for me. I got behind early, and didn't have any prior experience with coding. However, I still managed to get an A. The peer mentors were very helpful with the assignments, which were relatively difficult. Sara very obviously cared about her students; she was the first of my professors to cancel anything due to COVID\u201319. She was very kind and made sure that she was going at a good pace by having us close our eyes and raise our hands to indicate whether or not she was going too fast/too slow/just right.",
        "This is a decent intro course for those with no programming experience but not very helpful for those who have any programming experience.",
        "Easy assignments, easy exams.",
        "This was a good course. It was challenging but not overbearing and we covered a lot of material. Racket can seem frustrating at first, but it grows on you, and you find it's actually an elegant language.",
        "Professor Sood is a great professor that really cares about her students. Going to office hours is really worth it for this class as there are weekly assignments that they can help you to complete and understand fully.",
        "Professor Sood is really good at lecturing since she's very clear, willing to explain hard concepts again, and has an energetic presence. There's plenty of peer mentor hours and office hours to get help on assignments. The exercises make you think without feeling impossible.",
        "The classs takes a lot of time and effort, but once you figure out the logic it is pretty easy to get the right answer on the works.",
        "It is difficult to hold a computer science class that is geared to both students with and without coding experience. In Comp Sci 111, if you have coding experience, it will be very easy. While racket can be annoying at times, it is fairly easy to catch onto if you understand the underlying concepts already. In fact, you may find the lectures somewhat slow. However, for students who do not, this class may require slightly more work. But the professor and TAs did a good job of making themselves accessible and helping answer questions. Grading is also not too difficult because the class is 50% assignments. All in all, I would recommend this class to anyone.",
        "The course is nothing really special. The programming language, Racket, is not an important language that you will end up using in your career, however, the course does a good job in teaching you how to think like a programmer if you do not already know how to. Sara is a good instructor and walks through all the processes that are important in a slow way that helps everyone understand what they should know. If you are already familiar with programming in any way, this course will probably not benefit you. All work in the course including the exams are pretty easy.",
        "I enjoyed this course. Sara is a very good instructor who clearly cares about her students and there are plenty of resources that you can use to get help on homework or exam questions.",
        "Sara is very engaging with the students and truly teaches the material very well. The class was very manageable and some of the projects were fun",
        "Great class for an introduction to the programming aorld",
        "If you're a neuroscience major taking this class for your requirement and have absolutely no intention of taking any other computer science classes don't take this course.  I was really excited because a lot of people I know have taken it and really enjoyed it, but I was busy doing other classwork and never properly tried in this class.  Besides, 110 is better since python is way more applicable than racket.",
        "The instruction was great but the content was not as great.",
        "The class really teaches you a lot about DrRacket. It was my first time learning about compsci, and I feel like it was a really interesting and informative session to first be introduced to the subject. Just know before going in that the class is on DrRacket, which is a language not most people tend to learn. Take CompSci 110 if you want to learn about Python. Sara is an amazing instructor, really engaged in the subject and the lectures, and cares a lot about her students. There's so many sources that you can use to get help in the course, both from the TAs and Sara herself. The tutorial sessions help you a lot, but make sure to look over the lecture notes beforehand if you didn't go to class because you'll be lost. If you're planning on skipping class or not going at all, make sure to look over the lecture notes, and actually do the assignments because it'll help you understand things. That being said, just go to class and listen in sometimes because that'll be more useful. Plus, they're really interesting because Sara is a great instructor and public speaker.",
        "This class is great. If you've spent time programming before, you'll be absolutely fine. If not, there are endless ways for you to get support. There is plenty of time to get assignments done, and the topics for the exams are clearly explained. Everything about this class is clear and well\u2013defined, and Sara does a great job making sure students make it through the course in one piece. While Racket isn't the most useful language, the fundamentals behind it are important, and Sara makes the assignments interesting.",
        "AMAZING CLASS. Sara is so committed to creating a learning environment for new programmers and seasoned programmers alike. I had never had any interest in computer science and this class completely changed my perspective. The course relies on coding assignments every week, padded by weekly tutorial (discussion) sections. If you are a new programmer I highly recommend taking a green tutorial (beginners only). This class is taught by people who want you to succeed, people who're committed to keeping you interested, and people who genuinely love what they do. Don't miss out.",
        "This class can get really hard if you don't intentionally dedicate time to it. Definitely go to office hours, and do the work, and it will be fine.",
        "This class is easy with Sara. Just make sure to go to office hours and ask questions whenever you're stuck so you won't fall behind",
        "I don't feel like I am terrible at programming, but I really did not understand this class.",
        "This course is one of the best courses you can take Freshman year at Northwestern. It provides a brilliant foundation for CS and Sara is the best professor I've had yet. She makes it possible to learn in a 400 person lecture hall, which is quite a feat. If you take this class\u2013 take it with Sara.",
        "Very well organized and taught class. Lectures could be pretty dull but they were clear and organized and helped a lot with homework. Homework is pretty hard so I had to utilize a lot of out of class help from peer mentors but they make sure there are plenty of office hours at all times so it wasn't a problem.",
        "The course used a functional language as an introductory language, which I thought was absolutely insane. It was sure difficult at times because of that. If you have previous programming experience it might be a hindrance.",
        "It helped Racket and I was not familiar with it before.",
        "She is a good lecturer",
        "With any semblance of computer science background, this class should be a breeze (despite Racket being a ridiculous programming language). Professor is good though if you pay attention at all.",
        "Sara is a phenomenal professor. I really enjoyed this class because of her teaching. It is very doable if you go to office hours, particularly Sara's, and get help on things you don't understand.",
        "Take it with Sara! She's a fantastic lecturer and I think that I learned a lot from this class. I didn't go to office hours so I can't say how helpful they are but they have them all the time. Tutorials with peer mentors are also pretty helpful. Overall, I learned a lot. It was a good class.",
        "READ LECTURE NOTES BEFORE CLASSSara is my favorite teacher at this school",
        "Racket is weird, Sara is great",
        "As someone who had never taken a computer science course before/had no experience with coding, I think this class was very manageable. I found the weekly assignments to be challenging but not so challenging that they were a pain. Going to office hours is incredibly helpful!! Also, Sara was such an approachable professor and she was so willing to help. I definitely think that I would not have been as successful in this class if I had taken it with another professor. If you have no prior coding experience don't be afraid to take this course with Sara, she is so willing to help and doesn't make you feel bad about asking questions in class or at office hours.",
        "Sarah is a fantastic lecturer who constantly checks in with students to ensure we're following. Assignments in this class are tough and require a good amount of time to complete, however the peer office hours are extremely beneficial. This class is challenging but rewarding. Definitely piqued my interest in CS as a non\u2013major.",
        "Got a good idea of what coding on racket is like",
        "Sara's lectures were great and I ended up learning a lot",
        "Sara is the best professor I've had at this entire school.",
        "Overall, this is a great class. Sara is a wonderful teacher and you will learn a lot. However, exams are difficult because I personally found it hard to take a comp sci exam on paper. In real life, you can use trial and error, but not on the exam. That being said, if you do your work 1/2 of your grade will be a 100. The tutorials were kind of annoying, and assignments were helpful but very time consuming. I was in mentor hours a lot toward the end of the course. Definitely don't leave work until the last minute, and you'll enjoy this class. I'm taking CS 295 because I want to learn more CS with Sara!",
        "The instruction was very good and access to resources was plentiful.",
        "If you are considering to take 111, take it with Sara! The lectures are super easy to follow and you can do well on the exams as long as you understands the lecture contents.",
        "The course was taught well and structured well, but could be boring for people who already knew the topics",
        "Sarah is an excellent lecturer. She's always clear, and she always gauges the classroom to make sure she's going at a good pace for everyone. The language learned was a strange one, but not a bad first language. I learned a lot, and the exercises were reasonable in terms of difficulty, and they definitely helped me better understand the lectures.",
        "Sarah is really great at making sure everyone understands her in such a big lecture. She routinely asks people, with eyes closed, to vote on how confident they feel on what she is currently presenting, and she will adjust her teaching speed and clarity based on that. She will also often ask people to ask her questions.",
        "This class is extremely insightful and I would highly recommend that anyone interested in computer science or questioning whether or not you want to study it further take this class as soon as possible. Racket may seem to be a little unintuitive at first, I thought the exact same thing and I have been around coding since grade school, but you quickly learn what the language is supposed to look like. The great thing about this class is that literally anyone can take it and I guarantee that they will walk with more knowledge and confidence when it comes to coding. The exercises are relatively straightforward and don't take too long, the tutorials are helpful, but depending on your TA's, you may need to be more vocal about your questions, and I would highly highly recommend that you take this class with Sara as she is so good at explaining every topic and makes this class truly feel like an introduction insuring that no one gets left behind.",
        "Sarah is a great instructor, definitely take this class with her (and any other class that Sarah teaches). She is super understanding and a great lecturer. If you're already proficient in programming, you'll probably find this class easy.",
        "The instruction was excellent, the entire team was very caring about students and wanted them to succeed. There was always a clear effort to make the assignments as engaging and fun as possible. Tutorials could have been stronger, or perhaps simply changed to make them more conducive to discussion.",
        "If you are into technology and coding, I'm sure this class will work for you. However, given that this is an intro class, I do think it is quite challenging. The majority of my free time throughout the week was spend in peer mentor hours to get help on the exercises. there were not enough peer mentors, and even less qualified and helpful peer mentors, for all the students who needed help. the professor was extremely flexible during the whole corona shut\u2013down thing and it really helped. as tough as it was, it was super interesting and i don't regret it even though my final grade isn't good.",
        "Very good for an introductory course. Sood strikes a good balance between teaching to new programmers and teaching more experienced students. Lectures and assignments are very clear and everybody involved in teaching the course is very reasonable. This was my only class that had a proper response to COVID\u201319. Racket is very annoying at first, but it's pretty easy once you get used to putting parentheses around everything.",
        "This class moves fast so be prepared. Sara is great and does a really good job of explaining things, but I was not ready for how quickly we would move through topics. Go to office hours if you are having trouble on the assignments. Also, the midterms are far easier than the assignments so do not worry. You don't have to write any actual code on them, just work with existing code. It is very possible to get an A if you just put in the work.",
        "This class is amazing if you take it with Sara! She genuinely cares about students in her class doing well and being able to understand and complete the assignments. Her explanations of lecture topics are very clear, and the workload is super manageable. Highly recommend!",
        "Great introduction to computer programming. Racket isn't the easiest to use but is a great tool that requires you to understand the logic behind the code (and provides even playing field for everyone). Prof. Sood is enthusiastic and very effective in teaching material, TAs are also pretty helpful. Engaging and challenging.",
        "SARA SOOD IS AMAZING! This class made me really interested in computer science, so much so I might pursue it as a major! Not hard at all, esp. if you have literally even the smallest amount of coding background",
        "Professor Sara teaches this class very well. If you have had no experience in computer science and have no intention of majoring or minoring in it, take Comp Sci 110 instead. Comp Sci 111 is taught in Racket, a language that is not commonly used to even the playing field. I spent hours in office hours a week to do the homework and asked friends for help as well so I could do well on the exercises. The course is not easiest for those who have not had coding experience. You have to study for the exams but if you are very good a coding, this class should not be difficult.",
        "Sarah is an amazing lecturer. Too bad I was absolutely bored of the language by the 3rd week of the course. The language is so unintuitive and useles. They say the reason they are teaching us such a primitive language is because most languages like C++ and python will be replaced in the future, what they fail to realise is that something like python will help me with my other courses. Whatever happened to interdisciplinary learning.",
        "I think this course is a very good introductory course for comp sci. Sara is already known for being a great professor and her class reflects that. Make sure you take advantage of all the resources so you feel confident about the material. As long as you stay on top of it, you should do well in the class.",
        "I feel the course is solid and Sara is arguably the best lecturer I have ever seen. She is helpful and responsible.",
        "Sarah Sood is the GOAT(greatest of all time). She is a God.",
        "If you want an easy A with no work this is not the class. It is not hard to get an A but you definitely need to put in work and the HW becomes so long and takes hours and hours to complete towards the end of the course. Sara is a great teacher and there are a bunch of office hours but don't assume that this class is easy.",
        "I really enjoyed that the professor cared about her students. Though the class could have been taught a little bit slower, I think the professor is great when it comes to clarifications or any repeating of material!",
        "Good class",
        "This class is amazing, take it if you see even the slightest possibility that you might be interested in something remotely CS related. Sara is a great professor to take it with, throughout the quarter she made sure we weren't lost (despite the big class), and she handled the coronavirus situation at the end of the quarter in such a thoughtful manner.",
        "Pretty chill class, assignments aren't too hard. Course materials provide everything you need. Sara is great! Love that girl",
        "This is a great class and I recommend taking CS 111 with Sara Sood if you can! She is an amazing lecturer and makes the concepts simple to understand. She also provides lots of examples of code and presents students with many opportunities for learning, so if you are interested in computer science and coding, I would take this intro class with her!",
        "very good instruction, Sara is amazing",
        "Only went to class once. Tutorials seemed unnecessary but gave me time to do my work.",
        "I really liked this class! Before I took it, I heard a lot of people (especially people with prior programming experience) complaining about it being taught in Racket, but it really wasn't that bad. Sara Sood was a great instructor, and the peer mentors were really good! The head PM Daniel Birnbaum was particularly fantastic at explaining concepts. The format of the exams is a little weird, but there were review sessions led by Daniel that made them a lot easier.",
        "Sara is a great lecturer and makes the class very fun! This class isn't very hard either.",
        "this class is a super good introduction. Racket however is not ideal. Class lectures and homework were very aligned so that it really helps solidify learned concepts.",
        "Not a difficult class at all. Paced very well. Exams and exercises are not that difficult.",
        "Please take this with Sara! There is no other professor who has as much empathy and genuine care for her students. She makes class very inviting for those of us who have never coded before. You do need to put in work on a daily basis to get an A if you've never coded before, but make use of her office hours and the plethora of peer mentors.",
        "This was a very engaging and informative class. Racket is a bit of a rough language but I understand its use as a tool for teaching the concepts we went over in this course. Sara was very good at answering questions from the class instead of going off on a tangent and not really getting to the question like a lot of teachers do. The workload was very manageable and everything seemed pretty easy to follow. The only real complaint I have is the tutorials did not seem very effective at all. The assignments were okay, but almost no one ever asked any questions or really justified an extra meeting.",
        "It teaches you how to code",
        "111 is no joke but i haven't learned this much in ten weeks in forever. Don't fall behind and go to a lot of office hours. Sara is amazing but a 300\u2013person lecture can only go so far in explaining tough concepts. study for the exams in groups, ahead of time, and don't worry because the assignments stay about a week behind the lectures. The serotonin rush of learning how to code a game is amazing but may take a zillion hours to attain.",
        "The class was a great introduction to computer science. If you've taken CS before, the class should be pretty easy, but Sara does a great job of explaining the concepts behind the code, which makes the class understandable for everyone.",
        "This course is a bit difficult if you, like me, are new to coding. Sara is a great professor but often went a little too fast for me. She stops for questions when she goes to fast but if you aren't sure what to ask, which nearly always happened, she'd just continue on the same as before. If you are new to coding and struggling, GO TO OFFICE AND PEER MENTOR HOURS, especially with help on assignments\u2013\u2013 it will save you in this class!",
        "As someone already familiar with computer programming from high school, I really appreciated the new ways of thinking required by lambda calculus. Though, I do think racket has some naming conventions.",
        "This class with Sara is okay for those with no coding experience, but if you\u2019ve never coded expect to spend a lot of time in office hours. Weekly assignments a midterm and a final exam",
        "Really good for learning the fundamentals. Highly recommend if you're interested in pursuing comp\u2013sci.",
        "The course is well designed overall. Assignments are challenging and exams have no big surprises. Weekly tutorials are slightly inefficient in my opinion.",
        "Very doable course. I did not have much coding experience before taking this class, and did not find it as difficult as much as I thought I would.",
        "This class is not too difficult. If you've coded before it won't be that hard but the formatting of code is very frustrating. Overall pretty good class, would recommend taking with Sarah Sood/Owsley",
        "Even though I had already programmed before, the course taught me techniques that helped improve my code a lot.",
        "The class was difficult because Racket is a hard language to learn. However, Sarah is a fantastic teacher and makes the material understandable if you pay attention in class.",
        "I think this class is a great beginner class. If you have some experience, then this is a pretty easy class. If you do the homework and study a little then you can get an A for sure.",
        "Good intro programming class and Sarah is a great professor who teaches the material really well.",
        "Good class. Homework can be fun in this class because it's like a puzzle.",
        "Grading was extremely fair, class time was used really effectively, and it held the students' interest throughout.",
        "This class was amazing. The lecture was taught extremely well to help us understand the concepts and then the assignments each week allowed me to make sure I understood the concepts and how to use them. The exams were fair and tested the understanding of how the programming works, which was much different than the weekly assignments."
    ]
}{
    "course_code": "Student Report for EECS_111-0_20",
    "course_name": "Fund Comp Prog",
    "instructor": "Sara Owsley",
    "year": "2019",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.80",
        "count": "230"
    },
    "course_rating": {
        "mean": "5.25",
        "count": "231"
    },
    "comments": [
        "I thought the tutorials were a waste of time, and for the most part did not help me directly with the exercises. The first midterm wasn't too hard,  for the most part it followed the practice midterm. The second midterm was awful. It was nothing like what the practice was, it was confusing, not easy to follow, and I do not think we were prepared in the right areas to be able to do well on that test.",
        "This course is great in teaching the basics of programming. Sara is a great teacher and all of the peer mentors are very helpful and helped me complete weekly assignments. The exams were slightly difficult, but I think if you make it a point to keep up with lectures and concepts you will be fine. Im glad I took this class.",
        "While listening to the lectures can be boring at times, Sara does a great job at teaching programming to beginners and makes it interesting.",
        "I wish we used a more common language than Racket.",
        "Sara is an amazing instructor, super helpful and easy to listen to. The course material was a breeze for me, but I still found the class very interesting and enjoyable. Highly recommend",
        "The class is pretty easy if you can think logically. The slides are very helpful and enough to provide you with the knowledge needed to do the homework.",
        "Take this class with Sara! She is the best and wants you to succeed! If you have a little bit of programming experience then this class shouldn\u2019t be too hard. Racket is a little weird but you\u2019ll get through it.",
        "Sara is an incredible professor, too bad I'm not continuing computer science after this quarter. Would have liked to take more courses with her. Homework assignments are very time consuming and I feel like the lectures did not prepare us that good to complete them. Nice class overall, not a super easy A (time\u2013consuming)",
        "Sara Sood is a compassionate and caring person and this reflects across how she structures EECS 111. Exams and assignments are fair, and there is plenty of support available if you are struggling. Additionally, she makes herself as accessible as possible in office hours and accommodates to her students whenever possible. Truly a class act.",
        "Take it with Sara! She's great and so understanding. One of the best professors I've had here. Just do the assignments/go to OH to make sure you did them right, and the exams should be easy.",
        "My every waking moment was spent in Peer Mentor Hours this quarter. So, just for the record this is a hard class, it will take up all of your time, but it is rewarding and you will learn a lot about critical thinking in the form of computer programming skills. Sara Sood is one of the most amazing professors I've had at NU. She explains things clearly and frequently gauges how fast she's going and readily adjusts. She is engaging and thorough. She is also personable, for a class of roughly 400 she still knew my name individually. That being said, I hate the Racket language with a passion (I came from already knowing some Python basics which is a VERY different language) and you will never use this language again but it does its job in teaching you the fundamentals of how computer languages work in excruciating detail. I often felt I was getting too much help but it seems that I was not alone and collaboration is a keystone in CS. I loved this class, really I did, and was challenged intellectually but because I had such a difficult time \u2013 pushing the rigor beyond what should be normally asked of an intro or one\u2013off class \u2013 I'm not sure I will be able to continue forward in the EECS department.",
        "This course was really good overall. Sara is a great lecturer, though some of the assignments are a little tricky (and require a bit of time outside of class)",
        "This course is very easy, and has a good structure to instill basic principles of programming and how they work, but goes a little slowly and doesn't maintain interest very much.",
        "Sarah is such a great teacher of the class. The information is not too hard to follow, but you need to make sure to do the work on your own and understand the concepts to not be underprepared for the tests.",
        "This class was pretty fun, the assignments are manageable, though can get frustrating at times. Sara is great and frequently checks whether we are following and is always welcoming of questions.",
        "Sara is literally so amazing, I wanted to do well for her. It was pretty challenging, it's a lot of work and frustration if you're not great with this kind of stuff, but overall I'm glad I got through it and would recommend everyone take a course like this just to keep up with where the world is going.",
        "It was a lot of fun! I think it was interesting and I feel pretty confident in my programming as a result.",
        "If you are going to take this course, definitely take it with Sara \u2013 she is an amazing professor and is always willing to help. However, this class is difficult and requires a lot of time and effort in order to complete the assignments (I had to go to peer mentor hours every week in order to complete the homework). The class is not curved, but Sara does provide extensive resources to help you study and engage with the material.",
        "Sara is an amazing teacher! She was very focused on making this class accessible for everyone, regardless of major/background experience, which I really appreciate. She also was fantastic at making more difficult concepts easy to understand, and used many different methods of explanation to clear them up.",
        "This course is not too much work and if you have compsci experience it is pretty easy",
        "I learned a lot about the fundamentals of computer science.",
        "Take the class with Sara!! She is the best. Even though I did not have any previous experience with coding, she simplified everything while explaining the topics. The exams were pretty easy compared to the exercises.",
        "Sara is definitely a good instructor!",
        "If you have prior coding experience, this class will be a breeze. Most of the coding concepts covered are the essential ones that would be covered in other languages too. Racket syntax was the annoying part of the course. Sara does a really good job adjusting her pace to make sure as few people get left behind as possible, but the pace will feel slow to those who have coded before.",
        "Sara is a great professor and lecturer. In addition, the assignments are very helpful in understanding the content. The midterm is relatively easy, however the final is difficult and the principles tested need to be truly understood to do well.",
        "I liked CS a lot more than I expected to and Sara is a great professor. I highly recommend taking the course with her.  Not too much work besides the weekly programs, which don't take too long.",
        "This course helped me understand programming as a discipline and gave a very quick introduction to concepts within programming. It was also interesting to note how imperative and functional programming are two different things",
        "The material is engaging and fun to work with if you spend the time on it.",
        "Professor Sood is a great professor, she explains topics very patiently and goes into more depth when asked. The assignments, however, depending on your past computer science experience can get really difficult. Also, there is a required tutorial session outside of class that you must attend. There is basically a tutorial and an exercise due every week which can get to be a lot of work. Assignments every week until the very end of the quarter so no breaks.",
        "This is definitely a class for people who have never coded before, but that doesn't mean it's not challenging. The assignments range from easy to hard but if you take advantage of peer mentor hours, it won't seem too too bad.. it's kind of a time commitment with the 1\u2013hour tutorial session once a week and then (if you're a beginner/don't pick up on everything right away) likely having to go to office hours for the weekly assignments, but in the end not too bad. Would highly recommend taking this with Sara ! Her energy makes the course more enjoyable and she usually makes confusing concepts easy to understand.",
        "Sara is good. Take the class with her",
        "Sara Sood is an incredible instructor, and I learned so much from this class. I had never programmed before this class, but she made me feel very comfortable and excited about computer science. If you have the class to take 111 with her, you absolutely should!",
        "This course was really great. Computer science can seem very difficult to understand at times, but Sara made it easier and fun to learn. She was very open to feedback from the students and would adjust her lessons as such. The tutorials and assignments can seem tedious at times, but it makes everything so much easier to understand.",
        "Sarah is absolutely brilliant, and if you take this class with anyone else you're doing yourself a disservice. She is the most thorough, thoughtful teacher I could've hoped for. I think I could learn any EECS if she was teaching it.",
        "This course was very helpful in deciding the majors I wanted to choose from. Even though racket was sometimes confusing, as someone who doesn't know Java or C++ or Python, it was relatively easy to grasp.",
        "Sara was really great about adjusting her lectures so that everyone could follow. The peer mentors were also very helpful and able to answer all questions. I would always recommend going to Sara's office hours to talk about majors or minors, she was very helpful with that. The class as a whole was not too hard and I found it pretty fun. I know a lot of people have issues with the fact that this class is taught in Racket, but as someone who has never programmed before, I didn't mind it. It felt like a good introduction to computer programming.",
        "I thought this class would be easier than it really is. I went in with no experience coding but thought I'd be able to easily grasp the concepts. I was wrong. But as long as you go to office/peer mentor hours when you're confused and take time (be patient) to do the assignments, you should have no problem. I still liked this class and learned a lot.",
        "Good course, great instruction.",
        "The weekly assignment in this course is reasonably hard and long, but Sara gives many hints about it in class so definitely doable. Just completing the assignment helps understanding racket so you might not really have to prepare for the midterms much. She uploads lecture notes, and the way material is presented is very clear and interesting.",
        "I really enjoyed this class; I had no previous coding experience, but Sara was great at helping students of all levels understand the content. There were also office hours all week long, making it  extremely easy to access help with assignments or difficult concepts.",
        "I had to seek a lot of outside help for this class. Racket is so hard to work with, even if you already have coding experience. Sara does not prepare you well for the tests besides giving you practice tests.",
        "I really enjoyed this class. Sara is the professor to take it with and she definitely made this class great. You need to take the time to do the exercises to actually learn the material, but the learning process is rewarding. The midterm was very reasonable, but I found the final exam to be extremely difficult and not like the practice exam. Just take more time to study for the final and you'll be fine.",
        "Sara kept the lecture interesting and the assignments were challenging, but nothing too crazy",
        "Sara is a really good lecturer, although if you have programmed before even in other languages, the class is simple and you don't really need to go to lecture. The discussion sections are mandatory but completely useless, I learned absolutely nothing in them.",
        "This class is a great class if you take it with Sara. The homework programs are not hard to complete even if you don't have any coding experience. There are peer mentor office hours all the time if you need help and Sara posts the lecture slides on canvas which really helps complete the assignments. I really learned a lot in this class and made me excited to pursue a CS major.",
        "If you took AP Computer Science or have equivalent experience, you will find this course easy.  That being said, this course provided me a solid foundation of recursion and programming through Scheme.  I think that whether one is a novice or expert in programming, they can learn something from this course.",
        "Sara is awesome for sure. I really enjoyed the course. I am not majoring in computer science and have never coded before, so I was really worried about it being too hard. The good news is that no one has programmed before in Racket, so everyone is on the same page. The class is really doable, it just sucks because in order to complete the assignments you HAVE to go to mentor hours. Just be open to asking for help and going to mentor hours, and you'll be fine. I had never coded before, and I loved the class and will continue to take more eecs classes. Also, Sara is an amazing lecturer. Take with her FOR SURE.",
        "Sara was a great professor and made difficult concepts understandable. Tutorials and homework are structured well for the class. It takes a lot of work outside of class but try to come to every class because it\u2019s easy to fall behind",
        "Pretty straightforward, well\u2013taught, chill course.",
        "Great intro to EECS: definitely take it with Professor Sood! She makes everything clear and easy and xtra fun.",
        "As someone who has significant programming experience, the course wasn't very challenging(besides one or two assignments) but I often found Racket(the language the course is taught in) to have annoying conventions.",
        "If you can take this class with Sara Sood do it!!! She's so so amazing. Like every class, she asks for people to raise their had on the pace shes going at to make sure that she isn't going too fast. She is a really great teacher. The class is taught in racket with is gross but its ok. I learned a lot from the course and it was really interesting",
        "I've never really had experience in programming, but I was excited for this course. Sara is very clear from the beginning that this course is for both people who have 0 experience and people who may have had a bit of experience. She also does this thing where she makes us close our eyes and asks us if shes's going too fast, too slow, or just right, and she uses that as direction for her class. There is homework due every week, which get harder :( There is a midterm which some will say was hard and others will was easy; the average was an 89 this year. It was pretty easy, and there are practice tests from other years. There is also a final with another practice test. There is a lot of help available through tutorials (like a discussion section, but more hands\u2013on that you pick in the first or second week of class) and peer mentor hours. Good course.",
        "This class was a clear and good introduction into coding. There are people from all backgrounds, so don't feel as if you'll struggle if you have not coded. This class is not hard if you put in the time. Go to mentor hours for the assignments and generally follow along in class. Sara is extremely nice, helpful, and interested in the field. She would stop us numerous times to ensure she wasn't going to fast and was generally just an amazing professor. This is a great class to take, just be ready for weekly coding assignments (some of which are shorter than others).",
        "This class was amazing. Sara does a great job teaching this course and is one of the best professors I've had at Northwestern so far. You should take this class.",
        "Fun course. If you've never coded before you actually can do it. TA's are super helpful.",
        "Sara is such an amazing teacher. She really cares about her students and she is always there to help understand concepts if you didn\u2019t during class. Her lectures are super clear and helpful, so I really recommend going to them and paying attention even though there is no attendance. Grades are good as long as you complete all assignments but if you go to peer mentor hours it\u2019s super easy to get 100%. Also, tests aren\u2019t hard as you don\u2019t have to actually code for them.",
        "The course that made me stop doing coding. Sara is nice and knows her stuff, but the class is just structered horribly without much progression. The assignments each week does not build on the previous one and sometimes the TA can't even figure out what's happening.",
        "sarah sood is the best person to take this with. great lecture style. racket can be stupid, but it's a good intro class",
        "Although the course is open to people who have never coded before it is really challenging to keep up with others who have coded before. Even though everyone is learning a new language, for people who haven't coded it's about learning a language as well as the concepts, while people who have coded just need to learn the language and are set. Aside from that, it is a pretty challenging course, but not hard to do well in. Exams are worth half your grade and the other half is assignments and tutorials, so you just need to go to all tutorials and get 100s on all the assignments to do well. DEFINITELY GO TO PEER MENTOR HOURS\u2013\u2013don't ask your friends for help with assignments because it gets annoying and the peer mentors are literally there 10am\u20138pm getting paid $20/hour to help you\u2013\u2013it's their job. Recommend setting aside at least 4 hours if you want to get things done at peer mentor hours because it takes a while to get to everyone's questions. Also, try to come in with part of it done or at least read through the assignment.",
        "Definitely take this class with Sara if you can. She really cares about her students and makes each and every class entertaining and enjoyable to go to. If you you have no coding experience you don't have to worry about being a step behind the class as Sara structures the course to start out and gradually work its way up in difficulty. If you have a lot of coding experience don't worry about being too bored in the class, Sara allows you to tinker with your own code during lecture and the concepts are almost always engaging enough to keep people of any skill level engaged.",
        "The course shouldn't be challenging if you have experience in programming. Some of the assignments were difficult though.",
        "Take this course during Winter Quarter. Even though CS may seem daunting, there's so many resources that are available (peer mentors, office hours, online documentation). Sara is a really good lecturer and always tries to make sure no one is left behind.",
        "Good class. Sara is a terrific instructor and very helpful. Would recommend taking her if you need 111. The TA hours all the time make it very manageable to do the assignments.",
        "Taking 111 with Sara was great, despite Racket being a somewhat frustrating language. However, it really is meant to be an introductory course; don't be daunted by it",
        "It was a great course. Sara Sood is a fantastic professor.",
        "I thought it was a very well taught intro computer programming course",
        "I dislike Dr. Racket, and while I think the class is not a terrible introduction to computer science course, I feel that the same could still be accomplished with another language that is far more useful.",
        "I cannot give Sara high enough praise for this course. Logistically, it wasn't super strenuous\u2013\u2013I spent between one and six hours on each of the weekly homework assignments and didn't have to do much else. The exams are easy if you know what's going on and impossible if you don't. However, the class worked toward building computational thinking, learning how to think recursively, work with data types, and troubleshooting with error messages. Sara is a phenomenal professor who genuinely cares about her students and is excited about the content; she encourages you to call her by her first name and come to office hours to discuss life, creates a very comfortable learning environment, and uses the best examples in class. Even if you aren't a CS major, I recommend this course if you're remotely interesting in having some familiarity with programming.",
        "TAKE THIS CLASS WITH SARA. She was honestly the sweetest professor and was so committed to helping students succeed. The class was very engaging, and lectures are worth attending! The test formats are very manageable and the assignments are fair. Plenty of resources are available to you if you are struggling!",
        "Sara is an amazing professor! It's a tough course, you will have to spend time on this course, but Sara is so kind and really wants to help her students.",
        "Do this class with Sara. She is LEGEND.",
        "If you have experience, this class is very easy with Sarah. Still somewhat useful getting experience with function oriented programming and objects",
        "It made me a lot more comfortable with coding.",
        "A good way to start learning CS, although I had some issues with Racket.",
        "lectures were helpful, but I learned the most in tutorials. Sara is awesome. office hours are a must. assignments can be challenging. great class overall. take it!",
        "Take this course with Sara!! She made the lectures engaging and definitely worth your time to attend. She was also very conscious of the speed of the course and made sure that every concept introduced would be understood regardless of previous programming experience. This was a great class for someone like me who had no experience but wanted to learn! Some assignments near the end are a little more time consuming but peer mentor hours are very helpful in completing them!",
        "Take this course with Sara! She's great and it's really not that scary",
        "WIth no prior coding experience, this course was certainly challenging but also completely manageable and very rewarding. The assignments can get tricky, but there is ample assistance with tutorials and peer mentor hours. Sara is amazing!",
        "It was good",
        "Pretty easy course. Like easy enough that you don't need to go to class. Ever. And, you can still quite literally ace this course (or get pretty damn close). I didn't go to class so I can't provide much feedback on the instruction. But, if you have any sort of programming experience coming into the class, it'll be a cakewalk.",
        "This class is not for the busy student, it can very quickly become time consuming, because assignments get kind of tricky. But if you have the time and the interest, it is SO rewarding, and I highly recommend. The tests are not hard or scary by any means and the peer mentors are super helpful when it comes to assignments. Beware, though, there are \"tutorials\" which is basically discussion section/lab, where it is hands\u2013on learning instead of lecture. They don't tell you about it, though, until the class actually starts, so there is that extra time element. But you do most of the learning in tutorial, so don't let that scare you off. I genuinely encourage anyone who is interested to take this course. I'm so happy that I did and I'm literally a psych major. Absolutely zero need for me to take this, but I still loved it.",
        "really good teaching, sara is great and super understanding. best programming instruction i have ever had. peer mentors were super helpful",
        "class will be a breeze if you have coded before",
        "This class is fairly easy if you've ever programmed before. Weekly assignments and two midterms. Sara is an amazing instructor, and I think everyone felt supported through the class. However, BE AWARE THAT YOU HAVE TO SIGN UP FOR A WEEKLY PEER MENTOR TUTORIAL. These tutorials will likely be a huge waste of your time, and in my case were at an extremely inconvenient time (and you won't know you have to take one until you sign up during the first week of classes). Basically, its mandatory office hours once per week, and not knowing that would happen ahead of time is frustrating.",
        "Overall, it's a pretty good class. You learn to code in Racket, so the concepts are good but the computer language isn't too commonly used outside of Northwestern. GO TO MENTOR OFFICE HOURS. They are some of the best and most helpful people I've ever met!!!",
        "good class, everyone should take to at least be familiar with programming",
        "Sara is a great instructor. Really enthusiastic about teaching the class and provided good slides and examples of code. She also really walks you through new code so its much easier to learn by watching her code and listening to her walk through the code itself.",
        "Sara is great. Take this class with her if possible. It's kind of counterintuitive if you have programming experience, but it's definitely manageable.",
        "Very cool, through, challenging, and a great beginners class",
        "This class was great. The only way I would have wanted to learn computer science. As someone who has dreaded taking EECS for my entire undergrad career, I was pleasantly surprised to find that I actually loved the challenge that this class presented and the way that it pushed students to really think and use their critical thinking skills. Sara is the best professor, and she lives up to her positive reputation. If you're willing to put in the time to truly understand the concepts of this course, you'll really get a lot out of it! Assignments are sometimes difficult and can require quite a bit of time, but the peer mentors and Sara herself are the best resources and they are so open to helping students. Exams are fair as well, and you're given plenty of study resources. Overall I really enjoyed this class and would recommend that all students take it just to be exposed to this way of thinking and working!",
        "Great class, very well done. Sara is amazing I can't recommend her highly enough. I would say for the most part lectures aren't super necessary to attend because she posts the notes online.",
        "Very helpful professor and peer mentors.",
        "It was well structured, a lot of help and office hours were available. Very, very well taught.",
        "Most wholesome class I've taken at NU.",
        "Take this with Sara, she is an amazing teacher.",
        "Sara is an absolutely amazing professor and the peer mentors were so helpful. She has this course worked out to the T and makes it extremely accessible to people who have never coded before.",
        "Sara is amazing, if you can take it with her absolutely do. She's super supportive if you've never taken computer science and there are so many resources and office hours to help. This class definitely takes up a lot of time if you haven't done coding before, but its doable.",
        "Sarah is one of the best professors I have ever had. She is understanding and will explain everything so well. 100% take the course with her.",
        "Sara is amazing.  She knows exactly which points in the lecture students are most focused and teaches the harder material at those times.  Peer mentors are amazing and tutorials were so helpful.  TAKE THIS COURSE WITH SARA.  Racket is not used by many companies so material learned in this course will likely not be used in the future.   That is the main negative of the course.  In spite of this, Sara teaches the material very well. Love her allbirds.",
        "This class is kind of annoying because you're learning a language that isn't really applicable to the real world, but it is good if you don't come in with any prior coding experience. Sara is also great and makes the large lecture feel personal and if you put in the work and go to peer mentor hours the weekly assignments aren't too hard.",
        "I was very anti\u2013anything in the EECs realm, but had to take this class for my major. It was not bad at all! The exams were really easy and fair. Also, the assignments are challenging but you have so many resources to help you. Also Sara is lovely.",
        "Sara is a great professor. Assignments take a longgg time, and it's easier if you sit with the peer mentors and work on them in office hours.",
        "I have never coded before. I was really worried about this class as a Weinberg student, but honestly it was not that bad at all. The grading is very generous\u2013\u2013basically just do your assignments and you'll get the points, go to tutorial, and the exams aren't too difficult (much easier than assignments). I did struggle with some of the assignments so I highly recommend going to peer mentor hours because they're incredibly helpful. This class is great because at the end you feel like you learned so much! Don't get behind though because it's difficult to catch up.",
        "This was a great course! I would say it is a good choice for a distro even if you do not plan to take any other programming classes. Sara is an amazing professor and person, and she made the class so fun and engaging. The assignments are challenging but absolutely manageable. The discussion section was very helpful for me, and the peer mentor office hours were great for help with assignments and understanding material. I had no prior knowledge of programming and am now planning to pursue it as a major. I would recommend the course!",
        "If you take this class, take it with Sara! She's amazing, and she really sparks interest in the language you work in.",
        "The course is not too difficult if you enjoy the mathematics and computer science type thinking. It is not easy necessarily to pick up the intuition it takes to code, but if you can do so, this class is not particularly difficult. Also, Sara is the best. Absolutely the best. Take the class with her.",
        "Great class, Sara is the absolute best",
        "Sara is a great professor and all TA are really helpful!",
        "Amazing course, Sara is the best!",
        "Prof. Sood was excellent at teaching the requisite coding concepts, as well as at connecting the skills we were learning to concepts that are more commonly applicable. She's very passionate about what she's teaching, and the homework assignments we got always supported what we were learning without needing too much more than what we had already fully gone over in lecture or tutorial.",
        "SARAH IS THE MOST AMAZING PROFESSOR. I had never coded before, but she explained things in a really clear way while also making sure that nobody felt weird about where they were at in terms of coding experience. Not gonna move on to 211, but happy I learned some computer programming basics.",
        "Interesting course, but you definitely need to pay attention in lectures to fully understand what is going on to do the labs and for the test. Office hours is a lifesaver and you can get most of your labs done through there, but definitely try to pay attention in lectures. Sara is super interesting",
        "Great class. The class offers something for every skill level. There are enough resources and office hours for getting help. Even if you find it easy, the course content allows you to challenge yourself by making small modifications to practice problems or lecture examples.",
        "Great class! A lot of info is just in the ppts, so lectures are just a way to solidifu",
        "TAKE THIS CLASS WITH SARA! She's great. The class is relatively easy, but since it is taught in Racket, the information isn't that useful going forward.",
        "Relatively easy, the tutorials are a good way to understand concepts you might have missed during lecture but Sara is an amazing lecturer.",
        "Do you know what recursion is? Do you know Binary Search? Have you coded in Python or Java? If you have answered yes to all three of these you can expect to get an A. Just remember to be present at tutorials and to do your work.For the rest as long as you put in the time and effort and go see TAs during office hours you can get an A as well.",
        "Sara does a fantastic job engaging students and answering questions with answers that make sense. She is very welcoming, and happily helps anyone who asks for it.",
        "Take this with Sara!!! She's so awesome and cares so much about her students \u2013 there's weekly assignments due, but they're not too bad. The one negative side to this course is the programming language \u2013 this course is taught in Racket, which you will literally never use again in your life.",
        "A truly awesome introductory course to take. I had no experience programming beforehand, so I didn't know what to expect. I found programming to be fun, engaging, and more or less easy (at least what we did in class). This class as a whole, if taken with Sara or Ian, is very easy and informative. Also if you're confused about anything just go to office hours.",
        "love sara. take this class with her!",
        "EECS\u2013111 is a class that you get what you give out of it. Professor Sood is an incredible lecturer and icon for womyn STEM majors, and she shows very clearly how much she cares that students learn and engage with the material. If you don't have a basis in computer programming this class can be challenging at times, but overall the course load and coursework is very manageable and super necessary if you want to learn how to think about programming.",
        "This is a really good class in the CS major sequence, however the language of the class, Racket, is extremely frustrating as someone who has coded in other languages before. Sara and the peer mentors are SUPER helpful during office hours as well as responding on Piazza. Definitely take this class with Sara.",
        "Sara is a really good professor who explains concepts well. Assignments can take a decent amount of time, but exams are pretty easy.",
        "Pretty average course, but the second midterm was MUCH more difficult than the first, and had I known where the course was going I probably would have thought about dropping it earlier in the quarter. Beware!",
        "This is a super fun class! Racket is a little weird at first but definitely not too difficult to pick up with or without any coding background. Sara does a great job teaching the class and making the content easy to pick up.",
        "If you have never coded before this is a good place to start. If you have it won't be that challenging. Sometimes it's hard to focus in class but the assignments are fairly understandable and if not there are plenty of opportunities to get help.",
        "I really enjoy this course, especially with Sara. It's not too difficult and the office hours provided are insanely helpful.",
        "Very interesting course. Sara is very good at introducing the subject even to those without any prior knowledge.",
        "111 is a good introduction to the computer science field, and the course is rather easy for anyone who's ever spent just a couple hours playing around with basic coding. Sara is intentional about making sure the pace isn't too fast for those with prior experience, which sometimes made lecture unhelpful for those with that background. Overall a well\u2013taught course, thought I would have liked more opportunity to explore additional concepts and make it more worthwhile.",
        "For a non CS major, just taking the course for a distro requirement, I was really pleasantly surprised by my enjoyment of the class. The assignments we do each week can be very intellectually engaging and challenging, but are really a fun break from the monotony, because it feels like I'm completing a puzzle.",
        "i'm not too interested in coding",
        "I found the course challenging but rewarding at the same time",
        "I really liked this course. Professor Sood is very good at teaching and keeping you engaged. I highly recommend taking this course with her. Go to office hours for assignments. They will make your life 10x easier. Other than that, go to class and start assignments early and you should more than fine.",
        "I learned a lot and never felt like I didn't belong in the class despite having no prior experience with computer programming. Sara is a good lecturer and provides PLENTY of opportunities to get help outside of class. Everything about the course was accessible, engaging, and the perfect degree of challenging for an introductory class.",
        "This is a fantastic intro class if you're interested in computer science.  Racket isn't a super useful language, but it's great to learn on and works great for introducing coding concepts.",
        "this course was A LOT of work homework\u2013wise. like hours per week, and you NEED to go into office hours. overall, it wasnt necessarily hard but the fact that the course is not curved can really suck if you mess up on one homework or one of the two midterms",
        "I'm going to start off by saying that Sara is an amazing professor and person. She was very accommodating and patient with me and met with me to help me. Unfortunately, I can't say the same for the course. I don't think that a class has ever made me cry this much. I'm not saying that the course is bad, I just think that I made a big mistake when I signed up for this class. DO NOT listen to your ex when they say that EECS is like learning another language and recommend that you take the class because you can speak three languages. EECS IS NOT AN INTUITIVE LANGUAGE. I've always been bad at computers, and I was hoping that this course would help me out, but I confirmed that coding is not for me. I tried SO hard to get into CS, but CS did not try hard to get into me. If you know for sure that coding will be a challenge, then do what I didn't and really consider taking another course. I thought that I could make it (turned out to be unrealistic) and actually do well. I went to hella peer mentor hours for help, but I still felt like a dumb potato. I'd just like to reiterate that the problem wasn't the class at all (even though it is extremely challenging), I'm sure that people will do well if they put in enough effort. But in my case, I put in a lot of effort and I don't think it paid off. Just putting it out there that if you don't necessarily need to do EECS and if you know you're not the best with computers, you should probably consider taking another formal distro. Otherwise you'll end up like me and see a peer mentor at Starbucks and start talking to them about the class and have them tell you that those who went to peer mentor hours tended to do very well on exams but you know that on the first midterm the average was an 89% so you believed that you could actually do well, but then checked your grade in class and got a 42% and started crying quietly in lecture (and every time you came out of Tech) because you felt like a dumbass and then you start crying in Starbucks in front of your peer mentor because you've given up hope on doing well on the final and feel ashamed because there's a high chance that a peer mentor you know will be grading your final. Anyways, I'm leaving this class in fear because I'm afraid that if I see a peer mentor on campus that graded my tests that they'll think I'm dumb. But yeah, a lot of people enjoyed this class and it gave me a chance to express myself with tears. I love you Sara (and peer mentors/tutorial instructors who tried their best to help a lost cause).",
        "Super good class to take for beginners, Sara is super good at explaining and also keeping class fun and interesting. Overall 10/10 would recommend taking it even if you are a beginner. Can be a bit challenging at first but Peer mentors are really helpful and so is tutorial",
        "Solid course. Sara covers content well in lecture but it moves quite quickly during the Powerpoint component. Exams are easy but reflect the material well. Assignments are fair and useful for mastering the material. Racket is a useful language for learning the fundamentals, so I don't mind learning it.",
        "The exams are structured very differently from the homework. In the exams, you really need to understand how to debug without actually having the ability to run the program. This can be hard to do if it is not the way you program.",
        "Sara Sood may very well be the best teacher you ever have. Queen of CS, incredibly supportive and validating of all her students from day 1. A well\u2013structured class that is challenging in all the right ways!",
        "Fun and intriguing course. Does a good job at teaching the foundations of CS.",
        "this is definitely not a class you should take if you're looking for an easy distro. You do have to put in work because it is not a class for non\u2013majors, it is the first in the sequence specifically for majors. It was very interesting and Sara is super nice. the assignments do get fairly difficult and i spent a lotttt of time in office hours. the hardest part was definitely the exams because even though they always claimed they weren't forcing you to write code on the actual exam, they basically ask you to in one section and studying for it is pretty difficult",
        "She teaches it the best. That's it. Take it with her.",
        "Really excellent class for anyone looking to get involved in CS. The assignments are a little annoying but the course is well\u2013designed and Sara is an excellent instructor; if you're a complete beginner or relatively inexperienced you will learn a lot just by being in lecture and doing assignments. Make sure to go to office hours; the peer mentors and instructor are extremely helpful and patient and you'll learn a lot from those as well.",
        "I wish that we could have learned a different language. Even though it is just intro, I think a language that is more scalable would have been nice.",
        "Take this class with Sara. She is amazing and always wants to help her students succeed! Also half of the course is assignments which help your grade out. But 100% take with Sara.",
        "Great class, easy intro to CS. racket is kinda pointless to learn though",
        "Great class and manageable workload if you stay on top of it throughout the quarter.",
        "This was a great intro course as someone who had never taken a CS class! Sara is a really great professor and explains everything really clearly. I would really recommend taking this even if you have never done CS because it makes it feel really accessible and the TA Office hours are basically all day every day because there are so many of them. The assignments were manageable and they provide you so much help with multiple review sessions. Take this class with Sara!",
        "I really enjoyed Sara! She is the best EECS teacher we have. During class she goes through examples and lectures using code as well as powerpoint presentations. I have already taken AP comp sci so a lot of the topics weren't new to me. The projects aren't too bad. There are plenty of office hours to get help if you need it",
        "Focused on executing code in racket. Was difficult but, taught a lot.",
        "Not an easy class if you're not a right brain type of person. My brain just doesn't work that way so after the first few weeks I found the class v difficult",
        "Assignments can be pretty time consuming, ask peer mentors for help for sure. Also Sara is a great prof",
        "The language racket is not a common language used nowadays. However, it serves as a good tool to introduce a general strategy and thinking of computation science.",
        "Sara is amazing! She is great in office hours and great in lecture too.  However, in order to do the assignments, you must go to office hours on your own time with the peer mentors.  This class does take a significant portion of your schedule.  It is great if you are actually interested in CS.",
        "Pretty do\u2013able course, I was a total beginner and I've been able to understand and do well on assignments and exams",
        "LOVE Sara, she always makes sure most people understand what's going on. Office hours are like constantly happening and so important because being there and asking questions makes a big difference.",
        "It was the fundamentals of programming which I had already learned in my prereq course, but it used a language that is not intuitive at all and I found it rather annoying.",
        "This course was excellent from start to finish. It is easily accessible for people who've never coded before, and Sara taught the material so clearly! She's inspired me to consider CS as a potential major and I'm now taking more CS courses. The assignments are difficult, especially towards the end of the course, but there is plenty of help and they truly help understand the material. The tutorials are also clearly taught and they explain anything you might've missed in class.",
        "If you have any coding experience at all, this course will be the easiest A you have ever received.",
        "The course was very enjoyable. I learned so much, and it was taught very well. I did not have a lot of knowledge in computer science coming in and I thought this class was very doable, yet valuable.",
        "take it with sara she'll make sure you get it.Also Sara actually codes in her lectures which is really helpful.",
        "This course is perfect for anyone looking to try programming but has no prior experience. Sara is an incredibly good teacher and is helpful for people of all skill levels.",
        "This class completely wrecked me. I had absolutely zero computer science experience going in and I was way in over my head from day 1. Sara is a really sweet and kind professor but I think this class inherently is not geared for non\u2013CS people, even though they say it is. The lectures are full of CS jargon that one has to decipher. Lectures teach you little about how to approach the assignments and as a result students must over\u2013rely on TAs in order to finish them. Furthermore, there is way too much crammed into 10 weeks. Before students could fully understand one topic, we were moving on to the next topic.",
        "This course is great. I've only had minimal exposure to programming, but could follow along well. While it's normal to struggle on the assignments once and a while, they're mostly cake walks. Just remember to write them check\u2013expects and go to office hours if there's any trouble. (THEY ALWAYS HAVE OFFICE HOURS, WHICH IS AWESOME. YOU WONT HAVE AN EXCUSE FOR NOT GOING!) Also the classic comment on how you should the course with Sara because she's great.",
        "Sarahs the best take this with her :)",
        "Good class. Sara is an amazing teacher, even though programming did not come naturally to me at all.",
        "after taking this course i want to major in cs",
        "Do the homework on your own before going to tas office hours. Also pay full attention in class as the tests will be really easy if you do.",
        "This class was great for people who have never tried computer science before. Sara was a great prof, very open to new students and accommodating, and passionate. New topics were explained in a way that was easy to comprehend",
        "They said this class was ok for people who never coded before and I definitely fit that description. I didn't even know how to unzip a file before taking this class, and I learned to code. That being said, I could not have done it with out knowing a lot of CS majors who were able to help me. If you're a beginner to coding and you want to take this class, make sure you have someone you can ask for help or just live in the office hours.",
        "Sara's a pretty good teacher, but she moves fast. The homework gets significantly harder after the first few weeks and it's really easy to get lost since it's such a big lecture. If you actually want to learn and not just copy other people's homework, go to office hours.",
        "The course was overall well designed. The weekly programs varied in difficulty quite a bit though, so its always best to start them early. There was an abundance of TA office hours, and many of your friends will be in this course too so its always easy to find help. The exams, however, I did not like at all. They give a large glossary of functions so there isn't much memorization required, but short 'one word' questions can be anywhere between 5\u201315 points, and making a tiny error can really affect your score as they do not give much partial credit. I lost 15 points for making these errors in my final, and though you can tell from my approach that it was along the correct lines, they didn't offer partial credit so I got 0/5 on three of these types of questions.",
        "I loved this class, and Sara is an amazing professor! She explains everything really well.",
        "This class is meh, no one pays attention during lecture and we all just learned it while doing the homework",
        "Sara is the absolute best EECS professor on this campus. She teaches at a steady pace and is always available.",
        "exercises were very time consuming and would\u2019ve been extremely difficult had I not gone to mentor hours. The mentors are really good."
    ]
}{
    "course_code": "Student Report for COMP_SCI_111-0_20",
    "course_name": "Fund Comp Prog",
    "instructor": "Sara Owsley",
    "year": "2021",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.72",
        "count": "159"
    },
    "course_rating": {
        "mean": "5.37",
        "count": "159"
    },
    "comments": [
        "Loved this course. Professor Sood is the goat. Racket is not that bad, just takes some getting used to. Convinced me to switch to a cs major.",
        "I thought the teacher was great, and the assignments are structure in a way that makes quite a bit of sense. Allows you to do a moderate amount of coursework on your own time, and provides the tools you need to succeed.",
        "There are a lot of small mini\u2013quizzes. The main portion of the course can either be done with a small group over zoom or on your own. The flexibility the course offers was extremely helpful given the current remote situation. It was nice being able to do everything on my own time and then go to office hours for help when needed. Great course.",
        "The Professor showed genuine effort to help students learn and while maintaining an environment that gave students leniency when it came to turning in assignments on time.",
        "With only EA1 MATLAB as prior coding experience (does that even count?), it was not too challenging a course. There are a lot of peer mentors to help a ton with your code if needed. However, lectures and instructions are clear enough to be able to work through most code alone with some thought.",
        "Course was an easy A. Just watch the lectures and do the programming assignments and you'll excel in this class.",
        "I enjoyed the process of writing interesting programs",
        "This is a great course because it is organized efficiently and the assignments are interesting and stimulating, but not too challenging.",
        "TAKE THIS CLASS WITH PROFESSOR SOOD. She is the best, and super understanding about any circumstance. Structured as watching videos, take a quiz, and complete an assignment. No tests for this quarter. However, the programming language is entirely Racket (which is a dialect of Scheme I think). It's super confusing in relation to Python and you can't do much with the language. I also think it's less intuitive, but it's used well in this course.",
        "Structure of the course made it easy to ask questions and learn the content at your own pace.",
        "Go to office hours! They were super helpful",
        "This course was intriguing and not too difficult, a nice class to have under the belt.",
        "Both the instructor ans structure of this course were extremely helpful. Even in a remote setting, I felt that I got a lot of one\u2013on\u2013one attention and help when I needed it. Great introductory course!",
        "The asynchronous lectures were very convenient and easy to understand",
        "This class is essentially built like a normal online class that you'd take in high school. You pretty much learn everything on your own (watch a few videos, take a few simple quizzes), and you have a few peers/TAs you can talk to if you're really stuck on a program.",
        "Not terrible, Sara's very nice and helpful but I wish some lecture material was covered in class but also nice to get homework done during class. Peer mentors were very helpful.",
        "The course was taught as a flipped classroom which I though was great! With the large class size, it was much more convenient for me to watch lectures on my own time and ask questions or work on exercises (homework) during class time in breakout rooms.",
        "Class consisted of weekly programming assignments, three really short weekly quizzes based on pre\u2013recorded pre\u2013lectures and class participation (which could be waived by submitting work you did throughout the day). Professor Sood did a great job of keeping you on top of your assignments and towards the end was very understanding of difficult times during the quarter and offered grace periods as well as a week with no extra learnt material (during midterms week). The class uses Racket which was something I had never heard of prior to taking the class but I actually enjoyed learning how it functioned. Sadly, most likely will never use it again after this class but I am certain the concepts we learned will be applicable in more advanced CS courses. I honestly loved the asynchronous teaching style of the course and the flexibility of resources available for help.",
        "I was told this was an easy class. That was wrong. This was easily my hardest class this quarter, despite it being a beginner level CS class. Sara's lectures and demonstrations were easy\u2013to\u2013understand, but the exercises (which are a large portion of your grade) were much harder and only seemed tangentially related. Shu\u2013Hung is amazing and very understanding.",
        "The Racket language is very different from most programming languages (including the one I was familiar with, Python) and although I could do the exercises, I did not conceptually understand what was going on with Racket very well. It felt to me like a very counterintuitive language. I didn't like that the difference between functional and imperative programming was not laid out at the beginning, because I feel like that would have helped me understand Racket a lot better. That being said, Prof. Sood is good at explaining things, and the peer mentor during \"team meetings\" was very helpful, guiding me through issues I had rather than simply telling the answer. The team meetings weren't very team\u2013like though, basically just me interacting with my PM. Despite the convoluted language, I feel like this was quite an easy course.",
        "This is a really great class. The professor is really knowledgable, and the peer advisors are super helpful. The work is also super manageable.",
        "I thought that the weekly exercises were very engaging and helpful in teaching me various introductory CS topics.",
        "The course was very enjoyable, I felt I learned a lot, but the workload was still very manageable and the exercises were enjoyable and felt a bit like puzzles. Sara was very accommodating and helpful.",
        "If you are thinking about CS don't be afraid to take this!!! Sara is an amazing prof, very friendly, and she puts so much into this course to make it beneficial for everyone. There are 2\u20133 weekly quizzes on videos (flipped classroom) that are very easy, no trick questions, then an exercise due each Friday that's not too bad. This course is very accommodating; during midterm weeks Sara made sure to lighten our load on the quizzes and towards the end of the quarter she was super generous with extensions (during finals week giving us all a 5 day extension!) She's great and so is this class!",
        "Fantastic course, highly recommend.",
        "Sara is one of the most responsible and kindest teachers I've ever had. The course however is in DrRacket. Racket is not the most useful coding language you can learn. FInally, TAs are really nice and basically do your exercises for you, which may be detrimental to your learning and conducive to your grade.",
        "Professor did a great job with explanations and being flexible. There will countless opportunities to get help if one needed it during the course and it is very straight forward in terms of what is required from the student when.",
        "Sara is an awesome professor, very kind and extremely knowledgeable. Racket was a little tricky to get a hang of, but the resources this class provides in terms of peer mentors and office hours are really next level. Great class!",
        "Professor Sood is a great professor, she'll take the time to help you if you ask. The lectures are helpful, so I suggest watching them. I took cs 110 before this, and it's not necessary at all for 111, but it was helpful coming in with a small base of coding \u2013 it made the learning curve less steep. I would consider this a very manageable class, definitely an easy A.",
        "Professor Sood really wants you to succeed in the course as do all the PMs. They are all more than welcome to answering questions and concerns about everything. She sets up the lectures very well and they really help with completing assignments.",
        "I was only here to finish a distro, and I'm glad I was able to do that well thanks to lots of help. The TA, specifically Rafael and Peter were the best I've ever had.",
        "I had no prior programming experience before taking this course so I wasn't sure what to expect, but I do think I got a good handle on the basics.",
        "If you have previous programming experience, this class is a breeze. If not, there is a lot of TA peer tutor and office hours available and you can always get the help you need. Definitely recommend for everyone, you also get to make fun games for projects that you get to play!",
        "The modules/video lectures were very helpful and instructive for the assignments and general structure of the course. The assignments were difficult, but not overwhelming, especially since we have peer advisors and classmates to assist us. I think the team meetings could have been better, but the course allowed students to be flexible with their own schedule.",
        "Owsley is a great professor. The videos are easy to understand and she provides multiple examples. She and the TA's answer questions pretty quickly and point out the tiny things that mess up your code.",
        "Take this course with Sara! She is a great professor and the class is structured well. Try not to save the weekly homework assignments until the last minute.",
        "This was a really easy class. Anyone with any experience programming will get through no problem. As long as you read the homework assignment documents thoroughly and check for all cases in your code, its an easy A.",
        "Sara Sood is an AMAZING teacher. Even over Zoom, she sought to understand students, and gave us so many extensions. She made herself very available and made it known that she cared about our wellbeing. Even though this was such a big class, she made it feel very personable. In terms of the actual class, it was probably by far the easiest class I've taken at Northwestern. Just keep up with the exercises and mini quizzes and you'll do great! Go to peer mentor hours!!",
        "yes",
        "The TAs did an excellent job of explaining concepts during team meetings and the abundance of office hours helped a lot for the projects. I found the course material to be challenging with a lack of computer programming experience, but all the team meetings and office hours got me through it.",
        "Lots of help was available to students.",
        "As someone who has never taken a CS course in my life, I feel like this introductory course really helped to pique my interest in programming. Sood is probably one of the best professors I have ever had, and she was always so understanding and kind and laid back with assignments. I probably will be continuing with more CS courses in the future because I had such a good experience here. I also really loved the abundance of office hours and support outside of the classroom to help with the weekly assignments, which I thought were always fun and interesting to complete. Overall 10/10 would recommend.",
        "I learned so much through this course. Great use of flipped classroom. Very understanding and AWESOME PROFESSOR!! Great PM\u2013student group model for classes!",
        "Sara is greeeeatt. Take this with Sara.",
        "Sara is good. The class gave me some ideas about functional programming and imperative programming. I do feel we could cover more topics though.",
        "This course was honestly really nice. If you ever take this course, take it with Sara. She's extremely nice, lenient and a very great teacher. If you stay focused and attend class, this class is an easy A",
        "Sara is an incredible professor and she made difficult concepts a lot easier to understand. Some of the exercises were difficult but there are so many TA office hours that getting help was never an issue. Great class",
        "This course was not that fun to be honest. Racket is weird and did not stimulate my interest for comp sci. Sara is an absolutely amazing professor that is super chill. There are no exams, the quizzes are very easy, and she makes sure that we are not overloaded during midterms/finals. The assignments are pretty hard so you should make sure to have a friend that knows how to code well or hope that you have a good TA that helps out a lot (I know mine did!)",
        "This course is awesome. Before taking it, I thought it would be boring lectures, but this course utilized flipped learning which really allowed me to learn at my own pace.",
        "Taking this class online this quarter felt just as good as if it were in person. The use of asynchronous lecture and then working on homework during the allotted class time made it so that I never felt very overwhelmed with the class, nor did I need to spend a lot of time on it outside of class periods. Sara is also a very compassionate lecturer and that made the class and content very enjoyable.",
        "Most of the learning was done by watching videos and then we worked on our homeworks during class.",
        "I loved this class. The exercises were challenging but very fun and worth it. There is so much help available if stuck.",
        "This class is extremely helpful for even the most beginner programmers who have no experience. It has a low time commitment and will give you a good idea of if you are interested in coding in the future. Definitely take it with Sara, as her lecture videos and coding guidance was extremely helpful.",
        "Course was super fast, hard to keep up especially if you're not a CS major/lack general interest in CS. If you put in the time and effort and ask questions in breakout rooms and find a mentor that works for you, you will learn a lot and it will be enjoyable. Grading makes this class an doable A.",
        "The course did a great job introducing programming, but in a semi\u2013useless language.",
        "I loved that the teacher cared more about our learning than bogging us down with unnecessary work outside of class.",
        "I loved this class. If you are taking this class, take it with Professor Sara Owsley. Her explanations are very clear and she is willing to answer all kinds of questions. In the online format, the class is divided into small groups lead by a peer mentor, which helped me a lot to feel comfortable asking questions. If you watch the recording on time and go to class, you pretty much can finish everything during class time. Peer mentors also holds tons of office hours if you need to work on exercises outside class time.",
        "I really enjoyed this course as it helped me learn the concepts of code and was engaging because it's an image\u2013based language that allows you to see your code play out right in front of you.",
        "I liked this class a lot. I'll start with the only thing I dislike which is Racket. Racket is not the best language, in my opinion, but at least it was not too difficult to pick up. Now for the things I liked, professor Sood was great. The class's format was to watch short videos prior to class, and then, as crazy as it sounds, do the homework during class with your team. So for most homework assignments, the three class meetings a week are enough to finish them up and submit them. This was great because it meant this class barely took any work time outside of class, which is obviously great.",
        "The quizzes are well designed to test the key knowledge in the recorded videos. They do not try to trick you.",
        "I liked this course, and it wasn't that bad at all. If I didn't have prior experience, I would have had some trouble with the faster pace of the course, but it was right for my level of experience. The automated system, however, is a little annoying because it means that if there's a small error in your assignment, your grade could seriously pay for it. Just a heads up before taking this course.",
        "I appreciated the distribution of our grades and how she had quizzes, participation, and assignments, so there were a lot of things you could do to make sure you had a good grade in the class.",
        "I had never done coding before, but this class was fairly easy and I learned a lot. The short quizzes weren't hard, and the assignments were manageable. The TAs were great because I could ask them questions about the assignments during their office hours. It is really nice because there are no midterms, and there is no final.",
        "This course is well structured for the current situation; I learned a lot, but there wasn't really anything to be stressed about.",
        "This is a great intro to computer science. It's definitely not a one and done experience with comp sci because you learn Racket, as opposed to one of the more notable languages, but I think it's a great start to the sequence. I only needed this class for my major concentration but I am definitely hoping to take 150 soon. Not having assessments (tests/ quizzes) made this class that much better. I always did the reading and completed the assignments without stressing over a timed assessment and I learned a lot while doing it. The activities every week are an incredible practice run for the modules and I think the flipped classroom works amazing for coding. My weekly \"team meetings\" were so helpful and I loved my group and peer mentor.",
        "Sara is amazing at teaching and super nice!",
        "Sara is the absolute best and so helpful",
        "This class was, for me, the perfect blend of being stimulating and challenging while not being mind\u2013numbingly difficult. I found the assignments to be very fun, and it's satisfying to figure out what to do. I also loved the collaborative nature of the class, with teams meetings and being able to bounce your problems off of your classmates and TA. The programming language itself (Racket) is a little bit weird, but it's nothing too bad. If you have no programming experience at all, you will probably find it difficult to wrap your head around. But the resources in the class are good at helping you succeed.",
        "Chill class but I also learned a lot.",
        "Sara is a great professor and even in a class of 200 kids you can tell she cares about your success. Her lectures are very clear and easy to understand. The course itself is fairly easy, but the language it's taught in, Racket, is pretty awful. You will likely never use it again.",
        "So far, this is the best class I have taken at NU. Sara made sure to level the playing field regardless of your programming background. She is the epitome of a perfect teacher. Grading is fair and the exercises are challenging but very doable. Additionally, the support is unbelievable. Highly recommended.",
        "Knew nothing about how to code upon entering the course \u2013 this class really gave me a solid foundation and was super interesting/fun. Sara is the best!",
        "So far, this has been one of my favorite classes I've taken at Northwestern. I loved the structure of this class \u2013 Professor Sood makes sure to keep a weekly bulletin up that outlines exactly what is due for the week, which is great for keeping track of what you need to do. Each class session is just time to work on the assignments due that week, which is great for both people new to coding and those who have experience coding before. The lecture material isn't too difficult but you are still learning, and the support system of TAs was fantastic. Professor Sood was also super sympathetic to things like midterm season, where she gave us a break on assignments and various extensions. Seriously, take this class. It's amazing.",
        "I thought the professor explained concepts very well and made assignments manageable and fun.",
        "I loved this class, I went in knowing nothing about computer science (I am a bio major) and between office hours and the split classroom setup, I was able to understand the course. Sara was super understanding that we had other responsibilities which I really really appreciated. This class was awesome :)",
        "This course is really good! Sara and the peer mentors are really helpful.",
        "This course was super informative and not too time consuming. The asynchronous structure of the lectures allowed me to take my time understanding the material, and the quizzes weren't stressful at all. I like how the class allowed me to really choose how much time to invest, and how in depth I wanted to learn. I also found help very easily whenever I needed it, and Sara was always very understanding when I was confused providing lots of resources before assignments were due.",
        "I want to be taught and learn the material in an engaging matter, not just sit on a computer",
        "This is a great course. Sara is an awesome teacher. If you're new to CS this course will help you understand the very basics in a way that will be a huge strength going into other courses. Highly recommend for anyone that isn't a CS major but wants to learn how coding works. Not a hard course either.",
        "Overall useful course however not too challenging if you have prior coding experience.",
        "I had no CS experience before but I think this course is not as hard as I expected it would be. It can be time consuming but definitely worth it! Assignments were not unreasonably hard, and you can get good scores if you go to office hours or peer mentors for help.",
        "The course showed me a different approach to coding which can be built upon in later courses.",
        "Racket, the language used in the class, is questionable. However, I do understand the sentiment of trying to teach the concepts behind coding instead of specific languages themselves, which the use of racket tries to do. The structure of the course allows you to take the entire class on your own if you wanted to, which is nice. You don't even need to show up to class. Of course, if you needed help, it's definitely there. Specifically the Peer Mentors in this class are insanely helpful, so even if the professor's office hours aren't available you can still get help at basically any time.",
        "This class is amazing. I knew nothing about CS and took this class to learn about something that kind of scared me. Sara is incredibly helpful, and the flipped structure of the class (short async lecture videos, then doing the assignments in class in groups) was a great way to handle it. It starts out very simple but the learning curve isn't too steep and peer mentors and the professor do a lot to make it manageable.",
        "TAKE this class with Sara! She is wonderful and incredibly helpful. I've never taken a comp sci class and was pretty intimidated at the beginning of this course. They make it very accessible to beginners.",
        "Taught well",
        "Sara is the best! And Aura is the best TA \u2013\u2013 join her team. This class is definitely not beginner level but is manageable with the help of office hours. But, I think there should be more main discussion with Sara, rather than all of us going to teams.. would like to recap some of the videos (which are very long and definitely something that I always watched on 2x).",
        "Made a flipped classroom work without doubling the workload",
        "Take this course with Sara Sood!!! Must take for any STEM major, in my opinion.",
        "Take CS111 with Sara! Although Racket is kinda strange and different from Python, but the ways of thinking learned is quite useful for anyone interested in programming.",
        "This class will be easier for people that have experiences with programming.",
        "I enjoyed the video lectures at my own pace.",
        "the professor does a great job in explaining the logic behind the codes that we are constructing, and makes sure that we are able to use the logic in the racket language for future use in other more advanced programming languages.",
        "Sara is amazing. Every Northwestern student should take a class with her. I'm not a CS genius by any means and she and (most of) the TA's were so helpful and approachable when I didn't understand things.Workload included watching pre\u2013recorded lectures, daily (very easy 3\u2013question MC) lecture quizzes, and weekly assignments that could be kind of difficult, but the amount of peer mentor hours available meant it was super easy to get help. 15% of the grade was participation, which was literally just based on showing up to class and getting marked present. If class structure/grading stays the same, there's no reason not to get an A.",
        "This course was a really good foundational course and I think it will help me learn CS better in the future",
        "This course was relatively easy and very forgiving. However, I still learned a lot about the base techniques of computer science. Additionally, the remote and asynchronous options were incredibly nice.",
        "Not too challenging but very informative course that definitely covers the basics of computer science.",
        "Generally it is a great and well\u2013structured introductory course for computer science. It is not very difficult and covers topics that are important to  computer programming. Sara is a great professor. She is very nice and cares about the students.",
        "I really enjoyed this class and learning from Sara. I came in with some Python and Java knowledge, but racket is pretty different. Sara's lecture videos are really great; however, they can sometimes take a long time. The exercises can sometimes be tricky, but go to peer mentor office hours!",
        "This is a good class. For experienced programmers, you learn a few new things and can enjoy a good review and learning Racket. For people with no experience, I think it's a great introduction to basic programming concepts.",
        "The expectations of us in this class were very manageable. There were modules due three times a week that take about an hour, and exercises due once a week. It is important to keep up and not fall behind in the pre\u2013recorded lectures.",
        "Sara was awesome! Not having exams in a shortened quarter was a game\u2013changer and I feel like she really cares about how we do, not just in the course but with all of our studies. Racket is pretty useless but it will teach you how to program.",
        "I feel like it did a good job of its intention, being introducing students to programming, but in terms of cooperative/group work experiences, it lacked.",
        "Sarah was really the best professor. Not only was she incredibly knowledgable with class content, she was so understanding of personal conflicts and helping to adjust things if needed. The PM's were also very helpful.",
        "I liked being able to watch videos on my own time"
    ]
}{
    "course_code": "Student Report for COMP_SCI_111-0_1",
    "course_name": "Fund Comp Prog",
    "instructor": "Connor Bain",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.09",
        "count": "173"
    },
    "course_rating": {
        "mean": "4.49",
        "count": "294"
    },
    "comments": [
        "Overall the course is a good introduction to computer science and a requirement for a lot of majors within engineering.",
        "it taught me a lot",
        "The class does help you with basic features of programming, however, being entirely taught in racket there is no practical application of the things which I was taught.",
        "The glaring issue of this course is that it is in Racket. Racket is a terrible programming language. Maybe an argument could be made that it's good for an intro course, but as someone who's programmed a bit before, I just think Racket is an utterly abysmal language. Other than that, fun course.",
        "The pace of the course and the difficulty of the quizzes and exercises were very reasonable.",
        "This course is great! Professor Horswill is a great lecturer and I never felt burdened by the course at all. CS111 is a good class and I suggest you take it",
        "A good introduction to computer science, although the choice of Racket as an introductory language feels questionable.",
        "This was a pretty good intro course, and while Racket was an interesting language for an intro course it did do a good job of forcing a functional programming style. I wasn't a huge fan of the flipped lecture style since it just felt like lecture wasn't particularly useful at that point.",
        "It was pretty easy, but if I had to do it all over again, I'd make sure to not fall behind. The content was definitely not hard, and as somebody who has never coded before (basic R doesn't count), it wasn't too hard to catch up.",
        "It's an interesting structured CS class. I think Ian and Brian are trying their best to help everyone get most out of the class, but it's hard with a 400 ppl class.",
        "Its required for all students in the CS major/minor. As someone with coding experience, the course isn't too difficult but the language can be frustrating to deal with.",
        "Overall a pretty good course, but Racket is pretty annoying to deal with. If you have programming experience, it should be pretty alright for you. Ian is also a cool guy and stuff.",
        "Ian was a great professor. Very willing to answer questions.",
        "Ian goated",
        "Going to lectures was not really helpful. Watching lecture videos were more helpful.",
        "Everything about this course was great: the instruction, the assignments, and the final project. I really found the instruction to be incredibly insightful and effective from day one. The only thing that I was disappointed on was why there was a third cumulative quiz. I feel that the final project was sufficient enough as a testing of the students' cumulative knowledge of the course, and having a final (quiz) and a project due on the same week was overkill.",
        "Good course overall.",
        "Nice class. Ian is a nice.",
        "It stimulated my interest in CS and the class was not boring.",
        "Did not enjoy this course. I just don't see how Racket is useful. But it is a simple course that doesn't require much time and if you have to take it take it with Ian.",
        "Wish NU didn't use Racket as the intro course; it really sucks that we have to spend a whole quarter learning a language that isn't used. While the course is well\u2013structured and well taught, it was also frustrating that we had to watch lectures before class because they take a long time. Not a fan of flipped classroom when class time wasn't used to do the exercises.",
        "CS 111 is a good class that serves as a very appropriate intro to computer science. The class is run in a flipped classroom environment, where students are expected to have watched lecture decks at home before our in\u2013person lectures. What ended up happening is we would just go over very similar lecture decks in class, which made the at\u2013home lectures seem redundant. The class is definitely not too challenging but is interesting enough to keep beginning and experienced programmers engaged. Ian and Connor are engaging and understanding professors who are willing to answer any questions that come up.",
        "At first, I loved this class and I was extremely excited about it, but then I did not enjoy it as much. The lectures were boring, confusing, and the tests were not easy. Even though the tests were not long, for me the format and what was expected on the tests were confusing and challenging. I know most students loved this class, but sadly that was not the case for me.",
        "It was my first language and Ian did a solid job at teaching it for beginners but I didn't love the structure of the course. The troupe activities didn't work at all and I didn't like having to watch the lectures beforehand.",
        "You will teach yourself everything. Literally everything. Going to class is pretty useless. You have to each yourself everything.",
        "Initially, I was very confused because I couldn't find a tangible connection between what I knew and what was been discussed in lecture. It turns out that those were the fundamental ideas of programming that I had never learned in any of the programming courses that I had taken before, so these were important elements of coding that I had never learned while learning other languages.",
        "It wasn\u2019t a good reaction, there was a lot of frustration because we were using a programming language that had no real world use",
        "I thought Ian was a fantastic instructor, but found it hard to engage with the course due to its content and structure. The course is taught in Racket, a language which largely fails to be applicable outside of this class, and the course itself covers extremely introductory material while providing no opportunity for students with prior programming experience to test out of it. I also was not a fan of the \"flipped classroom\" structure: we were asked to watch lecture videos prior to class, then do exercises and discuss in class, but in a 400\u2013person lecture, this proves difficult, and the lectures were more\u2013so a repetition of the videos we were assigned to watch for homework. Though I loved Ian's instruction, I felt as though the class was overall redundant, inapplicable, and overly rudimentary.",
        "Great class to take with Ian, he is an excellent teacher.",
        "course uses racket as a way to \"level the playing field\" but after about week 2 the gap between the experienced and the new is basically back to where it was. the course teaches a lot of basic programming concepts in a way that would sound unnecessarily complicated for those who already know it and somewhat obscure for those who don't. coding examples in lectures help a lot, as well as tutorials. interacting with classmates via discord was also a cool new experience.tests are fairly straightforward, homework programs are a bit tricky at times \u2013 especially as it gets to recursion. ian's cats are cool.there are a lot of people taking this class. a lot. means you can find help in a lot of placesoh, and final project groups are very important if you don't want to have your life turn for the worse as you are preparing for a paper and three finals.",
        "They tried doing a flipped classroom where students were meant to watch the lectures beforehand and class time would be devoted to group work and micro\u2013quizzes. However, as the quarter went on the structure basically unflipped, and the class became more traditional. Other than that weird thing, pretty good course.",
        "Having the flipped classroom lecture style was definitely new and required some time to get used to. I liked the idea but if the professor was going to go over the same slides in the lecture again, it felt a bit redundant.",
        "I like the class a lot, but I am a little frustrated with the choice of language. Racket makes sense from a teaching perspective, but I don't really see the practical uses of it in any industry anywhere.",
        "Very good course, not a huge fan of the game\u2013style assignments at the end (I don't think they taught CS as well as assignments would've), but still very good course with very good quality instruction.",
        "This course was very chill. It was a flipped classroom style class where the lectures reviewed what was went over in the videos as well as having some practice with your troupes. Ian does a really good job explaining concepts and at answering questions.",
        "If you have any interest in CS past an intro level course, you will have to take this class. With that being said, it was a relatively interesting class, but the lectures felt unnecessary as they were repetitive of the content that was discussed in online video lectures. Assignments and quizzes are not too hard and the final project seems easy enough.",
        "Ian is a fantastic professor and I felt that the flipped classroom environment really reinforced learning as a whole. We could learn the whole lecture through videos, but Ian would also cover the main points of the lecture in class which helped understand concepts.",
        "Great examples",
        "I honestly think the Racket language is not conducive to learning how to program. I already have a lot of coding experience from my previous school since I\u2019m a transfer student, but if I didn\u2019t, then I think this class might have discouraged me from continuing with CS. Racket is not really useful or related to any of the other languages I\u2019ve learned in any meaningful way. That being said, this class wasn\u2019t super difficult, just not engaging or interesting. Also, I found that I didn\u2019t gain much from the in person lectures because of the flipped classroom structure. I think the professor meant well when he used this structure, but it creates more work and it\u2019s not super realistic for college students who have a lot of priorities to balance at once.",
        "Ian Horswill is a wonderful human being who makes the course easy for a reason. There is no pressure in that course and that made learning racket bearable.",
        "I enjoyed most of the homework programs.",
        "This course provided a good foundation to continue learning computer science by explaining more general concepts.",
        "I liked the individual and cooperative aspects of the course! All the office hours and tutorials were very helpful. I also enjoyed how Professor Ian didn't want to give us stress and provided extensions for each exercise.",
        "If you have taken a Computer programming class before, especially AP Computer Science, this class will be easy. Racket is a little confusing at first but not intimidating once you get used to it. Lectures are flipped, i.e. prerecorded on canvas. Weekly assignments were reasonable. Lots of office hours available every day including weekends, TAs are very helpful.",
        "The exercises, excluding the first couple, were pretty hard for me. I struggled a lot during the first month of classes trying to complete them, barely understanding what was going on. It wasn't until I went to office hours that I started to really learn the material. Even if you have done CS before, please listen to me: don't be afraid to ask for help, and go to office hours. It will save you so much time. The exams were pretty straight forward and the instructors were always nice. I wasn't a huge fan of the Tutorials themselves (my TA was super nice though). Overall, I thought the human experience in class was great.",
        "I feel like this course would be great for beginners, however as someone who experienced programming before this course, the course came off as redundant. Also was not a fan of the reverse classroom format",
        "Racket is a stupid language, but this class is important",
        "I really liked the structure of this class. I liked the video lectures because you go back and rewatch something if you needed it. I think there was sufficient practice with Racket.",
        "Racket is a horrible language to start learning computer science with.",
        "I had basically no programming experience and this class was pretty challenging for me, although  not un\u2013doable. The quizzes were difficult and the exercises took a long time.  (I recommend going to office hours and finding a good TA if you have issues or need problems with exercises!) Luckily, the grading wasn't too hard/harsh (we have a final project and participation grades that help out) and Ian does genuinely care about his students.",
        "This course is definitely not cake. You will spend hours every week coding the exercises. Definitely, an easy A if you do all of the exercises though. Shouldn't be too difficult for someone without a coding background either.",
        "Ian is a god!!",
        "Having minimal coding experience, this class really wasn't too difficult at all. I thought that Ian's recorded lectures could drag on at times, but throw that baby in 2x speed and you're good to go. Sometimes the class lectures were a bit redundant, but the troupe activities were very helpful in letting us fully understand the application of certain concepts. The assignments could be frustrating at times, but they weren't too bad. You can definitely pass the quizzes with minimal studying, and the final project is actually quite fun. I recommend you find 3 nice and hardworking people to be in a troupe with, and this class will be way more enjoyable.",
        "d",
        "This course was challenging for me because I've never coded before this class. Although I struggled a little bit throughout the quarter, I still managed to learn new things.",
        "The course was great \u2013 not as stressful as other courses for McCormick freshman, and also fruitful in the sense that you can learn programming fundamentals. The language used in the course was pretty frustrating at times if you've programmed in the past, but overall the course was beneficial.",
        "It was really challenging for me.",
        "This is a good course that introduces important CS concepts. It is well taught and not too difficult.",
        "I think this is a pretty decent intro course! It uses Racket, which isn't the most helpful language ever, but I do feel like I learned a lot of good principles and skills. The final project and exercises were not too hard (and if you get stuck, there's a lot of office hours) and the midterms and final were very fair if you do the practice tests. I liked Ian a lot, even though I barely paid attention in class. I did not like that class and the prerecorded lectures were nearly identical, as class often felt like a waste of time.",
        "Racket was annoying at first but I got used to it after a bit, coding wise it wasn't too difficult, manageable work load and Ian is awesome!",
        "Ian is legendary! If you take CS 111, you better take it with him. The class is very much taught in a flipped classroom model. MAKE USE of your PM during tutorial \u2013 they can help you get started on the homework if you're struggling. Recursion was hard to understand at first, but the the lecture decks and tutorials were extremely helpful. Pick a good troupe! You'll have to create a final project with them and work together in class to understand new concepts.",
        "This was a great class and a lot of fun. Definitely not a weed\u2013out course, as most people get A's.",
        "Good class! Ian is a nice guy.",
        "As a novice programmer, I found this course to be a great introduction to the basics of coding. While Racket may not be the best language according to experienced programmers, I had no issues understanding the flow of the language. This course also sparked my curiosity in comp sci in general and will lead me to take more cs classes later:)",
        "Not a fan of the flipped classrooms. Ended up not watching any of the recorded lectures since Ian goes over the content in class anyways. Quizzes were relatively easy, provided you studied with the associated practice quiz. Ian and TAs were helpful, and there is a dedicated Discord server for the class.",
        "I personally think Northwestern should scrap the course. I don't understand why racket is used as an introduction to programming, when it holds very little in common with other more commonly used languages such as Java, C, and C++. I also didn't appreciate that we had to watch pre\u2013recorded lectures before going to class, which doubles the lecture time for that class. In that case, they should have made the class count for more credit hours because that is essentially what is happening. The professor is extremely knowledgeable, but I think the class itself is the problem.",
        "It formalized code and taught the basics thoroughly to serve as a foundation. It was helpful even as someone who already coded by giving a stable foundation to build more complex coding onto of.",
        "Pretty good intro course, the exercises don't take long to do. Exams are kind of tricky because it's different than what you do in class",
        "I liked this course even though it was a little tedious to learn the racket language I think it helped me as a programmer overall.",
        "The way that professor Horswill presents the topics in the lectures is easy to follow and understandable. As long as you have a decent logical understanding of things, the class should be relatively easy. Going to office hours helps a lot if you are stuck with your code. One thing that I don't recommend is copying code from your friends because the homeworks really help you understand the material presented in class.",
        "You have to learn racket, which is kind of a terrible language, but Ian is really good at explaining topics and takes the extra mile to make sure everyone understands.",
        "Course was very good. If you just take a little time to understand, the midterms are pretty easy and homework is very doable.",
        "The course was slow at first but then was interesting and challenging towards the middle of the quarter.",
        "I really enjoyed the course and developed an interest in CS in general. I was not a big fan of the Racket coding language but it was not a huge issue.",
        "Racket is just so unnecessary and it's very annoying that this is the intro course for majors/minors. I know the point is that it's supposed to put everyone on equal footing, but that will never really be the case, if you have prior coding experience it will still help. Also, the kids who took AP CS in high school will still be able to skip CS 150 etc so it doesn't really do much. Sort of felt like a waste of time ? Although I did somewhat enjoy it. Exercises and tutorials were good. Lecture felt unnecessary because it is the same as what we watch for homework. I really liked Ian though, he made lectures as entertaining as they could be. Sort of wish the tests were longer...I felt like my grade was ruined if I missed one question. Easy to do well on all the other grades though.",
        "It's an introductory course, but it's still a very fun course.The \"tutorials\" have an \"Advanced\" section with more challenging activities for people who may be more experienced in programming.The flipped style allows for activities in class, which is a good way to practice what you have learned.",
        "Horswill is a really good professor and he made CS 111 an enjoyable class. I liked how you could get a 48\u2013hour extension on any homework assignment just by filling out your name and id on a form.",
        "Ian is a cool dude, but Racket sucks. I imagine it would be a lot more challenging to someone brand new to programming and the core concepts (recursion, object oriented programming, etc). The tests were more difficult than expected. All of the TA's I worked with were really nice. Make sure you read the homework carefully.",
        "Racket is really nice for learning recursion and absolutely painful for everything else. As it is an intro course, I thought it moved slowly and I found it hard to engage with the lectures. Ian is amazing, though!",
        "easy with cs experience",
        "I believe that this class was a fairly good beginning class for CS. There are lecture videos you have to watch before every class which I wish we didn't have to do because the content is typically covered in class anyway, but the coursework is fairly reasonable and you only have one homework assignment a week which is fine. Ian is really passionate about his job and tries his best to engage the class when he can.",
        "Good intro course, not a lot of work outside the class. Ian is a great teacher and cares a lot about their students",
        "This class is definitely an introductory class. If you have never coded before you will definitely have to work a whole lot harder than if you have coded before. The assignments were lengthy but you have a whole week to do them. The quizzes were somewhat difficult but not impossible. The full lecture class makes it somewhat hard to learn in class but watch the lectures before class then you will be able to follow.",
        "The class did a good job covering important programming concepts",
        "This class is pretty easy, especially if you've taken AP Computer Science. It uses the Racket language, which can be frustrating at times, especially if you have prior programming experience, so going in with no experience at all may even be better. Ian is very nice and very enthusiastic about what he teaches, which is nice. This class is in no way meant to be a weed out class (which the professor directly stated multiple times throughout the quarter) but is just meant to provide an introduction to programming, with a focus on functional programming.",
        "Professor Ian is a great instructor and the concepts he taught are very clear.",
        "This class is very chill. Very easy to fall asleep in, but even then you can still keep up. It gets a bit harder in the middle/end but nothing you can't manage",
        "The class is graded pretty fairly however it is full of a lot of experienced coders which made the average on the exams really high. This was difficult as someone who wasn't experienced with coding at all which is why I don't think I did that well.",
        "As an intro course, this course has a lot of resources to make failing as hard as possible. If you put in the work and look in the right places it\u2019s very easily A\u2013able. Recorded lectures, uploaded lecture slides, practice quizzes with explanations, tutorials with TAs, and a Discord server for further questions all help. It may get hard and abstract but if you use the resources you\u2019ll catch up quick. This class describes itself as a \u201cflipped classroom\u201d but Ian is a fantastic, enthusiastic professor who still thoroughly goes through the material in class. The class includes some groupwork including the final project but still provides avenue for solo work. Overall the course covers a lot of bases and gets you to think like a programmer, and I had fun doing it.",
        "Very interesting class. I never have programmed before it and still, despite many students taking the class took AP CS, I managed to perform extremely well and learned a lot.It's a BIG class. However, there are several OH available that are extremely useful.",
        "The overall class was pretty easy and going to office hours was super helpful if you got stuck on an assignment. If you are trying to learn a more useful language and just want the one class to do that, I wouldn\u2019t recommend taking this course unless you are a CS Major.",
        "It was a good course but be prepared to spend a lot of time working on your own to get a good grade",
        "It was structured very well. Class assignments were interesting and fun and always got me to think. The advanced tutorial was also enjoyable\u2013 though I did not absorb the material on creating a compiler as well as I would've liked, the peer mentor system was awesome, and I really liked my PM. Quizzes were easy and free of stress; LOVED the final project. A really enjoyable course.",
        "pretty simple course, just make sure to watch the lecture decks",
        "This class is so good. You can learn a lot and those practices are so helpful. If you want to see if cs is your thing, take this class.",
        "A good intro to CS class. Racket as a language is annoying, but helps to level the playing field, and always fun to try out new languages. Prof. Ian is really nice and answers any questions you may have, even with a class of 450. The structure of this course involved pre\u2013recorded lectures and discussion of the content during lecture time, but I found class fairly redundant as it was just a summary of the recorded lecture if you had watched it. The workload was very light, and grading/quizzes are pretty easy. I really enjoyed the tutorial part of the class, and I think it's quite interesting if you choose to be in the Advanced sections.",
        "Because we stopped having in\u2013class microquizzes halfway through the quarter and because Ian posts lecture recordings and slides before class, class attendance wasn't essential. Chill class especially if you have prior programming experience.",
        "This course is very basic and although I can see why they make you take it, but it is easy.",
        "The exams are not hard if you do the exercises and attend the mandatory tutorials.",
        "The basics of computer programming within Racket was a great way to start my introduction to computer science. The gradual build of skills and knowledge was a great way to structure the class.",
        "The course was interesting in learning about a new language and familiar aspects of programming with different execution, but was affected by the fact that I'm likely never using it again. Racket is a different language, and can be used to make really cool things as seen with the tutorials and programs we have, but knowing its obscurity in industry, I can't help but feel underwhelmed.",
        "It was a pretty good introductory course but the way the quizzes are structured and graded really sucked because of how one small mistake can make you lose a lot of points. I would rather have more questions to answer and be punished less grade\u2013wise if I mess one up.",
        "I thought the class was run well and Ian was a great professor.",
        "Used the racket programming language throughout the class, which might not be everyone's preference. Not very challenging.",
        "Racket is a really annoying language to both use and learn, I don't buy the whole functional vs imperative programming idea as justification for using it. There are plenty of better and more useful languages that can teach the same things as Racket. Other than that, the course wasn't that hard but it just seemed like a waste to make us watch lectures before class and then go over that exact material in the lectures.",
        "Unnecessary amount of work. Too much busy work. Lectures went over the same thing in the videos.",
        "The lectures are created to be watched outside of class, and it gets really easy to just stop watching them and get behind. The content isn't very difficult, but the class itself isn't very engaging and Racket is an annoying language to deal with.",
        "This is a good intro computer science course for anyone who wants to learn a bit of programming, though I would recommend CS 110 instead, since I had never heard of Racket (the language we use in this class) before, whereas with 110, Python is a very well\u2013known language. The course is flipped classroom, so there are daily lecture videos on Panopto, and then Ian basically goes over the same slides during class. There are some micro quizzes during class, but they stopped around halfway through the quarter. The assignments are very manageable, and the quizzes aren't bad if you've gone through the lecture slides. The final project is actually pretty fun. Overall, a good course, and it's honestly an easy A if you put in the work.",
        "I enjoyed Professor Horswill's in\u2013person lectures and thought they were pretty insightful, and the homework was always shorter but still great at reinforcing my familiarity with the content",
        "This class was very good for review as well as for people without programming experience, It was not a major time commitment, but was still able to be extremely informative.",
        "The class was interesting. Ian was really helpful and enthusiastic every time he taught class. The homework exercises were challenging at times, but working with a group is helpful.",
        "CS 111 was definitely a great starting point for me\u2013 someone who has never coded before and with no prior CS experience. Professor Horswill was an excellent instructor and was always happy to answer questions. The homework exercises were straightforward and manageable; if you need help, there are plenty of resources available, so don't be afraid to ask for help. Overall this was a great intro class and most definetely spiked my interest in Comp Sci.",
        "Don't take this class unless you need it for a major/ minor etc. This class is lowkey a lot of work and lowkey very difficult. There are quizzes, a final exam, AND a final project. If you do take this class make sure you have a passion for coding/ have friends in the class to work with.",
        "I had never coded before this class and now I have a great understanding of the world of CS. For homework GO TO OFFICE HOURS, the TA's are the best and will explain anything you are unsure of. Ian is a great professor but I feel like the lectures were tough to stay engaged.",
        "For someone who had no prior programming knowledge before, the learning curve was very steep at the beginning but with time, I started getting the concepts and it became a lot easier. Ian takes time to make sure everyone understands which is reassuring. Go for office hours if you get stuck.",
        "I felt like the material wasn't bad at all, but do expect to spend a couple hours on each assignments and carve out room in your schedule for office hours. Peer mentors are super helpful, so be sure to consult them if you need any help! Be wary of the pacing\u2013\u2013 it's easy to fall behind especially since the beginning is so slow paced. The flipped classroom model works to increase understanding, but I feel like in class lectures don't really add anything to my understanding, besides the troop activities.",
        "Good course",
        "I enjoyed the reverse structure that allowed me to learn on my own and ask questions that pertained to my immediate and personal struggles within the class. I thought this class functioned really well in the aspect of gaining help when you struggled.",
        "This was a fun entry level computer science course.",
        "This class is manageable. I really like the tutorial sessions because they help you learn about the topics that will show up on the homework. This class also used a flipped classroom model, but since we ended up reviewing the lectures in class anyway, it kinda defeated the purpose. I would have rather spend time doing small coding exercises in class based on the lecture materials. But this class probably has the most robust support network out of any class I have taken in McCormick. There are office hours scheduled for every day of the week, the TAs are really knowledgeable, and the assignments come with a pdf file that explains the homework really well. I liked the style of the midterms and file because they emphasized troubleshooting and recognizing the types of different objects rather than the return value of an expression. I also appreciated that the test were weighed less than the assignments. The final project was also very fun and manageable.",
        "This course teaches you Racket, which is essentially a useless language. It is super inconvenient and I would not recommend this class as an introductory course to coding for beginners. However, once you get the hang of it, it\u2019s pretty easy to use, but still very tedious and has no similarities to other languages. Prior to taking the class, I had experience coding and still struggled but it\u2019s manageable.",
        "Big class, terrible programming language, and a cat\u2013loving instructor.",
        "CS 111 is a relatively straight forward course for those with past CS experience. The biggest challenge is getting used to the unorthodox language (Racket) and learning to write code in it.",
        "If you understand recursion and object\u2013oriented programming, this class is a joke. Did not watch lectures or go to class half of the time. Did not get a single test question wrong the entire quarter. The advanced tutorials are nice as I did some interesting programming in those. For people with no programming experience, I can see how this could be difficult and take some time. For people who have a lot of experience, it is a joke. Great to take on top of 3 other hard classes or even as a 5th class.",
        "If you are taking this because you are a transfer and need it for later course requisites, prepare for a very easy time. This is a very simple intro CS course if you've studied the material. Racket can be frustrating though, so heads up.",
        "As someone who has taken APCS before, this course started out fairly easy and got complicated (but manageable). The grading is not at all lenient. If you make a really really minor mistake, you could get a 0% and you can't really argue for a better grade. This has never happened in my other classes. Overall, I would still say the course is designed fairly well, and there is a big support system (the peer mentors) that you could utilize as long as you are on top of things and not cramming last minute.",
        "I wouldn't say the class is a great first introduction to computer science, but it taught recursion well at least. Racket kind of sucks as a language. It's super syntax heavy and hard to read. But since most of the people who took this class had some prior experience in coding, I guess it was an alright second step. I can see why it's used as a teaching language.",
        "The course isn't so hard as long as you do your work to understand the concepts.",
        "Good course and good instruction, but a weird way to introduce many people to programming.",
        "This is a required course for CS majors so if you're reading this you may have to take it regardless. I personally didn't enjoy this course all that much. I thought the lectures weren't all that useful really. It's weird though because I felt that this is the only course I've taken where I've felt I strongly understood the material and could breeze through homework and yet the tests didn't reflect what I considered to be a solid understanding (maybe because they were pencil and paper). It wasn't the worst thing ever but definitely a bit frustrating at times.",
        "Racket is basically a useless language and honestly I felt like it hurt me to have previous experience with coding. The concepts that you learn, though, are quite useful and important fundamentals in computer science. I just wish the language was better chosen.",
        "Class was not difficult but often boring. Weekly homework did not take too long to complete and the quizzes were not too hard.",
        "This course wasn't too bad in my opinion. I even found it fun at some points, as it was satisfying finally figuring out the logic for a problem. But, the concepts were definitely difficult to understand at certain times and the course went pretty fast near the end of it.",
        "If you have a lot of CS experience, this class is mostly review. DrRacket is annoying but I got used to it pretty fast.",
        "I was completely new to programming. It's a little more challenging than one would expect for a beginner, don't fall behind on the lectures and the exercises. Racket isn't really useful to other languages so it doesn't really make sense why we have to take this course.",
        "This is a great class, especially with Ian. He is engaging and makes class fun. He also does a good job of making the class enjoyable for everyone, regardless of previous experience. If you have prior experience, the class is not challenging, but it's still a fun class.",
        "First off, Racket is the language used, which is different from the Java/C/Python that are typically used in introductory CS classes at other school. Many are not a fan of it. HOWEVER, Professor Horswill does a great job explaining CS concepts that carry over to other languages. As someone who came in with no coding experience, I found the weekly assignments to be kind of frustrating, but after utilizing classmates' help, the Discord server (Horswill and the TAs are there to answer questions even late into the night), and in\u2013person office hours, I was able to make it through this class. In addition, being new to coding initially worried me, but Professor Horswill emphasizes frequently during his lectures that he understands that not everyone has taken \"AP CS\" and allievates the stress that way. The exams are also quite easy as long as you do the practice and review the lectures. Overall, with the exception of Racket being the coding language of instruction, I have no concerns about CS 111.",
        "Unless you are a CS major/minor and need to take this course, would not recommend this class as one for people to see if they're interested in CS or learn some useful CS skills.",
        "It was nice to refresh on the basics of computer programming, and I think it will help me take harder computer science courses throughout my time at Northwestern.",
        "Racket as a language is a very unconventional one, but prof. Horswill is great and it is certainly a class worth taking if you are interested in going into Computer Science.",
        "I was worried about lack of access to TAs and resources in such a large class but there was ample support from the PMs for when I was confused.",
        "If you have no experience with programming, I would definitely recommend CS110 instead of this course, but this class is very helpful and interesting for people with a little experience. Racket can be a little confusing and unwieldy, but generally this class is incredibly important and useful, and Ian is a great professor.",
        "Not a fan of the flipped classroom. Racket was confusing.",
        "It wasn't too bad. Just go to class, do the assignments, and definitely go to office hours. I'm not a big programmer so it was hard getting acclimated to the whole computer science thing. Once you get it though, it becomes much easier.",
        "Good intro to CS even if you haven't taken a CS class before",
        "The course was not very entertaining, but seems to be a great course if you are interested in learning CS. If you are taking it as a major requirement, it is not very challenging/fun.",
        "This course was solid. Not too difficult or time consuming.",
        "This course was brutal. The in person lectures were exactly like the lectures he posted online. When someone asked a question in class, Ian would never repeat the question which was very frustrating",
        "I did not find this class to be too difficult. Midterms and the final is only worth 13% of your grade so it was a pretty low stress class. It was a good intro class to take and introduced students to basic computer science concepts.",
        "It gets more complicated as it goes on. Just watch the pre\u2013lecture vids and go to office hours if there's something you don't understand. You should be good, if you did APCS then you're chilling.",
        "The teaching and the general coding concepts were super cool and useful, but the exercises were too easy and the language taught in the course could be confusing for beginners.",
        "The course focuses on functional programming in the early stages of this class, and covers imperative and object oriented programming later on. Its primary programming language is Racket. The language was a new experience, and I found it interesting to have to problem solve using what was essentially one function call with more function calls as its inputs, so on and so forth.The class is quite chill, with the professor directly stating that the class was designed so that everybody could get an A. There is no class curve, but the materials and assessments are more than doable even without it. There's a discord server with TAs, the professor, and fellow students there to answer questions which adds to the friendly nature of this course.",
        "This course isn't bad at all. If you have already taken AP CS then it will be a good, but fairly boring refresher. If you haven't taken any CS before, it is a good introduction to CS overall. You'll be using Racket to program and everyone will hate on it.",
        "Very doable, working through programming Racket step\u2013by\u2013step and very reasonable quizzes and assignments. Overall well set\u2013up class.",
        "This class is pretty easy if you coded before at all. The lecture videos are good to watch but I always sped them up and didn't take notes. Never really needed notes for anything and the assignments weren't that bad just try to start them before your tutorial so you can ask questions.",
        "Pretty useless course tbh. Can\u2019t really think of something I learned other than racket syntax which I\u2019ll never use again.",
        "I think this course starts out pretty easy and gets harder at recursion (which is for midterm 2). I think general tips for studying would be to look over any notes from the lectures, do the extra practice problems, and definitely the practice quiz as that is the exact format of the real quiz.",
        "Very good. Intellectually stimulating but not too hard. Assignments can be tough, but there are many office hours you can go to to get help. Tests are very fair for a class that is mainly programming\u2013based. The class is flipped classroom, which means you watch lectures before coming to class. I think it helps immensely because it helps you learn the material in your own time. There are some other programming\u2013based classes that would heavily benefit from this model of learning.",
        "This class is super interesting and cool. However, it is kind of difficult to really learn anything during the class meetings. I definitely learned the majority of the information by watching the assigned panopto videos before class.",
        "ok",
        "This was a good introduction course that allows people with different programming experiences to be challenged in different ways. The tutorials were helpful and stressful at the same time. The tutorial built on what we were learning in class but in different ways that were not as obvious at first.",
        "good introductory computer science course. not too hard even if you're brand new, just make sure you go to class",
        "Racket programming",
        "I'M NEW TO CS SO I WON'T LIE I STRUGGLED A BIT. BUT THE TEACHER IS SO LENIENT AND THERE ARE ALWAYS PEOPLE WILLING TO HELP. THE EXAMS ARE FAIRLY EASY AND THE TEACHER PROVIDES A LOT OF MATERIAL TO HELP YOU LEARN FROM.",
        "It's really easy to fall behind in this course and slack off until the quizzes or until an assignment is due. Putting things off made me fall behind in the class and then made it difficult to understand in\u2013class lectures. I would not say this class is an easy A and Racket is definitely very different from other languages. Overall, if I had dedicated more time to the class I think I would have learned a lot and it would've felt easier overall.",
        "I had never really programmed before this class, and I feel as though I walked away with the ability to successfully complete programs in racket. Many people say they dislike Racket, but I actually think it was a great language to use. I found the learning curve to the language to be rather low, and I found the language to actually be quite cool. I really liked the troupe exercises and the format of the class. Not too difficult, but definitely stimulates interest in the topic.",
        "Tough class",
        "Ian is a cool person, and teaches well. However, I am not a big fan of the flipped classroom format. Time off class has to be taken to watch pre recorded lectures but the same material is covered in the in person lecture, making the flipped classroom redundant.",
        "The way you are taught to reason about code and a chance to understand the importance of what you learn made me enjoy the class so much.",
        "This course was a great intro to computer science and has left me with a good understanding of how to conceptualize different approaches to an assignment. Learning Racket really isn't that bad and I honestly enjoyed it. Its not that much work and if you need help on anything, theres tons of office hours",
        "If you are just looking to take some CS classes, this might not be the one. Grading is fair but quizzes/assignments can get tricky at times, but what you learn is very siloed into what would only be most practical if you're pursuing CS. Feel like 110 would be the better option since it teaches Python",
        "Taking this class is like taking $5000 and setting it on fire, but it takes 10 weeks.",
        "This course definitely seemed like a good introductory course to programming and it didn't waste too much time on having to teach the syntax of the programming language. The instructor was very responsive to students and made class enjoyable. However, the concepts taught in the class were for the most part things you would have learned if you had experience with programming courses in the past.",
        "If you took AP CS, this is a fun class that's only a little challenging. By far it was my favorite class of the quarter. Many people don't like the programming language that this class used but I think it was only the experienced programmers that complained about it. Overall, take this class for a good introduction to coding!.",
        "Ian is incredible in his own way, and the course is pretty laid back but does a decent job of enforcing the intended concepts. However, it is too slow for most of the people taking it, resulting in it being kind of a blowoff class. Racket is extremely annoying, but the class is still a good introduction to the world of computer science.",
        "CS 111 is really a fun class taught by a professor who is really eager for his students to do well and succeed. He is super passionate in the material he teaches, and the inclusion of his cats in his recorded lectures makes that class even better. I will note that there are moments where you really are intellectually challenged but after that small bump the class goes pretty smooth. You just have to stay organized and you will do well, the structure of the class is very simple, you have a hw program to do each week (it isn\u2019t as bad it sounds), a group final project at the end, and 3 quizzes (which is basically your two midterms  and final).",
        "This course was pretty easy. Sometimes things got really confusing. The tutorials helped me learn the most because that was when I could really practice coding using the principles that I learned in class. It was also a little annoying that the style of this class was a flipped classroom. But overall, the class was pretty chill and taught me a lot. Also the TAs, PMs (peer mentors), and Professors are all really chill and understanding so you could almost always get extensions on HW assignments which was nice.",
        "This course felt reasonable. I think the TAs are pretty helpful when you get stuck, and if you just pay attention it's not that difficult.",
        "The biggest downfall of this class was the fact that we had to use Racket. Prof. Horswill is a good lecturer, and he's very engaging, I just feel like the course content was restricted by using Racket. This course was also taught as a \"flipped classroom\" where we watched recorded lectures on our own. This wasn't my favorite because all we did in class was review the lecture we watched at home. Overall the class is very doable. Midterms are really hard to study for and we're only given one practice quiz for each. Assignments are pretty quick and you have ample time to complete them.",
        "This class was pretty easy. Coming out of AP CS, adjusting to Racket (the language we used) was a little bit difficult. Racket is kind of useless and, as far as I'm concerned, is not used for much in the professional world. I only watched the lecture videos and did the assignments and did well in the class. Does not require much time, but you do need to do the little that is asked of you in order to succeed. Professor Horswill is amazing. Super nice person, very fair and genuinely wants to see his students succeed. I would recommend this class. However, if you have never coded before, you will struggle more than the AP CS people. If you are new to coding take 110 before 111.",
        "This course was pretty interesting and I enjoyed it. The workload was very manageable and the live lectures are pretty much just reviews of the taped lectures that we are supposed to watch. I found the content interesting and a good foundation for CS.",
        "I've never coded before so this course was very difficult for me. I only took it because there was nothing else open and I had a really late registration time. I thought I might be interested in compsci, but I had no way to tell. Racket is supposedly a confusing language but I have no comparison. The class is split between compsci majors who need 111 for the requirement (bc they need to learn racket) and then others who don't know what they're doing and it's really hard to keep up/grasp concepts. Ian teaches the class reverse lecture and there's no point in going to class you won't be able to pay attention (his long, flowing hair is distracting). I don't think this is a good intro class to coding, but at least I don't hate compsci yet it's just ridiculously hard to jump into a class with a bunch of experienced coders that ace the \"quizzes.\" Ian's a chill dude watch for his cats. Take 110 first if you don't have experience.",
        "Ian is a great professor. He's super understanding and really wants his students to do well. Sometimes the pre lectures are kinda annoying but generally class is helpful. office hours tho are where its at if you have questions ever and they're provided all the time. Racket's a super annoying language but you generally learn the basics and Ian's a great prof to have if you have to code with racket.",
        "Ian is a great professor! I found he explains the base concepts really well, and between his cats frequent appearance in his recorded lecture, and his random comments during the class itself I was always entertained which made the whole experience more enjoyable. The group set up for the class worked pretty well, and having a good group makes the final project that much better (you design a text\u2013based adventure game). If you are someone who doesn't have a lot of coding experience getting used to Racket in the beginning may be difficult but there are so many office hours for this class to go to for help. Altogether a really great class, and good starting course for the CS major.",
        "As someone who came into this class with minimal programming experience, I found that this truly is a wonderful class designed to be accessible to people who have little more than the desire and motivation to learn about programming and computer science. Ian posts the recorded lectures prior to lecture, and it is expected that you watch and understand them prior to coming to class. I believe that this flipped classroom setting is ideal for offering the best understanding of the course material. Also, during lecture, Ian is very open to answering questions, and gives phenomenal answers. The TA guided tutorial sessions are a great opportunity to get a baseline understanding of what you'll need to know to complete the weekly exercises. Because the exercises can be somewhat challenging, the tutorials are a resource that one should certainly make the most of. Ian's grading policies are incredibly fair, and you are offered a very fair amount of time to complete all exercises and assignments as well. All of the teaching staff members are incredibly kind, down to earth, and knowledgable. They certainly made this class as great as it was, and have fostered a great interest in computer science for me.Of course, this course is taught in Racket, which may seem like a strange language for anybody that has programmed in other languages before. However, as I put the time into it, I came to appreciate it for what the incredible language that it is. In my opinion, it is an intuitive and beginner\u2013friendly language, that does not overwhelm you with pre\u2013defined higher\u2013level procedures, but has these procedures if you don't want to construct them yourself. Looking back, it is a near\u2013perfect language to teach an introductory programming class in, even if it isn't a language most people program in outside of this class.In all, this class is one that I know that I'll feel nostalgic for. It is a truly wonderful introduction to computer science, and is everything and more than I expected it to be. Thus, I could not recommend it more highly for anybody interested in programming.",
        "Ian Horswill is the cool uncle I want in my life. Please take the course with him.",
        "Racket is a terrible language. Horswill is an expert, but he teaches in a way that assumes that everyone knows the language already. It becomes mildly frustrating when he mixes regular code with pseudocode and it is hard to tell the difference at times.",
        "Ian is great and really nice, however, going to class was sometimes a little bit useless. It is a reverse lecture so sometimes class would just be questions or a repeat of what the lecture you watched online. In addition, the class will be a tough adjustment if you have never coded before.",
        "The class was hard for me as someone with no coding/computer science experience. The first half of the course was okay, but after the first exam the content was complicated and the class moved at a fast pace. The office hours/peer mentors were very helpful when it came to the homework problems, and Ian was also very willing to help. If you don't have coding experience, you may feel out of place because a lot of people in the class have coded before or taken AP CS.",
        "A good intro to computer science class overall.",
        "I liked working with others in the final project.",
        "Although Racket is a relatively useless language, Ian Horswill makes it as interesting as possible.",
        "Very beginner\u2013friendly, Ian is a very understanding and approachable professor. Racket might be a bit confusing at first, but you get used to it very quickly",
        "I took AP CSA in high school and got a 5 and was completely lost in this class but other people who had no coding experience thought it was easy.  Proves that Racket is just a confusing language and makes what should be an easy introductory course an unnecessarily confusing one.",
        "It was a struggle to get used to programming in Racket at first but the class was really fun and the peer mentors were really helpful and the content was interesting",
        "This class is super beginner friendly; and, if you want to take a CS class and have never coded before, then you'll be fine in this class.",
        "Interesting class. Racket is dumb.",
        "This course is necessary if you want a major/minor in CS, but otherwise I wouldn't go out of my way to take it. I really wanted to take a CS course just to gain overall programming experience and knowledge, but Racket in this class doesn't really help with that. I just don't think the content of this course is very engaging or useful long term. It isn't hard, even if you don't have any coding experience, but it's hard to really enjoy a class when you don't feel like you're learning.",
        "I enjoyed the emphasis placed on recursion in the course and the structure of the advanced tutorials where we could appreciate the nuances of the Racket language.",
        "This class was amazing. I loved the flipped\u2013classroom structure; it really helped me absorb the information. The professors were incredible. Ian did the lecturing, which he made straightforward, fascinating, and funny. Connor was also super helpful when I asked him questions. All of the assignments felt useful in developing my skills and the office hours with peer mentors were an incredible resource for figuring out how to both implement the concepts I had learned in lecture and debug my code. I had almost no experience with coding before this class but I never felt hopelessly lost. If you're in the same position, I would keep in mind that some people in the class will have a lot of coding experience, but Ian does a great job at making sure beginners get the information they need. Some experienced coders will ask complicated questions, but Ian always makes it clear when you shouldn't feel bad that you don't understand. This class uses a Discord server which is another great resource for questions. All in all, I loved this class and would highly recommend it to anyone.",
        "The flipper classroom style of this class is nice in that you can work at your own pace but sometimes annoying because going to lectures is useless.",
        "This course is a wonderful introduction to how to think like a programmer. I had never programmed before and i ended the quarter feeling much more confident in my abilities. Racket sucks :/",
        "This course did not help me learn. It also is way different in the in person format because it follows a flipped classroom style which I'm not sure is the best way for this class to be run. The class also had quizzes, in person, which were also very difficult, and weren't something in the past... if you have the ability, take CS 110 instead, it's easier. If you have to take 111, consider taking it with a different professor",
        "This course was one of my favorite courses this quarter. It provides a comprehensive introduction to the basics of computer science. The availability of peer mentors, the fact that there are office hours every day at virtually every single hour of the day, as well as prof Horswill's patience are the best aspects of this class.",
        "At first it became really challenging because It was harder for me to adapt to racket. However later with a lot of practice and guidance I became more familiar with it.",
        "Racket really just super useless, but the prof is a cool guy and the structure of the class is aight.",
        "Pretty interesting course. Was my first experience with computer science and thoroughly enjoyed it.",
        "Racket sucks. Everything in this class is done in groups so make sure you like your group; if you like your group you'll love the class, if you don't then you won't. Not too difficult of a class, especially if you've programmed before. It's really annoying that we have to learn how to code in Racket but unfortunately if you're a compsci major/minor there's no way around it.",
        "This is a really large course, but Professor Horswill is a great professor. He uses a flipped classroom, wherein lectures are prerecorded and class time is used more for practice, but he goes over a lot of the lecture material in class anyways. The material can be tough, especially if you're new to computer science, but it's definitely do\u2013able and there are TONS of office hours to help you. Try to stay ahead of the weekly exercises, don't forget to go to tutorials, and study for quizzes and you'll be fine.",
        "CS 111 is a great start to CS classes at Northwester. While it felt pretty trivial with an AP CS + personal project background, it was still an interesting class, and Ian did a good job of making it entertaining. Lectures were usually useful and covered good information, and Ian did a good job of mixing in real world anecdotes about the subject matter.I wouldn't say that I learned a ton in this class honestly, but it was a great experience nonetheless. I always felt prepared to do the HW assignments, and tests never felt unfairly challenging.",
        "Professor was great, super welcoming and great at taking questions even in a 400 person lecture hall format. Easy class for those with prior coding experience",
        "The course is meant to teach the most fundamental ideas of computer programming. Having taken CS in the IB program (equivalent of AP), I must say that although the course started smoothly, the ideas and concepts came in a confusing order even If I was somewhat knowledgeable around them in a way that I didn't feel I had a definitive way to go about mastering them fully. It is a challenging course by default but it should have better flow. I think Ian's teaching style of a \"flipped course\" with us having to watch the lectures beforehand did not end up working for most people. I found myself not understanding the lectures very well at times because of how abstract the explanations of concepts were, and I have talked about people who were completely new to CS that had even more trouble in that and had to put an illogical amount of effort to do well in the course. Lastly, i think the evaluation method could be improved. More questions on the quizzes for more points and variety in question styles!",
        "If you've previously covered recursion, this course provides nothing new, aside from learning a new programming language",
        "pretty challenging for people with no coding experience",
        "It's racket, so it ultimately is a language that you'll never use ever again (besides CS214 I guess). For all of you w/ prior exp like I did, you will not learn much. Nonetheless it is a good intro CS das for all. Still, it you r not interested in CS, go take CS110. You will learn more practical stuff, I promise.",
        "Coming in with prior coding experience made this class extremely reasonable and I feel like it wouldn't be very demanding for someone without any experience either. For an intro CS class, I think it did well covering the fundamentals of computer science and taught students who took APCS new concepts and material as well, although I can see how the learning curve might seem steep to people who have no experience whatsoever. Ian was super understanding and patient all quarter and he obviously cares about his students. We would be assigned lectures to watch outside of class and Ian would basically go through the information again the following day in class, making actual class time feel redundant and boring. However, I thought the troupe exercises were a good help and kept me focused."
    ]
}{
    "course_code": "Student Report for COMP_SCI_111-0_1",
    "course_name": "Fund Comp Prog",
    "instructor": "Ian Horswill",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.05",
        "count": "286"
    },
    "course_rating": {
        "mean": "4.49",
        "count": "294"
    },
    "comments": [
        "Overall the course is a good introduction to computer science and a requirement for a lot of majors within engineering.",
        "it taught me a lot",
        "The class does help you with basic features of programming, however, being entirely taught in racket there is no practical application of the things which I was taught.",
        "The glaring issue of this course is that it is in Racket. Racket is a terrible programming language. Maybe an argument could be made that it's good for an intro course, but as someone who's programmed a bit before, I just think Racket is an utterly abysmal language. Other than that, fun course.",
        "The pace of the course and the difficulty of the quizzes and exercises were very reasonable.",
        "This course is great! Professor Horswill is a great lecturer and I never felt burdened by the course at all. CS111 is a good class and I suggest you take it",
        "A good introduction to computer science, although the choice of Racket as an introductory language feels questionable.",
        "This was a pretty good intro course, and while Racket was an interesting language for an intro course it did do a good job of forcing a functional programming style. I wasn't a huge fan of the flipped lecture style since it just felt like lecture wasn't particularly useful at that point.",
        "It was pretty easy, but if I had to do it all over again, I'd make sure to not fall behind. The content was definitely not hard, and as somebody who has never coded before (basic R doesn't count), it wasn't too hard to catch up.",
        "It's an interesting structured CS class. I think Ian and Brian are trying their best to help everyone get most out of the class, but it's hard with a 400 ppl class.",
        "Its required for all students in the CS major/minor. As someone with coding experience, the course isn't too difficult but the language can be frustrating to deal with.",
        "Overall a pretty good course, but Racket is pretty annoying to deal with. If you have programming experience, it should be pretty alright for you. Ian is also a cool guy and stuff.",
        "Ian was a great professor. Very willing to answer questions.",
        "Going to lectures was not really helpful. Watching lecture videos were more helpful.",
        "Ian goated",
        "Everything about this course was great: the instruction, the assignments, and the final project. I really found the instruction to be incredibly insightful and effective from day one. The only thing that I was disappointed on was why there was a third cumulative quiz. I feel that the final project was sufficient enough as a testing of the students' cumulative knowledge of the course, and having a final (quiz) and a project due on the same week was overkill.",
        "Good course overall.",
        "Nice class. Ian is a nice.",
        "It stimulated my interest in CS and the class was not boring.",
        "Did not enjoy this course. I just don't see how Racket is useful. But it is a simple course that doesn't require much time and if you have to take it take it with Ian.",
        "Wish NU didn't use Racket as the intro course; it really sucks that we have to spend a whole quarter learning a language that isn't used. While the course is well\u2013structured and well taught, it was also frustrating that we had to watch lectures before class because they take a long time. Not a fan of flipped classroom when class time wasn't used to do the exercises.",
        "CS 111 is a good class that serves as a very appropriate intro to computer science. The class is run in a flipped classroom environment, where students are expected to have watched lecture decks at home before our in\u2013person lectures. What ended up happening is we would just go over very similar lecture decks in class, which made the at\u2013home lectures seem redundant. The class is definitely not too challenging but is interesting enough to keep beginning and experienced programmers engaged. Ian and Connor are engaging and understanding professors who are willing to answer any questions that come up.",
        "At first, I loved this class and I was extremely excited about it, but then I did not enjoy it as much. The lectures were boring, confusing, and the tests were not easy. Even though the tests were not long, for me the format and what was expected on the tests were confusing and challenging. I know most students loved this class, but sadly that was not the case for me.",
        "It was my first language and Ian did a solid job at teaching it for beginners but I didn't love the structure of the course. The troupe activities didn't work at all and I didn't like having to watch the lectures beforehand.",
        "You will teach yourself everything. Literally everything. Going to class is pretty useless. You have to each yourself everything.",
        "Initially, I was very confused because I couldn't find a tangible connection between what I knew and what was been discussed in lecture. It turns out that those were the fundamental ideas of programming that I had never learned in any of the programming courses that I had taken before, so these were important elements of coding that I had never learned while learning other languages.",
        "It wasn\u2019t a good reaction, there was a lot of frustration because we were using a programming language that had no real world use",
        "I thought Ian was a fantastic instructor, but found it hard to engage with the course due to its content and structure. The course is taught in Racket, a language which largely fails to be applicable outside of this class, and the course itself covers extremely introductory material while providing no opportunity for students with prior programming experience to test out of it. I also was not a fan of the \"flipped classroom\" structure: we were asked to watch lecture videos prior to class, then do exercises and discuss in class, but in a 400\u2013person lecture, this proves difficult, and the lectures were more\u2013so a repetition of the videos we were assigned to watch for homework. Though I loved Ian's instruction, I felt as though the class was overall redundant, inapplicable, and overly rudimentary.",
        "Great class to take with Ian, he is an excellent teacher.",
        "course uses racket as a way to \"level the playing field\" but after about week 2 the gap between the experienced and the new is basically back to where it was. the course teaches a lot of basic programming concepts in a way that would sound unnecessarily complicated for those who already know it and somewhat obscure for those who don't. coding examples in lectures help a lot, as well as tutorials. interacting with classmates via discord was also a cool new experience.tests are fairly straightforward, homework programs are a bit tricky at times \u2013 especially as it gets to recursion. ian's cats are cool.there are a lot of people taking this class. a lot. means you can find help in a lot of placesoh, and final project groups are very important if you don't want to have your life turn for the worse as you are preparing for a paper and three finals.",
        "They tried doing a flipped classroom where students were meant to watch the lectures beforehand and class time would be devoted to group work and micro\u2013quizzes. However, as the quarter went on the structure basically unflipped, and the class became more traditional. Other than that weird thing, pretty good course.",
        "Having the flipped classroom lecture style was definitely new and required some time to get used to. I liked the idea but if the professor was going to go over the same slides in the lecture again, it felt a bit redundant.",
        "I like the class a lot, but I am a little frustrated with the choice of language. Racket makes sense from a teaching perspective, but I don't really see the practical uses of it in any industry anywhere.",
        "Very good course, not a huge fan of the game\u2013style assignments at the end (I don't think they taught CS as well as assignments would've), but still very good course with very good quality instruction.",
        "This course was very chill. It was a flipped classroom style class where the lectures reviewed what was went over in the videos as well as having some practice with your troupes. Ian does a really good job explaining concepts and at answering questions.",
        "If you have any interest in CS past an intro level course, you will have to take this class. With that being said, it was a relatively interesting class, but the lectures felt unnecessary as they were repetitive of the content that was discussed in online video lectures. Assignments and quizzes are not too hard and the final project seems easy enough.",
        "Ian is a fantastic professor and I felt that the flipped classroom environment really reinforced learning as a whole. We could learn the whole lecture through videos, but Ian would also cover the main points of the lecture in class which helped understand concepts.",
        "Great examples",
        "Ian Horswill is a wonderful human being who makes the course easy for a reason. There is no pressure in that course and that made learning racket bearable.",
        "I honestly think the Racket language is not conducive to learning how to program. I already have a lot of coding experience from my previous school since I\u2019m a transfer student, but if I didn\u2019t, then I think this class might have discouraged me from continuing with CS. Racket is not really useful or related to any of the other languages I\u2019ve learned in any meaningful way. That being said, this class wasn\u2019t super difficult, just not engaging or interesting. Also, I found that I didn\u2019t gain much from the in person lectures because of the flipped classroom structure. I think the professor meant well when he used this structure, but it creates more work and it\u2019s not super realistic for college students who have a lot of priorities to balance at once.",
        "I enjoyed most of the homework programs.",
        "This course provided a good foundation to continue learning computer science by explaining more general concepts.",
        "I liked the individual and cooperative aspects of the course! All the office hours and tutorials were very helpful. I also enjoyed how Professor Ian didn't want to give us stress and provided extensions for each exercise.",
        "If you have taken a Computer programming class before, especially AP Computer Science, this class will be easy. Racket is a little confusing at first but not intimidating once you get used to it. Lectures are flipped, i.e. prerecorded on canvas. Weekly assignments were reasonable. Lots of office hours available every day including weekends, TAs are very helpful.",
        "The exercises, excluding the first couple, were pretty hard for me. I struggled a lot during the first month of classes trying to complete them, barely understanding what was going on. It wasn't until I went to office hours that I started to really learn the material. Even if you have done CS before, please listen to me: don't be afraid to ask for help, and go to office hours. It will save you so much time. The exams were pretty straight forward and the instructors were always nice. I wasn't a huge fan of the Tutorials themselves (my TA was super nice though). Overall, I thought the human experience in class was great.",
        "I feel like this course would be great for beginners, however as someone who experienced programming before this course, the course came off as redundant. Also was not a fan of the reverse classroom format",
        "I really liked the structure of this class. I liked the video lectures because you go back and rewatch something if you needed it. I think there was sufficient practice with Racket.",
        "Racket is a stupid language, but this class is important",
        "Racket is a horrible language to start learning computer science with.",
        "I had basically no programming experience and this class was pretty challenging for me, although  not un\u2013doable. The quizzes were difficult and the exercises took a long time.  (I recommend going to office hours and finding a good TA if you have issues or need problems with exercises!) Luckily, the grading wasn't too hard/harsh (we have a final project and participation grades that help out) and Ian does genuinely care about his students.",
        "This course is definitely not cake. You will spend hours every week coding the exercises. Definitely, an easy A if you do all of the exercises though. Shouldn't be too difficult for someone without a coding background either.",
        "Ian is a god!!",
        "Having minimal coding experience, this class really wasn't too difficult at all. I thought that Ian's recorded lectures could drag on at times, but throw that baby in 2x speed and you're good to go. Sometimes the class lectures were a bit redundant, but the troupe activities were very helpful in letting us fully understand the application of certain concepts. The assignments could be frustrating at times, but they weren't too bad. You can definitely pass the quizzes with minimal studying, and the final project is actually quite fun. I recommend you find 3 nice and hardworking people to be in a troupe with, and this class will be way more enjoyable.",
        "d",
        "This course was challenging for me because I've never coded before this class. Although I struggled a little bit throughout the quarter, I still managed to learn new things.",
        "The course was great \u2013 not as stressful as other courses for McCormick freshman, and also fruitful in the sense that you can learn programming fundamentals. The language used in the course was pretty frustrating at times if you've programmed in the past, but overall the course was beneficial.",
        "It was really challenging for me.",
        "This is a good course that introduces important CS concepts. It is well taught and not too difficult.",
        "I think this is a pretty decent intro course! It uses Racket, which isn't the most helpful language ever, but I do feel like I learned a lot of good principles and skills. The final project and exercises were not too hard (and if you get stuck, there's a lot of office hours) and the midterms and final were very fair if you do the practice tests. I liked Ian a lot, even though I barely paid attention in class. I did not like that class and the prerecorded lectures were nearly identical, as class often felt like a waste of time.",
        "Racket was annoying at first but I got used to it after a bit, coding wise it wasn't too difficult, manageable work load and Ian is awesome!",
        "Ian is legendary! If you take CS 111, you better take it with him. The class is very much taught in a flipped classroom model. MAKE USE of your PM during tutorial \u2013 they can help you get started on the homework if you're struggling. Recursion was hard to understand at first, but the the lecture decks and tutorials were extremely helpful. Pick a good troupe! You'll have to create a final project with them and work together in class to understand new concepts.",
        "This was a great class and a lot of fun. Definitely not a weed\u2013out course, as most people get A's.",
        "Good class! Ian is a nice guy.",
        "As a novice programmer, I found this course to be a great introduction to the basics of coding. While Racket may not be the best language according to experienced programmers, I had no issues understanding the flow of the language. This course also sparked my curiosity in comp sci in general and will lead me to take more cs classes later:)",
        "For someone who had no prior programming knowledge before, the learning curve was very steep at the beginning but with time, I started getting the concepts and it became a lot easier. Ian takes time to make sure everyone understands which is reassuring. Go for office hours if you get stuck.",
        "Not a fan of the flipped classrooms. Ended up not watching any of the recorded lectures since Ian goes over the content in class anyways. Quizzes were relatively easy, provided you studied with the associated practice quiz. Ian and TAs were helpful, and there is a dedicated Discord server for the class.",
        "I personally think Northwestern should scrap the course. I don't understand why racket is used as an introduction to programming, when it holds very little in common with other more commonly used languages such as Java, C, and C++. I also didn't appreciate that we had to watch pre\u2013recorded lectures before going to class, which doubles the lecture time for that class. In that case, they should have made the class count for more credit hours because that is essentially what is happening. The professor is extremely knowledgeable, but I think the class itself is the problem.",
        "It formalized code and taught the basics thoroughly to serve as a foundation. It was helpful even as someone who already coded by giving a stable foundation to build more complex coding onto of.",
        "Pretty good intro course, the exercises don't take long to do. Exams are kind of tricky because it's different than what you do in class",
        "I liked this course even though it was a little tedious to learn the racket language I think it helped me as a programmer overall.",
        "The way that professor Horswill presents the topics in the lectures is easy to follow and understandable. As long as you have a decent logical understanding of things, the class should be relatively easy. Going to office hours helps a lot if you are stuck with your code. One thing that I don't recommend is copying code from your friends because the homeworks really help you understand the material presented in class.",
        "You have to learn racket, which is kind of a terrible language, but Ian is really good at explaining topics and takes the extra mile to make sure everyone understands.",
        "Course was very good. If you just take a little time to understand, the midterms are pretty easy and homework is very doable.",
        "The course was slow at first but then was interesting and challenging towards the middle of the quarter.",
        "I really enjoyed the course and developed an interest in CS in general. I was not a big fan of the Racket coding language but it was not a huge issue.",
        "Racket is just so unnecessary and it's very annoying that this is the intro course for majors/minors. I know the point is that it's supposed to put everyone on equal footing, but that will never really be the case, if you have prior coding experience it will still help. Also, the kids who took AP CS in high school will still be able to skip CS 150 etc so it doesn't really do much. Sort of felt like a waste of time ? Although I did somewhat enjoy it. Exercises and tutorials were good. Lecture felt unnecessary because it is the same as what we watch for homework. I really liked Ian though, he made lectures as entertaining as they could be. Sort of wish the tests were longer...I felt like my grade was ruined if I missed one question. Easy to do well on all the other grades though.",
        "It's an introductory course, but it's still a very fun course.The \"tutorials\" have an \"Advanced\" section with more challenging activities for people who may be more experienced in programming.The flipped style allows for activities in class, which is a good way to practice what you have learned.",
        "Horswill is a really good professor and he made CS 111 an enjoyable class. I liked how you could get a 48\u2013hour extension on any homework assignment just by filling out your name and id on a form.",
        "Ian is a cool dude, but Racket sucks. I imagine it would be a lot more challenging to someone brand new to programming and the core concepts (recursion, object oriented programming, etc). The tests were more difficult than expected. All of the TA's I worked with were really nice. Make sure you read the homework carefully.",
        "Racket is really nice for learning recursion and absolutely painful for everything else. As it is an intro course, I thought it moved slowly and I found it hard to engage with the lectures. Ian is amazing, though!",
        "easy with cs experience",
        "I believe that this class was a fairly good beginning class for CS. There are lecture videos you have to watch before every class which I wish we didn't have to do because the content is typically covered in class anyway, but the coursework is fairly reasonable and you only have one homework assignment a week which is fine. Ian is really passionate about his job and tries his best to engage the class when he can.",
        "Good intro course, not a lot of work outside the class. Ian is a great teacher and cares a lot about their students",
        "The class did a good job covering important programming concepts",
        "This class is pretty easy, especially if you've taken AP Computer Science. It uses the Racket language, which can be frustrating at times, especially if you have prior programming experience, so going in with no experience at all may even be better. Ian is very nice and very enthusiastic about what he teaches, which is nice. This class is in no way meant to be a weed out class (which the professor directly stated multiple times throughout the quarter) but is just meant to provide an introduction to programming, with a focus on functional programming.",
        "Professor Ian is a great instructor and the concepts he taught are very clear.",
        "This class is very chill. Very easy to fall asleep in, but even then you can still keep up. It gets a bit harder in the middle/end but nothing you can't manage",
        "The class is graded pretty fairly however it is full of a lot of experienced coders which made the average on the exams really high. This was difficult as someone who wasn't experienced with coding at all which is why I don't think I did that well.",
        "As an intro course, this course has a lot of resources to make failing as hard as possible. If you put in the work and look in the right places it\u2019s very easily A\u2013able. Recorded lectures, uploaded lecture slides, practice quizzes with explanations, tutorials with TAs, and a Discord server for further questions all help. It may get hard and abstract but if you use the resources you\u2019ll catch up quick. This class describes itself as a \u201cflipped classroom\u201d but Ian is a fantastic, enthusiastic professor who still thoroughly goes through the material in class. The class includes some groupwork including the final project but still provides avenue for solo work. Overall the course covers a lot of bases and gets you to think like a programmer, and I had fun doing it.",
        "Very interesting class. I never have programmed before it and still, despite many students taking the class took AP CS, I managed to perform extremely well and learned a lot.It's a BIG class. However, there are several OH available that are extremely useful.",
        "The overall class was pretty easy and going to office hours was super helpful if you got stuck on an assignment. If you are trying to learn a more useful language and just want the one class to do that, I wouldn\u2019t recommend taking this course unless you are a CS Major.",
        "It was a good course but be prepared to spend a lot of time working on your own to get a good grade",
        "It was structured very well. Class assignments were interesting and fun and always got me to think. The advanced tutorial was also enjoyable\u2013 though I did not absorb the material on creating a compiler as well as I would've liked, the peer mentor system was awesome, and I really liked my PM. Quizzes were easy and free of stress; LOVED the final project. A really enjoyable course.",
        "pretty simple course, just make sure to watch the lecture decks",
        "This class is so good. You can learn a lot and those practices are so helpful. If you want to see if cs is your thing, take this class.",
        "A good intro to CS class. Racket as a language is annoying, but helps to level the playing field, and always fun to try out new languages. Prof. Ian is really nice and answers any questions you may have, even with a class of 450. The structure of this course involved pre\u2013recorded lectures and discussion of the content during lecture time, but I found class fairly redundant as it was just a summary of the recorded lecture if you had watched it. The workload was very light, and grading/quizzes are pretty easy. I really enjoyed the tutorial part of the class, and I think it's quite interesting if you choose to be in the Advanced sections.",
        "Because we stopped having in\u2013class microquizzes halfway through the quarter and because Ian posts lecture recordings and slides before class, class attendance wasn't essential. Chill class especially if you have prior programming experience.",
        "This course is very basic and although I can see why they make you take it, but it is easy.",
        "The exams are not hard if you do the exercises and attend the mandatory tutorials.",
        "The basics of computer programming within Racket was a great way to start my introduction to computer science. The gradual build of skills and knowledge was a great way to structure the class.",
        "The course was interesting in learning about a new language and familiar aspects of programming with different execution, but was affected by the fact that I'm likely never using it again. Racket is a different language, and can be used to make really cool things as seen with the tutorials and programs we have, but knowing its obscurity in industry, I can't help but feel underwhelmed.",
        "It was a pretty good introductory course but the way the quizzes are structured and graded really sucked because of how one small mistake can make you lose a lot of points. I would rather have more questions to answer and be punished less grade\u2013wise if I mess one up.",
        "I thought the class was run well and Ian was a great professor.",
        "Used the racket programming language throughout the class, which might not be everyone's preference. Not very challenging.",
        "Racket is a really annoying language to both use and learn, I don't buy the whole functional vs imperative programming idea as justification for using it. There are plenty of better and more useful languages that can teach the same things as Racket. Other than that, the course wasn't that hard but it just seemed like a waste to make us watch lectures before class and then go over that exact material in the lectures.",
        "Unnecessary amount of work. Too much busy work. Lectures went over the same thing in the videos.",
        "This is a good intro computer science course for anyone who wants to learn a bit of programming, though I would recommend CS 110 instead, since I had never heard of Racket (the language we use in this class) before, whereas with 110, Python is a very well\u2013known language. The course is flipped classroom, so there are daily lecture videos on Panopto, and then Ian basically goes over the same slides during class. There are some micro quizzes during class, but they stopped around halfway through the quarter. The assignments are very manageable, and the quizzes aren't bad if you've gone through the lecture slides. The final project is actually pretty fun. Overall, a good course, and it's honestly an easy A if you put in the work.",
        "I enjoyed Professor Horswill's in\u2013person lectures and thought they were pretty insightful, and the homework was always shorter but still great at reinforcing my familiarity with the content",
        "This class was very good for review as well as for people without programming experience, It was not a major time commitment, but was still able to be extremely informative.",
        "The lectures are created to be watched outside of class, and it gets really easy to just stop watching them and get behind. The content isn't very difficult, but the class itself isn't very engaging and Racket is an annoying language to deal with.",
        "The class was interesting. Ian was really helpful and enthusiastic every time he taught class. The homework exercises were challenging at times, but working with a group is helpful.",
        "CS 111 was definitely a great starting point for me\u2013 someone who has never coded before and with no prior CS experience. Professor Horswill was an excellent instructor and was always happy to answer questions. The homework exercises were straightforward and manageable; if you need help, there are plenty of resources available, so don't be afraid to ask for help. Overall this was a great intro class and most definetely spiked my interest in Comp Sci.",
        "Don't take this class unless you need it for a major/ minor etc. This class is lowkey a lot of work and lowkey very difficult. There are quizzes, a final exam, AND a final project. If you do take this class make sure you have a passion for coding/ have friends in the class to work with.",
        "I had never coded before this class and now I have a great understanding of the world of CS. For homework GO TO OFFICE HOURS, the TA's are the best and will explain anything you are unsure of. Ian is a great professor but I feel like the lectures were tough to stay engaged.",
        "I felt like the material wasn't bad at all, but do expect to spend a couple hours on each assignments and carve out room in your schedule for office hours. Peer mentors are super helpful, so be sure to consult them if you need any help! Be wary of the pacing\u2013\u2013 it's easy to fall behind especially since the beginning is so slow paced. The flipped classroom model works to increase understanding, but I feel like in class lectures don't really add anything to my understanding, besides the troop activities.",
        "Good course",
        "I enjoyed the reverse structure that allowed me to learn on my own and ask questions that pertained to my immediate and personal struggles within the class. I thought this class functioned really well in the aspect of gaining help when you struggled.",
        "This was a fun entry level computer science course.",
        "This class is manageable. I really like the tutorial sessions because they help you learn about the topics that will show up on the homework. This class also used a flipped classroom model, but since we ended up reviewing the lectures in class anyway, it kinda defeated the purpose. I would have rather spend time doing small coding exercises in class based on the lecture materials. But this class probably has the most robust support network out of any class I have taken in McCormick. There are office hours scheduled for every day of the week, the TAs are really knowledgeable, and the assignments come with a pdf file that explains the homework really well. I liked the style of the midterms and file because they emphasized troubleshooting and recognizing the types of different objects rather than the return value of an expression. I also appreciated that the test were weighed less than the assignments. The final project was also very fun and manageable.",
        "This course teaches you Racket, which is essentially a useless language. It is super inconvenient and I would not recommend this class as an introductory course to coding for beginners. However, once you get the hang of it, it\u2019s pretty easy to use, but still very tedious and has no similarities to other languages. Prior to taking the class, I had experience coding and still struggled but it\u2019s manageable.",
        "Big class, terrible programming language, and a cat\u2013loving instructor.",
        "CS 111 is a relatively straight forward course for those with past CS experience. The biggest challenge is getting used to the unorthodox language (Racket) and learning to write code in it.",
        "If you understand recursion and object\u2013oriented programming, this class is a joke. Did not watch lectures or go to class half of the time. Did not get a single test question wrong the entire quarter. The advanced tutorials are nice as I did some interesting programming in those. For people with no programming experience, I can see how this could be difficult and take some time. For people who have a lot of experience, it is a joke. Great to take on top of 3 other hard classes or even as a 5th class.",
        "If you are taking this because you are a transfer and need it for later course requisites, prepare for a very easy time. This is a very simple intro CS course if you've studied the material. Racket can be frustrating though, so heads up.",
        "As someone who has taken APCS before, this course started out fairly easy and got complicated (but manageable). The grading is not at all lenient. If you make a really really minor mistake, you could get a 0% and you can't really argue for a better grade. This has never happened in my other classes. Overall, I would still say the course is designed fairly well, and there is a big support system (the peer mentors) that you could utilize as long as you are on top of things and not cramming last minute.",
        "I wouldn't say the class is a great first introduction to computer science, but it taught recursion well at least. Racket kind of sucks as a language. It's super syntax heavy and hard to read. But since most of the people who took this class had some prior experience in coding, I guess it was an alright second step. I can see why it's used as a teaching language.",
        "The course isn't so hard as long as you do your work to understand the concepts.",
        "Good course and good instruction, but a weird way to introduce many people to programming.",
        "This is a required course for CS majors so if you're reading this you may have to take it regardless. I personally didn't enjoy this course all that much. I thought the lectures weren't all that useful really. It's weird though because I felt that this is the only course I've taken where I've felt I strongly understood the material and could breeze through homework and yet the tests didn't reflect what I considered to be a solid understanding (maybe because they were pencil and paper). It wasn't the worst thing ever but definitely a bit frustrating at times.",
        "Racket is basically a useless language and honestly I felt like it hurt me to have previous experience with coding. The concepts that you learn, though, are quite useful and important fundamentals in computer science. I just wish the language was better chosen.",
        "Class was not difficult but often boring. Weekly homework did not take too long to complete and the quizzes were not too hard.",
        "This course wasn't too bad in my opinion. I even found it fun at some points, as it was satisfying finally figuring out the logic for a problem. But, the concepts were definitely difficult to understand at certain times and the course went pretty fast near the end of it.",
        "If you have a lot of CS experience, this class is mostly review. DrRacket is annoying but I got used to it pretty fast.",
        "I was completely new to programming. It's a little more challenging than one would expect for a beginner, don't fall behind on the lectures and the exercises. Racket isn't really useful to other languages so it doesn't really make sense why we have to take this course.",
        "This is a great class, especially with Ian. He is engaging and makes class fun. He also does a good job of making the class enjoyable for everyone, regardless of previous experience. If you have prior experience, the class is not challenging, but it's still a fun class.",
        "First off, Racket is the language used, which is different from the Java/C/Python that are typically used in introductory CS classes at other school. Many are not a fan of it. HOWEVER, Professor Horswill does a great job explaining CS concepts that carry over to other languages. As someone who came in with no coding experience, I found the weekly assignments to be kind of frustrating, but after utilizing classmates' help, the Discord server (Horswill and the TAs are there to answer questions even late into the night), and in\u2013person office hours, I was able to make it through this class. In addition, being new to coding initially worried me, but Professor Horswill emphasizes frequently during his lectures that he understands that not everyone has taken \"AP CS\" and allievates the stress that way. The exams are also quite easy as long as you do the practice and review the lectures. Overall, with the exception of Racket being the coding language of instruction, I have no concerns about CS 111.",
        "Unless you are a CS major/minor and need to take this course, would not recommend this class as one for people to see if they're interested in CS or learn some useful CS skills.",
        "It was nice to refresh on the basics of computer programming, and I think it will help me take harder computer science courses throughout my time at Northwestern.",
        "This class is definitely an introductory class. If you have never coded before you will definitely have to work a whole lot harder than if you have coded before. The assignments were lengthy but you have a whole week to do them. The quizzes were somewhat difficult but not impossible. The full lecture class makes it somewhat hard to learn in class but watch the lectures before class then you will be able to follow.",
        "Racket as a language is a very unconventional one, but prof. Horswill is great and it is certainly a class worth taking if you are interested in going into Computer Science.",
        "I was worried about lack of access to TAs and resources in such a large class but there was ample support from the PMs for when I was confused.",
        "If you have no experience with programming, I would definitely recommend CS110 instead of this course, but this class is very helpful and interesting for people with a little experience. Racket can be a little confusing and unwieldy, but generally this class is incredibly important and useful, and Ian is a great professor.",
        "Not a fan of the flipped classroom. Racket was confusing.",
        "It wasn't too bad. Just go to class, do the assignments, and definitely go to office hours. I'm not a big programmer so it was hard getting acclimated to the whole computer science thing. Once you get it though, it becomes much easier.",
        "Good intro to CS even if you haven't taken a CS class before",
        "The course was not very entertaining, but seems to be a great course if you are interested in learning CS. If you are taking it as a major requirement, it is not very challenging/fun.",
        "This course was solid. Not too difficult or time consuming.",
        "This course was brutal. The in person lectures were exactly like the lectures he posted online. When someone asked a question in class, Ian would never repeat the question which was very frustrating",
        "I did not find this class to be too difficult. Midterms and the final is only worth 13% of your grade so it was a pretty low stress class. It was a good intro class to take and introduced students to basic computer science concepts.",
        "It gets more complicated as it goes on. Just watch the pre\u2013lecture vids and go to office hours if there's something you don't understand. You should be good, if you did APCS then you're chilling.",
        "The teaching and the general coding concepts were super cool and useful, but the exercises were too easy and the language taught in the course could be confusing for beginners.",
        "The course focuses on functional programming in the early stages of this class, and covers imperative and object oriented programming later on. Its primary programming language is Racket. The language was a new experience, and I found it interesting to have to problem solve using what was essentially one function call with more function calls as its inputs, so on and so forth.The class is quite chill, with the professor directly stating that the class was designed so that everybody could get an A. There is no class curve, but the materials and assessments are more than doable even without it. There's a discord server with TAs, the professor, and fellow students there to answer questions which adds to the friendly nature of this course.",
        "This course isn't bad at all. If you have already taken AP CS then it will be a good, but fairly boring refresher. If you haven't taken any CS before, it is a good introduction to CS overall. You'll be using Racket to program and everyone will hate on it.",
        "Very doable, working through programming Racket step\u2013by\u2013step and very reasonable quizzes and assignments. Overall well set\u2013up class.",
        "This class is pretty easy if you coded before at all. The lecture videos are good to watch but I always sped them up and didn't take notes. Never really needed notes for anything and the assignments weren't that bad just try to start them before your tutorial so you can ask questions.",
        "Pretty useless course tbh. Can\u2019t really think of something I learned other than racket syntax which I\u2019ll never use again.",
        "I think this course starts out pretty easy and gets harder at recursion (which is for midterm 2). I think general tips for studying would be to look over any notes from the lectures, do the extra practice problems, and definitely the practice quiz as that is the exact format of the real quiz.",
        "Very good. Intellectually stimulating but not too hard. Assignments can be tough, but there are many office hours you can go to to get help. Tests are very fair for a class that is mainly programming\u2013based. The class is flipped classroom, which means you watch lectures before coming to class. I think it helps immensely because it helps you learn the material in your own time. There are some other programming\u2013based classes that would heavily benefit from this model of learning.",
        "This class is super interesting and cool. However, it is kind of difficult to really learn anything during the class meetings. I definitely learned the majority of the information by watching the assigned panopto videos before class.",
        "ok",
        "This was a good introduction course that allows people with different programming experiences to be challenged in different ways. The tutorials were helpful and stressful at the same time. The tutorial built on what we were learning in class but in different ways that were not as obvious at first.",
        "good introductory computer science course. not too hard even if you're brand new, just make sure you go to class",
        "Racket programming",
        "I'M NEW TO CS SO I WON'T LIE I STRUGGLED A BIT. BUT THE TEACHER IS SO LENIENT AND THERE ARE ALWAYS PEOPLE WILLING TO HELP. THE EXAMS ARE FAIRLY EASY AND THE TEACHER PROVIDES A LOT OF MATERIAL TO HELP YOU LEARN FROM.",
        "It's really easy to fall behind in this course and slack off until the quizzes or until an assignment is due. Putting things off made me fall behind in the class and then made it difficult to understand in\u2013class lectures. I would not say this class is an easy A and Racket is definitely very different from other languages. Overall, if I had dedicated more time to the class I think I would have learned a lot and it would've felt easier overall.",
        "I had never really programmed before this class, and I feel as though I walked away with the ability to successfully complete programs in racket. Many people say they dislike Racket, but I actually think it was a great language to use. I found the learning curve to the language to be rather low, and I found the language to actually be quite cool. I really liked the troupe exercises and the format of the class. Not too difficult, but definitely stimulates interest in the topic.",
        "Ian is a cool person, and teaches well. However, I am not a big fan of the flipped classroom format. Time off class has to be taken to watch pre recorded lectures but the same material is covered in the in person lecture, making the flipped classroom redundant.",
        "Tough class",
        "The way you are taught to reason about code and a chance to understand the importance of what you learn made me enjoy the class so much.",
        "This course was a great intro to computer science and has left me with a good understanding of how to conceptualize different approaches to an assignment. Learning Racket really isn't that bad and I honestly enjoyed it. Its not that much work and if you need help on anything, theres tons of office hours",
        "If you are just looking to take some CS classes, this might not be the one. Grading is fair but quizzes/assignments can get tricky at times, but what you learn is very siloed into what would only be most practical if you're pursuing CS. Feel like 110 would be the better option since it teaches Python",
        "Taking this class is like taking $5000 and setting it on fire, but it takes 10 weeks.",
        "This course definitely seemed like a good introductory course to programming and it didn't waste too much time on having to teach the syntax of the programming language. The instructor was very responsive to students and made class enjoyable. However, the concepts taught in the class were for the most part things you would have learned if you had experience with programming courses in the past.",
        "If you took AP CS, this is a fun class that's only a little challenging. By far it was my favorite class of the quarter. Many people don't like the programming language that this class used but I think it was only the experienced programmers that complained about it. Overall, take this class for a good introduction to coding!.",
        "Ian is incredible in his own way, and the course is pretty laid back but does a decent job of enforcing the intended concepts. However, it is too slow for most of the people taking it, resulting in it being kind of a blowoff class. Racket is extremely annoying, but the class is still a good introduction to the world of computer science.",
        "This course was pretty easy. Sometimes things got really confusing. The tutorials helped me learn the most because that was when I could really practice coding using the principles that I learned in class. It was also a little annoying that the style of this class was a flipped classroom. But overall, the class was pretty chill and taught me a lot. Also the TAs, PMs (peer mentors), and Professors are all really chill and understanding so you could almost always get extensions on HW assignments which was nice.",
        "CS 111 is really a fun class taught by a professor who is really eager for his students to do well and succeed. He is super passionate in the material he teaches, and the inclusion of his cats in his recorded lectures makes that class even better. I will note that there are moments where you really are intellectually challenged but after that small bump the class goes pretty smooth. You just have to stay organized and you will do well, the structure of the class is very simple, you have a hw program to do each week (it isn\u2019t as bad it sounds), a group final project at the end, and 3 quizzes (which is basically your two midterms  and final).",
        "This course felt reasonable. I think the TAs are pretty helpful when you get stuck, and if you just pay attention it's not that difficult.",
        "The biggest downfall of this class was the fact that we had to use Racket. Prof. Horswill is a good lecturer, and he's very engaging, I just feel like the course content was restricted by using Racket. This course was also taught as a \"flipped classroom\" where we watched recorded lectures on our own. This wasn't my favorite because all we did in class was review the lecture we watched at home. Overall the class is very doable. Midterms are really hard to study for and we're only given one practice quiz for each. Assignments are pretty quick and you have ample time to complete them.",
        "This class was pretty easy. Coming out of AP CS, adjusting to Racket (the language we used) was a little bit difficult. Racket is kind of useless and, as far as I'm concerned, is not used for much in the professional world. I only watched the lecture videos and did the assignments and did well in the class. Does not require much time, but you do need to do the little that is asked of you in order to succeed. Professor Horswill is amazing. Super nice person, very fair and genuinely wants to see his students succeed. I would recommend this class. However, if you have never coded before, you will struggle more than the AP CS people. If you are new to coding take 110 before 111.",
        "This course was pretty interesting and I enjoyed it. The workload was very manageable and the live lectures are pretty much just reviews of the taped lectures that we are supposed to watch. I found the content interesting and a good foundation for CS.",
        "I've never coded before so this course was very difficult for me. I only took it because there was nothing else open and I had a really late registration time. I thought I might be interested in compsci, but I had no way to tell. Racket is supposedly a confusing language but I have no comparison. The class is split between compsci majors who need 111 for the requirement (bc they need to learn racket) and then others who don't know what they're doing and it's really hard to keep up/grasp concepts. Ian teaches the class reverse lecture and there's no point in going to class you won't be able to pay attention (his long, flowing hair is distracting). I don't think this is a good intro class to coding, but at least I don't hate compsci yet it's just ridiculously hard to jump into a class with a bunch of experienced coders that ace the \"quizzes.\" Ian's a chill dude watch for his cats. Take 110 first if you don't have experience.",
        "Ian is a great professor. He's super understanding and really wants his students to do well. Sometimes the pre lectures are kinda annoying but generally class is helpful. office hours tho are where its at if you have questions ever and they're provided all the time. Racket's a super annoying language but you generally learn the basics and Ian's a great prof to have if you have to code with racket.",
        "Ian is a great professor! I found he explains the base concepts really well, and between his cats frequent appearance in his recorded lecture, and his random comments during the class itself I was always entertained which made the whole experience more enjoyable. The group set up for the class worked pretty well, and having a good group makes the final project that much better (you design a text\u2013based adventure game). If you are someone who doesn't have a lot of coding experience getting used to Racket in the beginning may be difficult but there are so many office hours for this class to go to for help. Altogether a really great class, and good starting course for the CS major.",
        "As someone who came into this class with minimal programming experience, I found that this truly is a wonderful class designed to be accessible to people who have little more than the desire and motivation to learn about programming and computer science. Ian posts the recorded lectures prior to lecture, and it is expected that you watch and understand them prior to coming to class. I believe that this flipped classroom setting is ideal for offering the best understanding of the course material. Also, during lecture, Ian is very open to answering questions, and gives phenomenal answers. The TA guided tutorial sessions are a great opportunity to get a baseline understanding of what you'll need to know to complete the weekly exercises. Because the exercises can be somewhat challenging, the tutorials are a resource that one should certainly make the most of. Ian's grading policies are incredibly fair, and you are offered a very fair amount of time to complete all exercises and assignments as well. All of the teaching staff members are incredibly kind, down to earth, and knowledgable. They certainly made this class as great as it was, and have fostered a great interest in computer science for me.Of course, this course is taught in Racket, which may seem like a strange language for anybody that has programmed in other languages before. However, as I put the time into it, I came to appreciate it for what the incredible language that it is. In my opinion, it is an intuitive and beginner\u2013friendly language, that does not overwhelm you with pre\u2013defined higher\u2013level procedures, but has these procedures if you don't want to construct them yourself. Looking back, it is a near\u2013perfect language to teach an introductory programming class in, even if it isn't a language most people program in outside of this class.In all, this class is one that I know that I'll feel nostalgic for. It is a truly wonderful introduction to computer science, and is everything and more than I expected it to be. Thus, I could not recommend it more highly for anybody interested in programming.",
        "Ian Horswill is the cool uncle I want in my life. Please take the course with him.",
        "Racket is a terrible language. Horswill is an expert, but he teaches in a way that assumes that everyone knows the language already. It becomes mildly frustrating when he mixes regular code with pseudocode and it is hard to tell the difference at times.",
        "Ian is great and really nice, however, going to class was sometimes a little bit useless. It is a reverse lecture so sometimes class would just be questions or a repeat of what the lecture you watched online. In addition, the class will be a tough adjustment if you have never coded before.",
        "A good intro to computer science class overall.",
        "I liked working with others in the final project.",
        "The class was hard for me as someone with no coding/computer science experience. The first half of the course was okay, but after the first exam the content was complicated and the class moved at a fast pace. The office hours/peer mentors were very helpful when it came to the homework problems, and Ian was also very willing to help. If you don't have coding experience, you may feel out of place because a lot of people in the class have coded before or taken AP CS.",
        "Although Racket is a relatively useless language, Ian Horswill makes it as interesting as possible.",
        "Very beginner\u2013friendly, Ian is a very understanding and approachable professor. Racket might be a bit confusing at first, but you get used to it very quickly",
        "I took AP CSA in high school and got a 5 and was completely lost in this class but other people who had no coding experience thought it was easy.  Proves that Racket is just a confusing language and makes what should be an easy introductory course an unnecessarily confusing one.",
        "It was a struggle to get used to programming in Racket at first but the class was really fun and the peer mentors were really helpful and the content was interesting",
        "This class is super beginner friendly; and, if you want to take a CS class and have never coded before, then you'll be fine in this class.",
        "Interesting class. Racket is dumb.",
        "This course is necessary if you want a major/minor in CS, but otherwise I wouldn't go out of my way to take it. I really wanted to take a CS course just to gain overall programming experience and knowledge, but Racket in this class doesn't really help with that. I just don't think the content of this course is very engaging or useful long term. It isn't hard, even if you don't have any coding experience, but it's hard to really enjoy a class when you don't feel like you're learning.",
        "I enjoyed the emphasis placed on recursion in the course and the structure of the advanced tutorials where we could appreciate the nuances of the Racket language.",
        "This class was amazing. I loved the flipped\u2013classroom structure; it really helped me absorb the information. The professors were incredible. Ian did the lecturing, which he made straightforward, fascinating, and funny. Connor was also super helpful when I asked him questions. All of the assignments felt useful in developing my skills and the office hours with peer mentors were an incredible resource for figuring out how to both implement the concepts I had learned in lecture and debug my code. I had almost no experience with coding before this class but I never felt hopelessly lost. If you're in the same position, I would keep in mind that some people in the class will have a lot of coding experience, but Ian does a great job at making sure beginners get the information they need. Some experienced coders will ask complicated questions, but Ian always makes it clear when you shouldn't feel bad that you don't understand. This class uses a Discord server which is another great resource for questions. All in all, I loved this class and would highly recommend it to anyone.",
        "The flipper classroom style of this class is nice in that you can work at your own pace but sometimes annoying because going to lectures is useless.",
        "This course is a wonderful introduction to how to think like a programmer. I had never programmed before and i ended the quarter feeling much more confident in my abilities. Racket sucks :/",
        "This course did not help me learn. It also is way different in the in person format because it follows a flipped classroom style which I'm not sure is the best way for this class to be run. The class also had quizzes, in person, which were also very difficult, and weren't something in the past... if you have the ability, take CS 110 instead, it's easier. If you have to take 111, consider taking it with a different professor",
        "This course was one of my favorite courses this quarter. It provides a comprehensive introduction to the basics of computer science. The availability of peer mentors, the fact that there are office hours every day at virtually every single hour of the day, as well as prof Horswill's patience are the best aspects of this class.",
        "At first it became really challenging because It was harder for me to adapt to racket. However later with a lot of practice and guidance I became more familiar with it.",
        "Racket really just super useless, but the prof is a cool guy and the structure of the class is aight.",
        "Pretty interesting course. Was my first experience with computer science and thoroughly enjoyed it.",
        "Racket sucks. Everything in this class is done in groups so make sure you like your group; if you like your group you'll love the class, if you don't then you won't. Not too difficult of a class, especially if you've programmed before. It's really annoying that we have to learn how to code in Racket but unfortunately if you're a compsci major/minor there's no way around it.",
        "This is a really large course, but Professor Horswill is a great professor. He uses a flipped classroom, wherein lectures are prerecorded and class time is used more for practice, but he goes over a lot of the lecture material in class anyways. The material can be tough, especially if you're new to computer science, but it's definitely do\u2013able and there are TONS of office hours to help you. Try to stay ahead of the weekly exercises, don't forget to go to tutorials, and study for quizzes and you'll be fine.",
        "CS 111 is a great start to CS classes at Northwester. While it felt pretty trivial with an AP CS + personal project background, it was still an interesting class, and Ian did a good job of making it entertaining. Lectures were usually useful and covered good information, and Ian did a good job of mixing in real world anecdotes about the subject matter.I wouldn't say that I learned a ton in this class honestly, but it was a great experience nonetheless. I always felt prepared to do the HW assignments, and tests never felt unfairly challenging.",
        "Professor was great, super welcoming and great at taking questions even in a 400 person lecture hall format. Easy class for those with prior coding experience",
        "The course is meant to teach the most fundamental ideas of computer programming. Having taken CS in the IB program (equivalent of AP), I must say that although the course started smoothly, the ideas and concepts came in a confusing order even If I was somewhat knowledgeable around them in a way that I didn't feel I had a definitive way to go about mastering them fully. It is a challenging course by default but it should have better flow. I think Ian's teaching style of a \"flipped course\" with us having to watch the lectures beforehand did not end up working for most people. I found myself not understanding the lectures very well at times because of how abstract the explanations of concepts were, and I have talked about people who were completely new to CS that had even more trouble in that and had to put an illogical amount of effort to do well in the course. Lastly, i think the evaluation method could be improved. More questions on the quizzes for more points and variety in question styles!",
        "If you've previously covered recursion, this course provides nothing new, aside from learning a new programming language",
        "pretty challenging for people with no coding experience",
        "It's racket, so it ultimately is a language that you'll never use ever again (besides CS214 I guess). For all of you w/ prior exp like I did, you will not learn much. Nonetheless it is a good intro CS das for all. Still, it you r not interested in CS, go take CS110. You will learn more practical stuff, I promise.",
        "Coming in with prior coding experience made this class extremely reasonable and I feel like it wouldn't be very demanding for someone without any experience either. For an intro CS class, I think it did well covering the fundamentals of computer science and taught students who took APCS new concepts and material as well, although I can see how the learning curve might seem steep to people who have no experience whatsoever. Ian was super understanding and patient all quarter and he obviously cares about his students. We would be assigned lectures to watch outside of class and Ian would basically go through the information again the following day in class, making actual class time feel redundant and boring. However, I thought the troupe exercises were a good help and kept me focused."
    ]
}{
    "course_code": "Student Report for EECS_111-0_1",
    "course_name": "Fund Comp Prog",
    "instructor": "Jesse Tov",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "4.30",
        "count": "53"
    },
    "course_rating": {
        "mean": "4.17",
        "count": "54"
    },
    "comments": [
        "I don't think that the way that this course is structured was really for totally novice programmers. Ultimately, if you have experience programming and are comfortable behind my computer, I feel like you will be fine in this class.",
        "I feel that I learned a good amount from the class, but sometimes struggled a lot with concepts.  Professor Tov was a good lecturer but a lot of what we discussed in class wasn't relevant to the homeworks.  Also, many of the peer mentors didn't have Professor Tov when they took the class and sometimes weren't as helpful because of this.",
        "I thought it was a good course however I felt Tov didn't do the best job making the content digestible",
        "Difficult",
        "This class is hard but you will definitely learn a lot. I feel that grades are not proportional to the time spent working on each element. I literally spent 12hours per week on homework while only spending at most two hours preparing for the exam. However, the homework only counts for 30% of your grades. Also, it's fine to feel lost or confused you can always contact a TA or the Professor (the Professor is extreeeemely helpful in his office hours). Sometimes he shows us confusing concepts that are way more advanced than what we study, you will feel overwhelmed but don't worry, the exams are pretty easy.",
        "EECS111 with Professor Tov is probably the hardest intro class you will ever take in your life. His homework assignments are extremely difficult especially for students who have no experience in coding. However, if you stick with this class I gurantee you that by the end of the quarter you will learn SO MUCH more than any other professor teaching EECS111 and develop a confidence that you can actually code!",
        "You learn a lot but it seems harder than it should be for an intro coding class.",
        "Hard course. Jesse makes it exceptionally hard. I really enjoyed the class however.",
        "Actually coding on our homework \u2013\u2013 especially with a partner \u2013\u2013 allowed us to learn better",
        "came in with no experience. Lived to tell about it. Don't expect to learn a popular language, it's all in Racket, but that's because the class is much more about design principles than working code \u2013 readability, conciseness, etc. \u2013 honestly not too bad, way better if you keep up on readings but it's tough. Unless your partner is amazing, expect to have to grind for several hours on the weekly projects, but they are doable. exams tbh not too bad if you can do the homework",
        "the lectures were hard to follow along with, I recommend spending extra time reading the book to have a deeper understanding of the material",
        "Jesse is a good teacher who moves at a quick pace. Some of his examples in class are extremely complicated and often confusing. The length of the class usually tires students out but staying focused is the key to understanding the points. The readings were very long and the class itself doesn't cover much of them. However, doing the readings and paying attention in class put you ahead of other students. The tests are easier and very similar to the study guides.",
        "I feel like this course is intended for students with no experience. I feel like my prior knowledge helped me do the homework, but it didn't help me learn more or reinforce my knowledge.",
        "Homeworks definitely challenging, tests not too bad. By no means an \"easy A\" class and far harder than w/ the other professors from what I've heard. BUT I think it's a good class if you're willing to put the work in and want a solid intro to computer science. Only frustrating thing is the partner system... literally pointless and it essentially results in one person doing all the work.",
        "Take with Tov! Tov is the best! He broke things into simple parts and made it easy to understand. In the end we learn more than people with other instructors.",
        "reaction is nuetral",
        "I came into this course with an interest in pursuing a comp. sci. major. After taking this course, I can safely say that enthusiasm has been killed in me. Not because of the class difficulty, but because of how boring it all was.",
        "The class was interesting, but at times I felt that it was taught sort of like a \"puzzle\"\u2013 most of the class focused on understanding the abstract components of coding, and didn't focus much on applications. The final midterm reflected this\u2013 we were given a reference sheet of functions, which was like the pieces of a puzzle, and most of the problems were basically equivalent to assembling the pieces of the puzzle into some useful form. Maybe this is what computer programming is, fundamentally; but to me it felt unsatisfying, as if I had not really accomplished anything. My goals for computer programming are to create small programs that will help me with other aspects of my studies in science or math, and I'm unsure that this intro course helped prepare me for that kind of programming.",
        "I enjoyed the course content but felt that it moved too quickly at times.",
        "I heard a lot of negative things about this class going in, about how it was going to be super easy and how it's in a bad language (racket). I had lots of coding experience before taking this class, and while it made the class easier, it certainly didn't make the class easy. This class forces you to think recursively, and definitely worth taking.",
        "it was a difficult class especially without a partner dedicated to work on assignment with me",
        "this class was very puzzling and frustrating at times but the feelings after understanding a concept or finishing a homework problem was so rewarding. would only recommend if you have some interest.",
        "This class is difficult. Lectures can be a drag because it is just the professor at the front coding while you watch. It is too fast for you to code and follow along. if you do the homeworks, you will learn what you need to. Towards the second half of the class, you have to actually pay attention in class because most of what's on the second exam will not be covered in homeworks. Homework can be incredibly tedious and tricky.",
        "Professor Tov is an amazing professor! He is so smart and really wants his students to do well and understand the material. It is clear that he devotes a lot of time to the class and is very willing to meet with his students in office hours. There is an online discussions platform used called Piazza and Professor Tov usually responds to posts extremely quickly. The class is a lot of work, though requiring around 8 hours per week to get top scores on the weekly homework. If you are truly interested in learning and understanding comp sci, then take this with Professor Tov. If you just want to learn the basics, and don't want to spend as much time working on comp sci, then you should probably take it with Sarah. After taking comp sci for three years in high school, I feel like I got a much better foundation to programming in this class!",
        "Professor Tov is tough but he is passionate and you learn a lot.",
        "This was my favorite class this quarter. Im sure most of the other ctecs are going to say something like \"racket sucks\" or \"take it with sarah\" or something like that but honestly because the course was challenging, it forced us to learn a lot! I feel like I have a very good programming foundation because of this class.",
        "If you have the space in your schedule to spend 9 hours a week on a 100 level class, this is an amazing class. You always end up doing better than you thought you could. You build pretty cool programs, and learn a lot. It isn't too hard, but it is a lot of work.",
        "Though this class is interesting, the weekly homework is extremely difficult (probably way more difficult than it should be, given the material learned) and very time consuming. Furthermore, the material on the midterms is decently different from what we learn in class, so before each midterm, I had to learn a lot of other new information in the few days between when we got a practice midterm and when the real midterm occurred.",
        "Professor Tov is evidently passionate and well\u2013informed about the material that he teaches. Although, the pace and difficulty of the class is beyond that of the other two quarters of EECS 111.",
        "it\u2019s like OK, you\u2019ll survive. lectures don\u2019t match readings and the tests match the lectures so do with that as you will.",
        "I think I did learn a lot, but as a beginner there is a really steep learning curve. I felt really behind most of the class. I think best advice is to do the readings. You can go a little slower than the schedule says because the readings go way ahead of what we learn in class. It was really helpful to have the practice exams with an almost identical structure to the real exams. Office hours are also very crucial for this course because the homework is really hard and time\u2013consuming. Even though this class is a lot of work, it's really cool to see how much I've learned and I'm able to do now.",
        "Pay attention in class. Jesse can be kind of dry, but he's more than willing to help if you have problems.",
        "Exams were easy but homework was unnecessarily difficult.",
        "I was surprised with how many office hours where available and realized they were very helpful for finishing assignments.",
        "This was a very good class. The instruction was helpful and Professor Tov was always available for questions. The abundance of office hours was extremely helpful as well. However, every single homework except for the first was a partner project, which very quickly got annoying. I was stuck with most or all of the work for every homework, so it's important to make sure your partner does their part. The homeworks can be difficult, especially if you have to do them alone or mostly alone. The earlier ones can be finished quickly but other takes many hours. Additionally, learning Lisp doesn't seem to be that useful for programming in other languages, although I haven't tried that yet so I can't be sure. Professor Tov is great, however, he explained everything well in and out of class and in general was extremely helpful.",
        "This course is a good amount of work for an intro course, but it covers a lot of material. Homeworks were challenging but a good way of learning the concepts, exams were easy. Readings were useful in the beginning but then cover stuff we don't talk about in class. The lectures were sometimes pretty engaging, other times they are hard to follow. I thought it was interesting how the prof. would go into tangents about programming theory/history, but a lot of this stuff went over my head, but we weren't really expected to know a lot of it",
        "The course was pretty challenging, but stick to the practice exams and get started on your homework at least 4\u20135 days before it's due.",
        "It would be better if he didn't just expect us to learn by following him code, because for an hour and a half its hard to pay attention to that level of detail for that long and expect to retain most of it. tutorials are really helpful and though they're optional I highly recommend you still go",
        "This class requires you to learn a lot of material on your own, but it is easy to do so by completing the homework assignments and applying yourself during them.",
        "I would not recommend taking this class with Tov. I took it for the neuro major requirement, and the class description says that it is beginner level but it was extremely difficult without any prior programming experience. My partner and I spent at least 15 hours on every homework assignment, and sometimes the TAs didn't even know what was going on to be able to help us. If you're like me and don't have that kind of time or the desire to do anything CS after this class, save your sanity and take it with a different prof.",
        "The lectures are not helpful at all and weekly homework is unnecessarily hard/time\u2013consuming. However people say the professor is great for more advanced EECS classes"
    ]
}{
    "course_code": "Student Report for COMP_SCI_111-0_20",
    "course_name": "Fund Comp Prog",
    "instructor": "Ian Horswill",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.51",
        "count": "278"
    },
    "course_rating": {
        "mean": "5.04",
        "count": "281"
    },
    "comments": [
        "The most important part to this course is that the language chosen was racket. Having previous experience in Java and Python, racket brought a new set of skills to the table such as a large focus on recursion and inheritance (something I did not have too much experience with in Java and Python).",
        "Great Intro to CS class. It was a huge class but Prof. Horswill was very good about teaching at the right pace and answering questions. If you have previous CS experience or took AP CS, the class isn't very difficult, and if you've already learned racket or lisp, this class is a nice review.",
        "This course is a great place to start if you want to learn computer science. The professor is great and the lectures are actually helpful, unlike many other courses. Unfortunately, the class is taught in Racket, so only take this class if you are considering a CS major or want to take other CS classes.",
        "This was my favorite class this quarter. Ian is a great instructor and he was very accomodating about issues with remote learning. Also he and Andie, the TA, would both frequently put their cats on the camera during the Zooms.If you've taken AP CS, this class is a breeze. It seemed like it was also accessible enough to people with no programming experience.",
        "This is an amazing class for new and old coders alike. Racket is a great equalizer language, and very useful for teaching functional coding. Ian is by far the best instructor I have ever had in coding and general wisdom. The instructors were always extremely helpful and responsive to questions, so I never felt stuck on an assignment. If you are new to coding, this class will give you a great foundation in coding, to test the waters. If you have coded before, this class will still teach you and throw some curveballs. Overall amazing course with amazing resources. Recommend for anyone who wanted to see what coding is like.",
        "The course was a bit slow, and the assignments took very little time. If possible, I recommend you try to place out of it.",
        "This was a great course! I had no previous knowledge of computer science, and I feel that this class was a very helpful introduction.",
        "I loved the pacing of this course, and it really helped me build back my own confidence in my CS skills after several negative experiences with CS classes in high school. I realized that the reason I hated CS in high school and got so frustrated working on assignments was that I always waited until the last minute to complete assignments, and I lacked a fundamental understanding of what my code was doing. With this course, lots of time was spent going over the basics and asking help was always encouraged. Because of that, I had a great time in this course and highly recommend it.",
        "I personally loved this course. I had never taken a computer science course before and Prof. Horsill made me excited for more material. The content was fun and engaging and wasn't to difficult. Just make sure to not think of this as a blow off class because that is not what this class is. Make sure to use office hours if you are having trouble, all the TA's are helpful and willing to help.",
        "The material of the course in and of itself was solid and helped me learn, but I would've preferred if it were taught in another programming language. I found Racket unnecessarily confusing and difficult to grasp.",
        "It's a pretty straight forward class and I felt like I could follow along pretty well as someone who only took AP CS A in high school, the microquizzes are kind of hard to do well on sometimes but it's still not hard to do well in the class since most of the work is group work and most of coding is just problem\u2013solving.",
        "The class was good in introducing me to the basics of programing.",
        "The tutorials were by far my favorite part of this class. I did the advanced tutorials and they were all super interesting and fun to work on, and the format worked well for me \u2013 mostly working by myself but being able to ask the other students for help. The fact that we had a full basic interpreter at the end of the tutorial series was super cool and gratifying to build.",
        "The only negative thing I have to say is that having both class meetings and Panopto lectures was sometimes hard to keep up with, but that's a very minor complaint. A benefit of the Panopto lectures was that they were always there to go back to and listen to if you needed to be reminded of something when working on a coding assignment, and you could do this at any time throughout the quarter, so being able to review earlier material was very helpful. The course was very fun and Ian was very engaging during class meetings. I will say that the course was very loosely structured, and whether that's a positive or negative thing really depends on the student.",
        "We use Racket in this course, and Racket is pretty weird and kind of hard to fully understand logically. I didn't have any prior CS experience coming into this course, but I didn't think it was too difficult. Sometimes I had trouble with the assignments, but there were always TAs holding office hours which was super helpful. I think that if I had also paid more attention in class and spent more time outside of class trying to learn the concepts the class would have also come easier. We had micro quizzes after every lecture, and there were definitely a few that were difficult, but in general most questions were just based off of the lecture slides.",
        "It was a bit different than what i expected because i\u2019d never used racket but other than that i wasn\u2019t too surprised by anything.",
        "If you come into this class with previous computer science experience, it will not be extremely challenging for the most part. Specifically, really the first half of the course is pretty basic, but eventually becomes more challenging (and offers additional challenge through weekly advanced tutorial sessions). Overall, the course material was still interesting and the weekly projects and tutorials offered some challenges and testing of your understanding of the new material.",
        "I thought it was a good basis for learning many concepts in programming. Sure, racket isn't the most useful language, but this is a very good intro class.",
        "First half of the quarter was very manageable but second half of the quarter was confusing and fast paces. Definitely would be a hard class for someone who has never coded before",
        "This course was fine for me, considering I already had experience with programming, though I do feel like I would've struggled without such background experience, since the troupe activities were done pretty fast (which was enough for most questions, but some questions needed a bit more than 1 minute to do). Otherwise, the professor is nice and will try to answer the questions as best as they can.",
        "I think the aspect of this class that impacted me the most was Ian's rounded approach to teaching the basics. He is extremely helpful and dedicated to educating. I wish I could take all my CS classes with him if I could.",
        "Racket is such an unnecessarily confusing language, especially if you've had previous programming experience. Using Racket was probably the worst part of the class; the actual material wasn't too bad to learn, and the instruction was excellent. I didn't like the flipped classroom structure because a lot of the time, the professor just ended up repeating the same things from the recorded lectures we watched before class. The tutorials were very helpful in understanding any confusing parts of that week's lessons.",
        "I love Ian",
        "Ian is a great professor. He is super nice and always answered questions. He teaches in a clear, thorough manner. This class started out easy but then progressively got harder so be prepared for that. DO NOT start the coding assignments the night before/a few hours before. They take a lot of time and if your code isn't working, then that will take even more time. Use office hours if you need to. We also had three short quizzes a week, so make sure you don't forgot about those.",
        "The course is taught in Racket with a focus on functional programming, which can be very unintuitive for individuals with experience in languages like Java and Python. Ian is very passionate about the topic, though it is easy to fall behind and struggle due to the huge amount of online materials outside of class to go through.",
        "Course was alright, pretty chill. If you have programmed extensively before, this may be boring but definitely took away some things. For the remote course there were no midterms or finals so it wasn't very stressful which was good.",
        "Be patient. They assign an exercise to do every week or so. Look at these exercises as essays. You wont be able to get them done in an hour (some will be able to props to you). Make sure you set a side a good amount of your day for this class.",
        "The professor was good and gave clear enough instruction but racket is the worst language every and really turned me off to coding.",
        "The videos were nice because you could always go back and look at slides or watch them.",
        "This class was very well taught and made coding fun with the interesting assignment given each week. The way that many in\u2013class problems were group\u2013oriented made the class even better because it allowed me to problem\u2013solve with my friends!",
        "It was difficult to adapt to racket's syntax but I felt that the leaning in this class helped me get into better practices.",
        "The course moves slowly at first, which is great, but if you have computer science/programming knowledge from high school, it can feel painfully slow at first. Learning a functional language like Racket is great, especially if you're coming from AP CS and haven't used a functional language before. It does feel a bit ham\u2013fisted at the end of the course when we start doing imperative programming with the student languages, but it's not too bad.",
        "I entered the class with no prior experience with computer science, so I was challenged quite a bit during the class. While it did give all the necessary information needed to complete the assignments, the classes themselves did not really help me in learning how to code. This was not a fault in the teacher or class design, but a nature of the subject itself. CS is best learned by doing, so those with prior experience are always and inherently better off. However, the class itself, along with the workload, is quite manageable and easy to succeed. The teacher was cool also.",
        "Professor Horswill is a terrific instructor and a genuinely good person. 111 is taught in Racket, a relatively niche language that often feels discouraging to new programmers. Regardless, you'll cover a range of topics and learn a lot over the course of the quarter.",
        "This class is not overly demanding as their is only one main programming assignment a week. I appreciated the tutorial sections because they let me ask questions about topics I was confused about and the small group setting was nice. The professor has been the nicest professor I had this quarter and the lectures were had a relaxing vibe to them.",
        "I thought it was a great course. Goes over a wide array of topics, so a great place to start with CS. The workload is not too bad, the only way I could've survived this quarter because my other classes took so much time I spent only the time needed for the weekly HW assignments (~3 hours,  give or take depending on the difficulty). Prof. Horswill was also really understanding given all of our different remote situations, and he's a great professor overall as well.",
        "This course is super fine. Ian is awesome, and I generally enjoyed class time. If you have some programming experience though, you're not going to learn a ton of new stuff. The language we use, Racket, is not super intuitive, but it makes sense why they start us out with this. The class is moreso teaching us programming discipline rather than direct skills. Overall still a good class. Good intro to CS \u2013\u2013 if you go to tutorials and do the exercises you'll be fine.",
        "Overall, the course was extremely clear in a subject that can be done in many ways. This made it easier to grasp the key concepts and basics.",
        "Ian and this course were both incredible. The transition to Racket was not difficult at all coming from someone who has mainly used Java. Ian is very good at explaining concepts and loves to help his students any way he can. It was also easy to get an A since the microquizzes weren't difficult at all and the final project is a group project.",
        "I liked that the language used levelled the playing field because of how obscure it was, but at the same time, much of the course was learning syntax/techniques of specifically Racket instead of actually learning programming. I do understand, though, that it built up some useful programming skills such as problem\u2013solving and being systematic/logical, which I was definitely use in the future.",
        "This is a very interesting course and isn't that hard. Professor Horswill is extremely chill and makes this class very enjoyable. Don't fall behind though because this course begins to move fast very quickly and it'll be hard to catch up once you fall behind.",
        "This course meets the needs of students at various levels of coding experience, including mine which was none at all prior to coming to NU. Ian was the best because it was evident that he truly cared about his students and wanted us all to succeed. Being a beginner, the tutorials helped me fully understand the material presented that week. Since I had no experience, learning Racket was not really an issue since I had nothing to compare it to, despite this Ian presents the material in a very approachable manner.",
        "This course was well organized, and low pressure, which made it very fun and informative without being stressful. I feel that that interactiveness of the class helped me retain more information than high pressure tests.",
        "The class isn\u2019t much harder than 110 as long as you pay attention. The quizzes are pretty easy and the HW is solvable if you paid attention. However, the class is way better if you go in with a friend as there is group work",
        "I feel like this class basically just exists to teach you recursion, but that's an important and tough concept so.Love Ian. Hate Racket.I wish the advanced tutorials had been something other than the interpreter week after week cuz it got kinda boring. I also feel like the synchronous lectures were basically just repeats of the Panopto lectures, and as such they weren't suuuper helpful...",
        "If you're going to take this class remotely, be prepared to watch a lecture's worth of material to prepare for the same amount of time in a synchronous class review what you just watched. I thought that was super frustrating and was generally pretty useless. That said, Ian and the TAs are all so helpful and competent, they're really willing to guide you through problems step\u2013by\u2013step, and they're available essentially around the clock. The workload is pretty light too, maybe a couple of hours on a weekly assignment and super short micro quizzes 3x a week count for ~70% of your total grade.",
        "This course was nice because I got to rewatch any lectures I had issues with as well as the numerous TAs who help if you have any questions.",
        "The course was very basic in terms of the concepts and material that it taught, but that's to be expected. The live lectures went over the exact same material as the lecture videos, so the live lectures were kind of pointless apart from potentially providing a platform to review and ask questions about the material in the lecture videos.",
        "There was an incredible amount of support which was important as someone new to computer science. There was also a big emphasis on hands on learning rather than just lectures and tests.",
        "I hadn't done any coding in a while outside of the homework for some McCormick courses, so this course was a decent refresher on fundamental concepts.",
        "I thought this class would be a lot harder than it was, but Ian made it very simple and easy to understand. Some of the coding assignments could be tough, but there are a lot of office hours to get help in (some can be a hit or miss). Overall, it was a very manageable course. The only minor issue would be the microquizzes, since they are only worth about 1\u20133 points on average, but a bunch were dropped at the end.",
        "Ian is once again an amazing person and lecturer, and this course was awesome. As long as you keep up with the lecture videos you'll understand racket, and assignments are very reasonable as well as the microquizzes. I sometimes felt that lecture meetings were kind of a repeat of what we already watched at home rather than a chance to introduce something else or talk about questions, though. I know Ian loves racket and he has good reasons for using it for this course, but I still can't help but feel that it's not a great language to start with since it is so different from most other common languages.",
        "As someone who learned most of his coding outside of the classroom the course helped me clear up some of the fundamental cs basics that I often neglected when simply coding for a goal. For example, learning the difference between functional and object oriented programing.",
        "I enjoyed this course overall as it allowed me to delve more into computer science. Racket as a language, however, is quite difficult to understand.",
        "This was overall an easy class, especially if you have any coding background. The live classes were really boring because they were completely review from the prerecorded lectures that we were supposed to watch (even the same slides). There isn't much work to do for this class, which was nice.",
        "This course was great. The structure required a bit of extra time as we'd watch the lectures outside of class and then have class meetings where we went over examples. However, it actually helped in reinforcing my understanding of the material. The homeworks were easy enough where I was never worried about finishing but they were challenging enough to where I really felt like I had learned the material when I was done. Ian was a wonderful instructor and I highly recommend taking this course if you need a requirement or are just interested in CS.",
        "Very much recommend this course. The content was well paced, and the assignments were engaging.",
        "The course was enjoyable and interesting. Ian was very understanding and reasonable with grading and workload.",
        "Ian is the GOAT. He is understanding of the difficulties students face and he adapts as needed. He is also great at communicating with students and is quick to answer questions and offer help. Overall, an enjoyable class that can be difficult but is more than manageable.",
        "Ian is awesome! He truly wants everyone to do well in his class. I had no coding experience whatsoever going into the class, and did just fine. So, if you're nervous about being behind don't worry\u2013\u2013 the class is taught at a beginner level. Definitely utilize office hours\u2013 sometimes the TAs were confused too, but (most) of them were very helpful. Also, my troupe was the best and I wouldn't have gotten through the class without them. I signed up for this class reluctantly, and now I want to be a CS major!",
        "This was a great course, with a fantastic professor. Ian was able to make the class feel small using troupes and in\u2013class exercises, despite the number of students being around 300. This class was a great introduction to programming, and it was pretty much a grade booster for most people.",
        "Nice class, really easy if you had a decent amount of experience with programming before. Racket will take some getting used to but it can be somewhat fun for certain things, actually.",
        "Racket be a frustrating language to learn, and that's mainly due to the absence of external resources on the internet (outside the Racket handbook itself) dedicated to helping students understand it. That being said, Ian usually doesn't ask you to do anything too complex with it and a lot of the homework is pretty basic applications of the code that's covered in class and the lectures. The bulk of the grading is very small 1\u20132 question quizzes every other day and weekly assignments, both of which are very manageable. Ian's a great teacher as well.",
        "The professor is really cool. The class is not really hard, but it still requires you to put some time and efforts in it. At first Racket is super confusing, but after you get used to it things will be much more clearer.",
        "If you've taken CS before, you may find Racket pretty annoying. It'll get better as you go on. Note you are not trying to learn the language, but to strengthen the concepts. You'll learn a lot with that mindset.",
        "This course was designed really well, and I learned a lot from each lecture. CS 111 was a really good introduction course to take, since Ian helped us understand the meaning behind certain approaches and the evolution of human\u2013computer interactions. I definitely feel that I learned a lot beyond just programming, and was intrigued by the culture around computer science. In addition, I was really struck about how much Ian sincerely cares about his students. It felt that CS 111 was one of the only classes to have made accommodations due the new remote nature of the course. Ian provided us with multiple ways of getting clarification on the class content, and the pretty regular opportunities to get help at office hours was also nice. More than other courses, there was a community around CS 111 due to the material. I am excited to explore other computer science courses in coming quarters.",
        "I enjoyed this course as it gave a basic introduction to the core concepts of computer science. I thought Ian was a great teacher and always tried to help students. It doesn't take up a lot of time and is beneficial if you are looking to minor or major in computer science.",
        "Overall pretty solid course.",
        "I hated the format of this course. The reversed class format was not as helpful as it should have been \u2013 going to class felt like a waste of time in the end. Tutorials and homeworks was where most of my learning came from, and I never felt like lectures really helped me get through them.",
        "My only prior programming experience was APCSA. I think this class was really good. The weekly assignments were challenging but still doable, the microquizzes were simple but a bit annoying, and the tutorial sessions were useful. Learning Racket was a bit of a struggle at first but it gets easier once you know the basics. But it's definitely very easy to slip up and cost you some points. Make sure to test your code thoroughly and don't miss the microquizzes. I think anyone could succeed in this course, especially since there are several TAs to help out during office hours and there was also a Discord server. I think Ian is a really cool prof and he did a great job of making this class virtual\u2013learning\u2013friendly.",
        "This class is straightforward and very forgiving in terms of the microquizzes and tutorials. I did not need to spend much time studying or doing homework outside of class except for the final project, which I actually enjoyed doing compared to an exam.",
        "Ian is great and is really approachable. Since we didn't have any exams this quarter, it was really easy to fall behind since the daily quizzes could be completed without a comprehensive understanding of the material. This class is an easy A, but it is up to you to make sure you learn the content, because you can not understand much and still get an A as well.",
        "This is not a challenging class, and the concepts are quite simple and fundamental.",
        "I enjoyed it. The language it presented was very interesting, as it presented aspects of programming that I had always wanted to be able to use, but had never found a language that supported it.",
        "Overall, I thought this was a pretty decent class. None of the material was overly complicated, and the worst it got was doing recursion (and even then, it wasn't too hard to get used to). Even if you haven't taken a computer science course before, I think you'd be perfectly fine taking this (though CS 110 is always an option as well). Grading is overall really fair:40% Assignments (one per week, a couple hours each)30% Microquizzes (one the day after every lecture, 5\u201310 min each, bottom 10% are dropped)20% Tutorial Session Participation (one per week, and you just have to make an effort on the material to get the full grade)10% Final Group Project (we got a couple weeks to do it, and the requirements were far from impossible)For the tutorials, I don't know that I'd recommend doing an advanced one (as opposed to classic). While my TA was very nice and helpful, the material was honestly kind of useless. We spent most of our time learning how to write Racket inside of Racket, and I frankly couldn't tell you how almost any of it worked. Advanced tutorials are supposed to be for people who've done computer science previously (AP, etc), but what we did ended up just being mostly frustrating and irrelevant to the course material.",
        "Really great introductory course for computer science that strengthened my interest in the field and made me think of programming in new ways.",
        "I thought that this course was a good introduction to computer programming even though Racket is a difficult language to work with. Learning recursion right off the bat will probably serve me well.",
        "It's a good class with a good professor but the language is pretty weird and felt sort of useless to learn. The class was prerecorded lectures and class time was spent reviewing and doing group activities.",
        "I thought this was a pretty interesting course and it did a good job of helping me build my Computer Science knowledge. The class uses Racket for a programming language and while it's a bit weird a first, you'll get used to it.",
        "It is frustating learning a language that you won't use practically in the real world. We learned a lot of the fundamental concepts of cs, but when it comes down to practicality, it was lacking. Also, I sometimes struggled with the way the material was taught. If you already know a good amount of cs, it might not have been confusing, but a lot of the times, the way things were worded, presented or explained weren't easy to understand.",
        "Ian is a great professor and this course is easy to do well in and learn in. The exercises are fairly straight forward and go along with the lectures seamlessly. If you're looking for an introduction to coding, this is an excellent option. Racket is definitely a bit strange but Ian makes it work.",
        "its a fine class. find someone else in the class to work together on stuff with",
        "Even though you will not be using Racket much beyond this course, this is an exceptional class for anybody interested in learning the basics of Computer Science! Ian is a wonderful instructor, and this class covers all of the essential subjects. The workload is not intense \u2013 you will have to do weekly assignments that cover that week's material, and TA office hours are extremely accessible if you need help.",
        "This course is pretty chill in terms of workload. Ian teaches through powerpoint, which is a little frustrating in a CS class, but he's really understanding and reasonable when it comes to expectations. He's also probably the only professor I had this quarter who really understood the mental toll Zoom University takes on you, and he adjusted the course and the grading accordingly. The final project was a lot though.",
        "A great intro class to computer science. Ian is a great instructor and you really do learn a lot in this class.",
        "The best way to describe this class is that it's just such a low priority that you think about it less and less.",
        "Prof Horswill teaches well and is nice in class and out of class. He was great with accommodating you if the situation called for it. Learned a lot but it was a lot of pre\u2013lecture videos to watch.",
        "I had heard that 111 was pretty hard and that Racket was an awful language, but I didn't find either to be true.  Granted I took 110 before this, but honestly, I found this class easier than 110.  Racket does take a little bit to get used to, but it's really just a basic and straightforward language.  I really enjoyed Ian's teaching as well.  Very responsive to questions (in class, discord, etc.) and is just a cool and chill guy in general.  I can say that 111 went much better than anticipated.",
        "The course itself is quite interesting, and for someone new to CS you will certainly learn a lot. Prof. Ian is great and his lectures and classes are interesting and informative. Racket isn't the nicest language but it gets the job done.",
        "Ian is a great professor and the TAs are very helpful! Make sure you do the assignment earlier in the week because I would do them last minute and I'd always get stuck.",
        "Ian is a very good instructor. Going through the slides was very helpful for the hw assignments. And the hw assignments were very helpful for really understanding the material. I didn't like the fact that we had both prerecorded and live lectures (it takes longer time than planned). The prerecorded lectures were very helpful for understanding the material.",
        "I thought that it was very helpful in learning the logic behind coding and how coding works however I would say that Racket was not fun. Racket often times made things more confusing and maybe another language would work better.",
        "I liked this course because it was mainly working at your own pace. The assignments were manageable but appropriately challenging.",
        "In my opinion Racket is a questionable language for an intro course but I can understand some of the logic behind it. The choice to use the Racket student languages was even more questionable, especially towards the end when we started doing more complicated things that the student languages don't support. This resulted in some features being hacked into the student languages which was less than ideal. On the other hand, the topics covered in this course were definitely the right concepts and it gave a good look at some of the different specializations within CS. Overall pretty good, but I do think the level of challenge could be increased a bit.",
        "This course was certainly what I expected to be as someone who has studied computer science before; it was a nice review of concepts I already knew, effective at teaching me a new language, and effective at teaching me what it means to program functionally.",
        "Great instruction, Ian is fantastic at explaining things, the size was just rough to have a faster paced course if you wanted it.",
        "Racket is a unique language. It was very different from languages that I used to learn, but learning Racket expanded my understanding of computer programming.",
        "This class was structured differently than normal due to virtual teaching. It was a flipped classroom, with pre\u2013recorded lectures to watch before class and then class consisted of doing examples. For grading, we had canvas quizzes 3 times a week, assignments, tutorials, and a small group final project. Overall, I think having the class via Zoom was helpful to see Ian\u2019s screen when coding.",
        "This was my favorite class this quarter. Ian is a fantastic teacher and very responsive to students' needs and questions. The pacing was slow to start, but I'm grateful for the class's approach to the virtual learning scene. Bravo.",
        "CS111 is a required course for all people interested in CS, it teaches the basics of programming. It's well structured and the professor knows what he's doing!",
        "I wanted to learn how to code and I did so I was happy about that. I was a little disappointed we didn't code in a more practical language but I suppose that's what the following courses are for.",
        "Ian is an extremely understanding professor. Considering I had a lot of workload in other classes, this particular class was way easier to handle than the others. The only slight issue is that we have 1\u20132 question quizzes 3 times a week that are worth a substantial amount of our grade. So if you do not understand the material, you could lose a lot of points from those. However, some are dropped which is extremely helpful.",
        "Very basic stuff if you have already taken APCS. If you haven't, the course material is explained thoroughly and quite well. If you pay attention as someone new (or rusty) to CS, you should do very well. For more experienced people, it should be very very easy. They also didn't make us use Lockdown Browser, which was a plus.",
        "I thought this was a great class. I definitely enjoyed learning the language even though Racket is a difficult language to understand. I did not enjoy the microquiz system because each quiz is only a few questions and if you miss one question your grade drops significantly. Otherwise, the class was great.",
        "The class is what you make of it. If you really want to learn Racket then you have to manage both taking the time to learn the concepts and pushing through advanced student questions to ask something simple. I simply did not vibe with the class layout.",
        "Having no familiarity with computer science prior to this course, having a teacher who would slow down to explain topics more clearly was essential.",
        "I thought that Ian taught the course very well! He is also very approachable with questions and always stayed after class to answer them. Overall a great class!",
        "For students taking this who are already at or above an APCSA level:You will probably be bored the majority of the course. This particular course took place during COVID(which it hopefully will be in person in the future), which allowed me to not go to any lectures. You will probably end up doing the same if you already know a decent amount of programming. If you are scared of the \"recursion\" part, don't be. It sounds intimidating but is not too difficult in reality. I thought imperative programming would be a completely different viewpoint for coding, but by the end of the course you effectively are just using racket for OOP.For people taking this as their first CS class:It probably won't be particularly fun at first. Coding has a difficult learning curve, but this class is a pretty decent intro class. If you are thinking that you just want to learn coding and take one cs class, from the people I have talked to, 110 is a better option for a one\u2013and\u2013done CS class experience.Also racket isn't fun or intuitive, but you get used to it and it become easier and less painful.",
        "Good class. Comp Sci isn't for me, but I liked this class. Easy A even with no experience programming.",
        "Honestly, this was a fun class! I think people are probably going to have mixed feelings about the pacing/difficulty because people with lots of coding experience are going to think it was way too easy and beginners are going to think it was hard, but I feel like that's just kinda how it is for intro classes. Personally, I started off with very little real coding experience (I basically only knew a little HTML/CSS), and I found this class difficult but manageable. Even if you don't know anything at first, you'll be able to more or less write basic programs by the end of the class if you put in the work, which is pretty neat :) The assignments really help solidify everything you learn in the lectures, so as long as you take the time to actually understand the content and do the homework, you'll be fine! Everyone hates Racket when they first see it, but once you get used to it, it's really not as bad as people say! We just like to complain lol. If anything, I think Racket was actually really helpful because you only need to learn a few basic components and you can build those up into more complex programs. Plus it's designed so that you can think of everything like a function, so it really helps you get the hang of functional and imperative programming. Ian is a really fantastic prof and a lovely human being! My fav part of class was seeing his cats barge into the Zoom <3 He's very knowledgeable and passionate about CS, and you can tell he genuinely cares about helping us learn. He does a really good job of explaining the main concepts in a way that's engaging and easy to follow, and he's always willing to answer any questions you might have. Virtual learning just sucks in general, but I think he did a great job of accommodating for the situation and making sure we weren't super overwhelmed with work, which I really appreciated given how stressful this quarter was for everyone. I would definitely recommend taking this class with him if you can!",
        "It is was a good review of fundamental CS concepts.",
        "The class is very fair, and Professor Horswill is an extremely kind professor. He teaches with clarity. One of the best parts about this course is the number of TAs present. There will almost always be around 8 hours of office hours everyday. There are a lot of resources for this class.",
        "This class can be a bit frustrating and challenging when trying to make your code work. However I think if you make an effort to understand the videos, use class time to ask questions about the slides/videos, start the homework early, and go to office hours when necessary, then you'll be fine. Troupe members are also a good resource to ask for help or understanding from. This was definitely my easiest class this quarter (from a Mccormick student)",
        "The learning process was fairly paced enabling enough time to digest the material.There was enough time and resources to practice outside class.",
        "I really enjoyed this course and found the work very interesting. I think I was able to learn a lot about the subject.",
        "This class was a great intro class. Coming in I had minimal CS experience and felt like lots of other kids already took AP CS in high school or another coding class, but it did a great job of bending to the level of each student. Professor Horswill encouraged questions for beginners but also helped with more advanced coding as well. Make sure you attend each tutorial, and don't skip the first couple of micro\u2013quizzes (those are the easier ones so make sure to do well on them). The final was also lots of fun, and I was able to make new friends despite the remote environment.",
        "I definitely learnt more about how to think like a programmer. I had no issue following the class structure, and if I ever had any questions, both Ian and the TAs were very easy to reach out to.",
        "Pick your troupe wisely and take advantage of office hours if needed. This class is very collaborative if you allow it to be.",
        "I honestly still don't know the benefit of starting off with Racket vs a language like Python for an introductory class.",
        "This course is great for introducing students to computer science. Low stress assignments and Ian is the nicest professor. Definitely did not regret taking this class.",
        "Overall, the course did a decent job at going over some basic programming skills such as recursion, inheritance, and functions. However, sometimes the professor would explain things in a really confusing way, or not go over something well enough and I would be confused on the exercise (which the later ones did a good job of challenging me). But Ian is really nice and hes happy to clear up any confusion over anything, and will try to help you as much as possible. The class is a pretty easy A, as long as you pay attention, but be prepared to be a bit confused on the recursion segment of the course, especially if you have never programmed before.",
        "The class was organized great, especially online and especially with a size of 300+ students. Ian is great at communicating the lesson material, and really held all of the organization together. There are lots of TAs you can go to for help if you get stuck on the homework. Great class, coming from a beginner in programming.",
        "Racket is really weird, but you have to accept it. You will definitely understand how it works by the end of the year. Something I wish I did was to follow along during Ian's lectures, I think that would have helped me understand the concepts better. Go to the tutorials and follow along with the professor and you're set!",
        "As someone who has no prior coding experience, this class really helped me learn the fundamentals of programming, and is a good basis for anyone who is remotely interested in coding in the future. With no prior experience, the language used was fine and not too complicated for a beginner to learn, and most of the TAs are very helpful for when you get stuck.",
        "This course covered fundamental concepts via Racket, which was an interesting and new way to learn computer science.",
        "The structure of the course was great",
        "Micro\u2013quizzes and weekly homeworks constitute the majority of your grade, and you have plenty of time to complete them and lowest scores are dropped. Tutorial sessions are pass/fail and pretty fun.",
        "This course was structured very well. The Panopto lectures watched before class were pretty clear on their own and were solidified in class when Ian would go back over them. The exercises were challenging but the instructions and ideas were clear which made them a lot easier.",
        "Good content, nice professor, didn\u2019t like micro quizzes.",
        "Prof Horswill did a very great job with teaching this course. His lectures were very interactive and you could always ask questions, either in Discord, on Piazza, or by going to office hours, which were there basically all the time during the week.As long as you put the work in to understand the material, this course is an easy A. There's not much else to say besides that.",
        "CS 111 is definitely manageable compared to other first year classes, especially if you have some prior experience with CS. If you pay attention during lecture you should be fine \u2013 the homework programs in CS 111 are much easier than the homework programs in EA1.",
        "The structure of the course was well\u2013planned and Ian's teaching is easy to understand. Microquizzes were weird at first but once you understand what they're asking they become a lot more manageable. I definitely learned a lot in this course and even though I came into it not sure if I even wanted to pursue CS at all, this course made me like the subject a lot more.",
        "Ian is a fantastic person and professor and truly cares about his students. The course is taught with a student version of a language called Racket which is very odd. I wish it wasn't taught in this language, but that is what the department has decided on. The course does teach fundamentals pretty well, but the language won't be too helpful in the real world.",
        "This course was rocky, at first It did not pique my interest and wasn't like what I thought it would be originally, but as I kept learning, it was more understandable and the coding assignment became more fun and enjoyable.",
        "Professor Horswill is the coolest and most approachable professor I've encountered here. Not just because he does video game research or whatever, but because he answers any questions asked to him and never makes students feel like a nuisance. I really appreciated that.lecture IS a discussion section; it's hard to learn from lecture activities unless you really understood the (hour long) lecture videos you'd have to watch each week. So make sure you watch the lecture videos!",
        "I think the course was okay. Ian is an amazing professor and is very passionate. The lectures were optional and I stopped going to them halfway through the quarter because he had prerecorded lectures that were half as short as the live lectures. The weekly projects can sometimes take a bit. I started off doing them in a few hours but then it became somewhere between 6\u20138 hours. It's not hard to get an A in this class since Ian gave us a few extra quiz drops due to the election. I personally very much dislike Racket but other than that, it's a good class for beginners in CS.",
        "i thought the troupe idea was one of the biggest pluses to this course, especially with online learning. being in a group of people who can all discuss issues theyre having is really useful. the tutorials were also a good way to refine what you may have learned in class.",
        "This class is amazing! Ian is awesome, the homework is easy but helps you learn, the class is structured well is is very engaging (weekly tutorials, and troupe activities). We even had a mental health week where there was no homework and optional quizzes.",
        "I loved the course, and was grateful that Ian did an alternate time zone meeting. Some of the concepts were a little harder to grasp at first, but tutorials also really helped us out!",
        "I really liked the course. Ian is awesome and explains things very well and is always willing to answer questions during class time. The course material isn't too bad, recursion can be a little tough but Ian made it pretty easy to understand overall. Final project is pretty fun in my opinion, you get to work with your friends and its pretty open ended. Overall, great class, especially with Ian.",
        "Great class but weird language to start off with.",
        "While this course was mainly review for me, I think it was very well\u2013taught and well\u2013organized, especially after the first 2 weeks or so.  Ian was a very considerate and helpful professor, and I gained more appreciation for the Racket programming language during this course because of his teachings.",
        "I took this class as a complete beginner and boy did I struggle. I probably should have taken CS 110 not 111 \u2013 no idea why I chose this course over 110. The virtual structure of the class was recorded lectures to watch before class, and then Ian would basically repeat the lectures over Zoom. Then there were (almost) daily microquizzes and weekly assignments. No midterms and just a final project. I started skipping the zoom lectures because they were so similar to the recorded ones and it was difficult to learn anything by just watching slideshows. The weekly tutorials with TAs were helpful but overall I found myself spending hours late into the night trying to figure out how to do the weekly exercises. It was extremely stressful and by the end I felt like I was just floating through the class without absorbing anything because I just had no idea what I was doing. My grade didn't suffer thankfully since I was able to do well on the exercises, but I'm just leaving this class with even LESS interest in CS than I did before and the pretty useless skill of operating racket. Ian's very chill and nice but if you don't have experience in CS don't take this class.",
        "Ian posted all the slides on canvas which was immensely helpful. BIG fan of the panoptos, since we could go back to them and relearn whenever necessary. Genius idea to have troupes, since it solves so many issues with online learning (like difficulty making new friends, not enough practice, etc.). Discord, tutorials, TA office hours were all very very helpful. I think the way this class was organized could not be any better. Racket just takes a longggg time to understand. Transitioning from thinking about problems from a java lens to a racket lens took some time.",
        "this class is very easy to get a good grade in even if you put the effort in and keep up with the lectures.",
        "The exercises are key in maintaining coding fluency. These by far taught me the most.",
        "The instruction was great, though the lectures were pretty boring/pointless because it was just going over Powerpoint slides instead of example coding. I really didn't like Racket, but the course wasn't difficult overall.",
        "The course was very low maintenance. Weekly assignments that you can get a lot of help on from TA's and quizzes every other day that arent bad really.",
        "I know the quarter system is fast, but this class was a pretty abrupt \"Welcome to Northwestern\" class for me as a first\u2013year student. I think I just didn't know what I was getting myself into. This was one of the classes where I just tried to take away as much as I could even if it meant I was behind in the mastering the concepts in class.",
        "The course is interesting and Ian did a great job as a professor. I don't think Racket is the most useful language to learn and this course will probably not be enough as a prerequisite for a course like 211. That said, I believe anyone interested in CS will find this course interesting because it will make you think in a slightly different manner.",
        "It was a very simple structured class, but sometimes the amount of videos we had to watch would be very high, especially when you're only given 2 days to watch them and it's very easy to fall behind and never catch up. If you have zero coding experience, you might struggle in this class a bit, but it's still doable.",
        "As a potential CS major, I enjoyed the class. I was surprised though when I found out it was in Racket, as it seems like a useless language. While I'll never really use it in life, the concepts were taught well and I know I'm set up well for the rest of the sequence.",
        "This course is a great introduction to those who haven't had any experience in computer science or programming. I personally didn't enjoy programming in Racket at all, but I'm sure there is a good reason why this class is taught in it.",
        "This course is really awesome and there is just so much support. I never felt stuck on assignments because there were always TAs or lecture videos that I could turn to for assistance.",
        "The course was a very good introductory course. It followed a great progression from conceptually understanding code to coding more advanced things.",
        "As someone with no prior CS knowledge, I thought this course was pretty good at introducing it.",
        "This course was really enjoyable.Ian Horswill was a really fun and accommodating professor with a great sense of humour. He's the type of professor that really cares about his students. Just one example, he gave an alternate class meeting time for those students in the Eastern Hemisphere due to timezone issues. It was at 10 pm his time, which I found to be super nice of him and definitely helped me to learn more in the class. I found Racket to be quite an easy language to understand given that I've had no prior programming experience, but I have heard from others that it may be too simple to the point its counterintuitive. The latter mainly came from those who have had prior experience with CS so I guess it comes down to personal preference. While some of the exercises were quite challenging, the documents explaining the exercises will generally guide you through what you need to do and provide some hints.",
        "I found Racket a little difficult to understand, but the TAs really helped.",
        "Overall very easy class if you have previous programming experience. Only challenging thing is getting used to Racket syntax. Ian is a very nice professor and class is enjoyable. Recorded lectures are not really necessary to watch. Work load is low. Advanced tutorials are also pretty interesting and makes the material a little bit more challenging/fun.",
        "good stuff",
        "I came into the class having never done anything with computer science and I really enjoyed this class. It wasn't hard, challenging at times, but never were you felt that computer science wasn't meant for you. The assignments were fun to work on and bring accomplishment once they worked, and the TAs were always more than willing to help on those when you were stuck, even if you simply didn't know where to start. The final project was also really fun.",
        "I largely found the lectures to be quite easy along with the quizzes that followed. The tutorial is what gave me a good challenge, which was also the most interesting part of the course.",
        "A pretty interesting course that keeps you engaged and active with the content.",
        "I was very impressed by how this course excelled in teaching in a pandemic. I felt like this class was one of the few classes to change the class expectations to reflect the differences in what can be expected in an all online learning environment were it is harder to get help versus normal times. On top of that, this class had TA hours throughout the week so that you could always find a time to get help if needed.",
        "I really enjoyed this course! While being in a big zoom lecture can be a little boring, the assignments and content were very engaging and the course has inspired me to pick up a CS minor.",
        "You never get to actually code something useful. I literally could not focus on any class because it was so boring. Ian is great though. One of the best professors I have had, he really understands his students.",
        "This course was a really good introductory CS course. Professor Horswill taught everything very well, but if you have some coding background, don't expect this course to really challenge you.",
        "Really enjoyed this class. Racket isn't super fun to work with or very practical, but even as someone with very little coding experience I was able to get the hang of it. Ian is great, and the entire support network of TAs he has is an awesome resource. Not a whole lot of work for this class, which is nice.",
        "If you've never had coding experience it's not an easy A. Make sure to go to office hours and get help.",
        "This class is what you expect for an intro CS class. Some people are not the biggest fans of Racket/Scheme (the language this class uses), but it's not that bad. You just need to get used to the syntax a bit. As someone who had previous programming experience, this class was not that hard. Most of these concepts are from AP CS, but just using functional programming. If you coded before, this should be an easy A for you. Also, grading is very fair. It's pretty just assignments, quizzes (pretty simple), and showing up to tutorials.",
        "This was an interesting course. I think it did a good job of teaching the fundamentals of computer science in a way that made sense. However, it felt kind of unnecessary to teach the class in Racket, a language that is not really used to my knowledge in the real world. The professors do a good job of explaining why they made the decision to use it, as it provides a good way of introducing all the core concepts that most other programming languages are built upon and I actually agreed with them. Racket does a good job of forcing an understanding of computer science fundamentals. However, I still don't think it's worth it. I feel like the costs of using Racket to introduce students to CS outweigh the benifits. I would've rather spent the quarter learning a more popular language like Java or Python instead because I feel like the points this class tried to teach with Racket would have also been doable in more mainstream languages.",
        "The workload is fairly light \u2013 lecture microquizzes weren't all that bad (although there were frequently errors in them which was kind of annoying) and I actually had fun doing the assignments. Racket is a nice language for teaching basic concepts of programming, but I don't know that it has a lot of real\u2013world applications and I don't know how much value there is in making experienced programmers learn it.",
        "The material covered a lot of key topic in programming and was framed in a way that made it easy for a beginner to understand what was going on. The pace never felt to fast, and it never felt like there were gaps in the content.",
        "This class is very much manageable as long as you attend lectures. And if that isn't enough office hours can provide to be really helpful.",
        "This course is a very good intro course for Computer Science, but it starts slow so anyone with previous coding experience will likely find most of the course not challenging and overall boring.",
        "This is a chill class. Not much work is needed for this class other than going to the lectures. The only thing that you might struggle with is the programming language itself. Racket is not intelligent and not intuitive.",
        "Not only were the lectures very short, digestible, and interactive, but they are also extremely informative and fun to learn. To me, that is the hallmark of a great course and a great instructor.",
        "This is a very good course to take, especially if you are a freshman. Racket takes some getting used to if you have worked in other languages before but once you are over that initial hump, it is pretty straight forward. Not a high stress course. A bit redundant between recorded and in person lectures, however.",
        "Course teaches the fundamentals of CS. Makes you think very conceptually.",
        "Fair class, Ian is a great professor. Not a fan of racket, don\u2019t underestimate it.",
        "This course is great. Ian is goated.",
        "I really enjoyed this course. It was interesting, it was not hard to be successful in, and it was really enjoyable to do work for. Ian was an amazing professor, and I liked this class so much that I wound up deciding to major in computer science after all (was already a passion of mine \u2013 but this class reminded me of how fun it can be). It was definitely easier for me because I knew CS coming in and had taken AP CS and done programming on my own. I never struggled w/the work but there were definitely other people in the class who did. So, it's an easy class if you know CS but might be a bit more challenging if you don't. Still, it is not a hard class, and there are a lot of built\u2013in aspects that make it easy to do well in (quiz drops, automatic extensions, etc). Advanced tutorials were pretty challenging though. Also the quizzes are a huge chunk of your grade but often only one or two questions, so make sure to do well on those!",
        "I was very pleased with this course and especially grateful that he offered advanced tutorial sessions that stretched my abilities.",
        "Ian is a great professor! He is very supportive and encouraging, and allows 48\u2013hour extensions for projects without questions asked. Microquizzes can be hard sometimes, but he also drops the bottom 10% of your quiz grades so as long as you don't bomb every single quiz then you should be fine. One thing is though, the pre\u2013recorded videos on panopto overlaps with our zoom lectures quite frequently, so it feels a little boring sometimes having to watch a lecture before class just for Ian to repeat the same material again with no substantial changes. There are also a lot of power user questions that were present during our meetings that kinda excluded people who have no prior experiences with coding.",
        "This course introduces Racket well, but learning some concepts yourself would make coding even more fun. As usual with learning to code, actively learning and writing interesting code would make the class fun for any student.",
        "If you have any programming experience, this class is mostly review. Racket, however, is a pain and Ian's method of teaching programming (through powerpoints) is not the best. The programming assignments were always straightforward and didn't take too long if you paid attention in lectures and class meetings. The tutorial sessions are also very straightforward and the TAs are willing to help",
        "I liked how the instructor and the TAs were all low stress and always helpful and ready to assist in a students' struggles.",
        "I learned python extensively before. The content of this course did not make much sense to me at first. Racket is a very complicated, but unnecessary coding language. However, the teacher did a great job managing all of this. Overall, not a hard course.",
        "This course is a good introductory course in computer science. Ian is an awesome professor and incredibly nice. I think that if you have any programming experience at all this course will be quite easy and there is not a lot of work at all. I sort of wish they allowed people to petition out of it, but it was interesting to learn about programming in a functional programming language.",
        "I don't think this class is absolutely necessary. You do learn the fundamentals of computer programming, but I think you'd be better off taking a class that taught another program.",
        "Ian is a great professor who will guide you step by step in learning how to code. HIGHLY recommend this class with Ian.",
        "I loved this class. If you have a free slot in your schedule and have any interest in programming I would highly recommend it. Ian was a great professor and highly accommodating given the challenges of remote learning.",
        "I feel as if I am more confident in learning a new coding language than I was before.",
        "Great course! Pretty easy even with no proper programing experience, as long as you go to lecture!",
        "I was new to computer science and plan on majoring in computer science, so I was really looking for a course that introduced me to the topics of computer science. Racket wasn't my favorite language, but it helped me to learn the general ideas of coding.",
        "Taking 111 with Ian was pretty great. He is a great professor and would answer nearly every question. The course is taught in Racket which was weird at first but you get used to it after a bit. Workload is very manageable, one homework assignment a week that doesn't take too long.",
        "It's a fun course if you could get over the Racket programming language syntax. It's really not bad at all and frankly simpler than other mainstream languages. Ian is an awesome instructor and makes the class very interesting. The homework is decently challenging but doesn't take too long to complete. There are daily micro\u2013quizzes that can get annoying if you forget to do them often. You also have programming \"tutorials\" with TAs that are ok... probably the weakest part of the course since they're basically supervised homework. The final project is fun if you work with a group.",
        "Learning Racket seemed like a pain at first, but I really liked how it helped everyone to start at the same place. Racket seemed annoying as it was really easy to miss a parentheses and get a syntax error. However, at the same time, it helped me become a better programmer and taught me the importance of writing a more concise and well\u2013structured code.",
        "I really enjoyed this course and feel like I learned a lot. While Racket can be kinda annoying, Ian is great, and the course really sparked my interest in CS even more.",
        "Definitely a lot easier if you've taken a computer science class before. Racket is a hard language to wrap your head around, but it's not too bad once you get the hang of it. Exercises aren't super difficult, but it's usually a problem solving problem more than anything else. Ian was always quick to answer questions and go through the confusing bits."
    ]
}{
    "course_code": "Student Report for COMP_SCI_111-0_1",
    "course_name": "Fund Comp Prog",
    "instructor": "Sara Owsley",
    "year": "2022",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.50",
        "count": "179"
    },
    "course_rating": {
        "mean": "4.93",
        "count": "179"
    },
    "comments": [
        "Sara is one of the best professors. Really understands the needs of students, gives helpful advice on careers and just navigating the CS class successfully. She dropped some of the lectures during a week which was difficult for students cos of midterms and all. She held one on one student advising sessions which were really helpful!",
        "I really enjoyed this course. I was a little bit familiar with coding before taking this class, but I feel so much more comfortable with it now. Sara is a great professor who cares a lot about whether you understand the course material. She is so good at answering questions and makes herself available if you ever need help. There are also so many peer mentor office hours which makes it really easy to get help if you are stuck on homework or studying.",
        "The professor was amazing. The course load was very manageable but the tests were very challenging.",
        "I personally don't prefer the asynchronous style of the class, but the professor is very lenient in terms of time given to complete assignments and she clearly emphasizes learning over test\u2013taking",
        "This class was very difficult for me as it was my first Computer Science course. It was definitely not an easy A for me, although it is helpful that about 50% of the grade is comprised of assignments, attendance, and mini quizzes, all of which are simple to gain full credit for. Professor Sood is a very helpful instructor and she wants the best for her students. The TA's are really attentive, patient, and supportive as well. Definitely go to office hours! I also highly recommend taking this class with friends or making friends to work on the problem sets with. Overall, I would only recommend taking this course if you have experience with Comp Sci.",
        "Low time commitment and relatively straight forward class; not super easy in absolute terms, but relative to other courses this one is pretty easy. Professor Owsley explains the material very well both during lectures and in the tutorial videos, but she does not address questions or concerns too well and always refers you to one of the peer mentors.",
        "This class was fine. Sara is a good prof but the way the class is structured is not that great. First of all it's taught in Racket which while they say is a powerful programming language, is completely useless and you will never use again. It's reversed classroom, where you learn outside of class and work on problems in class, and usually I think this is fine but in this class i didn't like it at all. There are there usually 2 20\u201330 minute lectures to watch before every class AND a canvas Quiz, which would be fine except the class attendance is also mandatory and graded so it's basically just doubling the amount of class. And in class all we do is work on homework/ungraaded assignments, which i would rather just do outside of class, so it would just be better all around if the material was actually just taught in class. Exams are pretty fair so at least there's that. Take this class if you must, it'll be fine and is easier that most compsci classes, but i dont feel like i came out of it with much applicable knowledge and it was pretty annoying the whole time.",
        "I liked it.",
        "Chill intro programming course.",
        "There's a bit of a learning curve at the beginning of the quarter when you're first adjusting to Racket, but the more you practice, the more familiar it becomes. Sara was great at explaining topics and was accommodating; there were also a lot of peer mentor office hours that were super helpful. The weekly exercises were pretty challenging, but nothing impossible with office hours. Overall, I would recommend this course to anyone who is looking to major in CS.",
        "I loved Prof. Sood \u2014 if you want to take CS 111, take it with her!",
        "TAKE THE CLASS WITH SARA SOOD. Only my second quarter here, but definitely one of the best professors. I didn't have a lot of experience going in and the class was super doable, focus during class and watch the videos, you'll be fine.",
        "Sara is a really good professor and she genuinely cares about her students and wants them to succeed. This was a pretty easy intro CS class and I definitely recommend taking it with Sara",
        "I'm not as interested in CS generally and took the class as a prereq for other majors. I have taken a year of java in high school so the class is not a hard one at all; tho it takes some time to adjust to Racket. Weekly exercises are the major assignment; 2 tests each is 20% and these are relatively easier.",
        "Great class, great teacher, great lectures, great TAs, highly recommend if interested in Comp sci",
        "Oh my god Professor Sarah is the absolute best. Take this class with her. She is so helpful, makes sure you understand everything, her lecture videos are easy to follow, and she really cares about you and tried to get to know as many of the 250ish kids in her class as she could. Tests are easy if you study and the exercises are guaranteed 100s if you go to office hours and get them right.",
        "I didn't really like the flipped classroom situation since we didn't really learn much in class, but it was also good because it forced me to get started on assignments that I probably would've started the day before it was due.",
        "Overall, pretty good course. It's a prereq so most people need to take it. It's in Racket which is somewhat odd/different, but you do learn the very basic coding logic. If you're doing python after this, that is much better! Also Sara Sood is SO nice, you should try to talk to her one on one at least once. She is very encouraging, whether you're a CS major/minor/just taking it for different reason.",
        "Engaging",
        "This course requires a lot of self motivation as the lessons are meant to be learning outside of class, and in class is time to work on assignments. I really enjoyed how collaborative this course was. It was a great introduction to comp sci and Sarah was an amazing teacher \u2013 very understanding and supportive!",
        "this class was fine. racket kind of sucks but its not that hard to do well in it especially if u take 110 first",
        "Sood is a great professor and made the course very digestible for someone without any computer science experience. While at times the course felt like it was moving slowly, it helped me ensure that I understood every concept well.",
        "CS\u2013111 is an easy class. Especially taking this class with Sara, she provides the tools for you to do extremely well. If you have had any experiencing coding before, this class will seem like a waste of time. However, if this is your first coding class, then I believe this will be an invaluable experience for you.",
        "Take this course!! Sara is the best professor I ever had here and she really incentivized me to continue pursuing CS. The class is not very hard, especially if you go to some peer\u2013mentor office hours to clarify any doubts.",
        "The course was great and the professor was also really good at explaining the stuff.",
        "People hate rackets for a passion and there's a reason. Language is very repetitive and looks long lmao. Outside of the pure pain from the programming language, instructions are very clear and Sara offers a lot of resources (even outside of the classroom). TA is extremely helpful!",
        "Highly recommend this class, especially with Professor Sood. Honestly, I actually enjoyed coding in racket, but I went into the class with no CS experience. This class gave me confidence and skills to take more cs classes in the future.",
        "Professor is extremely talented at teaching and engaging, I understood everything pretty well thanks to how thorough her lectures were.",
        "This course was fine, however I think that the language used (Racket) is really unuseful.",
        "Prof was very accommodating to the current circumstances of the world and allowed us to submit our work to count for daily attendance rather than going to class. I do wish that rather than making us do modules at night in our own time that she would have taught the content in class and made our mini classwork exercises into homework. I never went to office hours and I did good in the class, but it is important to read the assignment pdfs very carefully.",
        "This course is really fun and an easy intro class if you want to see if you have an interest in computer science. The workload is very easy to manage and there's a lot of peer mentors that hold office hours all the time, so it is easy to get help. Definitely take the class with Sara she's an amazing professor.",
        "Great intro to fundamental programming concepts. I have a good bit of programming experience under my belt and still learned a good bit from the class. Professor is nice and there are many resources for help and answering questions. Be warned, however, that Racket and the IDE it uses are pretty dreadful if you have experience with standard programming languages like C++.",
        "Overall, this course was pretty simple. It does get a little confusing if you don't pay attention to the lecture videos, so make sure you watch those. Exercises were not too bad.",
        "Sara is a great professor, lectures were kind of useless. Attainable A if you dedicate the time necessary, mainly just go to office hours, but more challenging that a lot of people make it out to be, for sure focus on getting a good group",
        "Other than the fact that you are working with Racket, which is just so random that you will not find a single resource online to refer from, I think that this course is amazing. It really teaches you how to think step by step like a machine. Takes it from me, a person who cannot code for my dear life, and I managed to figure a lot of the homework out by myself. Professor Sood does a great job of explaining the code and the way that the machine carries out that code. Furthermore, the homework is much much harder than the exams themselves and they also account for most of our grades, so there is no way that you will walk out of this course failing. Highly recommend the course.",
        "This course is simple if you have previous programming experience. Sara is a really good professor, and you should take it with her if possible!",
        "If you have no interest in CS and are just taking one for IMC or something just take 110 bc its a lot easier.",
        "Learned a good amount!",
        "good class",
        "Sara Sood is amazing! She is really really nice and actually cares about her students and is also really good at explaining everything thoroughly. Definitely go to peer mentor hours too\u2013\u2013they are life\u2013saving. Overall, this class is pretty chill even as long as you kind of know what's going on.",
        "This is a good course for students with no programming experience, and helped me with declaring my major.",
        "This class was required for my major in McCormick, but I'd recommend to ANYONE. Super fun, easy, and interesting. The assignments felt like puzzles to figure out each week, and the work was light outside of class. Professor Sood was awesome as well! \"If there were a bus full of cats, how would you count them?\"",
        "Drracket is not the besstttt code format but you just gotta perserve. Sarah Sood is an absolute icon \u2013 she's an amazing teacher, and always takes the time to help each and every student. There's an exercise due each week and then 2 midterms \u2013 there are many practices on canvas. Have fun :) GO TO PEER TUTOR HOURS",
        "Sorod is a an awesome teacher and makes the class interesting. The flipped classroom is a bit annoying but not awful. Exams were somewhat difficult, but not horrible. Only take this class if you need to though because learning racket is not very helpful or a good way to get introduced to programming.",
        "Professor Sood is a good teacher. The peer mentor hours were very helpful. Because of the flipped classroom structure of the class, I felt a bit disconnected though.",
        "Very easy class, and easy A. Professor Sood is an amazing professor. She is extremely resourceful and good at explaining/walking through difficult computer science concepts. Personally, the only thing I didn't like about the class is that Racket is kind of a useless and annoying language to work with. If you took AP Computer Science, this class will be extremely easy, with most if not all of the concepts being review.",
        "This class was extremely informative and definitely greatly expanded my knowledge about Programming. The course load was manageable and the content was not too difficult.",
        "I was worried I would not be able to follow because I knew nothing of code, but professor was really good at explaining and really cares for her students.",
        "This class is proof that even the most challenging course can be enjoyable if enough help is provided. Thank you to whoever thought that TAs should hold office hours from early in the morning till late at night, EVERYDAY. Sara is the kindest, and funniest lecturer and it was so nice to be able to approach her to ask questions. Thankful that I took this class when I did with Sara and this set of TAs.",
        "This course was definitely challenging but manageable. It was similar to my cs 110 class, except racket was harder to understand than python. But Sara did a very good job explaining Racket and how easy it could be to understand the language.",
        "This course was very difficult to do on your own. IF YOU ARE NOT A COMP SCI MAJOR AND WANT AN INTRO CLASS, I WOULD SUGGEST 110. Professor Sood is amazing, but definitely would not recommend this class if you aren't interested in pursuing comp sci related studies",
        "The professor explains concepts extremely well and there are a lot of peer mentor hours available if you are struggling. DrRacket is just a very annoying language to learn that we likely won't have to know ever again. I would say that that is the only downside of this course.",
        "Although racket is a strange coding language, this was a great introductory course in computer science and definitely sparked my interest in the subject.",
        "I loved this class. Professor Sood is amazing and super helpful!",
        "Overall, a great course. Super manageable, easy workload, but you still learn a lot. Sara is really nice. And there are infinite office hours. I took this course after taking CS 211, because I needed it as a prereq for CS 214. It was an interesting class with very manageable workload, but I feel like I could have learned imperative programming and recursion without having to take the full course. If you have taken other CS classes at Northwestern already, only take this class if you have to.",
        "Flipped classroom style definitely adds to the workload outside of the classroom. That being said\u2013 lecture is often optional depending on your comfort with the weekly coding assignment. Overall  a fulfilling introduction to coding for someone completely new to the discipline.",
        "There were moments when the class work felt very overwhelming. There are parts of this course that feel very self guided and that left me feeling a little lost. That being said its a very interesting and for the most part engaging class.",
        "Sara was an amazing professor, who was understanding of our workload as a student and accommodating for different situations. She and the peer mentors were accessible for help if you needed it. This class was also pretty easy and had a low workload that you could finish in class.",
        "Professor Sood is an amazing professor. She is a very effective lecturer and seems very down\u2013to\u2013earth. In terms of the course, the homework assignments are very doable, even for someone who has no experience in computer programming prior to this class. Lectures are online modules, and class time is usually reserved for group work and asking for help. Going to peer mentor hours is incredibly useful if you need assistance, and there are plenty of peer mentors available. Exams aren't too bad either as long as you study and look at the past exams. Overall, pretty good and doable intro course.",
        "Overall, I was disappointed with this course because the professor made it seem that the material would be correspond accordingly with the tasks but it seemed like there was more time spent on trying to complete the hard assignments.",
        "While racket is difficult to use, I enjoyed learning the topics and they are all apparently important for future classes.",
        "The instructor was great and the flipped classroom structure makes perfect sense for an intro class like 111. The work was very manageable and peer mentor office hours were helpful when I needed help or clarification.",
        "It's a surprise to me that we need to learn new concepts by watching the videos on our own before the class. I didn't like this method at first. But it turned out great. I could pause the video to think about it when I was confused, and I could skip the part that I've already understood. These are things I can't do if it was taught through lectures in person.",
        "3 module quizzes each week, one assignment, workload ok",
        "As long as you keep up with the modules and homework tasks you should be fine. There are so many opportunities for office hours to get clarification from peer mentors that even if you don\u2019t plan ahead to attend one, chances are that there is an office hour happening at that very moment so you can seek help. I would say that doing things like exercises/ studying ahead of time (even just 1\u20132 days before) makes a big difference in terms of office hours because you have a more likely chance of one\u2013on\u2013one with the peer mentors. Only two exams (midterm and final), both of which are very fair and reasonable. BUT if you\u2019re doing this for a distro, would recommend COMP_SCI 110 with Prof Sarah simply because Racket is less intuitive than Python. Sara Owsley is an incredible Prof \u2013 despite the class being roughly 200 or so in size, she put in a lot of effort to get to know her students.",
        "This was an amazing course taught by an amazing professor. It is definitely a really great course for anyone without much CS experience that would like to get a grasp on what CS is all about. It is a very welcoming environment for someone who does not have any background in CS",
        "This course is definitely challenging. The exercises can get tedious so I highly recommend asking the PMs for help in class or go to office hours. Sara is awesome and is really helpful if you have any questions.",
        "Sara was an amazing professor hands down. Didn't really like the idea of learning DrRacket at first but it turned out to be very interesting.",
        "Comp Sci majors can skip this cuz you have to take it anyway. Anyone taking this for another major or out of curiosity, this course may seem scary, but Sara is such a caring and helpful professor that you will feel like a better programmer no matter what. While there are some annoying parts about the course (recursion), it's super rewarding to be able to tear down your fears about programming like you'll do in this class. I encourage you to take this class. Unlike 110 (which I also took, for complicated reasons), you'll be learning in Racket, but I'm finding that understanding how to code in Racket makes you think about learning other languages in a different way, with more of a focus on understanding possibilities (Sara mentioning how to think about constructors, modifiers, etc will be forever stuck in my head) and less on \"how do i do this\". I highly recommend this class, even if to just make you less scared of Comp Sci.",
        "this class was effective and not difficult. sara was super nice and assignments weren't too difficult",
        "This course is great for people new to coding, though I also think it would be great supplemented by a bit of self study on coding logic in order to best prepare oneself for future courses. Teacher was great, and no complaints on material. Easy class, but still useful for learning Racket syntax.",
        "Sara is such a great instructor and the course is super organized. solid intro course that's not too hard but def helpful",
        "Pretty good course! Professor Sood and the peer mentors were super helpful when helping us with assignments. However, I felt like it was very easy to lose a large amount of points on exams for small mistakes.",
        "I didn't have any pror knowldege to coding, so that's the main reason why I struggled a bot in the class. However, Professor Sarah Sood is the BEST! She's so considerate.",
        "Flipped classroom design was low stress but made put a bunch of responsibility on the student. If I wanted to learn a lot, I could, but other times I may have not learned as much as I would have liked to. Mini quizzes were easy as long as the lecture videos were watched. The exercises are definitely manageable given the time and resources given.",
        "Although I was a bit hesitant when it came to using Racket, I found it to be quite instructional and intuitive. I think this course gave me a good foundation in computer science and better enabled me to succeed in any future computer science endeavors. I quite enjoyed the course and am now considering minoring in computer science.",
        "I wasn\u2019t the biggest fan of the flipped classroom, but if you you needed the extra time, it is very good for learning at your own pace and there are plenty of examples to do outside the assignments. If you already know how to code, this class is pretty easy, but if not, there is a lot of support to make sure you get everything. The assignments were pretty easy and the exams weren\u2019t terribly difficult. And Sarah does a good job of keeping class interesting.",
        "I didn't like the flipped classroom. I felt that the reliance on libraries made me even more confused.",
        "This course was absolutely wonderful. Professor Sood is hands down one of the best teachers I\u2019ve ever had. She genuinely cares about each student and is so thorough in her teaching style. Highly reccomend for anyone considering computer science.",
        "I wasn't a fan of Racket, but this class was pretty good overall. I thought it was pretty challening for an intro to CS class, but the plentiful peer mentor hours means you always have help pretty much whenever you want.",
        "Sara is a great professor and teaches the class well, however it is very difficult and you will definitely need to attend peer mentor hours to succeed.",
        "I enjoyed the flip lectures\u2013\u2013 where you watch on your own time and go to class to ask questions. I also like that Prof. Sara was very helpful with the assignments and taught very well.",
        "Overall not a super difficult course. Professor Sood really cares about her students and tries to get to know everyone. The only problem I had with the class was the exams because one question could drop you a letter grade which is frustrating.",
        "I initially thought this course would be boring since I am a CS major and have taken many CS classes but I still managed to learn a lot.",
        "it was great",
        "This class was a breeze but I did feel like I learned a lot. The teacher is very reasonable with the work load and also fairly flexible with deadlines. The exams were cake.",
        "I loved the way we used racket (although it was a bit frustrating at times) and how much I have learned. I was very pleasantly surprised since I didn't like how most of the engineering/science courses are taught at McCormick.",
        "Amazing. Midterms were okay. Content was reasonable. So many peer mentors available to help.",
        "This course was a really great introduction to computer programming. It's super accessible to people with know previous knowledge (although having taken 110 definitely makes the class significantly easier and I'm coming from that perspective) and the format of the class is really flexible so you get what you put in. I especially appreciated class time being dedicated to homework. As for the Racket controversy I get why people complain about it being the intro language and it can take some adjusting when you have a basis in another language but I promise by the end you'll have, albeit begrudgingly, a respect for the skill set it offers.",
        "This is a big jump from CS 110, just in terms of the programming language. Racket is much more different than Python, but definitely manageable.",
        "Very easy class. Watch the videos and do the assignments and you should be fine.",
        "This class was interesting and Professor Sood is great!",
        "I thought the class was very fairly graded. Sara is amazing, however be ready to put some time into the class if you are new to coding.",
        "good course professor is really nice",
        "Course was very interesting including an exercise weekly pertaining to the subject we were learning and videos to help explain those subjects",
        "I had this course with Sara and it was my favorite class so far at NW. She makes the class fun and the work load is not too bad. I definitely recommend.",
        "This course is a great intro course. Not a lot of work and pretty easy as long as you stay on top of it.",
        "Professor Sood was amazing! She really was able to make the class of a reasonable difficulty level where you felt encouraged to think and had to put in effort but also made sure that it wasn't discouraging. She also cares a lot of students' mental health which is so refreshing so you constantly felt really supported in the class as a whole. Overall loved this class and def take it with Sara :)",
        "I went into it already knowing computer science so it was really easy",
        "CS 111 with Sara Sood is an EXCELLENT intro CS course. Racket can be frustrating at times, especially you have learned other languages before, however Professor Sood is amazing and there really are a lot of resources to help you succeed. The course utilized a flipped classroom model, so we had to watch an hour long lecture before each class period. Overall, I recommend this class.",
        "Sara was a great instructor and always helpful! Fairly easy class if you have prior background with any high school CS class. There is plenty of help available for the work that is due and before exams.",
        "Take this class with Sood, she\u2019s the best professor in the department.",
        "Sarah is a great teacher! Her lectures are effective and easy to follow. As long as you keep up with the video lectures, the assignments tend to be pretty intuitive. One thing I will say\u2013 throughout the class, recursion is said to be the most challenging concept, but I happened to find the lessons after recursion to be more difficult.",
        "Sara relies on her Peer Mentors to teach you (PMs have office hours outside of class time and they're designated to help you on assignments, but nearly every time I went on a PM's zoom office hours, the meeting hadn't even started/they don't even show up) and she banks on the fact that people will watch her pre\u2013recorded lectures and then come to class the next day ready to put their new computer science skills or knowledge already to use. She barely does any teaching. I learned how to get by in the class, not how to code in Racket. With that being said, I do have to say that Professor Sood is a nice woman and assesses the progress of the class and caters the schedule to what she thinks students need.",
        "The way the course is designed is great. It challenges you, while giving you all the necessary resources to succeed. It is not necessarily easy though. Professor Sood makes everything better, with her amazing teaching and will to make everyone understand not only how to code, but what the computer is doing while you run your program.",
        "This class was a wonderful introductory course for Comp Sci. It was exactly what I wanted from a comp sci class!",
        "The teacher was great, but it was not an intro compsci course, and the language was really redundant.",
        "The reverse learning style used in this course makes it very difficult for me to personally motivate myself and learn the material. The extremely large class size also compounds this, making it difficult to ask questions and follow along during class time. The saving grace is the office hours, which are organized extremely well and open almost all hours of the day. The TA's are a blessing and help you fill in whatever you missed during class.",
        "The structure and the presentation of the content is very well done where you have video content every other day on the basic ideas and terms needed. Furthermore, there are exercises  that are assignments in place where you practice what you have learned throughout the week. However, midterm exams for this class were difficult to study for as finding bugs in code is something that you learn as you go along with the course and with your experience in coding.",
        "Racket is a super annoying language but the professor is very helpful and there are lots of TA hours you can go to, weekly assignments can be hard but TAs will help a lot. Exams aren't that hard and outside of weekly assignments not too much work",
        "You really get out what you put into this class, though it is easy to get by with little effort. Easy A if you try. You don't really need to go to lecture, we only occasionally get a hint for the activity that week or an answer to a part of the activity. All learning takes place through weekly lecture recordings and quizzes which are slightly time consuming but manageable. Only assignments are exercises which are weekly, can be time\u2013consuming but you can get through them a lot faster if you go to office hours (available all day throughout the week!)",
        "This course was a really good course to take, especially with Sara. The peer mentors are extremely useful in helping to complete the exercises each week and the exams themselves are not too difficult with Sara being very clear on the format and providing practice to help prepare for them.",
        "I don't feel as though I got an actual feel of what coding is like. I wish we had used Python or a more applicable language.",
        "This class was very flexible. There were many peer mentor office hours to attend to complete exercises and class time was usually time to work on our own or in groups.",
        "I would not have taken this course if it were not a prerequisite to basically every single CS class. It's not too difficult but the course material is not at all fun."
    ]
}{
    "course_code": "Student Report for COMP_SCI_111-0_20",
    "course_name": "Fund Comp Prog",
    "instructor": "Ian Horswill",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.84",
        "count": "223"
    },
    "course_rating": {
        "mean": "4.50",
        "count": "225"
    },
    "comments": [
        "Ian is awesome! Really works hard and cares about teaching the whole class.",
        "Good intro to CS class. Although many students don't like that the class is taught in Racket, it nonetheless does a pretty good job of introducing students to fundamental CS ideas \u2013 skills that are transferable across any language. At times, the syntax of Racket could be a bit tedious and annoying, but overall, the class does a good job of teaching you how to program in general, as opposed to just in one language. Pretty accessible even without a CS background IMO.",
        "Racket isn't great and I don't think it's the best choice as a first coding language. It is significantly less intuitive and much harder to follow than other languages like Java despite its apparent simplicity. It falls to the trap of making it so simple that it's actually harder to understand what's going on.",
        "As a student coming in with a lot of programming experience (Java, Python, etc), this class was not super interesting and I didn't learn a whole lot, but it did its job as an intro class. Ian is a very friendly and approachable professor, but basically all of the lectures were done based on some PowerPoint slides, which I really did not like because it's hard to learn how to code and problem\u2013solve if you just see code printed on slides. Because I had programming experience, I felt like learning Racket was much more challenging because the organization and structure and syntax of the language is drastically different from anything else I had done, so I initially struggled with that, but if you at least partially do the weekly tutorial activities and do all of the weekly exercise assignments, you'll get the hang of it by the end of the quarter. That said, I learned the most from going through the week's slides before I did each assignment, and then completing and making sure I understand my work for each problem of the assignment. Doing the practice quizzes is for sure the best way to study for the quizzes, and it is really helpful that you get a glossary with the full documentation for every single procedure/method you could possibly need on each quiz. Overall, I think it was a pretty good intro course.",
        "Lecture was good, but sometimes slow. Ian was very good about answering questions even though the lecture hall was huge. You get to look and mark up the slide deck, which I found helpful. The course acknowledged and allowed for group work very well, which I appreciated highly. The quizzes were low stress but still managed to hit on a lot of the big points of lecture. Weekly tutorials allowed for low stakes practice, which was nice, and the weekly assignments were well paced.",
        "The way this course is structured is great for students with no CS experience. The tutorial sessions are very helpful and the in\u2013class quizzes help make this a pretty low\u2013stress course. Ian is passionate and entertaining in lecture.",
        "Good course with great teaching. Perfect level of challenging.",
        "This class begins very slow and grows exponentially in difficulty from there. The HW assignments are extremely harder than the exams and are very different.Tutorials help solidify the skills learned in class through actual examples, many of which are helpful for exams.",
        "The easy first step towards to cs major or minor",
        "This is an easy class if you have prior coding experience. The assignments are all you really need to practice for the exams/quizzes.",
        "I really liked this class. I thought Ian did a great job at making the coursework fun and interesting, and he clearly cares a lot about our engagement and learning. Super fun class.",
        "The pace at which the course material was presented was just right and gave me time to fully understand the material. Also there are a lot of resources I could use whenever I needed help.",
        "This was an nice intro to cs",
        "Alright course, go to Tutorials and get to know your TA",
        "The language that we learn is not very intuitive, but it is nice that we really understand how code works and why.",
        "I had no coding experience going into this course and I thoroughly enjoyed it.  Ian's lectures were interesting and he explained the material well.  You definitely learn how to code in Racket in this class, which is fun and not too difficult to pick up.  Definitely would recommend for someone who's never coded, but wants to try.",
        "The professor explained each concept in a clear manner. In addition, we had ample time to finish each assignment.",
        "Good class overall, but could have covered more topics",
        "This course is pretty straightforward. Ian is a great lecturer who has slides that make a lot of sense and are easy to decipher. Ian is also super knowledgeable if you go to his office hours with more specific or advanced questions.",
        "It was really weird learning racket at first, but it gets better. Make sure to pursue other cs projects outside of class.",
        "The class is fine and Ian Horswill does a great job teaching. However, I did not like the language picked for this course at all. Racket is extremely unintuitive to those who have programmed before and is not really representative of how most coding is done. There is a CS exercise due each week that is fairly difficult compared to the quizzes/midterms which are much simpler.",
        "I'd already done some computer programming before taking this class, so it wasn't very challenging for me. Racket is kind of weird to get used to though, so if you've programmed before I think that's the biggest struggle. If you're just starting out programming, then I really recommend this course! It's a great way to introduce you to a lot of basic programming concepts. And Ian and the TAs are all really great and genuinely want to help you learn. Even though the course was easy for me though, I still enjoyed it because Ian's a really cool guy and the assignments were still pretty fun.",
        "I really enjoyed relearning some of my previously learned content, but the racket language still did not feel like a good way to learn the material.",
        "The course is fine overall. No curve which is a little tough but if you understand the exercises you should be fine. If the exercises cause you trouble just sit in office hours and have the TA's help you through them. Good low work low stress class for the most part, especially if you've taken AP CSA.",
        "I really enjoyed this course! I think that the difficulty was right where it needed to be, and Ian is great at using understandable analogies to demonstrate his ideas! I also really liked the discussion section system with the tutorials; it helped to compensate for the lack of intimacy in such a large class.",
        "For those who got 5 in AP CS: It is a very easy class overall and I did not feel that I learned much. However, some advanced tutorial problems (especially those about compilers) could be intellectually challenging.",
        "This class is cool if you\u2019ve never coded before but Dr. Racket isn\u2019t that cool of a language to learn in my opinion.",
        "The weekly tutorials was effective in providing practical engagement with content learned in the course.",
        "Ian is a great professor and the tests are pretty easy if you have any experience with programming.",
        "Solid introduction to comp_sci. The class was very fun at times.",
        "Lot of fun, we love coding",
        "It was important to learn CS principles but racket isn't a great way to learn them...",
        "It did a good job of focusing on Computer Science concepts, and a great introductory course for anyone who hasn't taken CS before.",
        "I've never coded before and felt that this course was a good intro course. Even though I have never used a different coding language I admit Racket is very annoying, but not terrible if you haven't had previous experience.",
        "Ian is a great lecturer in my opinion, and he really cares about his students.There are three midterm \"quizzes\" (one of them takes place during the final exam period, but all three are weighted equally, so it's not a \"real final\"). These quizzes are pretty short (they don't involve writing original code or long answers, just a few words or making minor corrections to given code), so in my experience there's plenty of time to complete them. It's worth studying for them by doing the practice quizzes though; even if you're confident with the material, it's worth it to make sure you don't make simple mistakes (which seem to be the most common).NOTE: This class has a weekly 50\u2013minute discussion (tutorial) section! Caesar did not notify us of this fact when registering; hopefully this will be fixed for future quarters. Don't stress about these weekly tutorials though; you're only graded by participation (showing up and attempting them), and in my experience they're pretty chill.If you took AP computer science in high school, it should be a pretty straightforward class (just make sure you keep up with the syntax of the Racket programming language, since it's a bit unique). I can't speak for those new to programming, but there are plenty of resources available to get help if needed (lots of TAs with office hours, Ian's office hours, asking peers, etc).Regarding Curriculum: Some of my peers who were more experienced with CS actually found it a bit boring, teaching things they already knew, but I personally found it interesting to learn this new language and the general programming concepts that are taught through it; worst case you can \"multitask\" during lecture at times (I wouldn't zone out or not show up though; 90+% of the lectures had at least a few things related to Racket that even experienced programmers wouldn't know that you need to know for the assignments/quizzes). I think there are pros and cons to combining students new to programming with experienced students; on the plus side, all CS majors have a common baseline experience, and it provides an easy transition to CS in college for experienced programmers, but on the other hand, some peers I've talked to have said that they would rather have a more advanced intro class specifically for experienced programmers to avoid having to re\u2013learn concepts or go slower than necessary. There's also the question of whether this course adequately prepares students for 211, which I've heard is much harder.If you're a non\u2013CS major, keep in mind that the course's main value is in learning programming concepts rather than specific programming language skills (Racket isn't widely used for practical programming in the real world). So, if your main goal is to just learn the basics of a programming language like Python, maybe look into CS 110 instead. But if you're intellectually interested in CS or want to pursue it beyond basic programming language skills, then take this; it doesn't assume any previous CS experience.Overall, an enjoyable class that gave me an easy start to studying CompSci at NU.",
        "Racket was not very intuitive language and I don't think it was a good choice for an introductory CS course. Otherwise, Ian was a great lecturer and taught the concepts very well.",
        "Like everyone says, Racket is very obtuse and finicky which can be frustrating regardless of programming experience. However, if you stick with it you can gain a deeper understanding of programming concepts that can definitely be applied to other languages. Just don't expect this to be an easy class even if you have a lot of CS experience because getting used to Racket takes a long time. Don't take this as a distro if you don't plan on taking more CS classes \u2013 110 is much more manageable and practical.",
        "Easiest class, no need to show up to lecture just read slides ez 100",
        "This course is mediocre despite Ian being a super interesting lecturer. It's paced fine but Racket is just an annoying language to work in and there are sometimes tangents into things like the history of coding that feel unnecessary.",
        "The class was relatively easy for someone with no programming experience. It depends on how easy programming will come to you. The quizzes were the only part of the class that really affected ones grade and could be graded pretty harshly (one question wrong is 10% of your quiz grade which is 1.6% of your final grade) but for the most part they were pretty easy. Ian has a very theatrical way of teaching which can be engaging at times, but was somewhat rude when I spoke to him during office hours. Overall the course was easy and well taught though.",
        "Racket, the language used in this class makes it unnecessarily difficult in my opinion because there aren't any materials to help you understand what you are learning. What I mean by that is there isn't a textbook to look up information in. All there is to teach you is the slides from class. If you are not intuitive enough it can be extremely frustrating to figure out how to do some of the homework problems.",
        "I enjoyed the subject matter, but wish the lectures had been more engaging.",
        "Ian is a great professor, very fair about grades, really cares about his students and will do a lot to help. That said, the course itself was very frustrating, especially if you are a student coming in with knowledge in computer science. Racket works in a way that is so different than popular programming languages and can be hard to understand. The TAs are very helpful during office hours and on Piazza and the homework assignments really don't consume too much time. Go over the practice tests! They are so helpful.",
        "Pretty good and easy class! The time commitment isn't high at all \u2013 just an assignment per week. The assignments were definitely helpful in solidifying concepts discussed in class, and the peer mentors are great. I highly recommend going to the peer mentors' office hours if you need help on an assignment, there's pretty much endless office hours for this class so there's endless help which I really appreciated. As someone with no prior programming experience, I was a little nervous about taking this class, but the use of Racket seems to actually sort of level the playing field since we were all pretty much new to the language. Sometimes in lecture all of the people with programming experience would ask questions about things that I'd have no idea about, but I still managed to do pretty well in the course so it's not a huge deal. I personally didn't find the tutorial sessions to be that helpful, during my session we all kind of sat there in silence doing the assignment. Ian is a pretty good lecturer and tries really hard to entertain us all, but lecture could sometimes be a bit boring. If you have the choice, I would go with Sara just because I like her lecture style more (she does live examples during class so it's easier to contextualize the concepts you're talking about), but that is by no means saying that Ian is bad.",
        "Easy class in general except the A cutoff is pretty high but if you do all the homework and sit through the tutorial sessions, it'll turn out fine",
        "I liked the professor a lot, but the lectures were unnecessary for people with prior coding experience. Racket is not great. The quizzes were super easy.",
        "Overall, I would say that the course was pretty decent. The quizzes aren't too difficult if you have a moderate grasp of computer programming or pay attention in class. Plus, the instructor is really chill.",
        "Good easy class. Teacher is funny and not much work.",
        "I found the course to be helpful in learning the extreme basics of computer programming. The lectures are hard to follow since Ian goes over the slides confusingly, and I found that learning the material by myself was more impactful than actually going to lecture. Ian is great and extremely kind, however the language used in this class is confusing and not really helpful in my opinion in learning the basics of computer programming. The workload is definitely manageable and the quizzes are easy, fair, and straightforward. I would recommend taking this class with Ian; the real fault in this class is the language used, Racket.",
        "This course allowed me to break apart the code and understand how machines process commands in a more clear way.",
        "Learning Racket was made more confusing by my experience with other programming languages. But it was the teaching that I disliked more than the language. A lot of people really liked Ian's teaching style, but I didn't think he used class time effectively and spent a lot of time rambling. Then again, this isn't my first programming course (I'm a transfer, so it's my 5th). It makes sense that one should go slow for people who haven't learned a computer language before. It's just that it made class tedious for me and made me wish I had tried to place out of 111. On the bright side, this course is very accessible to beginners.I also like the policy of giving test answers out right after completing the test.",
        "I sorta died a lot.",
        "Well organized and structured course. I personally think this is the easiest class I have taken at Northwestern so far (as a sophomore).",
        "its hard but easy A. great class.",
        "Honestly a fantastic class.  Ian is a strong professor and there is plenty of outside help you can get through the TAs. The projects all helped me learn the concepts and the tests were fairly easy",
        "I enjoyed this course and thought it was a good introduction to Computer Science. Not too challenging. Weekly tutorials were helpful in practicing material and weekly project were good is assessing understanding.",
        "Be warned: Ian won't start actually teaching the course curriculum until Week 4. He is not good at communicating his ideas, announcements, or updates regarding the course either. I had a homework assignment that was misgraded four weeks ago. I emailed him screenshots of my old and updated code the day I got my grade back, and explained that my code wasn't wrong (it just wasn't written exactly how the auto\u2013grader wanted it written, but it still worked) and he still hasn't responded to my email; it's been over a month. I get that it's a large section so it might be hard for him to answer emails from 300 students, but he could have at least forwarded it to a TA and had them take care of it. If you're the kind of person who doesn't need help from TA's with assignments and doesn't mind having zero contact with their professor, then you'll do fine in this course. If you pay attention in lecture and take notes, the weekly tutorials and exercises actually aren't that bad. What gets frustrating is how carelessly they grade the quizzes and how much effort you have to put in outside of class to correct their mistakes and get the grades you truly earned and deserved.",
        "recursion",
        "Easy course. But since everyone is getting a nearly perfect score. A very small mistake such as missed a parenthesis may bury your A.",
        "This course was a terrible way to learn computer science. The homework is fine but the quizzes are not really a good way to test your skills and are impossible to study for. Professor never even coded during lecture and this made it very hard to learn.",
        "The course challenges you just the right amount but figuring out how to use racket's language is the hardest part of the course.",
        "This was a good class overall. The assignments were easy enough that I didn't tear my hair out, but also hard enough that I was challenged and had to use some critical thinking. I didn't mind coding in Racket, probably because it's the first language I've learned. The quizzes were very straightforward, and I appreciated that their format was consistent for all 3. Ian did a fine job teaching the lectures.",
        "Ian is a wonderful professor \u2013 very reasonable, approachable, and funny. Recursion is a really useful topic that I was never exposed to in my MechE programming courses, so this class was really useful for that.",
        "As someone who had already taken a number of beginner\u2013level programming classes before taking this class, I was half\u2013expecting to come out of this class having learned nothing worthwhile and viewing Racket as a completely useless language.  To my surprise, however, I found that this class was quite helpful in helping me relearn the core fundamentals of computer science, and that Racket as a programming language, while at times frustrating and somewhat counter\u2013intuitive, was overall helpful in re\u2013teaching me many concepts that I had forgotten over the years.  Given that this course is required for the computer science minor, even if you believe that the course will be useless and simply a review of things you've already learned, I would recommend going into it with an open mind, as at least for me it was decently helpful in updating my understanding of computer science and making sure I was ready to take the higher\u2013level classes in the field.  The actual course itself can occasionally feel rather disorganized and all over the place, especially if you end up missing some lectures, but as long as you make a good effort to understand the material and make use of the resources provided to you when needed, this class should definitely be manageable.",
        "I think this course made me realize that computer science isn't quite for me but I did find it interesting to logically go through code and try to see what it is doing.",
        "The class was a really easy A; however, racket is not a useful language in life, and I feel like our assignments did not teach us a lot about it anyway",
        "This course is a great intro to comp sci. The first couple lectures are a VERY broad overview of computation that are not particularly relevant to the course but still interesting. Racket is a difficult language to get used to but solving homework programs and tutorial assignments is quite gratifying.",
        "Overall, it's a totally solid introduction to coding. I found most assignments to be helpful in learning the content.",
        "I honestly think whether or not you enjoyed this course says whether or not you will enjoy CS in the future. Sure the lectures were boring and dry as hell, but the tutorials and the exercises were very worthwhile and really did well to apply the concepts we were taught in lecture into practical applications. And yes, everybody complains about Racket, but (and I know this is very niche) if you've every coded in Excel before, it's very similar to that or any database language. If you're familiar with Java or Python or most modern coding languages, most of the class is spent learning how to use Racket because the concepts are very familiar to the typical CS curriculum.",
        "This is an odd class; it seems incredibly easy for those with prior AP experience, but quite challenging for those new to programming. If you ask me, it should be restructured to focus on either one demographic or the other. The summary of multiple different paradigms of programming is a good approach to the material, but if you're a non\u2013major or minor, you should probably take 110 instead.",
        "Racket is irritating, but this class is a major requirement, so I gotta do what I gotta do.",
        "I would recommend this course to someone interested in computer science because it allows you to learn the basics of compsci without being a very difficult course.",
        "Interesting collection of problems handled, from some amount of images to more traditional comp sci problems.",
        "The class overall is good. The homeworks can take a while, especially if you're not great at programming to start with, so be sure to either find a friend to work through ideas with or go to office hours early. Overall, it's not that bad.",
        "Take this class with Horswill! He's an awesome prof and explains material really well. The exams aren't terrible and the TAs really help out with answering questions. Although I wouldn't recommend the class for kids trying to fill out a distro, the class is an easy A.",
        "Great course. Exams are quite easy. The homework assignments are very tough though.",
        "Ian is a cool and chill professor. I think, however, I learned the most when doing homework assignments. If you have some CS background, you don't have to worry about this class \u2013 if not, this is a good start too!",
        "A very good class to take 1st quarter. Racket is not so good but the quizzes are doable",
        "I don't understand the significance of learning Racket yet.",
        "Homework is hard, quizzes aren't. Go to office hours, they are super helpful. Make sure you understand recursion!!",
        "I think that as long as you do your homework, show up to ta sections, and pay attention in class, you should definitely be on track to get an A or A\u2013. This is a really good fundamental course to take, and Ian Horswill is a good professor who explains everything in depth. One drawback is I wish there was some more live coding in class, but other than that it was good.",
        "Reasonable class, the language we use is odd and probably not necessary, but it's not the worst and doesn't take too much time to do the homeworks. The quizzes seem fine. Would be nice if the people with significant CS experience could skip this class, then maybe there might be a curve. Instructor was okay but I hear another might be better.",
        "This class is great for getting a good foundation. It is not very difficult. The quizzes and homework assignments are very doable and the class is not time\u2013consuming at all. The lectures could be more engaging/interesting but overall it's a good class.",
        "Racket is a very complicated language, despite being made to introduce people into the world of computer science. The syntax is quite difficult, but the programs are doable. As long as you look at the documentation, you should be fine in this course. The lectures are not super helpful.",
        "Don't like Ian's lecture style. Homework assignments are hard on your own but you can pretty much get them completed in office hours. Hard to follow lectures because Ian types out example code in the powerpoints instead of coding things step by step in class.",
        "This class was very good and straightforward. Ian is a great teacher and really cares about the content.",
        "It was a good reaction because it explored fundamentals well",
        "It is taught in racket which is terrible.",
        "Not a very difficult class even if you have never programmed before.",
        "Conceptually the material was somewhat challenging and the homework programs took a long time, but the exams were relatively easy in comparison.",
        "Yes",
        "If you've never programmed before this class can be a little tricky but it might be worth it just to witness Ian's lectures. He's a strange man but you gotta love him. If you go to office hours or ask questions after class it makes it easier. The tutorials can be kind of tedious and seem a little unnecessary (attendance is mandatory), and some of the exercises could be difficult. If you need a distro, there are probably easier ones, but it's not too bad overall.",
        "Felt redundant having transferred from another institution with a full year of CS class experience.",
        "Very easy course that was nice.",
        "If you have taken a lot of CS in high school this course will be very easy. I spent ~1 hour per week on assignments, sometimes less and have an 100% in the class. Kind of relaxing to go to a class that makes complete sense though and good to practice with an auto grader maybe.",
        "The course is interesting and Ian is a great lecturer, but the homework is not comparable to the lectures at all. Office hours are essential in doing the homework. The quizzes are a lot easier than the homework but the questions are few so one mistake can cost you.",
        "The programming language taught by this course if very different from any other programming language usually taught in high school, and it does take a few weeks to get used to. The good thing is, there is not a huge advantage for students who have computer science programming compared to students stepping into the field for the first time, because it is a learning curve for everybody. As frustrating as the programming language was, the professor was excellent in explaining the logic behind using this programming language, and the slides used in class were easy to follow. This course is useful for gaining skills in how to think like a computer programmer, which is important for any programming language. The work load is very light as well.",
        "If you have prior coding experience, the class will be fairly easy. However, it is very doable for people with no experience too.",
        "I had no programming experience before this and it was helpful",
        "This course is fairly straightforward if you pay attention to lecture. Prof. Horswill does a great job of breaking complex ideas into parts that are easily understandable, and he's obviously very passionate about the subject matter of the course. I had minimal prior programming experience, but I didn't mind Racket as much as most people. In fact, I see why it is useful because it often breaks things down into their most simple parts, forcing the programmer to really understand what's going on behind the code and not just implementing random procedures.",
        "It didn\u2019t really focus on a specific language besides Racket. It didn\u2019t really give me insight into what CS is really like.",
        "I enjoyed learning from Ian. It's clear that he's passionate about the subject and will strive to ensure his students succeed. The language (Racket) is non\u2013traditional for those who have already learned Java/Python, but the concepts are transferable across all languages.",
        "COMPSCI 111 is a course that you need to get familiar with a strange language Racket first and apply these computer concepts. Professor Ian is funny and helpful. But if you look for more practical computer science skills and not consider majoring/minoring CS, maybe think about taking CS110.",
        "Ian is very kind and he seems to know a lot but his lectures were terribly boring. I went to every lecture, but usually I could read through the slides after class and learn everything in about 15 minutes (the slides are fantastic). He just seemed to take really long\u2013winded explanations to convey each little bit of information. Office hours were incredibly useful and I usually ended up going once or twice a readings to complete assignments. Tests were easy.",
        "I did not feel I was creating code that was in any way useful.",
        "This course is taught in Racket, which may not be the most practical of languages in the industry. But it's an easy enough language for a beginner and has all the core functionality that's needed for the concepts taught in class. The concepts span a broad area and are valuable.",
        "The course is hard as noone likes racket and the lectures are really hard to understand. The course goes by in a flash so you really need to be on top of your work.",
        "the class was not easy and not useful for anyone not majoring in CS",
        "It was way too easy for a CS class",
        "Racket is a crappy language that besides this class, you will never use in your life. Go to CS 110, which teaches Python to learn a more practical language. And This class is hard.",
        "Ian taught the course well and managed to make some of the easier, dry material more interesting.",
        "Ian is a cool teacher but I personally found it difficult to pay attention at times. Studying is slides is usually enough but staying on top of assignments and doing the tutorials would be very helpful. First quiz is very easy, but cramming doesn't work as well for the second quiz which is probably also true for the final. It is fun to watch Ian sit on his feet during class while lecturing and see his anime shirts.",
        "It teaches you how to program, and emphasis on debugging.",
        "It doesn't matter if you have taken a CS course before.  The class is taught in racket (scheme based), meaning literally no one has seen the syntax before.  The class mainly focuses on coding concepts, not syntax.  The concepts and their applications are well explained.  Despite the amount of material covered, the course load is extremely manageable, and the quizzes (tests) cover only the simplest concepts from class.",
        "The course was generally taught well. While not interesting, course material is well covered and assignments are of reasonable length while also teaching you the components of the class that you need to master.",
        "The class is taught in a lecture style and can be very boring and feel like hes not actually teaching and then you get your hw and it just feels super hard.",
        "Good instruction and availablity for office hours",
        "Ian is a really good teacher to have for cs 111. He's very excited about the course material + midterms reflect really well on what you've learned in the course. Recommend him for any cs class.",
        "For whatever reason, I absolutely could not focus during lectures. All the info you need to know is on the slides though, and reading over those before quizzes was extremely helpful. Also, going to office hours for the exercises taught me everything I needed to know.",
        "This course is helpful for learning the fundamentals of coding, but racket is basically useless outside of class. The course is not too hard if you understand the slides and work through assignments. Assignments might take a while but completing them is the best way to learn the material.",
        "This course was good because it makes everyone on equal footing regardless of coding experience",
        "Ian Horswill is an AMAZING professor! Lectures are not super interesting and not 100% necessary to go to. BUT, take this class! We didn't have homework until around week 5 and even when we did the homeworks were fun and engaging. There are 3 quizzes as exams and they are not that difficult. Highly recommend. (Note: came into this class having taken comp. sci. in high school).",
        "I didn't like the use of Racket, it made the code very hard to read and debug sometimes.",
        "Let me start by saying that I had never seen a line of code before in my life before taking this class. I had gotten 1 formal studies credit from AP Calc in high school, and I needed another one but definitely did not want to go any further with calc. I was always interested in learning how to code, so I took 111 to fulfill the distro. Because I'm new to coding, I did not really relate to my classmates' frustration with the clunkiness of Racket because I didn't know any different. Ian is literally the nicest, most understanding guy and it's so clear that he wants everyone to learn and is so passionate about computer science. The peer mentor program & office hours literally saved me in this class\u2013\u2013 the tutorial sessions were awesome, especially because I took the easiest level so my TA really walked us through the concepts step by step. My only criticism of Ian would be of his lecture style. He used powerpoints and just talked, which made the concepts seem super theoretical and hard to understand. I wish he wold have been coding on the board and having us follow along. Watching the lectures was kind of like watching a powerpoint about how to play the violin; you can only really learn by DOING, which was what these lectures were lacking. I learned the most by actually doing the homeworks and tutorials, because then you're applying the concepts instead of listening to him talk about them.  My most important piece of advice would be: GO. TO. OFFICE. HOURS. FOR. THE. TAS. The first few assignments I struggled through on my own, spending hours trying & failing. Then, I realized you could go to office hours, sit there for a couple hours, and have the TAs help you do the homework. It was amazing because it took way less time and you walked away actually understanding instead of just doing trial and error. If you've never coded before, you can do it!!",
        "This course almost made me not want to do cs anymore. The structure and lectures make it seem like all cs classes are like this in NU. Hopefully they aren't",
        "I really enjoyed this course. Although people say Racket isn't a very useful language in the long run, I do feel like I've learned a lot about programming in general thanks to it. The assignments aren't too difficult either, and there is only 1 a week, so it's not hard to work ahead and finish it several days before it's due. Ian does a pretty good job teaching; he goes slow enough so the content is understandable, but he still gets through a lot of material. The tutorials are also nice, but I felt like the TAs sometimes didn't care as much as they should.",
        "Racket is a horrible program, Ian's lectures are fine but Abby's are amazing",
        "First of all, I had trouble with this class. Racket was just very confusing for me to learn and I'm in McCormick. I needed a lot of help with the homework assignments. It was very frustrating because I had previous some CS experience beforehand, too. But most of the people I knew did not have much of a problem with this class. Ian's lectures can be boring but they are worth listening to. And he is very willing to answer questions DURING lecture which is very nice. He will literally wait for people to ask questions. Like who takes the time to take questions during a 300 person lecture???Midterm wise, the quizzes are basically midterms. There are two midterms and a final quiz. The practice quizzes are a very good indicator on how well you know the material so definitely do those. If you understand most of the logic, you should be fine for the quizzes.",
        "Basically this class was a pain in my behind. I learned nothing. Took Comp sci for two years in high school and loved it and now I can\u2019t even look at it. This class has very little help and the homework\u2019s are the only way to learn but because there are so many students nobody actually gets feedback so you just fumble along and hope you did most of it correct every single time. Not worth my time and effort essentially.",
        "I thought the professor for this course was great, so if you have to take the class take it with him if you can. However the course itself was kind of easy and didn't go to the level that I wanted a computer science class to go to. You code in Racket, which is a language that you will literally never use again, so overall the class itself sometimes felt kind of like a waste of time. However it was a nice overview of the basics of functional programming and some imperative programming as well.",
        "Ian is absolutely amazing. You have to take his class if you can. Graduating Northwestern without taking a class from Ian is just a tragedy.",
        "I was a huge fan of how the course was structured, with the three equally weighted quizzes and no final. I also liked the tutorial sections. As a whole, I thought they did a really good job of handling the huge size of the class which was impressive.",
        "It is very tough having never done comp sci but manageable",
        "good class, easy for experienced students",
        "I definitely spent a lot of time figuring out the assignments, and asked my TA a lot of questions. Also, I think it was a little hard initially since I did not have a lot of coding experience, but seeking out the different resources offered in this class was really helpful. After a while, I started understanding coding better, and it got a little easier.",
        "This course gives a good introductory to computer programming, but it's not that engaging. It's not too bad, but if you're looking to take one CS class and be done, take 101.",
        "I loved this course. I had no computer science experience coming in and I thought the course was great. I didn't feel that I was behind anyone else because they had done CS before. The lectures weren't amazing and I thought that it was very easy to zone out but they were a good base to build on and tutorials and exercises (homeworks) were great for consolidating my knowledge.",
        "This course was good at teaching basic programming skills, although it can move a little slowly sometimes. Great for people who want to get an introduction to computer programming.",
        "I thought this course was pretty interesting. The one thing I will say is that this course is meant to teach the fundamentals of programming rather than the fundamentals of a certain programming language. The language used, Racket, is not very practical outside of its use in the class.",
        "The assignments are much harder than the quizzes",
        "While the coding language used in the class is awful, and generally not that applicable in the real world, the class still did a good job of teaching the fundamentals.",
        "This was a huge lecture with over 300 people and it's really hard to stay focussed and pay attention. Although they try to break it down through smaller tutorials and TA office hours it is extremely hard to learn. There is a huge range of ability in the course, some find this class a breeze and others struggle the whole time. Even though I thought I was prepared for the quizzes, I did not do as well as expected. The quizzes are short so each questions has a lot of weight put on it.",
        "This course was well structured and relatively interesting.",
        "Course material was engaging throughout. Lectures can get boring, but the slides are always made available and it's easy to learn from those alone. Exercises were challenging, especially in the middle of the quarter.",
        "I was scared of taking this class because i had never coded before. But it turns out that teh TAs and Ian were super helpful, and I am now taking 211 in winter and thinking about a minor in CS.",
        "It was a nice course, except that racket is not the best language in my opinion, however, I believe it makes sense to teach Racket in an introductory course as puts students who have coded before and those who havent on the same level because its such a different language than any other. Lectures are not that important even though they do help, but you could also just read the lectures by yourself and do great",
        "This class really makes me understand the basic of coding. However, the programming language in this class is the downside for me. The most challenging part would be the exercises in every week (it can get pretty hard). The tests are relatively easy.",
        "The lectures weren't that helpful, but I did learn from the homework assignments",
        "I was very confused in this class until the end. I didn't figure out anything until like the last week but I am not sure if that is normal",
        "This course is great for beginners, trying to learn how coding works. The professor is very friendly and will sit right by you and help you understand the course if he must. The lecture slides have anime pictures on them, which makes the class even more cheerful",
        "Ian's slides are 90% fluff. Class not needed to do well. Assignments are hard but class is an easy A if you are competent.",
        "Good, but racket can get weird sometimes",
        "Probably the most important part of the course for me, and the only area I was challenged was learning to program functionally.  That is, it was new for me to program with only one execute statement available, and required me to twist my mind in ways I don't normally do.  However, this could've been done within a week or two, imperative programming just felt like a weak version of object\u2013oriented programming, which I already knew from AP Computer Science A.",
        "Learnt how to code in racket. I personally wanted to learn a more useful language such as JAVA or C++",
        "doing the homework is the best way to learn, listening and looking at lecture slides didn't really help.",
        "I think if you have any prior programming experience, this class will be decently easy. Half of the students didn't go to class after like the 3rd lecture. The professor was pretty chill, and I don't think that it's necessary to go to class because the lectures are posted on Canvas and are pretty self\u2013explanatory, unlike other classes. If you've never programmed before, this class will be a bit more difficult, but if you go to office hours then it'll definitely be bearable, and the final is weighted as much as the other exams, so thats a plus.",
        "This is a pretty easy class and an alright introduction to coding. It\u2019s more about the mindset behind coding rather than learning a language. Racket isn\u2019t a very intuitive language and im not sure how it compares to other languages. The exercises are moderately challenging, but the TAs are very helpful and you can sign up for a free extension. The midterm and finals are very easy.",
        "The concepts are very easy and straight forward, and the assignments aren't that hard, but Racket (in my humble opinion) is a horrible language and very hard to understand.",
        "Taking this class with Ian isn't bad, but some of the lectures are irrelevant when considering material on the quizzes, complete and understand the assignments and you'll be fine",
        "If you come into this course with a moderate amount of coding experience, this will be super easy. It does pick up, though, after around the 1st quiz/midterm, but it shouldn't be anything you can't teach yourself. The homework assignments were helpful, but the tutorial sessions were kind of a waste of time.",
        "This course is incredibly easy if you have any coding experience, especially beyond the scope of AP Comp Sci A. Racket is frustrating at first, but by the end of the quarter, it makes a lot of sense. I would highly recommend this course to anyone looking to try coding for the first time, as the pace is well\u2013suited for that, and there are lots of people in that class who are more than willing to help with assignments!",
        "I believe the course was helpful to me as a starting computer science course as it taught me the fundamentals that will be paramount latter.",
        "Racket is awful. Also, for multiple reasons (Class being so big etc), you literally learn NOTHING in the lectures. I literally had to teach myself the ENTIRE syllabus. Homeworks are very helpful though, but the tutorial sessions are pretty useless. Also, the slide deck is very nice. It is welll\u2013strucutured and clear, so it helps a lot.",
        "It muddled up my knowledge of coding by introducing Racket, but it introduced me to the notions of imperative, functional, and object\u2013oriented programming.",
        "The course was not very effective at teaching me computer science. The class is way too big and basically learned everything during office hours.",
        "Ian is a great professor. Pay attention in class and the quizzes should be easy.",
        "Great course. Prof Ian is a good lecturer and a nice person. The material is challenging for CS rookie, but easy and basic for those with the background.",
        "The homeworks are awful , super difficult and time consuming. Pretty much have to go to office hours to get them done. But the exams are fair and the professor is great",
        "In high school I took AP CS Principles, and I found this course to be manageable. The lectures were kind of boring and I didn't learn much while sitting in the lecture hall. I learned mostly from the homework assignments and tutorials where I was actually able to apply the concepts in the lectures. However, the lecture slides were useful to refer back to while coding. I really don't like language Racket, but I guess it helped teach the fundamentals of computer science. Overall I thought it was a decent introductory course.",
        "Ian is very passionate!",
        "It covered the general computer science concepts without going too deeply into any of them specifically."
    ]
}{
    "course_code": "Student Report for EECS_130-0_1",
    "course_name": "Tools and Tech WWW",
    "instructor": "Sarah Van Wart",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.75",
        "count": "12"
    },
    "course_rating": {
        "mean": "5.50",
        "count": "12"
    },
    "comments": [
        "Really fun",
        "Sarah is the best professor at Northwestern. So kind, so approachable, can't think of a single bad thing. Assignments are clear and if you hav trouble she will help you and spend time with you to learn. Going to take more eecs classes only because of Sarah",
        "I really liked this class and Sarah really made it enjoyable. If you have no knowledge of coding (as I did) and are interested in getting your feet wet this is the class for it. Web designing is really intuitive and all you need for the class is vision and creativity.",
        "You learn sooo much about HTML/CSS/JavaScript in a way that really sets the foundation for you to develop on your own.",
        "I really liked how Sarah wasn't afraid to go over or even do homework in class so that she could be there to fill in any conceptual gaps that students had.",
        "This class was amazing, and I honestly have to credit Sarah for making it so. I don't think I've ever had a professor that went out of their way to schedule 1:1s with everyone in the whole class to check and see how they're doing on their final projects. She really made sure to work at a pace that was comfortable for the rest of the class, and was extremely helpful in both lecture and office hours. A lot of the things you learn in this class are so relevant to web development and cloud\u2013related things toward the end of the class. As someone who has had only some experience in coding, I found that Sarah is extremely understanding of all proficiency levels, and just wants to make sure you're at least working towards understanding the material and growing."
    ]
}{
    "course_code": "Student Report for COMP_SCI_130-0_20",
    "course_name": "Tools and Tech WWW",
    "instructor": "Sarah Van Wart",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.79",
        "count": "33"
    },
    "course_rating": {
        "mean": "5.53",
        "count": "32"
    },
    "comments": [
        "This class was super interesting. It was super manageable if you have zero coding experience. Sarah is a great professor who is super excited about the material we discuss and is always willing to help if you have questions or issues with your code. After this class, I have a solid foundation for the basics of building a website.",
        "Please take this class! Prof. Van Wart is very helpful, cheerful, and open to questions. She is very good at explaining how the website works.",
        "This is a great class! I highly recommend it for all majors and skill levels.",
        "this class doesn't count for the cs major/minor but if you're trying to get started in web development, this is probably the best class to take. the weekly assignments aren't very hard (and there are only 4 of them before the final project, which you're given 2\u20133 weeks on) but completing them will give you a pretty solid grasp of the html/css/javascript basics. the lectures themselves can be dry, so spending 20\u2013ish minutes before class watching the videos and doing the readings and getting a slightly different explanation/perspective helps get the material to stick better. sarah encourages you to explore on your own beyond the homework requirements, which is what makes this class worthwhile for me. there are so many resources and topics introduced to learn more about if something catches your eye. also, the final project is basically whatever you want, which can be a really great opportunity to put together a resume project (you have the full support of the course staff to answer questions!!).",
        "This course is fun if you want to gain some experience or introduce yourself to web design. However, the course itself does not necessarily structure itself to be very organized. Each week, I would have to pick part the lectures to figure out what I can use for the homework and for my larger project, which can be intimidating if this is a totally new topic to you (as it was for me).",
        "Prof Sarah is very enthusiastic and understanding. The course is solely meant for the students to learn about website development and focuses on what the students want to learn. It\u2019s a flexible class and fun!",
        "This is a really great course and Sarah is a great prof. She is always really helpful and there's plenty of opportunities for support, etc. This class is great because it gives you tools and then lets you get creative with your final project. Takes a couple hours each week to do homework and the project, but definitely worth it.",
        "great class. i wished sarah did more live coding to show us the syntax of some of the coding languages we had to use. I'm still very iffy with javascript and mildly proficient in CSS and HTML. Both Sarah and the peer mentors were great.",
        "This class is a great introduction or refresher for HTML, CS, and JavaScript with some other conceptual things sprinkled in. Sarah was a great professor who was happy to help us propose and pursue a final project of our choice at the end of the quarter. Iif you are completely new to computer science expect a steeper learning curve as the class moves really fast.",
        "I thought that this course was challenging and the workload was manageable, but there could have been more explanation and help during sections.",
        "I have taken other classes with Sarah and I love her so much she is one of my favorite professors at Northwestern. If you do not have a lot of coding experience and are interested in beginner web design I definitely recommend taking this class. There's a few homeworks and tutorials every week and one final project where you get to design your own website. It's not too much work and Sarah and the TAs are super helpful and want you to succeed.",
        "The course is structured very well and extremely intuitively. It is not difficult to figure out what is due when, and the assignments make a lot of sense (i attended a lot of office hours to make sure I was completing things, though.)",
        "I learned so much in this course and I had no web design experience before. Would highly recommend it.",
        "Sarah is such a great professor and makes herself very accessible to us! It's a great overview of web design and leaves a lot of openings for you to continue learning outside of the class.",
        "Great course! Learned a lot even though I had some experience. Definitely would recommend for any type of students. We are able to learn skills that actually are useful by the end of the class.",
        "Awesome class \u2013 I took this class as a junior CS major as a major requirement instead of CS 101, and it was dead easy. Highly recommend for any CS major/minor looking for a GPA boost or just an easy class, and if you're not a CS major and are taking this class for a bit of coding experience, it's probably not too hard since Sarah really tried to make this class accessible to non\u2013CS people.",
        "I always love taking Sara's classes. While you are learning a lot, Sara makes the content not too hard. Also, she is very approachable and accommodating.",
        "The teacher was incredibly understanding and sweet.",
        "Professor Sara is amazing. I thought this was a 100\u2013level class EZ meme A. But I actually learned a lot from this class. I think Professor Sarah Van Wart might be the best CS professor I met in this school. Her course is EXTREMELY Well\u2013organized. She will stay an hour after class just to help answer all your questions. You will literally know how to make a good website after this class.",
        "I came in as a beginner looking for an intro level course and was satisfied to find just that.",
        "Sarah and her staff really want to see you succeed. For an introductory course, a lot of material is covered which really impressed me. Hopefully, this course can get people excited about computer science and web development.",
        "class would have been lovely if i had showed up to lecture. unfortunately, i did not. so i never had any clue what was going on and struggled on all my assignments. however i know that if i HAD gone to class then sarah would have been wonderful, as would have been my ta, z"
    ]
}{
    "course_code": "Student Report for COMP_SCI_150-0_1",
    "course_name": "Fund of Computer Prog 1.5",
    "instructor": "Katherine Compton",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.08",
        "count": "74"
    },
    "course_rating": {
        "mean": "4.10",
        "count": "78"
    },
    "comments": [
        "Good course overall",
        "This class is amazing. Kate Compton is one of the best profs Ive had and is very passionate and helpful with every students problems no matter how small. The assignments are cool and applicable and I learned more Python than I believed I could in one quarter. Definitely worth taking if you try on the assignments you will be thoroughly proficient in python when you finish.",
        "Professor Compton is awesome, and she's so helpful at explaining the concepts you'll learn in class. This class isn't too difficult as long as you put in the work. To be honest, I did not go to class very much; I mainly just reviewed the content before the assignment, and then figured it out as I went along. I feel as if I actually learned a lot about basic Python from this class, and the overall structure of the class is not too difficult to follow and not super stressful. 10/10",
        "Assignments are not too difficult if you follow the directions. If you ever get stuck you can go to office hours and they can help you work through your problem. It's not really necessary to go to lectures, but sometimes the material is interesting.",
        "This class was like being on the titanic (every week) except the captain (Kate) is in the corner worried about whether or not unicorns exist instead of trying to steer the ship. The TAs/PMs were quite literally a gift from God, but each and every one of us who were involved in that course were guinea pigs. The worst taught class I've ever taken at Northwestern. Every class period went something like this: she would put up a single slide with some python function and say \"this is a cool thing you can do with python\" then leave the slide and start to randomly code something about ramen. No examples, no definitions, horrible. Assignments were posted late almost every week. I learned absolutely nothing except how much money Kate makes an hour and the history of Arabic robotics (neither of which was helpful). It was easy to get an A because you could beg TAs for help and there was nothing besides weekly coding assignments (no tests that I would have had to take independently). The only tradeoff was that sometimes Kate would just cancel/not show up to class/not post stuff because she was \"burn out\" (how do you think we felt!!!), and it was the most poorly taught class at Northwestern. Take your pick!",
        "Good course! The assignments are satisfying and it\u2019s a good overview of python!",
        "I was enrolled in CS 111 and CS 150 concurrently, and I am under the firm belief that if I had taken CS 111 solely, I would have dropped out of computer science. CS 150's redesigned course materials have focused more on application\u2013based aspects of programming. I grew passionate about what was possible in the field thanks to the Professor Compton's assignments, and her weekly lectures about different topics in software engineering. Professor Compton was a pleasure to learn from as she genuinely was very happy to help us learn and coach us through getting past the simplest of errors. Furthermore, the class structure was pretty generous as there was no exams, and we were graded on our weekly assignments that one should try to turn in on time. Ultimately, this has been a great introduction to computer science at Northwestern, and I look forward to taking more courses with Professor Compton in the future.",
        "i mean the prof is super disorganized but an excellent basic engineering option for engineers. go to office hours, do the homework, really not that hard if you've taken EA1 or CS 110",
        "The course and the instruction was fairly easy to follow and the assignments were a fair level of challenge.",
        "I liked how the class was organized \u2013 only one assignment per week. The assignments aren't too challenging, just sometimes time consuming but the TAs are extremely helpful and make themselves very available",
        "Professor wants everyone to do well she always stays after class and adjusts the class and due dates for students. A lot of peer mentor availability for office hours. Reasonable work load and you learn a lot of python and useful skills. Classes after interesting and teach about different facets of the world of computer science.",
        "While Prof. Compton definitely is very knowledgable and can do many cool things with CS, she is not a very good professor. For most of the class session, Prof. Compton shows us what we might be able to do with certain CS ideas, but never really teaches us how to code them, making this class particularly challenging for those who are unfamiliar with Python. She also doesn't seem to have a grasp on how long it takes us to do said assignments and how much time we have outside of class to really practice coding. Over the quarter many things were disorganized, with assignments being posted at random times and days (usually late) and having random due dates that didn't really follow what the syllabus determined (giving us less time to do them). Overall, I'd say this class is well intentioned, but poorly executed. I believe it should get better as Prof. Compton teaches it more times, but for now it really needs to be reorganized.",
        "I think this class taught me a lot regarding programming, as projects were actually based in learning rather than crazy hypotheticals. I felt like I actually became better at programming, rather than just somehow making my way through.",
        "This course is very reasonable in its homework demands and the assignments seemed useful in the application of computer science to work beyond college. I did not spend that much time on homeworks, but expect to spend at least a few hours a week figuring out the assignments.",
        "Easy fun class. I guess that teaching this class is challenging because people may or may not have experience with Python before taking it. I think that this class is underappreciated from the side of non\u2013CS majors: it actually can be useful for people who are not intending to major in CS but want to get more comfortable with Python for other things, i.e. data analysis. The lectures were not technical, so it was not really insightful if you have some Python coding experience. The assignments are fun, but not fully clear. Sometimes, it takes more time to understand what the instructions ask you to do than to actually complete it. Prof. Compton is fun and passionate about coding in Python, so they managed to show different applications right away. Overall, I don't feel like I learned a lot, but it was pretty fun.",
        "I'd say that the lectures aren't that useful, but the assignments are extremely useful for learning a wide variety of concepts in Computer Science. Compton (mostly) does a wonderful job preparing the assignments, and they're technical enough for you to grapple with a few hours without feeling absolutely stumped. Additionally, this class teaches you how to google to learn how to do ______, which is perhaps the most useful skill.",
        "This was a really good course.  a bit of a weird shift from the past year of covid CS classes, but i liked it a lot. sometimes a bit disorganized, but she never \u201ctook it out\u201d on us and was always ready to give extensions and the like",
        "The assignments were alright because I was able to get a lot of help from the Peer Mentors during their office hours.",
        "Compton just assumes you have had exposure to Python and doesn't actually teach you a thing about how to even use it. Everything I learned throughout this quarter was because I googled it.",
        "Exploring different topics with Python was fun, but could've been more organized",
        "If you're looking to learn the basics of Python a bit more, I'd recommend this course. While I feel that class assignments were a bit too 'guided' to build any significant practical experience, it's evident that this course will give you greater knowledge in the basics and coding thought process.",
        "I enjoyed this course. It was not time\u2013consuming and each assignment taught me a different aspect of Python. I also really liked how the last assignment was about learning different coding languages because in the future, there won't be a NU class for every single language so it was helpful.",
        "Easy A, but you will not learn how to code in class.",
        "I think this course was disorganized and sometimes the assignments had bugs in them which was especially frustrating. I also felt that lectures did not help with the assignments. Definitely needs more organization. I learned everything from peer mentors.",
        "The course didn't teach how to code, it taught how to access the office hours link.",
        "I wish the CS department can reform this particular course",
        "This class is solely assignment\u2013based with no final, quizzes, or exams. Prof. Compton spent lectures going on tangents and the applicability of coding rather than the coding itself. I feel like going to class helped me to learn moreabout her and the fun things she can do with computer science than how to do things myself. Eventually, probably about 70% of people just stopped going to class because it wasn't helping us learn anything about python. I also found it really hard to learn coding from a projected screen with tiny letters I could barely even see. Mostly, I was learning by myself and with peers than with Prof. Compton. Office hours were basically a necessity to complete our weekly assignments. If you can, I would probably recommend taking this class with someone else.",
        "Didn't really feel like I learned a lot in this class. Lectures were boring and not super useful so class wasn't really worth going to. I basically learned by doing the assignment with TAs and googling things. I'm still not able to code in Python after this class so this class wasn't super useful. I felt like Prof Compton was nice and interesting and really cared about her students, but I just didn't learn anything from her lectures. Pretty easy class though if you just spend a few hours with the TAs doing the assignments. Having no tests was also pretty nice.",
        "This class was a good basic introduction to Python. Professor Compton completely redesigned the course, so it was a first iteration of it in this format. It consists of daily lectures and weekly assignments focused on applying the concepts in lecture. It's geared towards students who already have some knowledge of programming and starts off assuming everyone is familiar with basic programming syntax, although there is a bit of review at the beginning. I found the material interesting, but I don't think the lectures were super clear or informative. They mostly consisted of abstraction about certain programming tools and watching the professor code live, which half the time didn't work. I also found the assignments somewhat strange in the sense we were writing the code for methods of already created classes and programs. Overall, I think the format needs to change, but I do appreciate Professor Compton's efforts and think it will definitely improve.",
        "Lectures were kind of useless because Kate talks more about the applications of concepts rather than showing us how to utilize them. She would talk a lot about how she used certain concepts in her own personal projects instead of actually explaining them, so I found myself relying on office hours to actually complete the weekly assignments.",
        "Professor Compton completely changed the course from previous years.  The assignments were very interesting and applicable to actual things we might need to do in the real world.",
        "The  assignments were pretty clear and doable \u2013 never felt like an overload of work. The lectures had almost nothing to do with the assignments and skills we need for the coursework and focused more on big\u2013picture concepts.",
        "Enjoyed this class. Mostly independent work as you learned how to use Python in the homework assignments. Expect to dedicate a couple hours for the homework if you're not familiar with Python, but the peer mentors are very helpful if you have any questions. The only pointer I would give is to start the homework early. Prof. Compton gives a wonderful intro to CS as a beginner, and the lectures are very interesting.",
        "I wanted to learn Python before graduating \u2014 I'm so glad I took this class with Professor Compton. She is so cool and knowledgeable and understanding, and class assignments were fun to complete. I LOVED THIS CLASS! It's definitely a must\u2013take at Northwestern.",
        "This course is incredibly easy. Unless you feel very uncomfortable coding, I would highly recommend skipping this course. The class average is an A+. The homework is easy and fun, but also feels randomly chosen and has no flexibility. The course is all about learning syntax and not at all about learning the logic of coding. The professor will write out in words the exact way to make each function, which takes away all of the learning opportunities. This is a 30 minute per week of work class.",
        "This is not a very difficult class it is just very disorganized. Assignments were fair and help was readily available from many sources. Lectures were useless and wish more time was spent on code demonstrations.",
        "This course is very minimal effort and was not much of a burden at all. The entire grade was based on assignments and no quizzes or tests were factored in. Each of the assignments does not take long to do and was pretty basic. I would recommend this as a good elective or course to take if you're just interested to learn some Python.",
        "Cool course, learned a bit more of Python, office hours cool, lectures were average, assignments were very interesting though, very happy there was no quizzes or midterms/finals, just HW",
        "Have you ever wanted to spend your Monday nights begging a TA for coding help? Well, if so, you've come to the right place!Many former students of CS150 said that this was a very easy and straightforward class. Unfortunately, this quarter, we were not so lucky. On the first day, Professor Kate Compton explained that she was going to redo all of the assignments in the course \u2013\u00a0this meant that they usually had several bugs and errors, and were difficult to understand. Lectures were not helpful. Unfortunately, Professor Compton spent most of her time talking about abstract ideas in coding or what you could DO with coding, without actually teaching how to code. If she did, it consisted of quick typing and jumping from tab to tab on her computer, making note\u2013taking impossible. As I said, the assignments were usually really buggy. On top of that, there was never a consistent schedule for when they would be posted. One week, it would be posted on Sunday night and due on Friday \u2013\u00a0the next week it would be posted on Wednesday and due the following Monday. This made it hard to anticipate your workload. Additionally, the assignments usually had poor instruction and were really vague. Even if I understood how to code in Python, I would not have known what she wanted me to do. It was clear that they were written in a short period of time.If you are taking this class, prepare to be sitting in office hours weekly. Also, branch out to as many people possible and beg each other for help.",
        "Apart from the use of a more famous language, I don't see anything more useful that this class taught me in comparison to 111. It is also frustrating because we hear all the time how much harder the higher classes in computer science are, but the way the homeworks are structured and the class itself, it just felt like the content that I actually learned at the end of the quarter (the content that I understood), could be condensed in a week's worth of class.",
        "This class focused on weekly homework assignments, which were lengthy coding assignments focused on new concepts in Python. The lectures did not prepare students to complete the assignments, and they were very difficult to comprehend without substantial help from the peer mentors. I hardly ever felt confident going into a homework assignment. This class did not feel well organized.",
        "150 isn't hard. Do the projects and you are fine. They can be fun too. Going to class is optional. Sometimes I would go just to be in a space conducive to doing other school work.",
        "This is a pretty painless class. The assignments are fun and challenging, but the lectures should be restructured to match out\u2013of\u2013class work. Prof Compton is super passionate and will offer help if you need it, but I took this class mostly for fun and didn't expect the pre\u2013professional vibe.",
        "This class is pretty good and quite easy to get an A in . You can also get by with not attending the classes if you have a bit of familiarity with Python. Professor Compton isn't really the best at teaching the language and I honestly didn't learn much from the class.",
        "This class was pretty scattered. It covers a lot of stuff, and at the beginning that was a problem, but the organization got better later on.",
        "Course is really interesting, a great introduction to Python for those with no experience.",
        "Dr Kate is too smart to teach the class. She usually uses class to explain seemingly random things that cannot be applied to the assignments. Generally the assignments had bugs and the TAs did not know what was expected. Assignments are not hard though and can be grinned out in an hour or so. Def use office hours early in the week before they are crowded.",
        "Professor Compton was a great professor for this course, and provided multiple ways in which we could improve our Python coding skills. It wasn't too difficult, and the only grades were weekly assignments that weren't too difficult. Also, Python itself is just a very friendly language to learn. I would definitely recommend this class to anyone who wants more experience coding in Python.",
        "Assignments(homework) often had issues, though it was primarily a result of it being a new structure. Overall, well\u2013taught and I learned a lot."
    ]
}{
    "course_code": "Student Report for COMP_SCI_150-0_1",
    "course_name": "Fund of Computer Prog 1.5",
    "instructor": "Sara Owsley",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.95",
        "count": "43"
    },
    "course_rating": {
        "mean": "5.72",
        "count": "43"
    },
    "comments": [
        "I loved doing assignments.",
        "This is a great course to learn Python and a bit of C++.",
        "Best class so far.",
        "Professor Sood and the entire 150 instructional team are phenomenal. Their approach to remote learning was brilliant and made the course less stressful. Highly recommend this course for anybody interested in learning programming skills: you'll cover a lot of content and tackle some difficult projects, but you'll have a tremendous amount of support and guidance.",
        "This class is super less workload however still manages to teach you a LOT of stuff. It made sense to take it along with 111 because the content often moved parallelly. Sara is THE BEST!!! I feel like every northwestern student should take a class with her. Can be taken as a fifth class, and an easy A class, nothing that's super demanding.",
        "took it as a non major and was doable and Sara is the best",
        "This class was really interesting and not too time consuming",
        "This class was amazing and a great one to take for anyone who is not familiar with Python or C++. The class taught me a lot but was never overwhelming. The lectures were organized with clear, thorough explanations that left little room for confusion or ambiguity. Sara cares a lot about her students and truly wanted us to learn. There was a lot of help available, and both Sarah and the TAs made a lot of effort to be accessible, friendly, and understanding.",
        "This class is a brand new addition to the CS core curriculum and I feel like they're still recalibrating it a little. I guess it's basically just you getting in more programming practice through brief introductory projects in things like object\u2013oriented programming and some really basic AI stuff. If you have experience with Python and/or object\u2013oriented\u2013y stuff, the first half of the class is very easy. The assignments are cool and fun but I'd probably say you should take this alongside another CS class.Sara is awesome ofc.",
        "This is the perfect course to take after CS 111. I had no prior CS experience other than CS 111 coming into this course and had been planning on taking CS 211 this quarter. This class is a fantastic intermediary course and I feel much more prepared to take 211 now. This class is a low time commitment. Obviously the class was online this quarter, but Sara did an amazing job making the class stress free and flexible given the nature of the current times. Sara had the class use a flipped classroom model where we watched some short prerecorded videos and then did group work in class. I will admit that I feel that I could have learned a little more during the quarter than I actually did, because the work load wasn't too big and we went pretty methodically and slowly through the material, but that said, it's still the class I feel was perfect to take for me. PS Sara is an awesome professor and is so understanding about everything.",
        "Due to the online learning environment we used a flipped classroom where we did the majority of our work during the actual lecture time listed on canvas but had lectures to watch outside of class. Personally I was a big fan of this. It made it less stressful to get help or ask questions because when you worked on assignments in class there were the ta's and the professors ready to help. There was very little to do outside of class ever if you were diligent with your time in class. If you are willing to put in some extra work and time, I would take this class with 211. Overall, Professor Sood is so helpful and I would highly recommend this class with her.",
        "This class was far better than 111. The homeworks were very manageable and actually pretty interesting. Python was a nice language to pick up.",
        "The course was easy especially if you have any prior experience with CS. The assignments are interesting and manageable whether or not you have experience and the class never demands an unreasonable amount of time from you. The flipped classroom format was really nice because you never waste time \u2013 if you've finished the assignment and understand everything they won't expect/force you to come to class.",
        "Graduating from Northwestern without having taken one of Sara's classes should be illegal. Never mind the fact that coding is a super useful skill to have, she's hands down the coolest prof in the comp sci department. If you've taken 110/111 this is a perfect sequel and a great way to learn Python and a little C++.",
        "Only grades were super easy classwork assignments and then the longer coding assignments which were explained in detail during the videos so they aren't too difficult and just require time. Overall, it wasn't too difficult and the teacher is pretty good.",
        "As a senior who has been through McCormick, this class is not difficult. However, I wanted to learn Python, and now I feel I have a better understanding of the language. The class is well taught and the teachers and TAs are extremely helpful!",
        "Sara is the nicest person ever, and really makes sure you will do well in the class. I did think it moved a little slowly, often I would be 1\u20132 weeks ahead. I think we could have learned a little more in the time span.",
        "I really enjoyed CS 150 as one of my introductory CS classes. Professor Sara Sood is so nice and helpful",
        "If you can talk to the professor I would recommend it, as she does her best to help you learn. The homework assignments are not the worst and if you ever get too stuck, the TAs and Professor do all that they can to help you. I would recommend this class if you're trying to refresh some concepts on coding or learn some Python.",
        "Professor Sood is AMAZING. She is so kind, such a good teacher, and genuinely tries to get to know all of her students.",
        "SARA IS THE GOAT best professor at NU",
        "Sara is an amazing professor and Kate was great too. As someone who did not have experience with Python or C++  this course covered all of the basics and we did some really fun projects that incorporated AI along the way. It wasn't difficult at all, very manageable which was great for someone looking for a laid\u2013back class that will teach you what you need to know about programming in Python and C++.",
        "To be honest, the group aspect of the class did not really work for me; a couple weeks into the quarter, it was just me and one other guy because the others had left. We pretty much never worked together because we would usually be in different parts of the assignment and we didn't really talk very much either. Overall, I didn't think that I got very much out of the groupwork. However, I think that this is mostly my fault, as I could have moved groups if I wanted. This didn't really affect my performance in the class, as there were plenty of resources to get help. I still wanted to share my experience though.",
        "This course was a nice introduction to python and c++ and helped me get accustomed to the languages.",
        "This course was very enjoyable and laid back. The majority of the grade is 9 programs, however, there is so much help throughout the week from classmates, TA's, and Sara that its pretty manageable.",
        "This was a good follow\u2013up course for anyone interested in CS and doesn't have much experience. I thought it was nice that we learned to use both Python and C++. I also enjoyed the flipped classroom method, allowing for more opportunities to ask questions.",
        "This class is great, a good stepping stone from 111 to 211. If you just finished 111 and you're feeling a little intimidated by 211 because you've heard the rumors, I highly suggest this class. Sara Sood is obviously great, she's willing to help, and the assignment for this class are actually really fun and interesting. They probably took around 1\u20133 hours per assignment, but it didn't feel like it. I would suggest starting earlier on in the week so you have time to ask questions, but you won't be screwed if you start later. You'll leave with familiarity in Python and an okay working knowledge of C++, but C++ is a little hard because it's such a different language.",
        "This course is a great starter to Python and a little C++, and was thoughtfully structured as to not place and undue extra load onto students as a result of its asynchronous/hybrid nature (actual in\u2013person lectures were optional, you just had to complete the participation by the end of the day). Sara Sood was very helpful and kind, and her lecture videos and resources were phenomenally instructive and integral to the course.",
        "Please take this course. I have decided to switch to a CS major because of this. Sood is the best. TAs were also very helpful.",
        "I LOVED THIS COURSE SO MUCH. Prof Sood was so helpful and understanding, and genuinely wants students to learn!! There were so so many ways to ensure that you're doing well for this class. SO much help provided with office hours and there's even an optional extra\u2013credit assignment in case. Also, peer mentor Peter is a gem, he is AMAZING.",
        "Great class, Sara is always there to help. I requested one on one with her when I was struggling with one of the assignments, she clarified everything so well!",
        "I really liked the weekly assignments. I think that the professors were very flexible in due dates. They were really helpful to learning, low stress, but taught me a lot through hands\u2013on coding. Office hours were an absolute godsend.",
        "Very challenging topic for me, but the class is set up to be very helpful every step of the way.",
        "I loved that the latter half of the course was centered around programming AI. I was previously quite intimidated by the field of AI, but the professor showed us that we could also program AI and that it wasn't as difficult as we thought."
    ]
}{
    "course_code": "Student Report for COMP_SCI_150-0_1",
    "course_name": "Fund of Computer Prog 1.5",
    "instructor": "Katherine Compton",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.27",
        "count": "33"
    },
    "course_rating": {
        "mean": "5.72",
        "count": "43"
    },
    "comments": [
        "I loved doing assignments.",
        "This is a great course to learn Python and a bit of C++.",
        "Best class so far.",
        "Professor Sood and the entire 150 instructional team are phenomenal. Their approach to remote learning was brilliant and made the course less stressful. Highly recommend this course for anybody interested in learning programming skills: you'll cover a lot of content and tackle some difficult projects, but you'll have a tremendous amount of support and guidance.",
        "This class is super less workload however still manages to teach you a LOT of stuff. It made sense to take it along with 111 because the content often moved parallelly. Sara is THE BEST!!! I feel like every northwestern student should take a class with her. Can be taken as a fifth class, and an easy A class, nothing that's super demanding.",
        "took it as a non major and was doable and Sara is the best",
        "This class was really interesting and not too time consuming",
        "This class was amazing and a great one to take for anyone who is not familiar with Python or C++. The class taught me a lot but was never overwhelming. The lectures were organized with clear, thorough explanations that left little room for confusion or ambiguity. Sara cares a lot about her students and truly wanted us to learn. There was a lot of help available, and both Sarah and the TAs made a lot of effort to be accessible, friendly, and understanding.",
        "This class is a brand new addition to the CS core curriculum and I feel like they're still recalibrating it a little. I guess it's basically just you getting in more programming practice through brief introductory projects in things like object\u2013oriented programming and some really basic AI stuff. If you have experience with Python and/or object\u2013oriented\u2013y stuff, the first half of the class is very easy. The assignments are cool and fun but I'd probably say you should take this alongside another CS class.Sara is awesome ofc.",
        "This is the perfect course to take after CS 111. I had no prior CS experience other than CS 111 coming into this course and had been planning on taking CS 211 this quarter. This class is a fantastic intermediary course and I feel much more prepared to take 211 now. This class is a low time commitment. Obviously the class was online this quarter, but Sara did an amazing job making the class stress free and flexible given the nature of the current times. Sara had the class use a flipped classroom model where we watched some short prerecorded videos and then did group work in class. I will admit that I feel that I could have learned a little more during the quarter than I actually did, because the work load wasn't too big and we went pretty methodically and slowly through the material, but that said, it's still the class I feel was perfect to take for me. PS Sara is an awesome professor and is so understanding about everything.",
        "Due to the online learning environment we used a flipped classroom where we did the majority of our work during the actual lecture time listed on canvas but had lectures to watch outside of class. Personally I was a big fan of this. It made it less stressful to get help or ask questions because when you worked on assignments in class there were the ta's and the professors ready to help. There was very little to do outside of class ever if you were diligent with your time in class. If you are willing to put in some extra work and time, I would take this class with 211. Overall, Professor Sood is so helpful and I would highly recommend this class with her.",
        "This class was far better than 111. The homeworks were very manageable and actually pretty interesting. Python was a nice language to pick up.",
        "The course was easy especially if you have any prior experience with CS. The assignments are interesting and manageable whether or not you have experience and the class never demands an unreasonable amount of time from you. The flipped classroom format was really nice because you never waste time \u2013 if you've finished the assignment and understand everything they won't expect/force you to come to class.",
        "Graduating from Northwestern without having taken one of Sara's classes should be illegal. Never mind the fact that coding is a super useful skill to have, she's hands down the coolest prof in the comp sci department. If you've taken 110/111 this is a perfect sequel and a great way to learn Python and a little C++.",
        "Only grades were super easy classwork assignments and then the longer coding assignments which were explained in detail during the videos so they aren't too difficult and just require time. Overall, it wasn't too difficult and the teacher is pretty good.",
        "As a senior who has been through McCormick, this class is not difficult. However, I wanted to learn Python, and now I feel I have a better understanding of the language. The class is well taught and the teachers and TAs are extremely helpful!",
        "Sara is the nicest person ever, and really makes sure you will do well in the class. I did think it moved a little slowly, often I would be 1\u20132 weeks ahead. I think we could have learned a little more in the time span.",
        "I really enjoyed CS 150 as one of my introductory CS classes. Professor Sara Sood is so nice and helpful",
        "If you can talk to the professor I would recommend it, as she does her best to help you learn. The homework assignments are not the worst and if you ever get too stuck, the TAs and Professor do all that they can to help you. I would recommend this class if you're trying to refresh some concepts on coding or learn some Python.",
        "Professor Sood is AMAZING. She is so kind, such a good teacher, and genuinely tries to get to know all of her students.",
        "SARA IS THE GOAT best professor at NU",
        "Sara is an amazing professor and Kate was great too. As someone who did not have experience with Python or C++  this course covered all of the basics and we did some really fun projects that incorporated AI along the way. It wasn't difficult at all, very manageable which was great for someone looking for a laid\u2013back class that will teach you what you need to know about programming in Python and C++.",
        "To be honest, the group aspect of the class did not really work for me; a couple weeks into the quarter, it was just me and one other guy because the others had left. We pretty much never worked together because we would usually be in different parts of the assignment and we didn't really talk very much either. Overall, I didn't think that I got very much out of the groupwork. However, I think that this is mostly my fault, as I could have moved groups if I wanted. This didn't really affect my performance in the class, as there were plenty of resources to get help. I still wanted to share my experience though.",
        "This course was a nice introduction to python and c++ and helped me get accustomed to the languages.",
        "This course was very enjoyable and laid back. The majority of the grade is 9 programs, however, there is so much help throughout the week from classmates, TA's, and Sara that its pretty manageable.",
        "This was a good follow\u2013up course for anyone interested in CS and doesn't have much experience. I thought it was nice that we learned to use both Python and C++. I also enjoyed the flipped classroom method, allowing for more opportunities to ask questions.",
        "This class is great, a good stepping stone from 111 to 211. If you just finished 111 and you're feeling a little intimidated by 211 because you've heard the rumors, I highly suggest this class. Sara Sood is obviously great, she's willing to help, and the assignment for this class are actually really fun and interesting. They probably took around 1\u20133 hours per assignment, but it didn't feel like it. I would suggest starting earlier on in the week so you have time to ask questions, but you won't be screwed if you start later. You'll leave with familiarity in Python and an okay working knowledge of C++, but C++ is a little hard because it's such a different language.",
        "This course is a great starter to Python and a little C++, and was thoughtfully structured as to not place and undue extra load onto students as a result of its asynchronous/hybrid nature (actual in\u2013person lectures were optional, you just had to complete the participation by the end of the day). Sara Sood was very helpful and kind, and her lecture videos and resources were phenomenally instructive and integral to the course.",
        "Please take this course. I have decided to switch to a CS major because of this. Sood is the best. TAs were also very helpful.",
        "I LOVED THIS COURSE SO MUCH. Prof Sood was so helpful and understanding, and genuinely wants students to learn!! There were so so many ways to ensure that you're doing well for this class. SO much help provided with office hours and there's even an optional extra\u2013credit assignment in case. Also, peer mentor Peter is a gem, he is AMAZING.",
        "Great class, Sara is always there to help. I requested one on one with her when I was struggling with one of the assignments, she clarified everything so well!",
        "I really liked the weekly assignments. I think that the professors were very flexible in due dates. They were really helpful to learning, low stress, but taught me a lot through hands\u2013on coding. Office hours were an absolute godsend.",
        "Very challenging topic for me, but the class is set up to be very helpful every step of the way.",
        "I loved that the latter half of the course was centered around programming AI. I was previously quite intimidated by the field of AI, but the professor showed us that we could also program AI and that it wasn't as difficult as we thought."
    ]
}{
    "course_code": "Student Report for COMP_SCI_150-0_1",
    "course_name": "Fund of Computer Prog 1.5",
    "instructor": "Katherine Compton",
    "year": "2022",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "4.38",
        "count": "167"
    },
    "course_rating": {
        "mean": "4.41",
        "count": "172"
    },
    "comments": [
        "This course was definitely an easy A, so take it if that's what your looking for. However, if you're looking to actually learn python and the \"fundamentals\" of CS, I would recommend skipping this course or taking some free online bootcamp if you're motivated enough. This class was a waste of time and money. I honestly cannot name a single thing I learned and actually have an adequate understanding of. I learned some python syntax and stuff I guess, but that could've been easily learned by taking a free online course. Professor Compton \"teaches\" random topics in lectures, which sometimes seem interesting but she explains them so vaguely you won't get anything out of it. This class reminds me of AP CS principles, except I learned more in that class and it was formatted better. Lecture topics have nothing to do with assignments. In addition, Professor Compton didn't grade any of our assignments until the last couple of weeks of the quarter, which was annoying since I had no idea how I was actually doing in the class and it's hard to start new assignments if you aren't sure if the methods you used in previous ones were correct. I think this class needs to be reformatted to include actual teaching of topics relevant to assignments in lectures and it would be great if assignments were a little more intellectually stimulating since it seemed as though they got easier as the quarter went on. This is an amazing class to take if you're not interested in CS and just want a blow off class because there are no quizzes, midterms, finals, or projects. I do not feel as though this class has prepared me to take higher level CS classes and I may as well have skipped this course and taken a 200\u2013level one since this class didn't strengthen my previous knowledge and certainly didn't add any.",
        "Loved this course, definitely, an easier class as the grade is based on assignments that provide great comments to understand what is asked. Great intro course to python and overview of coding understanding. Would definitely recommend this over 211. Professor Compton is a must\u2013take professor and I truly respect her as a professor. Put in the effort and you should do well. Emphasis on assignment with no quizzes and tests allow you to understand the material stressfree from time constraint evaluations and allows you to focus on the coding language.",
        "Overall, not a bad course. The class was very disorganized and the fact that we covered a new topic each week makes it feel like you don't really learn much. Prof Compton is very passionate about coding, but the class felt more like a display of the things you can do with code, rather than actually learning how to code in python. I'd much rather learn about python syntax than how twitter bots are made.",
        "I liked the class. It was my easiest this quarter. The structure of the class guarantees the students an A. That, in my opinion, made the class friendly.",
        "Instructions were unclear and you don't learn anything concrete or useful in lectures. Kind of a waste of time if you already know a bit python.",
        "Good class. Not as difficult at CS 111 since there were no exams (90% homework, 10% participation). Lectures are less about Python but instead more about general CS topics.",
        "Great beginner course to python",
        "Overall, I think it's a good introduction to the many uses of Python and larger programs in Python.  However, I wish we were able to design the programs more.  A lot of times we were just translating written instructions into code, which is useful for learning syntax but not critical thinking.",
        "I felt as though if I came into the course with no experience coding, I would ave a solid understanding following this course.",
        "This course is difficult if you don't have a solid Python base. The lectures are primarily about the real\u2013world application of coding and not focused on the actual coding done in the weekly assignments. I found myself struggling to figure out how to do the weekly assignments and the lectures did not help much. Prof Compton is really nice though and really enthusiastic about CS",
        "the class could be structured better but it was decently easy and there is also of opportunities to get points back.",
        "This class felt pretty chaotic. The lectures aren't useless, but they don't necessarily correspond to the assignments and so most of the learning happens from Googling or office hours. Unlike CS 111, there isn't a lot of review of syntax and the logic behind the code. Virtual office hours wasn't great because so many students would be in a Zoom at once that you could wait for almost an hour until a PM got to you. However, the resubmission policy and optional extra credit at the end ensure that you get an A.",
        "Prof Compton was extremely understanding and taught concepts in a very easy way to understand. Exercises are outlined in detail so you know what to do to get full marks on the assignment.",
        "Professor was nice, class had good grading policies, easy to do well, opportunity for extra credit, very reasonable assignments, will work with you if you are having trouble. Not intimidating, good class.",
        "Pretty easy class relatively. Professor Compton is so nice and chill but also such a great instructor/coder. She is super knowledgeable and fair with assignments/grading. Also teaches you a lot about CS in general outside of python which is helpful. If you can take CS150 w/ Compton.",
        "Honestly this class is an easy A. The lectures can be interesting but aren\u2019t necessarily related to the homework, so you can really get by without them. I sometimes would just skim over concepts then do the homework and I\u2019d be fine.",
        "The assignments in this class are super manageable and helped me learn a lot. Professor Compton is a great professor and makes the content engaging, however lectures did not really help me with the assignments.",
        "It was a bit underwhelming. I appreciated what Professor Compton was trying to do, and if I wasn't busy with other stuff, I would've been more engaged in class, but going to class often felt like a waste of time for me. \"The industry\" side of programming might be more helpful for students to learn about in 111 for a week, rather than in this class.",
        "Professor Compton has really good intentions and is certainly enthusiastic about computer science, so you cannot fault her for that.  However, the lecture portion of this class needs a complete overhaul.  I learned essentially nothing from lecture other than some random anecdotes related to computer science.  Quite literally, I cannot name a single thing I learned about actual coding from lecture.  If I hadn't taken CS 110, I would've struggled so much in this course.  Nonetheless, I think the course will certainly improve as she teaches it more.  My advice is that if you have no coding and/or python experience, take the class with a friend.  It'll make the assignments manageable.",
        "I LOVE Kate!! She's literally the sweetest teacher ever and she's amazing at explaining everything. The structure of the class is great, no tests or finals, we only have one hw assignment a week and she encourages collaboration. Having no finals made me a lot more excited about actually learning the content and I never felt stressed about anything (She also offers extra credit on the last HW assignment)",
        "great class, great professor, pms were good for most part",
        "Teacher used hybrid option which favored those who went on zoom and not in person. Assignments were relatively challenging but did most of my learning independently.",
        "This is a really cool class, but the structure is a little weird. Kate is awesome, but I just wish her lectures were more related to the assignments and material. Pretty fun class overall.",
        "I have mixed emotions regarding this class. Though I did find many of the assignments to be interesting and fun, they were rewritten from previous quarters, where (I believe) Professor Sood had written the assignments. Thus, on several occasions, there were strange bugs in the assignments, and it was often somewhat hard to tell if the code I had written caused the bugs, or if this was a problem in the starter code that everybody was having. Beyond that, essentially all of the learning that you'll experience in this class is through the assignments. The lectures really did not cover much that would help you complete the assignments, and when difficulties showed up in the assignments, online resources came through greatly. Though I went to lecture, I greatly appreciate Professor Compton adding an asynchronous and remote option to this class.In terms of difficulty, this class is nothing to stress over. If you start the assignments shortly after they're assigned, you will really have absolutely nothing to worry about. Grades are made up of these assignments and several participation activities, which can be completed asynchronously. If something does go wrong, there is a fair deal of extra credit offered at the end of the course. Ultimately, I do think that this class can even be taken as a fifth class, for it was not demanding.If you're on the fence about taking this class or going straight into 214, I would say that it purely depends on your schedule. If you have the time to take this class and want a more relaxed class to lighten your schedule's load, I would absolutely recommend it.",
        "Compton makes this class easy to do well in, and it\u2019s not too much work to complete the assignments. There\u2019s loads of OH and the TAs are super helpful so that also makes things easier on you.",
        "The machine learning section is great, all of the data analysis stuff really prepares you for the real world.",
        "This course was pretty solid and not too hard. The assignments take a good amount of time, so start them early and then go to office hours for help. Overall, class is interesting if you see yourself coding in the future (so to me, it was interesting). However, all of my friends who are not CS majors were always complaining about how class was a waste of time.",
        "Very poorly structured. Professor Compton doesn't reply to her mails and it is impossible to reach her when you have a question or need a regrade on an assignment. She doesn't really care about the lecture or the students. The lecture content doesn't help you learn coding at all. You learn by doing the assignments (the assignments aren't hard if you coded before). But the TAs were very helpful. I don't know if there are any other professors giving this class but there are other options, definitely don't take it from Kate Compton.",
        "Really disorganized class but there are a lot of opportunities to get help if needed. Homework assignments are pretty reasonable. No tests or major projects, just participation and weekly assignments. This is much easier than CS 211.",
        "This course focuses mostly on coding Python. I feel like the instruction wasn't focused much on learning actual python skills but more how to have a job as a programmer. So if you were looking for how to do an assignment the lectures were not very useful, TA office hours is where you needed to go.",
        "I found this course really interesting! Professor Compton created the assignments so that they allow you to quickly learn the basics of Python syntax but are also framed around cool topics, like dealing with large quantities of data, Bayesian probability, webscrapping, etc. The class is all assignment based and the lectures are interesting but not always super helpful for learning how to do the assignments (this might just be because I'm relatively new to CS and need more time to absorb the information). However, there are so many TA office hours that this is not a problem at all. I would highly recommend this class.",
        "It was a pretty fun class. Lectures were interesting, but not always directly relevant to the weekly assignments.",
        "This course was a nice next step course to CS 111. The time commitment was pretty low and the expectations weren't crazy. That being said, I think altough I can code in Python now, some aspects and understandings are a bit unclear to me, but all the same, Prof Compton is really nice and always willing to explain things that are confusing.",
        "Coming from a MATLAB background through the EA sequence, I found Python to be very intuitive to learn. Most importantly, the way Professor Compton goes about teaching this class makes it way less stressful than it could have been.",
        "I felt like this course was well focused on developing our programming skills, to the point where not only do I feel comfortable working in python, but I feel confident that I can learn other languages pretty easily too.",
        "The course was very easy if you have taken both 110 and 111. Prof Compton is really accommodating and she teaches well.",
        "This class was super easy to get a good grade in because there are no exams, just assignments and they aren't difficult, and there are lots of office hours where the TAs can help, but the class is structured terribly. The professor does not teach the material we are supposed to learn\u2013\u2013you'll basically have to figure out how to do everything on your own. She often discussed irrelevant material in class like her own projects and her twitter account. You don't actually learn the syntax of python in the class, but more so problem\u2013solving skills by doing the assignments.",
        "The class was fair as an introductory course, meaning that none of the assignments were too difficult. Prof. Compton is super knowledgable and friendly, so she was a great resource for the class.",
        "Easy class if you just do the assignments, don\u2019t need to go to lecture. The key is definitely going to office hours!!! Didn\u2019t feel like I learned much, but overall CS at Northwestern has given that energy",
        "free A.",
        "Dr Kate is nice, but lectures are kinda dry. Assignments are interesting and fairly straight forward.",
        "Prof. Compton hardly teaches any syntax which is really frustrating because I feel like I go into all of the assignments blindly. She also is always behind on grading. You do not need to go to the lectures. Office hours are really, really helpful.",
        "This was an easy class. The homework rarely requires too much effort and the assignments are basically layed out for you.",
        "I learned a lot about lists, dictionaries.",
        "This course is very forgettable, but like in a totally okay way. The assignments do teach you and I feel like I gained a better understanding of Python but I think some part of that is due to the fact that I can code in multiple languages. Not quite sure how it would be if you were taking a one\u2013off computer science class. The lectures were not helpful, so I didn't go, and I found the participation infuriating (though I did think it was a kind grade booster). There is many many TA office hours and Kate is superrrrr kind and accepting about regrades and late work, so I would say this course is designed to HELP THE STUDENT. Definitely find friends to work through the code together. Start early, as you probably will get stuck. If you put any sort of work into this class, you'll be rewarded.",
        "I was surprised at how easy this course was.  I realized that anyone can fly through the assignments, but if you really want to make or do something with Python, you have to take advantage of the resources which she provides and actually learn outside of the classroom.",
        "Very relaxing course. The assignments were straight\u2013forward and the lectures were chill. Although, my only complaint is that we didn't learn too many technical computer\u2013science skills.",
        "Okk",
        "A good course to take following 110. No surprises, just 8 assignments and the rest of the grades were small participation assignments. Professor Compton is very nice but I didn't find her lectures to be very useful but the class is fine even without watching the lecture.",
        "Work with friends please especially if you are a beginner otherwise its gonna be tough",
        "I thought the course was good, but I wish the professor taught more actual syntax about Python instead of other topics",
        "very easy course, don't really need to go to class. don't feel like i learned much (basically used a lot of what I learned in CS 110). assignments can be difficult, but many OH which helps. no final!",
        "This course is pretty good at introducing python. The homework is helpful in focusing on a different computer programming idea  every week. You don't really get to learn the syntax of python in the beginning, so if you're coming from CS111 rather than CS110, it's a little bit harder.",
        "I wanted this course to teach me effective coding skills but I felt like I was learning just for the assignments and do not actually have any transferrable skills to use in the future",
        "The lectures weren't very helpful in teaching the concepts needed for the assignments. Mostly learned through trial and error, however, the assignments overall were pretty fun. The course does a decent job teaching you Python. Overall, an average class.",
        "I like the weekly assignments.",
        "The lectures seemed pointless to go to and the homework assignments could be done without any help from the professor if you can just go to an office hour. The grading was so poorly done that no one really knew where they stood in the class until week 9 of the quarter.",
        "I thought this course was okay. The lectures were completely pointless because nothing that was taught in lecture actually related to the assignment code. You essentially had to teach yourself the code because the professor never taught us much about Python. Lectures were kinda irrelevant. I didn't like this aspect of the class. I feel like I had to teach myself.",
        "The assignments for this course can feel a little overwhelming, but they're manageable if you seek out support. This class made me realize I hate programming and honestly the lectures were kinda useless, but prof Compton was nice.",
        "This was a very good course. Not too much work (1 assignment a week) but I still feel like I learned a lot. The pacing was nice and the professor was very enthusiastic about teaching.",
        "Liked this class a lot. A step up from 110 but doable. Didn\u2019t learn a ton of new code tbh but learned better way of applying what I knew. Prof Compton was engaging and did a good job explaining how our coding was related to careers.",
        "You don't really need to go to lectures if you just want to coast through the class to a good grade. You only need to go to the Friday lectures to get in\u2013class participation points, but apart from that, most of the classes are going over the theory of the current assignment or the future of programming/your future in programming. Most of the syntax and nitty\u2013gritty of assignments are explained through the homework. Also homework is 90% of your grade, and 10% is in\u2013class participation",
        "Kate teaches us CS concepts, but not necessarily how to write a code. Lectures teaches us concepts about codes, but not necessarily the code itself. She could've spent more time demonstrating to us how to put together a code from scratch. Assignments are sometimes tedious to work through but find a buddy to work together with!!!",
        "Just do the assignment and you will get an A.",
        "Very easy if you have prior coding knowledge, just make sure to start the homework a day or two before the deadline and go to Office Hours if you have questions.",
        "I took this class for fun, just to learn some more python. Turns out it could be substituted as a major requirement for one of my MechE classes so that's great. Not too difficult of a class, one assignment each week, some participation assignments, easy to get help with all of the office hours.",
        "CS150 is majority Python learning until the last week where you learn another language. Overall its a fun course, I liked the project although there were times were it became frustrating to get help during office hours but overall if you needed hope you always had campuswire where the TA\u2019s were super responsive.",
        "Debugging (in any CS class) could be quite frustrating and boring.",
        "Not much to say about this course, you just have the weekly assignments and that's it. Lectures are cool but not super necessary as you mostly learn by doing in this course, but Kate is a good lecturer and has some interesting topics to cover. Grading is fine. TA Office Hours are the truth.",
        "I really liked this class. The homework assignments were very easy and there was no other work for the class besides participation assignments. This class is supposed to teach Python but after the first few weeks of learning the basics the course became more about different concepts in Computer Science, we talked a bit about machine learning and algorithms, generative art, webscraping, and a lot of other random but interesting things. I think this class is a good introduction into computer science as a whole and gives you an idea of just how many different things you can do in the field.",
        "No love for the autograder",
        "Good course on the different uses of Python. Very creative and fun assignments to do. Doesn't seem to necessary to show up to lecture because for the most part you will learn from doing the assignments and the professor doesn't really teach coding during lecture but rather the uses of Python in the real world.",
        "This was a good course if you're interested in learning more about Python and its capabilities. The weekly assignments do take time and I recommend starting them early so you can go to office hours if need be, but they are very manageable. Lecture is not extremely helpful for the assignments.",
        "Prof Compton does a good job introducing the big ideas in the world of cs and how the skills we are developing in our homework can be applied to larger social problems. She is also really understanding, accommodating and wants us to do well. I'm not planning to go into cs but I really enjoyed this class \u2013\u2013 I feel like I learned a lot without being stressed out by grades.",
        "I loved this class. Prof. Compton is super passionate about the subject and does a really good job of introducing you not only to Python, but on how to enter the world of programming as a whole. All of the assignments were super interesting and cool yet they were not super complicated as someone who only took one coding class before this. That being said, if you do have coding experience outside CS110 or CS111, this class might be too easy for you and I recommend going straight to the 200 level classes. For me tho, this class taught me a lot, and the generous extra credit on the last assignment was nice so I didn't need to worry too much about getting good grades, just on getting better at coding. Also, no midterms or final really seals the deal on making this one of my favorite classes I've taken at NU!",
        "This is a great CS class. In order to have the best experience, I would recommend you work with a partner to problem solve on assignments each week and go to office hours often. Also, class lectures aren't that important to do the assignments, but they can be very interesting as prof. Compton discusses a lot of cool concepts related to ML, graphics, and the internet. But by no means do you need to take notes during these lectures.",
        "This course was a nice introduction to python, not too tough.",
        "This was a really great survey course to all things Computer Science. Definitely take this course if you're looking for a more casual intro to the world of CompSci",
        "This class not only focuses on the concepts in Python, but also the real\u2013life applications of CS and how to be more comfortable with the industry.",
        "CS150 is quite possibly the easiest class you'll ever take at Northwestern. Not only are the assignments usually really fun to do, especially as someone with no prior background in Python, they also take relatively little time to do. Prof. Compton really guides the students in class with numerous comments and check\u2013expects to base their code on. There are a lot of potentially useful skills she teaches, even dipping into applying machine learning concepts. Even then, the code is very intuitive as a lot of the difficult and tedious parts of those concepts are already written for you. Class participation is very doable as well. Overall, there shouldn't be a reason that you can't get an A in the class, with the amount of help you get in the class. Also, no exams at all, with 9 assignments and participation as the only determiners to your grade.",
        "If you don't have to take this class for your CS major or minor, don't take it. It's not a very difficult class, but essentially everything you learn (the language taught is Python) you could easily learn in less time on your own. Prof. Kate was nice, but a lot of her lectures\u2013\u2013especially later in the quarter\u2013\u2013were entirely irrelevant to our assignments in class. I didn't go to class at all for probably the last four weeks of class and still got 100% on all of my assignments. If you have to take this class, it's not bad, and not too much work. There are a lot of TA office hours that are very helpful for completing the assignments, and the assignments themselves are not too hard, especially if you work on them with other people. This class is a decent introduction to Python.",
        "The first few weeks of this class were pretty rough for me because the only programming experience I'd had before were in ea1 and that wasn't a lot. But after that I got the hang of it and it became a lot easier. I did have to teach a lot of the actual python syntax to myself using the resources the professor provided on canvas but python is pretty human\u2013friendly so it wasn't hard. Going to office hours really helped and it actually saved my life in this class. Overall I learned a lot more about cs in general and python specifically so I'm glad I took it",
        "Lectures aren\u2019t really relevant for the problem sets, so you have to figure out the syntax and coding techniques on your own.",
        "I learned a good amount of Python, but I think that even more important is that I saw a lot of applications of coding during this course.",
        "Grading is based 90% on assignments and 10% on participation so it's pretty chill and there are a ton of office hours. A lot of our grades weren't returned until reading week which was kind of annoying but probably wouldn't have been an issue if I had put more effort into them in the first place.",
        "Assignments definitely helped me with learning Python and general coding skills but class time felt like it wasn't incredibly relevant to these. It was still nice to learn about \"invisible curriculum\" topics but I often wished that more in\u2013class time was spent giving context and discussing ways to approach the given week's assignment",
        "Take this class if you want to learn more how to code in python. CS 110 is more of a course that allows students to have a slight dip in what python coding is like whereas this class will allow you to learn more extensively how to program with python.",
        "The course is structured very similarly to CS 111, with weekly assignments so it was easy to transition. However, from someone who has never touched Python, it took some adjusting as the focus of the course was not learning python. As such, it was often that I had to spend time just relearning the basics to complete the assignemnts.",
        "I thought that the assignments we were given were fun and challenges while also tackling cool subjects. However, I thought the lectures were sort of irrelevant and got sidetracked.",
        "I found the assignments interesting",
        "Really really easy a but super boring course. Also don't take it if you don't already know python.",
        "This class is very doable as a student with no programming experience. However (now the following will definitely be biased), by being enrolled in 211 at the same time, I spent 90% of my time focusing on that class and essentially 150 became my \"side class.\" I basically forgot about it for the whole week until I had to do one of the assignments. I will say that the lectures can be quite boring and that 211 is more interesting. Again! I am biased as there are those who dreaded 211 and loved 150, but although 211 was a time\u2013suck, I believe my programming skills really developed there because of the challenge. If you desire, you can skip the lectures and google python concepts as python is VERY easy to self\u2013teach. Would I take this class again? Maybe not. But, on the bright side you can learn if software development and high\u2013level coding is for you (as it definitely didn't pique my interest much). Nonetheless, an easy A class and because of that I will rest my case.",
        "Honestly, this course was more chill and practical than CS111, which I really appreciated. Overall, very nice class to take if you have other stressful classes (especially in McCormick). Always go to office hours if you're stuck, and you're good.",
        "Prof Kate Compton is enthusiastic, passionate, and really knows her stuff! This course introduces you to the many applications of CS in the practical world and for that Kate is great, but it's really only an overview and feels a bit superficial. Python\u2013wise I wanted deeper dives \u2013 things a \"power user\" might use. Assignments felt like busywork and was a translation of many concepts I learned in 111. We get introduced to a lot of neat packages and applications but most of it is implemented for us, so what's left is reading the docs, cleanup work involving list comprehensions and finding the \"best\" of something.",
        "Very useful course because it teaches you the basics of python syntax and how python code is formatted in a professional setting. Teaches you how to think about code, class objects, and data",
        "Fun class with interesting assignments. Lectures are kinda confusing and Prof Compton doesn't really explain the code in depth (for all assignments I had to do some research on how to complete certain parts of the code). Overall good intro to python and very interesting.",
        "This course was a very interesting and it managed to keep my attention the whole time",
        "I thought this course would be so difficult but the TA's had so many office hrs I felt so supported and could always figure out the answers to my questions. I had very little coding experience before this and definitly was behind the class, but by the end I felt just as competent as everyone else. I learned so much about how to think like a coder and problem solve. Definitely reccomend!",
        "If you have prior coding experience, this class is a cakewalk. No exams, so the only grades as the weekly coding assignments and participation which take like 15 minutes to do.",
        "yes"
    ]
}{
    "course_code": "Student Report for COMP_SCI_150-0_20",
    "course_name": "Fund of Computer Prog 1.5",
    "instructor": "Katherine Compton",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "4.66",
        "count": "105"
    },
    "course_rating": {
        "mean": "5.00",
        "count": "110"
    },
    "comments": [
        "It's a great course, not too difficult and really encourages working together with other students.",
        "videos",
        "Good introduction to python and a little bit of C++. The assignments were very doable, and they had interesting applications.",
        "The way the class was structured allowed for flexibility.",
        "Because this class is so big, your concerns can easily get overlooked whether it be a grading issue or a question. As someone who doesn't know much about programming/only started taking CS classes in college, this aspect was incredibly frustrating and most people don't show up to class because they're able to do the homework independently. By the end of the quarter only about 20 non\u2013PMs show up to MWF classes. The people who do show up to class are likely as lost as you are, but the PMs are helpful with this in particular. The entire class felt awkward and I feel like I didn't learn so much because my work was driven by stress and frustration. I've taken 3 other classes in the CS department and this has undoubtedly been my least favorite \u2013 the other CS classes felt rewarding but I felt like I was trudging through this whole course.",
        "I enjoyed it.",
        "This course is a great course to get exposure to python. The grade is based on small projects due each week and some small quizzes due before each class.",
        "As a non\u2013cs major Professor Compton is amazing in helping you feel included and walking at your pace! She\u2019s super approachable too :)",
        "I think this class would have been better if I had taken 110 instead of 111. 110 had an introduction to python, and 111 learned racket, so I felt very behind at first when we were thrown into our first python assignment. I like the flipped classroom setup for comp sci classes, but it only works well in my opinion when people show up to class for group work. In 111 we were assigned to groups and we all met each class to work separately while also asking each other questions and it worked perfectly. This course was a little less structured and by the end there were only about 20 students showing up each class and they were all in one giant breakout room with one person sharing their screen and coding. I do think this is an important course to take after the intro ones and not skip to the 200 level classes. I'm really glad I took it just for my own interest even if I don't need it for distros or major requirements. The recorded videos are very good.",
        "The course was great! Prof Sood\u2019s recorded lectures were easy to follow along, easy to understand, and just amazing! Some of the assignments were a challenge, but not impossible!",
        "This class is basically taught by Sara Sood, not Kate Compton. The online videos are great from Sara, but the in\u2013person lectures were basically useless. In terms of learning, I did more learning when I didn't go to class and did challenges on my own. Also, I did not like the C++ portion of this course. I wished this class was only in python. The python concepts were getting really interesting but then we just switched to basic C++. Also, Kate was a little rude when it came to student questions, especially when it came to unfamiliarty with C++, which we literally all just started learning! Additionally, this course had a very linear way of doing assignments. In 110, there was much more freedom in your approach, but here the starter code and assignments were laid out very linearly. Although it was good for clarity, I wish some of the assignments, like Sodoku, had less structure so they required more thinking to complete.",
        "Great class, learned a lot! Not very difficult and pretty fun.",
        "Great class, helpful prof.",
        "Sarah Sood's lectures in this course were very helpful and engaging. Taking this course remotely reduces a lot of unnecessary class time and you can work through the course at your own pace. The assignments were mostly clear and there are plenty of resources to help you through them.",
        "This class was fairly easy, but a good intro to python and c++",
        "This was a great class and it helped me learn more about Python and C++. Prof Compton is excellent and did a great job helping me learn new coding skills!",
        "This was a great class to take and I feel like I learned a lot, especially considering that we learn two new languages in this class. Not to mention a lot of the assignments were interesting and fun because we were able to code everyday things/programs we've all used before, such as tic tac toe and sudoku. Nothing too challenging, and there are a lot of TAs to help if you do come across something confusing.",
        "The course was overall very manageable and helpful in bettering your coding skills,",
        "The course was good, although sometimes I felt that the assignments were way more difficult that what was being taught in lectures. In other words, for someone without programming background, doing the assignments on its own would be hard. Nonetheless, because of all the support with PM and OH, the assignments became very manageable.",
        "Really cool class. Assignments have lots of tutelage which makes them fairly understandable, but coding ingenuity itself is a little harder to find from it, but it gets the job done.",
        "I wanted to get a general grasp of what coding in Python felt like. This course perfectly exemplified what coding in python is.",
        "Great class to take if you're still a beginner programmer, lots of opportunity to improve your skills.",
        "Although this course is nominally taught by Prof. Compton, effectively it is taught by Prof. Sood since all of the lectures are hers. Sood's lectures are clear and easy to follow, and prepared me well for doing the assignments. The \"challenges\" which were only for a completion grade, with solutions provided, were quite helpful for introducing the material. I only had to go to office hours once. I never went to the synchronous group sessions because I feel like they would not be helpful to me.",
        "Class is very good. The recorded lecture videos are by Sara Sood. She explains everything pretty clearly, in a simplified manner. The assignment that took me the most time was probably the movie chatbot, mostly because I messed up a few times. I think overall each assignment took < 2 or 3 hours. Highly recommend this class to those who don't have formal CS background \u2013\u2013 before this I had only taken CS 111 and AP CSP in high school.",
        "This course was very interesting and taught me a lot about programming. This class was sometimes challenging but very easy to follow.",
        "I learned a lot, the assignments were good for practicing what we learned",
        "The content was good and I enjoyed the assignments, lectures were clear and easy to follow, and course load was extremely light.",
        "The course moves quickly, but it\u2019s not too much. Having people in your class with you that you know helps a lot, the weekly assignments do take a while but they are not too difficult. Prof. Is extremely understanding and will be able to help you if you ever need it.",
        "Although the professor for the class was Compton, none of the class materials or activities are actually from her. The all of the videos/lecture recordings/notes are from professor Sood. If you've taken her classes before you know she's amazing, so this class really isn't that different. You can learn everything you need from the videos and a couple tries. If you're taking this class online then you're basically just taking professor Sood's class and never see the actually instructor for the class.",
        "The course did a great job of expanding on python skills and relating those to C++ structure.",
        "This class is pretty easy and chill, especially if you come in having taken cs 110. The first third is review, the second part you learn classes, and the last few weeks is a very brief intro into c++. The professors and TAs are all really supportive and there are a lot of opportunities to get help on the assignments. The class was pretty much asynchronous, so it can be hard to stay on top of things.",
        "This course is okay, I had some programming experience already so it was an easy A with minimal effort. I liked how it exposed us to some sorting algorithms and AI. Only went to the first two classes and never again for the rest of the quarter but I wish the TAs/instructor was more active on Piazza.",
        "THE ABSOLUTE WORST CLASS I'VE TAKEN AT NU. The professor didn't even care to change the syllabus and the Canvas assignments from the past quarter. The syllabus literally has the contact of the TA for the Winter instead of this quarter. All the assignments had dates from the winter too. Very very poorly organized. Learning Python from any other online education platforms would be better than taking this class at NU, let alone how much we are paying for tuition.",
        "This course was a bit easy and I did not learn very much. Would not recommend.",
        "The videos provided were very helpful",
        "i liked learning python",
        "I really liked this class! Most of the required work could be done during the team meetings (the normal class time), and the content was very interesting and helpful for future classes.",
        "The course summarizes some of the python skills learned in 110, but also goes a little more in\u2013depth by teaching you how to do longer projects and how to code more efficiently. It also teaches you a little bit of C++, which I found to be useful. I think this class is a good intermediary between 110 and the 200 level courses, as you continue to learn python more in\u2013depth but at a manageable pace. I also liked how we got to work in groups, as I found that helped me learn different ways to code.",
        "This course was basically a continuation of other CS intro courses (110 or 111). Started out working with python for the first 6 weeks, then transitioned into C++ for the last few weeks. Nothing too difficult. Meeting with prof, TAs, and/or peer mentors really helps if you are struggling, as they can point you in the right direction. This course was mainly just learning more of the basics and logic behind coding.",
        "I had very little experience with coding beyond what is taught in the EA sequences and a little built of python from stats, but this course helped me to feel very comfortable from the beginning and I soon felt very proficient in python and C++, the flipped classroom method was very enjoyable and allowed me to come to class only when I needed help, saving me a lot of time. The video lectures were very well put together and well explained compared to other coding instruction I\u2019ve had.",
        "taught myself",
        "The course was very basic in terms of comp sci. I see why someone who wanted to learn some computer science basics would take it, but I don't see a point in taking it if your majoring in comp sci.",
        "The course was pretty chill. If you watched the recorded lectures and took simple notes of the examples the weekly assignments should be relatively straightforward.  With the few harder parts, there are plenty of office hours to go to.",
        "This class consisted of 9, weekly assignments with a couple of asynchronous lecture quizzes due every week. There is also an optional, extra credit assignment around the middle of the class which you can use to replace your lowest assignment score if necessary. This class taught basic concepts of programming such as lists, functions, and classes. C++ is sprinkled in at the end but it very surface level and I found that assignments for it were much simpler than those for python. As long as you put in the time and effort, it can be an easy A. It honestly was a lot of fun seeing how we could take basic programming concepts and create programs that do something useful. Highly recommend this class to anyone that wants to touch up on programming and who wants to learn some python.",
        "I do not know what to say, but I feel like I am teaching myself the entire quarter. Not sure whether that is how it is supposed to be.",
        "I loved this class! It\u2019s assignment based so theres no midterm or final which I looooved. The assignments are very doable with office hours help.",
        "I think the parts were we coded were the most beneficial to learn the concepts.",
        "This was one of the best CS courses I have taken. Super fun and useful, especially since it was taught in python. Honestly easier than cs 111, and I also really loved that course. You never really had to show up to class which was nice and all the peer mentors and Dr. Compton were awesome support. 10/10 recommend this class periodttt",
        "Very chill class. We used Professor Sood's video/learning materials in this course just like 111, so as long as you pay attention to the videos and start your weekly assignments more than a day before the deadline (just so you're not freaking out) you'll be fine.",
        "I took this class after taking CS 110 and 111 and some experience with Java in high school. I found this to be in between 110 and 111 in terms of difficulty and with a similar class structure\u2013 prerecorded lecture videos, daily quizzes, and weekly assignments. The python portion of the class is taught well, but the C++ portion is very rushed.",
        "Amazing and very helpful course for anyone who wants to learn computer science! I never really enjoyed programming but this course changed my mind about it because the assignments we did were formatted like logic puzzles which made them more exciting to do.",
        "Chill class, pretty easy. Pretty much can take the entire course in your own time. I basically never showed up to any classes and just watched recordings and it was a pretty easy A. From what I heard from friends, the TAs are super helpful so there are definitely all the resources you need to do well in this class. The Professor is like, super super cool and has done a lot of cool stuff, so if you're interested in majoring in Comp Sci, talking to her might be something to consider.",
        "Sara's videos are the best \u2013 she's a great lecturer and her videos have a really easy\u2013to\u2013follow flow. I liked how the flipped classroom approach allowed me to go at my own pace when watching videos; I would skim over things that were easy to understand and go back and rewatch the more challenging parts. I stopped attending class after the second week though, so the in class portion is what you make of it and I didn't feel like it was necessary.",
        "Online the class was just completing weekly assignments and the occasional quiz. Very manageable but obviously the difficulty will be different in person.",
        "It isn't a very difficult class, but class time was just group work so I stopped showing up pretty early on.",
        "The class is definitely a step up from 110, but still a good class",
        "I thought this class was a great intro course. Prof. Soods videos are really helpful. I felt that Prof. Compton was not as useful because she would just answer questions. I would have liked her to be more active in the teaching of the course.",
        "This is a great course for an introduction to python and C++. It is not very time\u2013consuming. It's quite low pressure. However, I felt like it was really hard to truly master the basics of the language, as the video lectures are approximately 5\u201310 minutes long. There is also no real homework to practice the basic language structure. Therefore, I had to go online and search up a lot of the basic syntax/definition of functions."
    ]
}{
    "course_code": "Student Report for COMP_SCI_150-0_20",
    "course_name": "Fund of Computer Prog 1.5",
    "instructor": "Katherine Compton",
    "year": "2021",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "4.43",
        "count": "120"
    },
    "course_rating": {
        "mean": "4.91",
        "count": "128"
    },
    "comments": [
        "This is a great course. I didn't take AP CS, but I now feel like I have a more firm background in CS before going into 211.",
        "I thought this class did a very good job teaching us Python and introducing us into C++. I did not like that lecture time would just be spent talking to our groups. I do like a mix of a lecture and then some group time.",
        "Great course, highly recommend if you can take it! Make sure you compare assignments and have them done early but use office hours if need be. The course in my opinion is a better application than 150 but both are very helpful, great addition to the CS sequence and I'm really glad I got the chance to take it.",
        "again, almost all self taught. I enjoyed having no midterms and just assignments",
        "I came in being told that it was an easy step up from CS 110, intro to python but I found it kind of a large step up.",
        "It's a good course with manageable homework. Some of the assignments explore different fields of computer science, and are good introductions to the fields.",
        "This course is easy and enjoyable",
        "A pretty dull class, since it was basically asynchronous. We had to watch videos and complete a quiz before class. Class time was dedicated to working on assignments with your peer group so naturally, no one showed up ever. I think this made the class demotivating especially towards the end of the quarter.",
        "This was a great class. It helped me feel way more prepared for the rest of the NU comp sci core classes. It's not too much work, and all the TAs and the prof were very helpful and patient. Also, make sure you have a good breakout room/ work group.",
        "I enjoyed the group\u2013work emphasis and how the flexibility was offered for coursework, quizzes, and assignments. There were many resources available with multiple Office Hours and peer mentors in each breakout room during class.",
        "I think this is a very well thought and structured intro level course. It is really nothing complicated or hard. The course load is not heavy at all. However, I think it's important to not slack off or not pay attention just because it seems easy. Because the fundamentals taught in this class are still very important. The weekly assignments are very interesting and taught many useful practices.",
        "This class was a great introduction to Python and C++, the basics are covered and the assignments are fair. Overall a great class.",
        "This course continued my learning of python and introduced C++. Class time was just group projects that you hand in at the end of class and there are weekly assignments that make up your final grade. This class did not need to have an in person session because we learned everything through homework videos.",
        "If you go to class and and talk to your group, I think this class is really fun and chill. We use class time to work on assignments in breakout rooms, and the TAs pop in to answer questions and clarify anything. 11/10 my favorite class I've taken here. Super easy if you just go to class! DO IT",
        "This course had a lot of office hours and that helped so much because if you had any problem, there was always someone open/willing to help. The assignments also cover a wide array of topics and the explanations do a really good job of explaining your tasks and how to submit the assignment.",
        "For any and all people looking for a great intro to python, or coding in general, this is the class to take. It was lovely through and through. It is simple enough for majors and non majors alike, so if you are looking to dip your toes, you will be just fine. Teachers are always available for questions during class time, which is very helpful. 10/10",
        "Course covers python, and has some interesting assignments that cover topics like introductory machine learning. Course switched to C++ for the last couple of weeks to prepare for upper level CS courses, but I think it would have been better to choose either python or C++ since it creates a discontinuity in the information. Flipped class model \u2013 you teach yourself. Work is as follows: Video lectures (10\u201360min), lecture quizzes (5min), lecture assignments (30\u201340min), and weekly assignments (depends on who you are \u2013 I spent maybe 2 hours a week).",
        "I thought this course was very manageable after taking Comp_Sci_111. There were one or two python assignment that stumped me up a little but nothing too bad. My one recommendation is don't start your coding projects the weekend before its due if you think you have any chance of needed to go into office hours to get help.",
        "Really great beginners course, I had no previous python experience or C++. The TAs were really helpful if you did not understand how to approach the problems and provided a lot of help with errors. It was a flipped classroom but most weeks we were given the day in class to work on our assignments.",
        "Easy class. No final project or exams.",
        "I felt this course had a good pace to it and I got to feel like I was learning but also not being overwhelmed with content. Everything was asynchronous if you pleased, so you have to make sure that you are on top of the schedule, but it is not a very demanding class time\u2013wise, so definitely doable.",
        "Interesting class where you'll learn a lot of Python but it's not too difficult.",
        "Class time is just spent working on challenges/assignments in breakout rooms, but this time can be really valuable if used effectively. TA's are really helpful, so going to office hours/asking for help during class time can be beneficial. All content in this class was taught using videos created by another professor and Professor Compton only talked to the class once (on the first day), but the videos are really good and concise.",
        "This course was overall a really fun class and I'd say it was even easier and more fun than CS 111. The course concepts weren't extremely difficult to grasp and the TA's are really helpful so definitely take advantage of office hours. If you're not sure about majoring in CS, I'd still take this class anyway and I think it's definitely doable for anyone who is enthusiastic about CS.",
        "This was a good middle of the road cs class for me because CS 111 was my first time ever coding so this built on that while not being too complex.",
        "I liked this class and its format. It was an easy introduction to Python and short intro to C++. Students coming from 111 will love this class from its diversion from Racket and find it easy with similar concepts.",
        "Course is pretty chill and easy with coursewire and teaches you basic concepts of C++ and python.",
        "If you're somewhat experienced in CS, this class won't be something to worry about at all. Low time commitment for outside of class work.",
        "This class was nice to do with the flipped classroom because you could do it on your own time. Also the projects were not too challenging, definitely manageable.",
        "I don't know what this class is like during non\u2013pandemic times. However, over zoom the classroom follows a flipped classroom model where we would watch lectures for homework (recorded by a CS professor who was not our professor) and then did groupwork in class. Because of this, I barely ever interacted with the professor. In addition, the information in the class is presented in a way that's kind of disorganized. This course is pretty easy though.",
        "Loved this class. Asynchronous instruction actually worked really well with quizzes, engaging ways to \"participate,\" and really interesting assignments. The assignments are not easy, but definitely manageable and super rewarding.",
        "The weekly assignments were moderately challenging. Coding several boarding games like tic tac toe and sudoku were especially interesting.",
        "I think the organization of the course was well done, in that we had the videos about the material and had the notes from the videos that basically constituted our lesson available for download, which was very useful.",
        "I think the assignments were adequately challenging and the group challenges also provided a good practice and an opportunity to check your understanding of the concept before doing the assignment",
        "NA",
        "Do this course if you know you like coding. Many people already have experience with python so I felt behind most of the time.",
        "Kate is nice, but I think virtual format is just odd for all online cs classes. it was really just office hours and asking the peer mentors for help rather than learning it in class",
        "The course was relatively easy. Class time was basically office hours and the TAs were very helpful.",
        "It was an easy class \u2013 nothing to worry about. The assignments were fair and easy, and the grading was good too.",
        "The assignments can get challenging especially because you need to seek help outside of just class material so I recommend going to office hours.",
        "This course was a bit new, but definitely was worth it. It is a nice jumping off point after 110, and although online classes aren't the best, and despite the professor's efforts its hard to get a group to study together, I enjoyed it and the TA's were very available when the going got tough.",
        "Very good course. Good lectures and helpful assignments. Useful if you want to become more familiar with Python and C++.",
        "I actually really liked this course for being a comp sci class. I usually don't like comp sci as I am a terrible coder, but I actually felt like I was learning things in this class. It was kind of fun and a good difficulty level.",
        "Very easy class with very great materials \u2013\u2013 You will learn lots of basics in python, some ML, and c++ (python 80% c++ 20%). Students learn everything from async videos made by Sara Sood, which are extremely good. The lectures become more like Q&A sessions. The assignments are fun and not too hard (just require some logic). A great class to learn python for future use!",
        "This course made me very interested in Python. The assignments were so cool and applicable to real life.",
        "Straightforward and not much effort is needed if you start the assignments early.",
        "Although the course was taught through a flipped classroom style, I thought the assignments were practical and useful for better learning how to code with Python and C++ (even if you haven't used them before).",
        "I have no complaints about this course. Fun assignments, good lectures, and helpful quizzes that were not too difficult. If you enjoy computer science you will almost certainly enjoy this course.",
        "I feel the class could have been made better. I had anticipated to have a thorough understanding of python upon completion but that was not the case. This is because students took a passive role in the assignments. The assignments were to complicated for a beginner in programming, so the professor would write most of the code leaving only small portions for the student. I feel a better approach would be using less complicated assignments to teach concept by concept so that by the end a beginner will have learned something and not merely completed the coursework. Lectures should be organized around specific topics. The instructors was all over the place, covering random topics each week. Very disturbing for someone who didn't have coding experience and wanted to learn step by step.",
        "the assignments really facilitate learning. you get a great exposure to what you can actually do in cs by building some pretty cool things like a sudoku solver and building a classifier to tell you whether a movie review is positive or negative. the assignments themselves don't actually take very much time because they provide so much prewritten code and basically structure the logic of the entire program for you. instead, you spend your time understanding the concepts behind the program (sudoku solver = bfs and dfs search algorithms). this emphasis on building real things with a real language like python inspired me in a way that 111 in racket didn't. i got credit for this class from the ap cs test but wanted to take it anyway because i suck at programming and i don't regret it at all.",
        "Pretty good class. Sara Sood gives great recorded lectures that help you learn new topics from Python into C++ through the course. Kate Compton helps organize useful discussion sections, such that we meet with ~4 students in a breakout room every M/W/F to work on challenge assignments and hw. Overall as someone who took CS110 and wants to take CS211, this was the perfect background to give me the confidence to try object\u2013oriented programming in C/C++ next quarter.",
        "I really recommend this course \u2013\u2013 the assignments feel meaningful and rewarding when you complete them, and the prerecorded lectures are clear and easy to follow. If you're coming from 111, I personally found this class to be less challenging as there's no expectation of having learned recursion or some of the more advanced topics that are covered in the tail\u2013end of 111.",
        "I learned a lot in this class. Watching the videos and following along helped. The quizzes are good for understanding what you just watched, and the weekly assignments help with applying what you just learned. The assignments were not too tough since all of the code you need to use is all in the videos.",
        "The class had 9 assignments which helped me learn the material.",
        "This course was awesome. I took CS 111 in the fall and this was my last CS class because I was only taking some CS courses to help me out with my computational biology research. The best part of the course was how straightforward it was. The modules and quizzes were all published at the start with their respective deadlines, there would be one challenge with each concept to test your understanding (with an answer key if you get stuck), and one assignment every week. The assignments are the bulk of the course, but even those took me no longer than 1\u20132 hours every week because each assignment had an overview video that walked you through the code and logic for the assignment, so as long as you had watched the module videos and assignment walkthroughs, the assignments were super straightforward. Additionally, class this quarter was just office hours, so that made it really easy to get the assignments done because it was dedicated time to work on the assignment with help if anything came up that you didn't understand. Also, it teaches you Python so it was relevant and motivated me to learn the course content even more.",
        "pretty laid back. assignments are pretty cool. I enjoyed doing the work for thsi class.",
        "I really liked Compton, though I didn't feel like she was the most prepared to teach the class",
        "I definitely learned some good coding skills, but because of the way that this class was structured, it honestly felt like I was participating in some sort of CS club rather than a class. I feel like if you're someone who needs/prefers a more guided way of teaching, this class might feel frustrating (class time was spent only working with a selected group of peers on participation challenges or the week's assignment). But at the same time, there are plenty of office hours to attend and the workload was definitely manageable.",
        "I thought this course was great; I both learned a lot but was not burdened by the workload.",
        "Having this class be asynchronous was chill because we just worked with our group on assignments during class time. The TAs were really helpful because they would come into our breakout rooms and help us in addition to their office hours. Watching the lectures weren't too bad and the quizzes on them were really easy.",
        "This course was a \"flipped classroom\" you had to watch videos recorded and do quizzes before class. Class was just sitting in a breakoutroom with your peers doing the challenge or assignment. Honestly should be called asynchronous instead of synchronous.",
        "It was really helpful. I learned a lot of python.",
        "This is a pretty easy course that teaches students about Python and a little C++. If you're a non\u2013CS student like me interested in learning some coding, I highly recommend the class.",
        "I took python before, and the programming was not very hard. Just make sure that you always consider edge cases and naming. The grading of these programs are conducted through tests, so there is not partial credits.",
        "Lecture time was just time to work on the assignments or challenges with a group. The pre\u2013recorded videos by Sood that Compton posted were helpful in understanding and explaining the concepts and assignments. Compton and the TAs are helpful. Only criticism would be that the teaching of C++ is a little rushed.",
        "Basically an asynchronous course, didn't attend most of the class meetings. During class we were just automatically assigned to breakout rooms with our groups \u2013 Professor Compton doesn't say anything or do anything really. The videos from Sara Sood were pretty helpful in giving me an understanding of the content, and the assignments were decently challenging. Overall, I wish the professor did more than just assign us to breakout rooms, and maybe gave an interesting mini lecture during class or went around and asked if we had questions/checked on our progress.",
        "Very straightforward course. Loved the fact that there was no recursion. Also if you\u2019re taking this class after 111, it\u2019s WORLDS better. Very fun projects too!!! Take this class!! Python and C++ are great coding languages.",
        "Pretty easy class with only projects and no exams which made the class not stressful at all",
        "It was a very good class. Not time consuming in the slightest, literally just a few hours each week total, but covers a lot of ground and you come out of it feeling much more capable and excited about programming.",
        "It was good that I took this class now because class was not mandatory and the workload and difficulty of content were very low. If you are a beginner programmer this is good and will probably increase your interest in programming and help you develop your skills. If you are more experienced, you will spend like 2 hours a week on the class total (if you don't go to class and do the group challenges at home and submit them). My advisor told me this was mandatory for the major but apparently it's not, I would suggest you skip this class if you have been programming already and feel comfortable with everything mentioned in the syllabus.",
        "I liked this course. Most of the class is in Python and the last 2~3 weeks were in C++. Not too hard and the TA's are VERY helpful if you're stuck. This is not a weedout class. This class actually gets you interested in CS. We did some basic machine learning which was pretty cool. The class was basically asynchronous. You watched videos before class. Class was basically breakout rooms where you work on homework and small challenges. The Prof didn't really do anything because everything you needed to know was on Sara's videos. TA's/Peer mentors are assigned to breakout rooms and they are very helpful! No tests :)If you're a CS major or interested in CS, I definitely recommend this class. If you can, it's not a bad idea to take CS 211 with this class, which is what I did. The sheer workload of 211 will even out with the workload from this class. But don't feel too pressured to do so. ASK ABOUT EDGE CASES. Always ask about edge cases. Some assignments won't have them and the TA's will tell you, but there was one assignment where they docked like 15% just for edge cases, so always ask about those.",
        "I just wish that there was more instruction. Felt that the intro to C++ was very abrupt and it was hard to keep up.",
        "i liked the format",
        "So much better than CS 111, take this class with sood compton was non existent in my class",
        "I genuinely enjoyed this class! I think the way it was structured was very reasonable and did a good job of taking into consideration the difficulties associated with COVID and remote learning.The assignments which made up most of the course grade were challenging and required a decent amount of work to complete (at least for me, since I didn\u2019t have much prior coding experience), but they still felt very doable and I really learned a lot through them. I think Python is a very intuitive language, so learning it doesn't take much time at all. If you didn't like Racket in CS 111, you'll probably be glad to know that Python is much more straightforward.My main complaint is that it was kind of tough to feel connected with the rest of the class because there wasn\u2019t much point in going to lectures. Everything was formatted so it could be done asynchronously, which was nice in that it allowed for more flexibility, but it also made the class feel a little isolating sometimes. We also switched to C++ halfway through the quarter, and while it isn\u2019t a particularly hard language to learn, we spent almost no time introducing it before we had to start doing C++ assignments, so that was a really jarring transition for me.However, I think these issues would probably be a lot better if we were in person and overall, I still think this is a great intro class \u2013\u2013 you really do learn a lot if you put in the effort and the work is very manageable. I definitely recommend it to anyone who\u2019s interested in CS!",
        "AMAZING. TAKE THIS. it's the BEST remote class i've done, super organized. THIS COURSE WAS SUCH A GOOD REMOTE LEARNING COURSE. THERE WERE PRE\u2013RECORDED LECTURES THAT WERE NOT UNNECESSARILY LONG, ASSIGNMENTS TO MAKE SURE WE WERE WATCHING BUT NOT TO STRESS US OUT, CHALLENGES THAT WERE FUN, AND AN ASSIGNMENT GIVEN TO YOU WAY AHEAD OF TIME. AND EVERYTHING WAS PLANNED AND RELEASED FROM THE START SO YOU CAN TOTALLY PACE YOURSELF AND PLAN YOUR OWN SCHEDULE, WHICH IS GREAT FOR COVID.THIS IS ALL CAPS BECAUSE I AM VERY EXCITED.",
        "I do not feel like I learned much in this class. The flipped classroom style makes it hard to learn. It is basically an asych class.",
        "The course wasn\u2019t too hard, but it does require you to learn how to think. Most of your grade relies on the projects that are due every week and the rest relies on microsquizzes and daily challenges that the hardest part about them is remembering to do them. The C++ part of the class was the most annoying because most of the time you have is spent trying to figure out why the actual IDE won\u2019t work instead of your actual code. Overall, the class felt really individualized; you don\u2019t really meet new people apart from the first few lectures that are synchronous.",
        "have to self\u2013study a lot in order to do the hw. 9 assignments, no exam, daily quizzes, not stressed but still busy",
        "The course content and assignments were great. However, it needs a lot of self control! It was so easy to miss class since class time was just optional group study. If the course structure is the same, find a focused group(go random and not with your friends), and attend class all through. Try and do the assignments first before running to the TA's for help. The TA's will help you out but struggling with the code for a while on your own makes u a better programmer. Goodluck. You got THIS!!",
        "The class was basically asynch, given that in class meetings were generally only for answering questions. All of the lectures we watched were from Sara Sood and those did a really good job of teaching you the material. I'm not sure how this class with be in the Spring Quarter, but personally it was very low stress if you're comfortable with coding.",
        "This course was not bad at all. The whole point of this course is to introduce students to python, C++, and AI while hitting home that practice is key in order for students to quickly write clean and efficient code. You will get out of this class what you put in.",
        "This course was enjoyable if you like computer science. I took it asynchronously, which made the workload pretty low. All we had to do was watch 15\u201330min lectures once or twice a week, complete a challenge (that takes ~10min for which the answers were already given) once a week, and do a project once a week. The projects were time\u2013consuming and it really helped to have a friend in the class to work on it with, but the instructions were usually clear, the starter codes/templates were usually pretty comprehensive, and it felt rewarding at the end to finish them. I only went to the first lecture so idrk anything about the professor but she seemed nice enough.",
        "Great course where I learned a lot without feeling lost. It was great to take with Professor Compton and her and the TA's were very helpful when you reached out."
    ]
}{
    "course_code": "Student Report for COMP_SCI_211-0_20",
    "course_name": "Fundmtls of Computer Prog II",
    "instructor": "Jesse Tov",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "3.89",
        "count": "88"
    },
    "course_rating": {
        "mean": "4.01",
        "count": "92"
    },
    "comments": [
        "I thought this course was definitely more difficult compared to the other computer science classes I've taken. The complexity of the assignments we had definitely challenged me a lot.",
        "This is absolutely a hard class but I definitely feel that it is manageable as long as you stay on top of the material and go to office hours for homeworks. I personally did not enjoy the C section of the course but really enjoyed the C++ section. I would recommend taking this course with a lighter course load for the quarter so that you can dedicate the amount of time you need to this course. Obviously",
        "The TA's and professor were very supportive and helpful especially as someone who has very little experience with coding in general. Sometimes, there were a lot of lectures to watch, but overall the corresponding labs and quizzes were helpful as well.",
        "grade was just quizzes and weekly projects. projects were super long and hard but they were fun and the TAs are very helpful. however, a lot of people fell behind so by the end of the quarter the TAs had wait\u2013times of over an hour to see.",
        "This class is definitely more work than 111 or 150. That said, I found all the assignments way more interesting and rewarding to complete. The final project ended up being a lot of work my partner and I, but it was satisfying to see a playable game that we had built from scratch when it was all done with. I feel like 211 with Jesse gets a bad rep but honestly this was my favorite CS class so far, and the grading system was pretty generous. If you are worried about the jump from 111 or 150 to 211, then I definitely recommend trying to learn some C beforehand, since it is very, very different from Racket and Python.",
        "Not the most fun course, but most people have no choice but to take it. I would not say the coursework is hard, there is just a lot of it. What makes this course difficult is that Jesse and the TAs are sometimes difficult to reach or work with. There were only a few TAs who made office hours worthwhile and Jesse uses lecture time as an opportunity to show off coding techniques that you probably don't need. The class is poorly managed and a lot of the material halfway through the quarter was missing, so a lot of self\u2013teaching is necessary.",
        "Honestly this class is not that bad if you find a good lab partner and go to office hours whenever you have questions. Professor Tov is super super nice and willing to support students. He can be kinda confusing in his demonstrations in class, but I love his office hours. He really cares about his students. The first half of the class was pretty hard, but it gets more interesting when we started to write games ourselves.",
        "The class covered two different languages and the transition between them went smoothly. The labs were useful for learning and the homework assignments were challenging.",
        "Go to office hours because the TAs are really helpful for explaining things and helping understand how to debug.Office hours can even be more helpful than going to class, so just figure out which is better for you to understand what's going on. Find a HW partner because the assignments can be rough, especially the final.",
        "Some of the homeworks can be tricky, but if you start working on them early you can see your scores on the automated tests and basically ensure that you get full credit on every homework, even if you make mistakes at first. Very forgiving class, and the final project is fun.",
        "This course is great with Jesse Tov. He is a god among men so good at programming and teaching. Grading policy is so nice.",
        "I really didn't like this course, and I just felt that I was constantly rewinding lectures to attempt to understand the material, but it felt kind of futile, and I know I'm not the only one to have this reaction.",
        "The flipped classroom is tough to bare and if you skip the videos the projects are very hard. If you watch everything the class is pretty interesting.",
        "Difficult course, but learned a lot.",
        "I thought the general structure of the course was good.",
        "If you've done AP Computer Science then most of what you'll be learning is the syntax for C and C++, but there's also a bit about pointers and linked lists that you'll learn.  You should feel confident taking this class if you have done AP CS.",
        "It's aight. If you've written in an object oriented language before, you'll be fine",
        "Very difficult class but it can be very rewarding when you actually figure out the codes. There is only a 1 percent penalty for each day late for each assignment which is very nice. But this is lowkey kind of a trap and can put you very far behind especially since there is a hard deadline on the final code, which they don't really communicate and I missed. Not sure what is gonna happen with my grade.",
        "It definitely seemed like Professor Tov has finally perfected the formula for his version of CS211. Early on in the class, I had no complaints about the material\u2013\u2013C is an annoying language, but the memory management stuff is useful. During the C++ half of the course, the class definitely started to break apart at the seams. Lab assignments 6\u20138 never got posted, and Campuswire was full of questions that never got answers from TA's. But hey\u2013\u2013it just seems like Jesse needed to hire more TA's for the end of the term. No major complaints about the course content.",
        "This course could be way better. Jesse is clearly extremely smart and an experienced programmer, but he can't lecture. There are huge holes in his lectures where he'll skip a major concept, and then you have to teach yourself. You will also spend a ton of time on the projects so be ready.",
        "The class was very self\u2013taught, the lectures were OK, but not super helpful for me. The homework assignments were, for the most part, fair and the self\u2013evaluations were also fair.",
        "I think the C++ projects in the 2nd half of the class is very interseting, it really brings what we have learned in class to life. Making actual games out of code makes you feel more accomplished but also emphasizes the importance on what we have learned in class.",
        "Overall, the course is really good! It is very, very challenging \u2013 a tough course. However, it definitely makes you learn a lot. Some assignments can be done in pairs, and it also helps you learn (as you and your partner complement each other).",
        "You will get stuck. You will get frustrated. You will spend 5 hours looking for that one missing = sign. But once you get through it all, you will be surprised at how much you learned in this course. I had no knowledge of either C or C++, but at the end of this course I was programming a classic video game all on my own, and it was unbelievably satisfying when it was done. Do NOT fall behind on the assignments, they will stack up! Make sure you give yourself at least one more day than you think per assignment, since the debugging will take a while.",
        "I think everyone should take CS 211\u20130 if they are at all interested in STEM. It is a challenging, time\u2013consuming course, and it involves a lot of trail\u2013and\u2013error and self\u2013teaching. But, I would still recommend it.",
        "I think this was the last quarter taught by Jesse so it seemed like he wasn't really there most of the times. Things were always late to be put up and the last part, which involved labs for making games (which is very important for the final project) were never really posted. This made it really hard to figure out how to make a game in the end and we had great difficulty doing that in the end. Also, lectures were just pre\u2013recorded from some previous quarter.",
        "Hmmmmmm... honestly I don't know how I feel about this class. It was okay in the sense that the homework were do\u2013able and that we didn't have any exams BUT the homework was also really difficult and takes a LOT of time. The professor also doesn't give much introduction to the assignments so every week it's just a staring contest with the 13 page assignment pdf trying to figure out what is even going on. Certain office hours with certain TAs are helpful, Jesse's OH was helpful if you aren't easily intimidated, but there are some TAs who are unhelpful or condescending or both. I would suggest getting started on HWs early so you can go to office hours when there are less people. Also, his lectures are so dry and boring and LONG and I just watched them on 2x speed while eating breakfast and retained just about zero information. Not sure if that's my fault or his so take that with what you will.",
        "This course is time consuming but very doable. I did not think it was particularly difficult, everything just took a lot of time. For a lot of the HWs I would have to look at them for about an hour before actually beginning to code and then writing and debugging would take multiple hours. Make sure you have a good partner to work this as this makes it much more doable.",
        "I was happy to be learning these skills so rigorously. However, it is important to me to feel accommodated and supported by a professor, which I was not. Also, the 50% on all assignments to pass rule seemed overkill.",
        "This course was fantastic. Jesse is great about creating easy to understand and solid foundational places to launch from in both C and Cpp, which was great for someone who lacked knowledge of the essentials like me. He was super helpful in office hours, and easy about deadlines.",
        "Assignments were very time consuming, but it's helpful if you have a good partner. Office hours are always super crowded, but they can be helpful sometimes.",
        "I had a limited understanding of C programming language beforehand and this class helped to further my understanding by challenging me intellectually and getting me familiar with the language and the syntax. However, this class is tough and I would recommend working with partners on assignment when possible because it allows people to bounce ideas off each other.",
        "I learned the basics of C/C++ without repeating any concepts from prior classes. Jumped straight into programming, and learning higher level stuff.",
        "The lectures are pre\u2013recorded so there is no need to attend live lectures. The coding homeworks are decently difficult but very manageable and interesting. If you like coding, this class will be fun. If you don't, not so much, but the work is still doable.",
        "This course with this professor was hard. I felt like it went really fast and it is very easy to fall behind. Jesse is a nice person and will help if you fall behind but it imperative to have a good partner and keep up with the stuff.",
        "Some of the online lectures actually ended up confusing me more than helping me. It may be beneficial to look at other online sources about a topic before watching the lectures.",
        "Learn about C and dynamic data management, then C++ and object oriented programming. Very good course. Not too too stressful as long as you start the final project early.",
        "It class was a decent step up from COMP_SCI_150 in that you go from just implementing the coding to actually understanding how to style coding for readability and actually caring about how the code is implemented, not just that it works how you want it to.",
        "This class will definitely show you if you want to continue cs or not... I wouldn't suggest taking this course unless you have to, it DEVOURS your time \u2013 I spent a phenomenally disproportionate time on this class. Tov is a super nice dude, but I feel like he's one of those people who's so good at what he does, he doesn't really know how to talk to newbies (I've only taken cs110 and cs11) \u2013 which definitely makes it difficult when trying to read the pdfs and understand the lectures. You have 2 projects solo and the rest with a partner \u2013 it's definitely important to have a good partner (I think some people come in knowing others, but I found a partner at random and it was a good fit). Getting an A is definitely possible, it just takes a ton of time and effort. Definitely go to OH (Ben, Naythan, Dilan, and Ashley are super helpful).",
        "Pick the right partner. Most homework is two\u2013person homework and does require two people's effort. My partner basically did not do anything this quarter. I had complete almost all of that homework just by myself. It undermines my performance in other courses and was just a huge burden on me. The homework are not hard but just simply very long. PICK THE RIGHT PARTNER!",
        "I enjoyed coding in C++. I believe it is a good and useful language. C was not as good but made you deallocate memory which was good practice.",
        "99% of this course was me learning the material on my own, whether it be through Google, Youtube, or some other resource. If you don't have any experience with Java or C/C++, I don't recommend you take this course (so if CS111 was your first computer science class, don't take this next). I don't know if this was just the online experience, but this class was pretty rough. Labs weren't posted and no information was given about them until weeks later and deadlines for assignments seemed to be different across all the platforms (Canvas vs PDF vs GSE).",
        "There was about a weeks worth of material in the class. If you took AP CS in high school you should already know pretty much everything in the course.",
        "Jessy did not teach a single thing. The only reason I did well in the class is because I have prior programming experience. The way the class was taught was dummy bad.",
        "This course did not meet my expectations. I really wish Jesse took a more hands\u2013on role with the class.Questions on our online Campuswire discussion board went unanswered, especially those relating to the course structure and grading \u2013\u2013 questions Jesse should have answered. TAs could not really help with these since they were not the course instructor and didn't make these decisions, but no question from a student should go unanswered. Jesse was online according to Campuswire, but not answering questions.Homework assignments, which was most of the class, were manageable. Once you understand the problem well enough, they're all reasonably straightforward, but the pdfs are pretty convoluted and take time to process. Self evals are pretty annoying; they ask for test cases you write and can make up a lot of the grade for an assignment.",
        "If ur not a CS whiz, maybe a non\u2013CS major, PLEASE PLEASE PLEASE1) find a partner, do all the partner assignments w them 2) take a reduced courseloadit's the only way I made it through this class. And I was still working hours every day (the highest was 9 hours straight). It's rly hard. Be prepared to watch and rewatch lectures and wait in line in office hours for like 1 hour. TAs are rly essential in this class. You will not be able to brute force your way through assignments",
        "This class was really hard, but if you try hard you can do it. Dr. Tov is very smart and knows his stuff. He also cares about his students who are struggling. However, I have to reiterate that this class is very, very difficult. Getting help consistently would be a good idea.",
        "The course felt poorly organized. By the end of the quarter, we had 3 lab quizzes that we never got. Furthermore, most of the lectures were purely Q&A, so you had to watch the videos instead. While it's convenient, unless you had a question, going to lectures is largely pointless.",
        "This class is difficult. Office hours were mostly helpful, but only if you were helped. There were multiple times I sat in office hours for an hour and a half with out being helped.",
        "The class isn't as bad as most people make it out to be, but it does take actual ages to understand and do all the homeworks. There were no exams this quarter which made it much easier.",
        "Loved the course, although the C portion of it was tedious and annoying at times. I learned a lot about programming and became more comfortable with it over time.",
        "Overall fine course. Tov is okay, his lectures can be confusing at times. He does try to help students a bit, but doesn't always go all the way to make sure you're up to speed. The class is fairly difficult content\u2013wise, but if you keep up and spend enough time on assignments you should be okay.",
        "I really enjoyed this class! I was honestly so scared for it because past CTECs were very mixed, but I'm really glad I decided to take it. It's definitely tough if you're like me and don't have much coding experience outside of the CS intro sequence, and the lectures can be really hard to follow, especially given that we were online this quarter. However, I truly learned so much from this course and I feel much more confident in my programming abilities. You pretty much go from being completely clueless about C to being able to code little games in C++, which is so cool!! Jesse is extremely knowledgeable and has lots of interesting programming info to share, plus he's so understanding if you're struggling with something. I genuinely do feel like he wants us all to succeed, and his course structure was very considerate of the challenges of online learning. Definitely don't be afraid to bug him for help \u2013\u2013 he's usually very willing to give explanations for things if you need it!My advice for this class would be to start assignments as soon as possible. The work really piles up fast, so don't procrastinate! I also cannot stress enough the importance of going to office hours for this class!!! If you've never gone to office hours before, start going now. Go as soon as you start to fall behind on assignments \u2013\u2013 I promise it makes all the difference. Honestly, I even found the lectures to be less helpful then just going directly to office hours or live meetings with Jesse to ask about how something worked.Overall, I would definitely recommend this class! It's a LOT of work, but you'll come out of it a better programmer if you put in the effort.",
        "The first half of the course working with C was more conceptually challenging because of having to deal with memory manipulation, and the second half of the course was also somewhat challenging due to the projects (programming games) being more complex.",
        "Very difficult, but made it through somehow",
        "Remote 211 is alright \u2013 the homeworks aren't too difficult if you have a competent partner that can split it up with you, the labs are really easy (you don't even need to do the lab to get a 100 on the Canvas quiz), and the final project is essentially just copy&pasting homeworks 5 and 6. However, since we're going back to in\u2013person learning, I'm not sure if anything I say here will end up relevant at all.",
        "Some of the assignments were interesting, but most of the coding work was just rote work.",
        "Having only taken 111, this was very challenging and took many hours out of the week. However, I feel like I learned a lot not just about C/C++ but programming in general. The c++ half of the course felt much more engaging and useful."
    ]
}{
    "course_code": "Student Report for COMP_SCI_211-0_20",
    "course_name": "Fundmtls of Computer Prog II",
    "instructor": "Jesse Tov",
    "year": "2020",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "4.02",
        "count": "85"
    },
    "course_rating": {
        "mean": "4.14",
        "count": "85"
    },
    "comments": [
        "This course was very valuable to take for CS majors. It's an excellent introduction to C and C++ and Jesse was a pretty good instructor. Don't listen to the rumors, he's actually very good at teaching this class in my opinion. The first half of the course especially is really vital. There is a lot that he teaches about memory allocation and pointers that are super super important to know. Make sure you have a great partner for the homework programs!! That will make or break your grade. The exams are pretty difficult, but study hard and you should be fine.",
        "I learned how to better program.",
        "I actually mostly enjoyed this class. I'd heard a lot of bad things about Jesse going in, but I thought he was a better teacher than people give him credit for. Yes, he sometimes struggles to explain things, but he clearly knows a TON about programming, C, and C++, and he's very interested in these topics. The homework assignments and final project, which make up most of the grade, were challenging, but they were also rewarding when I finished them, and I think they really helped me learn. Having a partner for most of them was also nice.",
        "Definitely two\u2013class worth of time. Learned a lot from the homework and projects, but the lectures are confusing, and exams seem to be pretty far away from what I actually learned / thought I need to learn. Details of programming can definitely be explained better \u2013\u2013\u2013 instead of showing a lot of exceptions, focusing on hammering down what's essential for our understanding of C / C++",
        "Homework assignments can take a very long time if you're not familiar with C/C++. The lectures often go deep into specific topics and don't fully prepare for the homework assignments by the time they're assigned. Challenging class but definitely helped me learn a ton.",
        "This class was interesting.  First of all, I would try not to get too psyched out by reading the CTECs before taking it.  I know it has a reputation, but I feel like it's exaggerated too much.  At times it feels like he's throwing you into the deep end, but he does that on purpose.  You learn to figure things out, and become a better programmer in the process.  I would recommend just taking this class as soon as you can, and not worry about who's teaching it too much.  However, try to get a solid partner because most of the HWs are partner projects.",
        "This is a challenging class. Lectures do not really help you learn. I got through it because I got a  senior CS major to sit down with me and answer all my questions and teach me how to write code. You do not get taught how to code in the languages you just get thrown and have to spend hours googling things to get the semantics right. I had no prior coding experience besides 111 and this class was extremely difficult.",
        "Useful content. C with pointers can be very disturbing",
        "This course was fairly challenging. The assignments are definitely not easy, and I would recommend finding a good homework partner. That being said, if you do well on the assignments, it's pretty easy to get a good grade in the course.",
        "This class was something special. Where to even begin. My conclusion is that the class was pretty good, but it was also a black hole that sucked all of my time and forced me to drop one of my other classes. The homework often took quite a long time to do, but many times, the test cases took even longer. Because a significant part of your homework grade depends on whether you wrote certain test cases, I spent so much time making sure every possibility was covered, even if I was 100% confident the code was perfectly functional. This may have taken more time than writing the original programs because I had to come up with testing situations and tediously implement them, not just verify things work by running it normally. Maybe that's a good skill to have though. But the homework overall just took so much, even with the help of a competent partner. The due dates did keep getting pushed back a bit, which might been nice, but it also squeezed our final project. The final project was interesting and more fulfilling once we finished it, but there was still some testing and other aspects that were annoying. Overall, it definitely made me do a lot of coding and debugging, though I feel much more comfortable with C++ than C. Part of that is just that I had no idea what was going on with C and did not understand a lot of the things used, while C++ is much more straightforward, normal looking, and with a much more usable editor that did what I expected and did not do what I did not expect.Jessie himself is nice and he definitely put in a lot of time for us and the class. he was always answering questions on Campuswire, very quickly and thoroughly. He also spent a lot of time making tests to run on our code before they were due, so that we could see if anything went wrong and make revisions. I really appreciate all the work and effort he put into the class, as it was clear that he tried his best to help us. In the end, I did learn a lot, but maybe more about coding than the C/C++ information taught by the class. The lectures were a bit messy and hard to understand at times, especially with code changes on the fly and people asking questions that go in many directions (although sometimes they result in answers that might not have otherwise been said). There were definitely a lot of things that I did not get from the lectures and remained confused about for a long time (even now), especially some of the notation, concepts, uses, etc of things like pointers, references, classes, and whatnot. His tests were very hard, especially without a full grasp on the information. He graded them very quickly though, and they are not worth too too much. I also did not take the optional second exam (probably about half did), but that was just due to an odd situation with the virus.Overall, while the lectures were not amazing and the tutorials had a huge amount of variance in how good they were, Jessie did his best to teach us, and in the end, I think he did. Just in an interesting way that required a lot of time and effort, a lot of confusion, but also a lot of coding and getting good at that. C and C++ have so much content and are confusing, so maybe it's no wonder I was confused, and I can't really blame Jessie for that. Like I said, it's a class that's challenging and takes a lot of time, but it was pretty good, and I can code now.",
        "The course is structured to teach both C and C++ in one quarter. The first quarter is extremely challenging dealing with dynamic memory management while developing in C. It's challenging for everyone in the class including some with years of experience programming. But each time you complete an assignment you feel you have learnt enough to drop out and begin your PhD studies in fundamentals of programming if that is even a thing. The difficulty appears to reduce substantially after your first midterm when you switch to C++ although that is not true. The class maintains its level of difficulty expect of course the concepts covered are not completely alien to almost everyone in the class. Overally when you end the class you realize you know nothing about programming from the way the instructor touches on different concepts but at least you enjoy being in the class. Its the only class with over 150 people at least and you still get to know at least more than half as you work on your assignments together in pairs.",
        "Not a fan of the way this class is structured. The first half (programing with C) is extremely hard, especially for an introductory cs class. Jesse is extremely smart and is passionate about the course but this class needs to be more accommodating to beginner programmers.",
        "Pretty nice guy, the lecture is very important for homeworks, pretty hard though.",
        "Learned a lot, and am very interested in C++ and just overall computer science.",
        "This course was definitely very rough, speaking as someone who has never programmed in C or C++ before. The main positives I can give about the class is that the assignments, although difficult, were genuinely helpful for actually understanding what was discussed in lecture. The exams also usually felt fair, given that Tov was pretty upfront about the structure and what would be covered.  However, the faults of the course and the reasons why I found it remarkably frustrating was that the presentations/lectures were poorly structured and that the assignments were tedious if you didn't have a good partner (speaking from personal experience). Tov himself during lecture is specifically pretty poor at explaining ideas in a logical way for someone who doesn't already know them and at answering questions meaningfully. You'll definitely need to put in the effort outside of class to understand what's going on, and also hopefully make connections with other students/TAs who can be better at explaining concepts in a more down\u2013to\u2013earth manner.",
        "This course is challenging and not wholly useful as a standalone course but provides a great introduction to C and many programming tools and habits.",
        "Lectures were confusing, and assignments were always unclear.",
        "This course is quite difficult, although with deliberate practice and a lot of time you can figure it out.",
        "Overall, CS 211 is very, very, very challenging, but it's worth a struggle, especially if you are like me, all the coding experience you have is Racket. Don't take this class unless you are required to take it. Weekly homework might take up like 15+ hours if you are trying to cover all the test cases, and the homework instructions are also very confusing to understand at first. Jesse is incredibly knowledgeable, and he really cares a lot about his students. He would reply to people's questions on campuswire very late at night, and he tried to reply as detailed as he can. But his lecture... honestly it is quite hard to follow \u2013\u2013 sometimes you spaced out for like a minute and then you had no idea what he was talking about. His lecture is not very helpful with the homework but is what most of the problems on the midterms will be based on, so go to every lecture and at least try to understand part of it. This class is not as bad as what people wrote about for Winter 2019, at least now most of the TAs will be people who have taken this class before with Jesse so they know what's going on. Don't worry too much about the grading since most of it comes from the homework assignments. Get a good partner and hope your partner won't drop the class halfway through the quarter.",
        "I learned a lot in this course, and found it very interesting. It\u2019s definitely harder than 111, but if you ask for help often (office hours, CampusWire discussion board, peers), you can get through it. Make sure to have a good partner, as you\u2019ll have to go through a lot of debugging with them. For exams, make sure to learn the ins and outs of C syntax, as well as how constructors/destructors work for C++. If you\u2019re newer to programming, then budget extra time to learn the basic syntax of C, since the class moves quickly in that regard. Also make sure to write robust test cases. The assignments can take a while, but they were interesting, and I found  it satisfying when I finally got them to work.",
        "Jesse works tirelessly to put together a great learning environment and I learned so much from his class.",
        "I would recommend not taking CS211 with other workload heavy courses, because I spent around 15 hours a week in average to finish the weekly homework. Jesse is a nice guy, but sometimes he is not so clear during his teaching. So be prepared to go to his office hours frequently.",
        "While Jesse's lectures and slides are notoriously bad and mostly useless, he is very thorough when helping through the online discussion board and at office hours [you do have to decode his answers much like the lectures]. Jesse was still trying to design the class in the middle of the quarter, leading to a lot of setbacks. Jesse gave extensions for practically every assignment to the entire class since they were time\u2013consuming, even though most of them are completed with a partner. Can't tell you what to expect when you take CS211 with Jesse since he could turn this class on its head at any moment.",
        "ITS SO HARD",
        "If you do not have a strong background in programming, take Sara's 295 first. Or, prepare to struggle through this course. You need to have a light course load in the quarter to take this and digest the information well. You should also find a partner who can help you out if you're struggling. I recommend going to class but focus more on studying the concepts outside of class through online tutorials which will be much more clear and you can go at your own pace.",
        "This course was difficult due to terrible guidance on assignments on the teacher's part, leading to most activities being more difficult than they needed to be.",
        "If you have a good programming background and wish to challenge yourself, take it with Jesse. Jesse is a really kind and helpful professor. He will explain everything until you understand completely. Never hesitate to go to office hours or ask him by email.",
        "I think the best part of the course was definitely creating the games, it was very satisfying to finish the projects and have something I could actually use.  Some of the details in the first part of the course were very annoying, what with distinguishing pointers from the objects they were meant to represent, as well as keeping track of what needed to be allocated and deallocated, but overall it wasn't a terrible experience.",
        "This course is a huge time commitment. You have to start the assignments days in advance because they always take longer than you think they will. TAs can be helpful during office hours sometimes. Jesse is a really good human and cares about his students, which is awesome. He is very flexible with due dates and will push back deadlines if the students need it, but he cannot engage students during lecture. I always went to class, and I still think that I learned nothing from lecture and everything from homework. However, the tests are completely based on the lecture, so it can be pretty difficult to do well on those if you find his lectures pretty useless.",
        "Lectures were hard to follow and Jesse's slides were confusing. Jesse's explanations were hard to follow and he has a hard time dumbing down the subject for you, especially coming in with just CS 111. If you're confused, it'd be best to ask him on campuswire rather than in class. He always extends our projects because they were always super difficult. He is pretty nice and willing to help if you'd just email him about it.",
        "This class sucks, but you have to take it. Get a good partner for the homeworks that will really help out. (Try not to take it with Tov if you can)",
        "Professor was extremely nice and understanding especially during the chaos of corona.",
        "C and C++ are very hard and we move through the material very quickly. It's important to try to not get left in the dust.",
        "Everyone says that this course is terrible with Jesse, but I don't think it's nearly as bad as people say it is. It is significantly more difficult (and disorganized) than 111, and I do not recommend it if you are a non\u2013major, but Jesse does a good job of clearing up misunderstandings on Campuswire, and he is always open to pushing back homework due dates. Things get significantly easier around the halfway point of the quarter, when you switch from C to C++.",
        "Felt like lecture could have been tuned to be more useful to the students.",
        "Grades were based on 6 homework, 2 midterm, final project proposal, and final project. The homework assignments that were SUPERRR hard, but you can drop one. Jesse also said the practice midterm is harder than the actual midterm, however, the actual midterm was so much harder. Jesse's way of teaching was also mainly toward students that have prior knowledge of coding, so it was very hard for me to follow in class. If you email Jesse, he is willing to change your grade or extend deadlines.",
        "Ya Jessie is pretty smart. Like he basically made the entire website and programming library that you will use. One flaw: Not good at teaching at all. If you did not take computer science courses prior to CS\u2013211 and CS\u2013111, then you will BOOM. Good Luck.",
        "Obviously if you haven't programmed with C or C++ before, this is new and you will obviously encounter new information. But it is very hard to learn and apply. I still don't know how to proficiently code in C lol.Please please please if you haven't programmed with C before, expect a rough quarter. I basically lived at the library.",
        "This course does little to prepare you for programming in real life whilst simultaneously being extremely stressful and hard to manage. I was told not to take this class with this particular professor before the quarter and I did not listen. PLEASE DONT TAKE THIS COURSE",
        "The class was a hard class but if you attend labs and go to office hours you will be ok. Lectures can be very dry but try to pay attention.",
        "yed",
        "Overall, I took this class with the goal to learn more programming techniques and nuances of coding. I would say that this class was mostly dissatisfying in accomplishing this goal. I was stimulated for a couple of weeks when pointers and data allocation were the focus of our lectures in C, but once we moved to C++, data allocation was handled automatically, and pointers weren't as necessary to be used for homework assignments. As a result, I didn't learn as much as I was hoping to from this course.",
        "Tough course, but definitely learned a lot. If you enjoy coding, this class will be fine for you.",
        "The biggest problem I had with this class was mostly with the descriptions of homework assignments. They are often fairly lacking in detail which makes it kind of hard to complete the assignments.",
        "Actually not too bad. I saw so many bad comments in the previous CTEC but this quarter went pretty well. Jesse is actually pretty cool. The only thing is that his slides are not very helpful... Just learn the concepts online and do the assignments",
        "You will learn a lot in this course. At times it will be painful, but that's somewhat inevitable when working on any new skill. There are definitely a lot of new concepts present here, which can be uncomfortable, but at the same time it makes it a great place to develop programming skills and a better understanding of different paradigms then is explained in 111.",
        "Jesse Tov was a professor who cared about his students, offered plenty of extensions, and tried to help during office hours as much as he could. It is hard to pay attention in his lectures, though that is true for most professors I've had. The homework is long and difficult; most office hours I attended were full of people asking the TAs for help. There's a disconnect between the lectures and the homework in the second half of the class \u2013\u2013 I didn't learn the information until I prepared for the test essentially. You do, however, learn a lot through the homework.",
        "I wish I could have done better and learned more from this course, but as I didn't really feel that the course was constructed in a way that would have helped me to do so. Bottom line: If you are a CS major and you have to take the course, don't be afraid to take it but know that you will need to put into it more time than other courses in order to be able to actually learn. And please, don't let the difficulty of this course or the grade you get make you question whether you are good enough to be a CS major, because honestly, it was hard on almost everyone. If you aren't a CS major but you are taking this course to try and see If you'd like to be one, don't. Unless you have a strong programming background or are 100% willing to put the work, this course can make you hate CS because it honestly just makes it way harder than it should be.",
        "Mixed feelings. On one hand, a lot of the original CTECS for this course with Jesse made note of his horrible style of lecturing \u2013\u2013silently live\u2013coding entire programs in front of a whole lecture hall full of students with occasional explanation and side\u2013commentary. This is something he did not begin to do until near the end of the course because he seemed to actually have lecture slides prepared that you could take notes off of. But by week 7 or 8, he definitely devolved into that previous manner of lecturing.My biggest gripe with this course is that Jesse truly made his own job, and everyone elses, much more difficult than it needed to be, due to inefficiencies. To this day, I haven't figured out why his custom\u2013coded grading site (GSC) is used as the administrative platform for all homework programs and exams when using Canvas, as every other professor does, works just as fine. In the first couple of weeks, he would also have to DEBUG his grading site, because it actually caused issues with some students trying to upload homework files. Another oddity that regularly occurred were the extensions we got on homework assignments \u2013\u2013 there came a point where he would notify us on the external site he uses for asking any and all questions outside of class, Campus Wire, to let us know that we got a 24, 48..., etc hour extension. Except he would do this at midnight of the deadline. Or 2 am after the original deadline. or 4 am. For anyone who did not leave assignments till the last minute, this surprisingly began to anger you after the first couple of extensions, because there comes a point where when you run up against a deadline, you need to know when to quit and when to power through, and unfortunately you never knew this with Jesse and his randomly granted extensions.Overall, while this course is being taken over by Jesse, a great deal of preparation could be done that would drastically improve this course in all aspects, and make it much more interesting and stimulating than it already is.",
        "There is a stigma at Northwestern about Jesse's 211 class. I believed it at the beginning of the year, but I think that Jesse has been a lot more understanding this year and it is completely possible to do well in the class if you just use office hours. Jesse is also extremely generous with extensions and making the class easier as long as it applies to the entire class.",
        "Jesse is not the best lecturer but helpful on CampusWire and office hours. He is also EXTREMELY knowledgable. Definitely not as bad as some CTECs make him seem.",
        "This course is a wild ride. Decently difficult, at times frustrating, lots of times confused and lost, but also moments of pure bliss when homework programs compiled. Buckle down and get ready to learn.",
        "Lectures were helpful in learning. Writing a bunch of test cases seemed more like drudgery than learning. Jesse was very accommodative to students and we all appreciate it.",
        "This class is really hard, but here\u2019s some tips to succeed: 1. Got to office hours at the beginning of the week, there won\u2019t be as many people there and you can get 1\u2013on\u20131 time with the TAs2. Start homework early. You can\u2019t wait til the last minute in this class cuz if you run into a bug, you\u2019re dead3. Use campuswire. Ask as many questions as you need, it\u2019s really helpfulJesse is a little scattered in class, making it  a very difficult class, but there are so many TAs willing to help you succeed. Take advantage and you\u2019ll do alright. Second half of the class is easier cuz it\u2019s C++ rather than the very difficult C",
        "I heard this class is hard with jesse but it turns out to be pretty manageable. Professor Tov is a very nice person and he can answer any of your questions well be it on campuswires or office hour.",
        "This course was a lot to handle in different places. Prof. Tov's lectures were not very helpful at all in teaching some of the course content, ESPECIALLY C++. However, labs really cemented my programming skills and were a great place to actually figure out what the hell was going on. Where Jesse truly shines as a professor is his office hours. He is a great resource that I am glad to have utilized frequently over the course of the quarter, and his expertise in the field really made sense there. The downside to these labs is Jesse's testing. If your implementation of a concept differs from how Jesse wants it to be implemented, even though it is functionally identical (e.g. including an extra space in a print statement accidentally, tracking a ball's collisions in Brick Out, or accounting for center\u2013square moves in Reversi differently), it is counted as incorrect even though it is imperceptible from a user standpoint. The partner assignments in this class are also very hit\u2013or\u2013miss, and transferring code in between two computers is incredibly inefficient, and often redundant. It was rare that my partner and I both felt satisfied with the amount of work we put in to each assignment \u2013 there was no good way for us to split assignments up evenly and piece them back together, and partner programming at times was frustrating and ineffective. Midterms also felt very disjoint compared to the rest of the course, and came at very inconvenient times in the pacing of the labs. The first midterm was the week of Lab 4 (the lab which Jesse described to us as an \"11/10\" in terms of difficulty the first day), and the second one was two days before the intended due date of the final project.",
        "This course does not go too far beyond the AP CS curriculum. If you know what pointers are, the differences between pass by value/reference, and paid attention when they were talking about object\u2013oriented programming in your AP CS class, you really don't need to be taking this course.That being said, the way Jesse teaches it is pretty interesting: I did learn some things. However, my partner in the class struggled a lot, and I'd tend to agree with him. I can't imagine learning coding the way Jesse teaches it.For example, by the first midterm, the number of students in the class who could loop through an array and remove the highest and lowest elements was pretty low.But all in all, if you have to take this class, there's nothing wrong with taking it with Jesse. He's nice too!",
        "Very great class \u2013 I learned a lot this quarter; weekly homework assignments were challenging but Professor Tov was very helpful in guiding students during office hours and occasionally extending due dates to help accommodate for busy schedules.",
        "I thought the course itself was informative and interesting, but the homeworks place an extremely high emphasis on writing out model tests, so instead of just being able to make sure something works on your own, you have to effectively read the instructor's mind to write a model test for every single possible thing they could check you on, which was often very discouraging, as it wasn't enough to work, or to be able to point to a line of code that checks the thing, but you had to write a formal test for everything.",
        "The professor is so sophisticated with the subject. He has a clear illustration of the concept. Sometimes, though, the pace of the course might be too fast.",
        "I found the course unnecessarily difficult.",
        "The course was an incredible amount of time and work, but could be extremely rewarding at times. Hitting the run button and having a game you made appear onscreen is an incredible feeling.",
        "To start, this is a very difficult, time\u2013consuming course.  Be prepared to spend a lot of time on each assignment.  Also, Jesse lectures about the basic ideas but not as much on C or C++ syntax, so anyone going into this class with no experience other than 111 will find themselves using google and office hours a lot.  (for videos, I highly suggest watching The Cherno\u2013his C++ stuff is incredibly helpful and I wish I'd found him much earlier than I did).  Don't get me wrong, you will learn a lot and I do think this class is overall worth it, but it's also a large time commitment and can be very frustrating at times.  It is doable though, I promise.  Perfect class for anyone who is trying to figure out whether they truly like coding, like me, as you only find that out when it gets tough.",
        "The course started off slow, then ramped itself up. As long as you kept to doing the work, communicating with your partner, and looking over any code posted, you were fine."
    ]
}{
    "course_code": "Student Report for EECS_211-0_20",
    "course_name": "Fundmtls of Computer Prog II",
    "instructor": "Jesse Tov",
    "year": "2019",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "3.10",
        "count": "100"
    },
    "course_rating": {
        "mean": "3.22",
        "count": "101"
    },
    "comments": [
        "Lectures DO NOT help with homework however they really help with tests",
        "Jesse is incredibly knowledgeable, but sometimes this knowledge is lost in translation unfortunately. He cares a ton about his students and truly wants to make your learning experience a great one. I highly recommend using Piazza as a resource! Even just reading the site without asking any questions was extremely helpful in gaining clarity about the homework.Make sure to allocate plenty of time for this class. It is a lot of work as the code often takes a few go\u2013overs to get correct.",
        "It is difficult, but certainly worth the struggle.",
        "Where to begin... Jesse really cares about his students, that is clear, but he simply isn't the best teacher. I think he has a hard time \"dumbing down\" concepts for the students, and describes them at the level he understands them, which is an extremely high level but not a level that most students can understand when hearing for the first time. The homeworks, while contributing a gigantic amount to my learning, were simply too long. I can safely say this class has discouraged me from becoming a comp sci major as I am so burnt out after it. Only take this class with easier classes.",
        "The class is a bit challenging if you have no prior coding experience, but it\u2019s not too bad. Jesse doesn\u2019t do a very good job explaining some of the things in class, but he does his absolute best on piazza. The class also takes a lot of time so plan well.",
        "It was incredibly challenging. I cannot emphasize enough how overwhelmed I felt by the course load and then subsequently disappointed how a small error caused incredible damage to my final grade. I have not been more stressed for any other class.",
        "Homework assignments were very difficult. TAs didn't know how to approach them, either.",
        "If you don't have previous CS experience take this class with Sara. Otherwise, Jesse is fine but be ready to do some serious googling to figure out the weekly projects. The exams are stupid hard and the practice he gives you doesn't help but its only 15% of your grade each so just do decent on them and you'll be fine in the class.",
        "This is a very difficult course. The professor lectures very badly and does not have useful slides. The exams are really hard but thankfully not worth that much. A lot of work will be put into weekly programming assignments which can take a long time and are very difficult to debug. Doable class but definitely good if you have experience with low\u2013level stuff already. Helpful to learn object\u2013oriented programming in C++.",
        "I felt frustrated and annoyed a lot of the time during the course. But I definitely learned a lot, and I can say comfortably that I can code in C++ (still not so sure about C).",
        "There will be a ton of negative comments here, so I want to highlight this: This was the first class after the course was redesigned. It's going to be better than the ctecs are showing. Professor Tov is really good about giving extensions and answers piazza posts in minutes, even in the early morning. He can be a little sarcastic though, I've read some bad emails students have gotten back from him. It's entirely possible to do well in this course, even with no C or C++ programming experience.",
        "This course is very hard with Jesse, I would recommend waiting to take it with a different professor if you can.",
        "This course was ridiculously difficult. The whole structure of the class was remodeled, and for an introductory computer science class, it was WAY too hard for someone who does not have experience coding. Many students were discouraged and dropped because of poor instruction and ridiculous assignments that took a very very long time. The lectures were completely useless in this class. Instruction was terrible, homework was extremely difficult and not reflective of the lectures at all. Jesse made this class extremely stressful and awful. I would say it's much more worth it to take the course in the spring with Sara. You'll learn a lot more and it will be much easier. Most people without coding experience ended up dropping this class.",
        "I think some of the programs were interesting, however, they were not fully fleshed out at all. They took way longer than should be expected of any course and caused severe stress and anxiety for any student in the class. The office hours were always packed because no one knew what they were doing. The TAs didn't know what they were doing either because they just switched curriculum. Although I enjoyed the programming, every week I would spend upwards of 30 hours on the programs and still get C's on every one and I was only taking 3 classes this quarter. For the love of god, only take this course if you have to.",
        "Prof. Tov is a good teacher who is always there to help you in office hour and Piazza. However, the difficulty of this course is incredibly high, especially the homeworks which are extremely time consuming. Lectures and labs are great but not always correspond to what we need to do in homeworks. Everyone on class are so competitive that you have to work much harder to get a good grade. All in all, take this class if you are confident with your programming skill in C and C++.",
        "I hated this course. so hard so much work and I wasn't sure why do I ever need to use this knowledge that I learned in this class",
        "Honestly, 211 with Jesse gets a bad rep, but it's not bad at all. People just come into it with the mindset that Jesse is bad, but that's what makes the course seem like it sucks for them. If you just pay attention during lecture and give yourself time to do the homeworks, you will learn a lot and be interested.",
        "I struggled a lot with this course. For our second midterm, Jesse ended up changing the format of the test the night before and I was very panicked for the actual exam. You also have to make sure that your homework is exactly the way he wants it to be formatted and print only the things he wants printed out. You also have to add all the test cases you think he could check for and make sure that it works. The fact that homework is 50% of your grade is nice, but this also means that you have to try very hard for them.",
        "The homework programs are extremely hard. Make sure to start on them early. The TAs (except 1 or 2) have no idea of what's going on, so they are never able to help you, and the tests are unnecessarily hard.",
        "This class is definitely harder than EECS 111\u2013 whereas those programs took maybe a couple of hours at a maximum, these take SIGNIFICANTLY longer. They pretty much took up my entire weekends (not necessarily because they were hard, but writing hundreds of lines of test cases for the programs \u2013 which you have to do if you want to get a 100% \u2013 took forever). Also, lectures were dry and not useful to doing the homework, so you can skip lectures and labs and still do well in the class if you're decent at programming.",
        "Had to learn a lot of material on my own. Slides and lectures were a bit messy at times, but Jesse's a nice guy overall and very, very helpful on piazza",
        "This is an interesting class if you put in the time to understand the material. Memory management and the greater use of C is not straightforward without a little grunt work. By the end of the quarter Tov admitted that he's fine spending 10 minutes in class on material maybe only a third of the class will understand. We weren't tested on that material.",
        "Get a good partner if you are taking it with Jesse! Go to TA hours but be prepared to wait a bit. Tests really are fair if you pay attention in lecture. Lectures are hard to follow at times so pay attention, sometimes he goes into extra detail that you don't need to know which may be confusing to some so just be sure to listen when he tells you which parts you need to know. Be prepared to spend several hours on hw, but that's how Jesse believes we learn, by trial and error at coding, and I agree.",
        "This course was a little rough since Jesse was still getting the materials developed, but I think it was a good experience. The c portion of the class took a little getting used to, but I think it was worth the understanding gained. I found the class most useful with lectures as introductions to concepts and homework actual practice of those concepts.",
        "This course was a bit more difficult than I was expecting, but I still thoroughly enjoyed it and how I spent my time in it. My biggest suggestion is that you should make sure you choose a partner that will make an effort to help out and split the work evenly between y'all two. If you don't, the class will be much more difficult than you want it to be and pretty much you'll be doing all the work yourself and someone will ride off your back. Apart from partners, the class was done in a new way where we learned C before C++, which makes sense, but was difficult to transition for me to start accounting for resource management straight off the bat at the beginning of the quarter. The homework assignments were games once we entered the C++ section of the course and the course was much better from then on. The labs were not the most helpful, but they introduced a couple of topics that could sometimes be useful for the homework assignments.",
        "I was stunned by how time consumptive a program is, but since we were able to have a partner, we were better able to move forward. It is so much easier to learn and to catch motivation when you\u2019re doing a program with a partner. You learn from each other and you feel less overwhelmed. Overall, great exposure to teamwork.",
        "Jesse is a very very smart person, however, he sometimes teaches at a level that is far beyond the knowledge of first year CS students. His lectures were often extremely difficult to follow and his lecture slides were incredibly confusing. His homework effectively taught the information that 211 is supposed to teach, but at times felt painfully difficult. In the beginning, I felt as if I was learning through brute force. The class is difficult, and if you stick with it you will learn, although it will challenge you intensely.",
        "Not too bad if you have programming experience.",
        "Jesse isn't a bad teacher, but this class needed a lot of work. This quarter was the first time Jesse taught this version of the course. He said 211 used to be easy and boring and he wanted to make it harder and more interesting from now on, and he definitely succeeded in that. It'll probably be better organized in the future, but this quarter the TAs were largely unhelpful as they had all taken a different version of the class that involved no C and only C++. Lectures and homeworks are completely unrelated, but doing well on the homeworks will not at all guarantee you'll do well on the tests.",
        "Incredibly time\u2013consuming and frustrating class. The weekly homeworks took over 15/20 hours on average, and even then they were difficult to get a good grade on. The TA hours were not helpful, and Tov was sometimes very condescending on Piazza. The understanding we were expected to have was unrealistic and unfair for an introductory course. Don't take with Tov unless you already have a good understanding of C/C++.",
        "Jesse decided to change the curriculum this year from all C++ to half C and half C++. This was terrible, because even the TA's were confused, which made homework very troublesome. As a testament to how disorganized the course was, multiple homework assignments were pushed back at the request of students. There was no time left to do the final homework, and we jumped straight into the final project.",
        "I think that this course was really fun and easy if you already have a background in C, C++, Unix and/or Java/other object\u2013oriented languages. Otherwise... good luck.",
        "This course with Jesse was the worst part of my quarter. I definitely should have put more work into it, but the assignments felt unnecessarily difficult or complicated. Unlike with 111, you can't just do the assignments a night or two before they're due because there is a lot more that can go wrong. The C sections were awful because of memory allocation and the Putty terminal we used(and I heard Sarah doesn't teach C, so also unnecessary?). The slides he taught with were pretty useless to look back on because at least half of them didn't explain what they were showing, and there weren't any other reference materials to look at (besides like cplusplus.com which is too complicated for simple questions). I think programming lectures aren't very helpful anyway, but it was difficult to follow Jesse's lectures, and a lot of the topics covered weren't practiced in the homework. Overall, if you have to take this class it's feasible, but very difficult, and because I hear good things about Sarah, I'd look into her class.",
        "This coarse was hard, especially with the fact that the coarse was being rewritten as we were learning this quarter. It starts with intro to C, but makes C++ a lot easier. I believe the next EECS 211 classes with Prof Tov will be easier and better structured. Prof. Tov was very nice and caring for his students. For homework, I would recommend starting them early and going to Office Hours for help.",
        "This class is HARD with Jesse. He teaches C and C++ as opposed to other professors, and this class is difficult project wise. That being said, I feel like the final project grading was pretty easy.",
        "I will say that I learned a lot in this class, but this course was incredibly challenging as the homeworks take a very large amount of time and make going to office hours several times a week a necessity for most students. The lectures were also fairly hard to follow and did not line up very well with the homework assignments, making our exposure to the material quite limited and so when it appeared on tests, we had little experience with many topic areas. Also, the slides are not particularly informative so if you did not follow the lecture, there are not a lot of opportunities to try and relearn or figure things out yourself. Jesse is very accommodating, but at the same time does not seem to know how much time we as students need to put into this class to even stay remotely caught up, making this class far and away my largest time commitment. I will definitely look back on this course as good for teaching me a lot about C and C++, but I definitely felt overwhelmed for basically the entire quarter.",
        "Jesse's lecturing is very very demanding and you have to be 100% on top of things to keep up",
        "This class was surprisingly hard, and apparently Jesse made it harder this year than it usually is. I think they want to have kids see lower level programming earlier on, so you spend a lot of time learning C which is tough to work with. I liked how Jesse didn't coddle us, and the homeworks honestly were reasonable. They aren't supposed to take an hour with no thinking. Midterms were a bit tough.",
        "This course is complete garbage and Jesse is actually the worst person ive ever met.",
        "The course taught me a lot about how to code games and how to code in different languages. It also taught me about memory allocation.",
        "DO NOT TAKE 211 WITH JESSE UNLESS YOU MUST COMPLETE THE 111\u2013211\u2013214 SEQUENCE IN YOUR FIRST YEAR. Material is somewhat interesting, and the Undergraduate TAs are very good.  However, Jesse's lectures are not very great, and he often wastes time on showing off his ge211(stupid game engine) or other things.  The first half the quarter is doing very hard C assignments on UNIX, which are hard, but rewarding.  The C++ assignments in the second half of the quarter, however, use his game engine, and does not help you learn C++ or anything else that is useful.  Also he *literally* doesn't use Canvas, but uses his homemade homework server. If you do not have CS experience, this class will be very difficult.",
        "This class was very difficult and fast\u2013paced even when I had prior experience in other programming languages. The homework assignments can take more than 8 hours each week(most of the time was used to find bugs). However, you will become really confident in the topics that were covered. I felt the tests were very fair because they were reflective of what Jesse had taught in class. In lectures, Jesse went through the earlier topics such as pointers way too fast but he is always there on Piazza helping students and I really appreciate that. If you go to him after class, you'll find that he is probably one of the smartest professor you'll meet. His answers are very helpful in completely the homework or preparing for tests. Even though this class was super difficult, it was rewarding because I really learned a lot from it.",
        "Homeworks are super hard.",
        "NEVER TAKE THIS CLASS WITH JESSE TOV. This course is unnecessarily hard and extremely torturing. Professor Tov is not very accessible and puts much work on himself and the students. As one of the intro courses that teaches C++, we instead spent half of the quarter learning C using emacs through terminal, which added to the pain. Homeworks were so hard that even TA could not understand the problem, but the prof was so occupied that we could not even get individual appointments. Office hours were filled with people that it was extremely hard and ineffective for us to get help. I ended up spending most of my week doing homework and I felt hopeless and helpless. I am a CS major so I was initially excited to learn more about C++, but in the middle of the quarter I almost switched out because it was pressuring me so much. If you are a nonmajor, don't' even consider this class with Professor Tov. If you are CS major and have some programming experience, you might survive but it's gonna be full of struggle and tons of extra work, plus you are not really getting much out of this class.",
        "This class was so much harder than I thought it would be, and Jesse's lectures weren't always the most clear.  He's clearly a very smart person, but a lot of the things he said wouldn't make complete sense to me.  It was also hard to go back to the lecture slides after lecture because they aren't very detailed.  The homework programs were insanely hard and I spent a ridiculous amount of time on them.  However, despite struggling a lot, I do feel like I learned a lot became a better programmer because of this course.  Jesse's a super nice guy so if there is anything that doesn't make sense during lecture (which will happen often), don't hesitate to ask him to slow down, or ask to sit down with him to go over something in more detail.  The TA office hours were also super helpful for me and are the main reason why I didn't fail the homework.",
        "Unlike previous quarters, this class started with the C language rather than C++. It felt a little like being thrown off the deep end, and it made the first half of the course intensely difficult. Once we were through that portion of the class it did get better, but I would have appreciated more extensive help with the concepts needed to complete the early assignments. The professor spent some class time going over less useful concepts, some of which were in other languages instead of C or C++, which reduced their effectiveness. It also would have helped if the TAs were better equipped to answer our questions, possibly by getting more oriented with the tools we were using such as Emacs and CLion.",
        "No, the basics were not covered enough. Examples are good, but time to build in fundamentals is even more important I think. Too many examples without ample conceptual explanation led to confusion when studying for exams and writing code. Professor is really passionate and smart, but not really good at teaching. Had to learn a lot of the basics off the internet because I couldn't understand the slides.",
        "This course was unnecessarily difficult, especially compared to previous years. I personally think it is good for CS homeworks to be challenging (it helps you learn!) but they could have been executed much better in this class. This class need more TAs who are more equipped to help students and needs less convoluted homework that actually follows what we learn in class.",
        "Disclaimer: Supposedly this class has never been taught this way before (C then C++). I also have no prior coding experience other than EECS 111.I considered dropping this class when I realized that I didn't know what was happening but I persevered and passed this class. It really isn't that bad. You may not like working in emacs, but you can easily google the shortcuts (ctrl + x and ctrl + s is for saving, very important). I am primarily a Windows user so getting used to using the unix command line was very odd at first but it's intuitive (use cd, ls, and help). You'll survive\u2013\u2013 I did all of my homework alone until the last two homeworks and I turned out fine, although I regretted my life decisions multiple times.That being said, the C portion of the class is much better taught and in\u2013depth than the C++ portion of the class. The first half of the class is the real meat of it\u2013 I feel like I mostly slept through the concepts in the second half of the class because we were given less opportunities to actually use those concepts (there was an obvious drop in the exam score averages for the second midterm). While the C++ homework is rather fun to work with, it teaches you less than the C homework, which drilled strings and arrays and all those other fun C concepts into your head (malloc, anyone). If you want to do well on the second midterm, you should get some studying done on your own, because going to lecture won't solidify those concepts.The TA I had for labs was not particularly helpful and office hours were extremely packed in the first few weeks. Unhelpful and the TAs sometimes didn't explain concepts very well. You're better off consulting google or asking a friend for help on a concept. (also, you can't use the == operator on strings in C... I made this mistake multiple times. You use strcmp, not ==) I never went to labs.Always, always, ALWAYS check Piazza\u2013\u2013 while they might not directly answer your questions, what they give you is very useful. Jesse is always answering questions, whether it is 3 am or after lunch. Sometimes I wonder if this guy ever gets any sleep, probably not considering that he is a programmer. On another note, Jesse is a rather fair professor despite having a sarcastic streak. He will give extensions if everyone is struggling. He will run tests early on your homework, and you will probably need those to catch bugs you won't find until later. The final project is fun because you have a large amount of freedom, but it is also VERY daunting. You will have to build your own game from scratch. Please work on this with a partner if you have any other obligations within the week, or you will regret living.",
        "If you are taking this class with Professor Tov, be prepared to work! It is definitely possible to get a good grade and do well, but it requires many hours of your week. A lot of the learning happens on your own, but in a structured way, and it was actually very helpful and I learned a lot. Even though it may be harder to take with Professor Tov, I recommend taking it with him. It is obvious he is a genius and can help with any problem you have.",
        "Although this class is a fundamentals course, I did not find it easy at all. Topics are challenging, lectures can fly by if you're sleepy or not paying attention, and the homework assignments can definitely catch you off guard if you don't start them in advance. That being said, you do come out of this class having learned a lot because of its difficulty. And there are interesting parts of class, don't get me wrong. Just don't go into the class thinking it's going to be on the same level as 111. It's not. It's harder.Jesse is extremely smart and extremely helpful. He is very dedicated to answering piazza posts, and if you ask for help, he will offer it to you happily and enthusiastically. On the flip side, he can sometimes fly through lectures really quick if you don't ask questions.TA sections can also be a great resource if you go to one that isn't directly before a due date. Otherwise, the section might be overcrowded with students and it might take a long time (up to an hour, even) to be able to ask the TA a question.",
        "This class was insanely hard \u2013 I put in almost 20 hours a week for this one class, which was very very overwhelming. It also felt very disorganized and lecture was pretty confusing.",
        "The most horrible course I have taken so far. A lot of the people dropped the course early on and that was probably a wise decision. He seemed very cold. I did not understand any of his lectures because he assumes that we have extensive computer science knowledge and experience. If you do, it might be a good challenging class, but if not, DO NOT TAKE THIS CLASS.",
        "I thought the class was poorly organized and assumed you already knew how to use the language at a basic level.",
        "The course is totally different from what it used to be. The lectures are not so related to the homeworks. The homeworks take a lot of time as well",
        "This class did not help me learn anything. I was so lost for the first 5 weeks going from Racket to C. The lectures were very difficult to understand and even going through the slides did not help because they very not effective in contextualizing the text or explaining broader topics. The course was also new and so disorganized. We got an extension for almost every assignment because they were either late in posting them or they were so difficult to complete.",
        "Please, do not take this class with Tov if you want to learn. He may be a nice guy, but he does not teach very well. His lectures aren't relevant to the homework, he overestimates your skills when assigning homework, and his live\u2013coding during class is impossible to follow. He doesn't use Canvas...",
        "This was a difficult course, but ultimately I think it helped me learn. It was hard to learn on the fly, especially in the beginning but it got better as we transitioned to C++.",
        "Don't take this class if you don't have to. If you do have to take it though, it won't kill, you but be ready to grind. You definitely have a leg up if you take AP CS in high school or have some other prior object\u2013oriented coding experience. Start the homeworks early, they take a good amount of time, especially as the class goes on, and study hard for the exams. Lab sections felt kind of pointless, but try not to miss too many lectures. Also, pick a reasonable idea for your final project. Office hours are usually crowded, especially the night before a homework is due, and the TA's are usually not very much help unless you have a very specific issue. They aren't given sample homework solutions or anything and didn't seem familiar with the homework assignments we were given, so most of the time with the TA at office hours is spent simply with them reading the homework trying to figure out what we need to do. Make appointments with the instructor if you can.",
        "The homework assignments are pretty tough and take up a lot of time, but you learn a lot by doing them.",
        "We did C for half of the quarter. There is this error called a \"SEGFAULT\". Whenever this error happens, it usually means we tried to access a pointer that was NULL. Anyways, the reason I am bringing up this error is because whenever this error came up, it just came up. No explanation. No location of error. And Tov assigns complex assignments where everything connects to one another. Nothing wrong with that, I actually really respect that. The problem is when these two things combine, it's nearly impossible to find out what/where is the code going wrong because at that point, it could honestly be anywhere. You can methodically write each piece of the code then immediately testing it, but since we were using emacs and because of my lack of familiarity with C, there were situations were it seemed like it can take up to hours just to set the tests up so that we can methodically go through it. This (plus valgrind) are the main reasons why it can take 10\u201315 hours just to complete an assignment. That being said, I feel that the assignments either shouldn't have been that complex, or we should've been able to get more help either from the TAs, debugging tools (which we didn't have), or Tov himself. This makes assignment (and the class) seem unnecessarily excessive.",
        "I get that Jesse is trying to prepare us for later courses, but the entire class felt rushed and not organized.",
        "Interesting course and I learned a lot, but Tov's lectures were not very helpful and some of the homeworks were extremely time consuming because they used things we did not know. Also, using emacs/terminal to write C was sort of ridiculous.",
        "At first, I was very intimidated and did not like the course due to the homework being very challenging. However, as the course continued and I dedicated more time to it, I was able to learn a ton and apply my knowledge to real coding, which I really enjoyed. It was definitely one of the hardest courses I have taken so far, but very rewarding in the end.",
        "This is the first class of the brand new curriculum! It was a little rocky at times, but I managed to pull through. 25% of the initial class dropped due to the difficulty of debugging C code in the initial 5 weeks of class. I would say that from 111 to this class is a steep jump in difficulty, and that 111 does very little to actually prepare people to perform well in this class. I did fine in the class, but I already had 5 years of C/ C++ experience, so this was expected. I know most other people struggled significantly. The tests were pretty fine, but did require you to be very nitpicky about code and know edge cases/ language behavior very well to get a high grade.",
        "The first part of the course was taught in C, which is not a good language to start with for object\u2013oriented programming and in no way a good programming language for a course that is meant to be the second class in an intro to CS sequence. The projects were vague in their instructions, and had it not been for Piazza, I doubt most people would have been able to complete them, even in partners. Everything was done in the command line on the Linux server machines, meaning that we had no proper debugger or IDE. Certain errors, such as segfaults, could often lead to hours upon hours of debugging, putting all other progress on the project to a standstill. The C++ portion of the course relied on using the GE211 game engine, created by Professor Jesse Tov himself, for the homework assignments. This part of the course was marginally better, if only because we had a proper IDE. The assignments did not correlate to the lectures at all, often focusing on completely different material or content. For part of the course, we were using one programming language on our homeworks while learning about another in lecture. You\u2019d better hope you pick your partner wisely and that they have at least some idea of what they\u2019re doing. Furthermore, most of the TAs appeared completely unfamiliar with the course content, leading to them being often unable to help. And contacting a TA was far from easy either, given that office hours often had floods of students waiting in line for what may or may not be a useful and productive meeting. Upon reaching the final project, it became evident how little we actually knew to do, and so I spent 10 hours over a weekend just learning C++ properly, such as how to write header files and how CMakeLists work. Also, the second midterm? We were given a practice exam, and then found out the night before via a Piazza post that the format will be different.We were a bit of a guinea pig year, and as such the course will (hopefully) improve for better for future classes. That said, right now I cannot recommend taking this course with Jesse Tov. The class was barely manageable, even if most of the homework assignments were in partners.",
        "This course did not help me learn object oriented programming as the first half of the course was done in C which is not a good language to be introduced to object oriented programming in. It felt like to succeed in this course at all whatsoever you should have previous object oriented programming experience and even then the course is unnecessarily difficult. The assignments did not follow the content covered in lecture and the lecture slides don't help you understand the material outside of lecture due to the teaching style of the professor. This is very inconvenient as the midterms correspond to the lectures but not our assignments. The assignments were also unnecessarily difficult and the professor would seem patronizing on Piazza when students had any questions.",
        "Oh boy, this was quite a class. We learned at the end that Jesse had completely redesigned the class, so it was a bit of beta testing. This many many extended deadlines. TA office hours were always overwhelmed, probably due to a combination of confusing and difficul material, the TAs mostly being undergrads, and just general confusion. I wish Jesse had a Piazza site since GSC was a bit worrisome at times. Jesse seems to have good intentions, he\u2019ll answer your questions on Piazza, but sometimes he just overcomplicates the material (looking at you OCaml). If you aren\u2019t really committed to learning the fundamentals of C(++) and sometimes dealing with confusing situations, then you may want to avoid this class in general.",
        "Jesse tried to teach both C and C++ in one quarter and I think he messed up the structure. Lectures are not beginner\u2013friendly and debugging homework is annoying",
        "This was one hell of a ride \u2013\u2013 but fair enough because we were Jesse's guinea pigs. The programs we had to build were really difficult, but between the time allotted to work on them and help from the TA's it wasn't too bad. I definitely spend 20+ hours working on the programs which was hell during, but it paid off. Good luck! lolol",
        "Lecture concepts were more advanced than what was tested and required for homework. Would not recommend unless you already have some background in object\u2013oriented programming. Overall, an unnecessarily difficult and time\u2013consuming class.",
        "This course sucked way too much time out of my schedule. It was basically a part time job. You really have to enjoy coding and learning on your own if you want to do well in this class.",
        "This is the most time\u2013consuming, stressful, and poorly managed course I have taken so far at Northwestern. It's nearly impossible to understand the lectures without substantial previous programming experience (EECS 111 won't be enough). The first topic we covered was memory allocation, one of the most difficult topics, and Prof. Tov didn't even bother to explain the concepts it builds on (such as arrays and types) beforehand. I learned a lot, but I mostly had to teach myself because Prof. Tov's lectures were so confusing. (He told us later that he didn't intend for everyone to understand every topic he covered, so why couldn't he have just told us that in class? I would have been so much less confused and stressed.) The slides consisted almost entirely of code with no descriptions, and the lectures had almost nothing to do with the concepts necessary to complete the homework. I hardly slept this entire quarter because I spent so much time on the homework assignments (which are, again, nearly impossible if you don't have substantial previous programming experience) because there's so much you need to know that Prof. Tov never told us in class. So I spent, on average, 5\u20137 hours per week at office hours trying to get help from TAs who were nearly as lost as I was, through no fault of their own. Office hours were nearly always overcrowded since so many people were lost in the course, so I sometimes had to wait over an hour just to ask a TA one question. So I tried reaching out to Prof. Tov for help, but every time I asked to meet with him he said he wasn't available, and he doesn't hold his own office hours. You can ask questions on Piazza and he responds pretty punctually, but his responses often were just so complex that they confused me more and were often snarky or sarcastic, suggesting that I should have already known the answer to the question. The topics covered during lectures were important for exams, however, but since they weren't reinforced in the homework I found myself studying for exams by trying to understand slides consisting of bits of code with almost no context, which I hadn't even understood in the first place.",
        "Focusing on C first is hard but it makes C++ seem much friendlier",
        "Don't take this course with Tov unless you have to take it in the winter. Homeworks 2, 3, and 4 are ridiculously difficult. The class gets much better after hw 4 (after the drop date, figure that) as you move to c++ and a real ide.",
        "This class was certainly not easy, but it was very rewarding in terms of what I learned. Jesse doesn't go easy on you, but he provides enough help so that you can still succeed in terms of getting good grades. I learned mostly from the homework assignments, but lectures were interesting and Jesse can answer pretty much any question you have. If you are looking to learn the same concepts, and also have an easier time with the course in general, then it's better to take this class with Sara. But if you're a computer science major, I recommend taking this class as soon as possible because it's a prerequisite for eecs 214 and eecs 213, which are both prerequisites for many of the 300 level classes.",
        "This course will be difficult if you are coming into it with little experience. It is a weed out class. But do not be fooled, it is interesting and important.",
        "A friend and I joking called this class \"Random C trivia with Jesse Tov\" from time to time.  While the exams definitely followed that mantra, the extremely difficult C homeworks did not.  My partner and I easily spent 8 hours each on them, and we learned a ton.  But we also had prior non\u2013111 CS experience, that without I think would have made the homeworks practically impossible.  The C++ homeworks were in Jesse's custom game engine GE211 which I personally hated.  In short: C portion good, C++ portion bad.",
        "Hours and hours of work.This class took SO MUCH time that I had to sacrifice GPA for other classes. I would definitely not advise taking Math 234 with this class. Most people struggle in this class. Lots of people in office hours, TAs had no idea what to do when the homework was released minutes before their office hours. During the lectures, professor wanted to explain a concept, but there were so many side things as background, so as a student it was so challenging to take in all of that content.Advice: Do NOT take this class with Tov unless you need to take EECS 213/214. If you are not a CS major and this is something that you can take later on, I strongly encourage you taking with Sarah in the spring. It's definitely not worth the struggles.WITH THAT SAID, the class does challenge you intellectually, and does prepare you for harder classes in your major. It puts your time management skills at test. Jesse Tov is very kind when you meet him, and very helpful when you ask him a question about the concept or homework."
    ]
}{
    "course_code": "Student Report for COMP_SCI_211-0_20",
    "course_name": "Fundmtls of Computer Prog II",
    "instructor": "Jesse Tov",
    "year": "2021",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "4.54",
        "count": "96"
    },
    "course_rating": {
        "mean": "4.32",
        "count": "99"
    },
    "comments": [
        "This class is hard \u2013\u2013 no way around that \u2013\u2013 but you can definitely get through it. Unfortunately though, a lot of the time it felt almost self\u2013taught. Jesse is incredibly smart, and often showed us some cool things in both C and C++ that we could do. However, it often felt like he almost forgot that most of the class was seeing this stuff for the first time, and went incredibly quickly \u2013\u2013 too quickly to actually learn. By the end, the class periods weren't even really helpful to go to, because anything in the homework we more or less needed to figure out on our own. Branden sometimes seemed a little more \"with it\" and understood what level of programmers we were at. All of that being said, both Jesse and Branden were really nice and super helpful with the MANY questions asked in office hours or on campuswire. Don't be scared to take this class, but definitely be ready for it. Be ready to spend many hours on all of the homeworks, but especially HW4 and HW6.",
        "This is a hard class, both in terms of content and workload (Taking this class feels just as if you are taking 1.5 classes). Homework assignments are a big part of this class, you learn mostly from struggling on your assignments, not lectures. You would probably expect yourself to spend a long time trying to make sense of how the homework program works. If you got stuck on it, ask the TA during office hours. The TAs are pretty helpful. Asking them is faster than working on it alone.",
        "The class definitely isn't easy, but it's not impossible. If you enjoy coding, the weekly homework won't be that bad either. Though, definitely go to office hours. The assignments do take a while to do but use OH if you're stuck rather than spending too long on the same thing.",
        "This class was definitely very challenging, but I think it was challenging in a good way. Yes, the assignments were very long and took up half of my week, but the difficult nature of these assignments is what allowed me to learn so much about programming and made me a lot more confident as a program. If you are thinking about taking this class, don't let the fact that Jesse is teaching it scare you. If you put in the work every week you will get a lot out of it. That being said, office hours are super helpful, especially Jesse's as he knows a lot about programming and is the most familiar with assignments that are given. Also, definitely get a partner for all the assignments where a partner is allowed, even if you don't know anyone in the class (you can still go random). I went random and it worked out very well as my partner and I were constantly bouncing ideas off each other which made completing assignments a lot easier.",
        "Reviewing the course: Jesse is a great prof and seems like a really nice guy. He was good about answering questions both during lecture and after. He always responded to my emails (though he's not one of those profs who will email you back in 5 minutes, so keep that in mind). We were sort of constantly slightly behind this quarter, but that's because of the whole 9 week thing, and Jesse did a good job accommodating for that by moving things around to make sure everybody had enough time to get a full understanding of the given topics. I kind of feel bad about how much I took advantage of the late policy, because ultimately it's a really good thing to have in place for students who work hard but are genuinely struggling. I'm glad this class works this way instead of being unnecessarily difficult.For students: You can do well in this class if you're willing to put in the effort, even if it feels like things aren't really clicking at first. The pointer vs. reference stuff can be confusing, as can the malloc and free stuff, so pay extra attention to those parts. I ended up reading extra about it online in order to fully \"get it,\" but you can also talk to Jesse/the TAs. The late policy is very forgiving, which helps, but it's still way better to have stuff in early because you can do early test runs on your code that help you raise your score. With the tests and help from Campuswire, you can significantly raise your grade on an assignment\u2013\u2013 it's always worth resubmitting and talking to Jesse/the TAs. Also, find a partner you like, because you'll end up spending many hours together. You don't NEED a partner, but if you're taking this course online, it's just... really nice to have someone to talk to.",
        "It was really hard but office hours were really helpful",
        "For the professors: Branden was great at more simply explaining some of the things that Jesse brought up. Overall, he was quite friendly and accessible. For some reason Jesse gets a bad rap in his CTECs, but I thought that his lecture videos were super helpful, and he was happy to help explain things if you didn't understand them. He's a little direct (not in a bad way) but don't be afraid to talk to him.Overall, I thought that this course did a good job of making you learn how to use C and C++ effectively; there's a bit of a learning jump when you switch from the former to the latter, but once you get over that syntactic difference it's not too hard to readapt. The labs and quizzes were super easy, and the written homework (most of which you can have a partner for) was definitely doable \u2013\u2013 just don't put them off until the last minute (they take hours) and absolutely go to OH if you need help. All of the TAs were super helpful and accessible. As for the final project, you essentially determine the difficulty yourself, so don't give yourself something too terrible and you should be fine. Same as the written, though, give yourself an excess of time \u2013\u2013 my partner and I were still working on it on the due date even after we'd given ourselves a lot of time, so I'd say better safe than sorry.The grading breakdown for this quarter was:What\t                Value\tWhen\t        CountHomework assignments\t65.0%\tTuesdays\t6Lab quizzes            \t5.0%\tSundays\t        8Final project prose\t4.5%\tThursdays\t3Final project code\t25.5%\tMarch 9th\t1I'm assuming this is subject to change, but it'll probably be similar in the future.",
        "This class is a big step up from 111. The homeworks are much harder, and C/C++ are just more difficult languages that do not baby you in any way. Working in a linux PC was also a huge pain use, but all of it will be useful later. Just be ready to experience a lot more errors. Luckily there was a very lenient late policy, without which the class would be nearly impossible.",
        "You have to take it. Too bad Jesse is leaving he will be missed!",
        "I loved this class! You will likely spend a LOT of time on the class (I probably spent 20+ hours a week on everything because of the lectures etc. and just spend a chunk of hours doing debugging etc), but it is SO FUN (if you like programming) and it does SUCH a good job immersing you in the language. I feel like I picked up so much C and C++ because they just immerse you in the language. Jesse and Branden are awesome professors, and the subject matter of the class is really interesting and fun. Some of the homework can get pretty hard at times, but if you're taking the class you're likely a CS major and enjoy debugging and programming. In which case you'll probably love the class. it's mostly just focused on practice through the homework\u2013 and lectures etc. and I feel like it is an AMAZING class. You don't need to have taken anything other than 111 beforehand\u2013 some hw is tricky but it's really fun too and it's definitely not super hard.",
        "Very interesting class \u2013 challenging at times, but fun. Beneficial to start on the homework early. Watching the prerecorded videos helped with understanding the concepts.",
        "This class is time\u2013consuming and definitely rough. Be prepared to spend a lot of time on homework. Lectures aren't always that helpful either.",
        "I enjoyed the course, despite it being pretty difficult. The professors are very helpful, and even though a lot of learning is done outside of class time, I appreciated the course.",
        "Challenging course, especially the first half. Programming in the terminal is a useful skill to learn, but a nightmare, very sharp learning curve for that and C in general. Once you get to C++, the course gets somewhat easier but definitely more interesting and engaging as you make games each week.",
        "No beating around the bush this class is very hard. If you would like to be intellectually challenged in a CS class, you find yourself in the right spot here. It is also a very forgiving class all things considered. You will learn most of your skills in the pre recorded lectures, and build upon those with practice and questions during class time. Assignments are also very forgiving with late credit, so if you need to take an extra day to turn a 90% to a 100% assignment, it would be in your best interest. Last thing: ASK FOR HELP. The most unwise thing to do, is to go at this class alone. You will need to go to office hours. Most assignments allow partners, take advantage of that. This class is hard enough as it is, there is no reason to make it worse on yourself.",
        "The course is challenging in the way of figuring out what is wanted from you in homeworks. The deciphering of what instructors meant in the PDF takes the biggest amount of time. Other than that, it is a straightforward programming class and does not pose any hard problems for one to solve. Another difficulty is that coming up with tests for your own programs is not easy. As always, the number of bugs you unintentionally make can increase the hours you spend on an assignment from 5 to infinity, so working with a partner is key for success in this class.",
        "Keep up with homeworks and lectures and you will find that it isn't as tough as most people say.",
        "The course was difficult, but I learned a significant amount of useful programming material",
        "This course definitely did help me strengthen my object\u2013oriented programming, but I think it was far too difficult for something considered to be a core course. I really wish we focused a lot more on C++ rather than spending over half of the quarter with C. The main hits to my grade were from self\u2013evaluations, where if you didn't predict which test cases would show up, even if you had perfect code, your assignment would score anywhere between an 80% to a 90%. I found that rather unfair. Other than that, the C++ portion of the class was good and I liked how we had a lot of flexibility to code whatever we wanted for the final project.",
        "Teachers were great; tov and Ghena were super flexible with me",
        "Overall, I learned a lot from this class. Just make sure to start the homeworks early and go to tutoring hours whenever you need help with something.",
        "This class was pretty good! The course is difficult if you don't have any experience with C, and the assignments are tough, particularly a bit intimidating at the start with the console. Jesse Tov was a great professor, Branden Ghena was an alright professor.",
        "This class was honestly pretty hard, but not a bad class. 65% of your grade is six homework assignments, 30% is your final project, and 5% are kind of randomly scheduled lab quizzes. The homework assignments start decently easy (the first two), get hard (3), then get SUPER hard (4 and 6) with another pretty hard one (5). You do the first 4 in C, and like most of the class, it kinda feels like you have to teach yourself all of the material. 3 gets hard because you'll get endless errors, and 4 just feels nearly impossible. Then you make a seriously abrupt switch to C++, which is generally a more user\u2013friendly language, but you're taught nearly nothing about it. This makes homework 5 kind of tricky because your teaching yourself a new\u2013ish language, then homework 6 gets even harder just because of some hard algorithms you have to write and tricky UI implementation. The final project is essentially any game you want it to be. You have to tell them 10\u201312 things your game will do (functional requirements), and that counts for about 60% of your final project grade. Overall, the work load in this class is incredibly high and pretty tough. I turned in 4/6 assignments late, and 2 of them over a week late. THIS IS OKAY THOUGH!!!!Because Jesse and Branden are super understanding. This was what made the class manageable. Jesse and Branden are great and super helpful, even if sometimes live lectures got pretty in the weeds, they were mostly just office hours basically. The grading in this class is AMAZING! Every day your late is only 1% of your homework assignment, which lets you turn things in, see how well you do with the autograder, then resubmit as much as you want. There are also office hours every day with very helpful TAs. I think these aspects almost make up for the difficulty of the work.If you're taking this class it's probably not a question of if but when, so no one is probably reading this like oh wow maybe I'll take it now. I just appreciate details about classes so here you go",
        "The course was hard but honestly learned a lot. I got behind for a few weeks which made the class a lot harder than it needed to be.",
        "I feel like I definitely learned a lot but this course was a lot of work. Finishing one assignment meant immediately having to start the next one. The late policy was very generous in order to ensure everyone learns. We had a lot of support from the professors and the TAs.",
        "The course was surprisingly hard to follow for an introductory level course. I do not think this is due to the content, but rather due to the teacher of the course being hard to follow. Most of what you learn will be through online forums and extra help rather than the teacher.",
        "yes",
        "This course is a ton of work and can be frustrating at times, but the TA's and professors are really knowledgeable and do everything they can to help you succeed and learn. Plus, the game\u2013making portion (the second half of the class) is fun too!I would advise anyone who takes this course to start early on their homework assignments and to take it on a quarter with a lighter coursework load, if at all possible. If you do those things, then you should be fine in this course.",
        "Pretty challenging class, but in the best way possible. I think that the extremely lenient assignment due dates are sort of a curse in hiding; I found myself not prioritizing 211 assignments because I knew that it was fine if I submitted the assignments a few days late. I would highly suggest students treat the given due dates as hard due dates. Brendan is great at office hours and all the TAs are also phenomenal.",
        "If you had just came from cs 111 and thought you could do 211, you are in for a treat. I struggled so much it was painful. If I could go back I would take 150 and 214 beforehand so I would be more prepared. If you have a background in C or object oriented programming you can go from 111 to 211 but if you do not, you will struggle. It is a tough class and goes by quick. Tov and Ghena are great professors but if you fall back one week, you are in for a ride and painful, endless night. Do not overcomplicate your final project, when you can not finish it, it will hurt so much that you gave yourself something excruciating to do. Recommend to take this with other people to rely on help, going alone into it will be difficult and a lot of hours in office hours. Overall, the lectures felt overwhelming as we would have to watch 2 hours of lectures before class every other day.",
        "Though this class may be challenging, office hours are your greatest friend! Lecture recordings were always posted before class days, and class periods were usually spent as demo and Q&A times. There would also be coding labs to help you learn concepts, which would be followed by short quizzes. Half of the quarter was spent learning C, while the other half was C++, so if you feel like you are struggling at the beginning, know that it gets much better! My biggest piece of advice would be to try to start your homework as soon as possible so you can go into office hours when you have questions. The late work policy is extremely flexible, so do not feel overwhelmed if your tests are failing near the due date! Overall, despite the challenge, I feel like I have learned a lot in this course.",
        "Take this class virtual if you can. Office hours are SO helpful\u2013 the peer mentors are amazing.",
        "CS211 has a very steep learning curve if you have not been exposed to C/C++ before. The difficulty of assignments ramp up quite quickly and it is easy to get lost in the homework assignments. I would recommend taking advantage of office hours if possible. The course does require a lot of work and can be frustrating, but I do believe it is rewarding.",
        "I really appreciated how this course adapted for the virtual quarter, since most of the grade depended on homework. In this setup, it felt that the emphasis really was on our understanding the programming language and the concepts through working through the homework projects. Coming into this class, I didn't really have experience beyond programming single file code. I learned a lot regarding how to work with larger projects and seeing how the compiler interprets the code I write. Sometimes it was easy to forget that everyone in the class was a beginner to the concepts, but office hours with TAs/PMs and the professors were always very accessible. There was an environment very welcoming to questions and our learning.",
        "The class is very well taught.",
        "I felt the last couple of assignments were quite hard, but I learned a lot and I am appreciate the course challenging me intellectually as it did. I would perhaps cover a bit more of C++ fundamentals (where can we look for documentation, functions, classes,..)",
        "This class really isn't the best. The structure is a flipped classroom style where you watch lectures before class and then go to class and ask questions or for demos. The recorded lectures themselves from Jesse weren't the best. I never really showed up to the synchronous lecture and I did fine because the entire course is just coding homeworks. If you are coming into this class with a good understanding of C, you will probably breeze through this class just fine. If you don't know C coming into this class, the homeworks will be a little harder for you but overall manageable. Overall this class was just another requirement and the homeworks were mangeable for the most part.",
        "Big time commitment\u2013\u2013 homework can take many many hours, and going to office hours is basically necessary.",
        "Pretty good class",
        "The 1% late penalty is massively helpful \u2013 the course is demanding but being able to continue to work on the assignment after the deadline without a significant repercussion removes any incentive to cheat.",
        "This course is HARD. That being said, it's also awesome and super interesting. Jesse and Branden were awesome instructors. If you just want to know what you need to know to do work, the lectures may not seem that useful, but they were super interesting for doing deep dives into how things work. That being said, keeping up with live lectures, labs, pre\u2013recorded lectures, and homework can be a lot, especially virtual. Going to campuswire or office hours is pretty much necessary but very worth it. Also be sure to start the homework many days in advance so you have time to test and bugfix.",
        "Great course, just make sure to keep up with the work!",
        "Class is kinda hard, but still doable. Some of the latter hw's can get kinda hard so just start early and go to Office Hours when you get stuck. I found the synchronous aspect of the class not that useful? I feel like this class could've easily been asynchronous. At the end of this class you'll be pretty solid in C/C++ so that's a plus. If you don't know the ins and outs of C and how the GE211 library works, it can get tough, but at the end of the class you'll be pretty solid. Just try to stay on top of everything.",
        "This was one of the most challenging classes I have ever taken, but I really enjoyed it. The homework assignments were really difficult, but it was super rewarding when I finally figured them out. Jesse is a really great professor too.",
        "Honestly, this class just sucked the life out of me. Yeah... The profs try to make this class challenging but they did not have to do us like this. It is also demoralizing when you know other people are finished in a couple hours while you take days to finish the homeworks. Definitely go to TA office hours. I'd also say Jesse's office hours are better than Branden's, but take that with a grain of salt. The first half of the class is in C and the second half is in C++. There are videos to watch before lecture, but it got to the point I think most people stopped watching them. But at least watch until you cover the basics of C++. The profs used lectures to demonstrate principles covered in the videos. Only a third of class showed up as the quarter went on. I'm just saying it as it is. The hw's get harder as you go in my opinion. HW1 and 5 are individual. HW1 should not be hard. HW4 is the last homework in C and it's pretty difficult. Then you move on to C++ to make games. I'd say HW5 and HW6 were extremely difficult and wrecked my morale. Good thing is you only get 1% deduction for every day late. You have to guess which tests they'll ask in the self evaluations which was annoying. The final project you have to make a game from scratch \u2013\u2013 they don't give you anything. I'm pretty salty as I write this right now because the final project is just so time consuming. Part of it is probably that it's winter quarter and we're still online. The homeworks were hard enough idk why they feel the need to load us with a final project. This class just disregards the fact you have other classes. Get a good partner or AT LEAST a hard working one because you will be spending a lot of time working on this class. If I had to say one good thing about this class, it's that it makes you learn C and C++. You only have a couple weeks for both languages but the assignments make you understand the languages better and makes you better at programming. this class broke me and built me up as a programmer.TLDR big Spain without the S.",
        "I learned the basics of software design using low level languages.",
        "Lectures are boring and barely help, especially later in the course. As the course went on, the lectures dwindled from having 110 people to 30 people. The course is paced nonsensically, however the professors know it, and have a chart of assignment difficulty, with one assignment being a 2/10 and another being an 11/10 (they did not exaggerate). The professor uses campuswire instead of canvas for everything, and has his own grading server that went down at least half a dozen times when assignments were due. However, late assignments are accepted for 1 percent reduction per day.",
        "TAKES SO MUCH TIME. Basically consisted of 14 hours a week trying to teach myself how to code. Also sometimes we would get up to 2\u20133 hours of prerecorded lecture, and they didn't teach during the actual lectures, because it was just a time for Q&A. Would not recommend to anyone not required to take this class.",
        "We built this snake game, pretty neat stuff!!!!!!!!!!",
        "This class is challenging and time consuming \u2013 the instructors will make that clear to you from the first lecture as they give a scale of each homework's difficulty at the very beginning. But even though they make it seem daunting, Jesse and Branden set up this course so you can succeed through all these difficulties, and they're understanding and great people themselves. This class's assignments are mostly partner\u2013based, so find a good partner and set up a good schedule and dedicate time and crank out each homework and GO TO OFFICE HOURS and you should be good. Also the course's late policy is super forgiving \u2013 only 1% off each day it's late, so you're encouraged to complete the homeworks thoroughly even if they're late. You can get super behind in everything and still end up ok, so stick through it and you'll come out on the other side. Heads up that for us the lectures were prerecorded :/, so if that's not your thing make sure you dedicate time to watching them each week",
        "The structure of the class was awful for me personally. I would wait hours for help from TAs/Peer Mentors and the environment of the class felt competitive which disincentivized asking for help. Especially after the anti\u2013cheating presentation that scared me from talking to anyone else. I would spend several days and hours each day trying to work through homeworks and keeping up with lectures and by mid\u2013quarter I was burnt out. Every night this quarter, I would dedicate myself just to the homework assignments from my last class at 6PM to midnight which also hindered my progress in other classes so do not take this class alongside other heavy courses. I would be regularly post on Campuswire and go to office hours. Class needs so much reformatting, especially for an online format to ensure students are not just keeping up but comfortable at the class's pace.",
        "I really enjoyed this course. You will learn almost everything by doing the homework assignments. By the end of the course, most people stopped going to the synchronous lectures, but that was a great time to ask questions and get help. Make sure that you work well with your partner and start homework assignments early. Professor Tov and Professor Ghena are both very enthusiastic and helpful teachers. If you start homework assignments early, you're able to get valuable help from them and the course staff \u2013\u2013 It is very non\u2013intimidating to ask questions in this class! The late policies are also extremely forgiving.",
        "This course will be very time\u2013consuming although there are chances to work with other people and TAs / professors will help you if you ask. The class will first cover C using a terminal and afterwards C++ using an IDE. For assignments, some code is already written for you which sometimes take awhile to understand. The assignments are difficult in the sense that the syntax of C/C++ will feel \"restrictive\" compared to syntax from like Java, Python, or Racket. Be prepared to spend several hours and days on each assignment however you can get help from TAs and the professors. However, the course will better help you understand the intricacies of computer science and you will have a chance to make games.",
        "Overall, the course had a lot of homework. The assignments took a lot of time, but if you don't procrastinate, then the class is very doable.",
        "I learned a great deal about programming in C and C++ in this class. It was very challenging but it was a mentally stimulating class all the same. Professor Tov and Professor Branden are very knowledge about what they do. They are also very passionate and you can often hear this as they talk in class. They are always willing to help out even outside office hours. This class is by no means easy. It will stress you out most times especially when you run into bugs into your code that you can't quite solve. Always make a point of going to office hours if you do. The professors are extremely helpful. Also, find a great partner to work on assignments and the final project with. They will make or break you.Overall, this is the best class I've taken at Northwestern so far. We did pretty cool stuff, like make games in C++ during the second half of the quarter.",
        "Although the quality of the instruction varies from different professors, I did enjoy the course materials. People trash on C/++ stuff a lot, but to be honest, it is a fun class after the start, and I enjoyed implementing the games. Using Linux, terminal, and GCC are essential skills, and I appreciate the opportunity to get familiar with them.",
        "Especially with the shortened quarter this year, I found this course to be pretty stressful and hard to balance with my other courses. At least for me, it often felt like there wasn't enough time to stay on top of watching the prerecorded lectures and completing the homework (the lateness policy is very lenient, though, so that ultimately wasn't that big of an issue). However, though the assignments were difficult, there was always a lot of help available to us. I felt that Campuswire especially was incredibly helpful since the instructors and TAs usually responded very quickly with detailed responses. Overall, though this is a difficult class for people without too much prior programming experience, the content was very rewarding to learn, and I felt that my programming skills improved a lot.",
        "I thought that this course could be very challenging at times, but also rewarding when we were able to complete the assignments.",
        "Overall pretty fun course. Pre\u2013recorded lectures are clear and easy to follow. If you don't have questions from the recorded lectures, you don't really need to go to the live classes. Homework assignments really ramp up at the end of the quarter but overall fun class. pretty standard c/c++ class. you have to code in emacs in the first few weeks of class which was really annoying.",
        "This class is a ton of work and the instruction isn't very helpful for the homeworks which take a ton of time. The TAs are super helpful and I definitely would've failed this class if it weren't for office hours but they're super overloaded and waiting for them to get to you can take 2 hours. This class made me rethink majoring in comp sci and coding is less fun now.",
        "I really enjoyed this course. Jesse and Branden did a great job of teaching. It was a pretty quick pace but I learned a lot.",
        "This course is okay. All of the homework assignments seem extremely difficult when you first start them, but as you get used to the specifications and what you're actually being asked to do, it gets so much easier. They do take a lot of time though. It is IMPERATIVE that students start them and the final project ASAP. There were some points where I felt so lost and confused, but I always got over it. It's really important to ask for help if something is just not clicking. I think if you're genuinely interested in CS and also did fine in previous CS classes, you'll do fine in this course.",
        "This is a tough class, and it didn't need to be anywhere near as challenging as it was. Assignments weren't explained very well at all, and this was mainly why it was so hard. The PDFs provided felt like scavenger hunts, and were pretty unclear. Thank god for the peer mentors in this course, they saved me.",
        "I enjoyed this class. I learned mostly through doing the labs and homework assignments, I would say the lectures were not very helpful and can be quite confusing... I watched them in the beginning and then realized there wasn't much point so I stopped. Also the class time, the \"Q&A sessions\" were not helpful either. The homework can be challenging and take a good amount of time, so start early. The nice thing is only 1% is taken off for each late day, so not a big deal at all, working code is more important than being on time. Go to office hours, the peer mentors are super helpful. They do get busy close to deadlines, so again start your hw early! Work with a partner too, it's super nice to have another mind for problem\u2013solving. I think it's super smart that they got rid of tests for remote, I feel like tests for cs are stupid in the first place. Also use campuswire, it is so nice to be able to ask questions and see other answers that might help you out as well.",
        "This is a difficult course, but not as bad as some make it out to be. Try and find a good partner, because most of the homeworks can be done with a partner. As long as you mostly understand the lectures, you should be able to do the homework, although 2 out of the 6 are pretty difficult. The TAs are very helpful if you're stuck and give good feedback.",
        "This class was very difficult and moved very fast."
    ]
}{
    "course_code": "Student Report for COMP_SCI_211-0_20",
    "course_name": "Fundmtls of Computer Prog II",
    "instructor": "Branden Ghena",
    "year": "2021",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.07",
        "count": "96"
    },
    "course_rating": {
        "mean": "4.32",
        "count": "99"
    },
    "comments": [
        "This class is hard \u2013\u2013 no way around that \u2013\u2013 but you can definitely get through it. Unfortunately though, a lot of the time it felt almost self\u2013taught. Jesse is incredibly smart, and often showed us some cool things in both C and C++ that we could do. However, it often felt like he almost forgot that most of the class was seeing this stuff for the first time, and went incredibly quickly \u2013\u2013 too quickly to actually learn. By the end, the class periods weren't even really helpful to go to, because anything in the homework we more or less needed to figure out on our own. Branden sometimes seemed a little more \"with it\" and understood what level of programmers we were at. All of that being said, both Jesse and Branden were really nice and super helpful with the MANY questions asked in office hours or on campuswire. Don't be scared to take this class, but definitely be ready for it. Be ready to spend many hours on all of the homeworks, but especially HW4 and HW6.",
        "This class was definitely very challenging, but I think it was challenging in a good way. Yes, the assignments were very long and took up half of my week, but the difficult nature of these assignments is what allowed me to learn so much about programming and made me a lot more confident as a program. If you are thinking about taking this class, don't let the fact that Jesse is teaching it scare you. If you put in the work every week you will get a lot out of it. That being said, office hours are super helpful, especially Jesse's as he knows a lot about programming and is the most familiar with assignments that are given. Also, definitely get a partner for all the assignments where a partner is allowed, even if you don't know anyone in the class (you can still go random). I went random and it worked out very well as my partner and I were constantly bouncing ideas off each other which made completing assignments a lot easier.",
        "The class definitely isn't easy, but it's not impossible. If you enjoy coding, the weekly homework won't be that bad either. Though, definitely go to office hours. The assignments do take a while to do but use OH if you're stuck rather than spending too long on the same thing.",
        "Reviewing the course: Jesse is a great prof and seems like a really nice guy. He was good about answering questions both during lecture and after. He always responded to my emails (though he's not one of those profs who will email you back in 5 minutes, so keep that in mind). We were sort of constantly slightly behind this quarter, but that's because of the whole 9 week thing, and Jesse did a good job accommodating for that by moving things around to make sure everybody had enough time to get a full understanding of the given topics. I kind of feel bad about how much I took advantage of the late policy, because ultimately it's a really good thing to have in place for students who work hard but are genuinely struggling. I'm glad this class works this way instead of being unnecessarily difficult.For students: You can do well in this class if you're willing to put in the effort, even if it feels like things aren't really clicking at first. The pointer vs. reference stuff can be confusing, as can the malloc and free stuff, so pay extra attention to those parts. I ended up reading extra about it online in order to fully \"get it,\" but you can also talk to Jesse/the TAs. The late policy is very forgiving, which helps, but it's still way better to have stuff in early because you can do early test runs on your code that help you raise your score. With the tests and help from Campuswire, you can significantly raise your grade on an assignment\u2013\u2013 it's always worth resubmitting and talking to Jesse/the TAs. Also, find a partner you like, because you'll end up spending many hours together. You don't NEED a partner, but if you're taking this course online, it's just... really nice to have someone to talk to.",
        "It was really hard but office hours were really helpful",
        "For the professors: Branden was great at more simply explaining some of the things that Jesse brought up. Overall, he was quite friendly and accessible. For some reason Jesse gets a bad rap in his CTECs, but I thought that his lecture videos were super helpful, and he was happy to help explain things if you didn't understand them. He's a little direct (not in a bad way) but don't be afraid to talk to him.Overall, I thought that this course did a good job of making you learn how to use C and C++ effectively; there's a bit of a learning jump when you switch from the former to the latter, but once you get over that syntactic difference it's not too hard to readapt. The labs and quizzes were super easy, and the written homework (most of which you can have a partner for) was definitely doable \u2013\u2013 just don't put them off until the last minute (they take hours) and absolutely go to OH if you need help. All of the TAs were super helpful and accessible. As for the final project, you essentially determine the difficulty yourself, so don't give yourself something too terrible and you should be fine. Same as the written, though, give yourself an excess of time \u2013\u2013 my partner and I were still working on it on the due date even after we'd given ourselves a lot of time, so I'd say better safe than sorry.The grading breakdown for this quarter was:What\t                Value\tWhen\t        CountHomework assignments\t65.0%\tTuesdays\t6Lab quizzes            \t5.0%\tSundays\t        8Final project prose\t4.5%\tThursdays\t3Final project code\t25.5%\tMarch 9th\t1I'm assuming this is subject to change, but it'll probably be similar in the future.",
        "This class is a big step up from 111. The homeworks are much harder, and C/C++ are just more difficult languages that do not baby you in any way. Working in a linux PC was also a huge pain use, but all of it will be useful later. Just be ready to experience a lot more errors. Luckily there was a very lenient late policy, without which the class would be nearly impossible.",
        "You have to take it. Too bad Jesse is leaving he will be missed!",
        "I loved this class! You will likely spend a LOT of time on the class (I probably spent 20+ hours a week on everything because of the lectures etc. and just spend a chunk of hours doing debugging etc), but it is SO FUN (if you like programming) and it does SUCH a good job immersing you in the language. I feel like I picked up so much C and C++ because they just immerse you in the language. Jesse and Branden are awesome professors, and the subject matter of the class is really interesting and fun. Some of the homework can get pretty hard at times, but if you're taking the class you're likely a CS major and enjoy debugging and programming. In which case you'll probably love the class. it's mostly just focused on practice through the homework\u2013 and lectures etc. and I feel like it is an AMAZING class. You don't need to have taken anything other than 111 beforehand\u2013 some hw is tricky but it's really fun too and it's definitely not super hard.",
        "Very interesting class \u2013 challenging at times, but fun. Beneficial to start on the homework early. Watching the prerecorded videos helped with understanding the concepts.",
        "This class is time\u2013consuming and definitely rough. Be prepared to spend a lot of time on homework. Lectures aren't always that helpful either.",
        "I enjoyed the course, despite it being pretty difficult. The professors are very helpful, and even though a lot of learning is done outside of class time, I appreciated the course.",
        "Challenging course, especially the first half. Programming in the terminal is a useful skill to learn, but a nightmare, very sharp learning curve for that and C in general. Once you get to C++, the course gets somewhat easier but definitely more interesting and engaging as you make games each week.",
        "No beating around the bush this class is very hard. If you would like to be intellectually challenged in a CS class, you find yourself in the right spot here. It is also a very forgiving class all things considered. You will learn most of your skills in the pre recorded lectures, and build upon those with practice and questions during class time. Assignments are also very forgiving with late credit, so if you need to take an extra day to turn a 90% to a 100% assignment, it would be in your best interest. Last thing: ASK FOR HELP. The most unwise thing to do, is to go at this class alone. You will need to go to office hours. Most assignments allow partners, take advantage of that. This class is hard enough as it is, there is no reason to make it worse on yourself.",
        "The course is challenging in the way of figuring out what is wanted from you in homeworks. The deciphering of what instructors meant in the PDF takes the biggest amount of time. Other than that, it is a straightforward programming class and does not pose any hard problems for one to solve. Another difficulty is that coming up with tests for your own programs is not easy. As always, the number of bugs you unintentionally make can increase the hours you spend on an assignment from 5 to infinity, so working with a partner is key for success in this class.",
        "Keep up with homeworks and lectures and you will find that it isn't as tough as most people say.",
        "The course was difficult, but I learned a significant amount of useful programming material",
        "This course definitely did help me strengthen my object\u2013oriented programming, but I think it was far too difficult for something considered to be a core course. I really wish we focused a lot more on C++ rather than spending over half of the quarter with C. The main hits to my grade were from self\u2013evaluations, where if you didn't predict which test cases would show up, even if you had perfect code, your assignment would score anywhere between an 80% to a 90%. I found that rather unfair. Other than that, the C++ portion of the class was good and I liked how we had a lot of flexibility to code whatever we wanted for the final project.",
        "Teachers were great; tov and Ghena were super flexible with me",
        "This class was honestly pretty hard, but not a bad class. 65% of your grade is six homework assignments, 30% is your final project, and 5% are kind of randomly scheduled lab quizzes. The homework assignments start decently easy (the first two), get hard (3), then get SUPER hard (4 and 6) with another pretty hard one (5). You do the first 4 in C, and like most of the class, it kinda feels like you have to teach yourself all of the material. 3 gets hard because you'll get endless errors, and 4 just feels nearly impossible. Then you make a seriously abrupt switch to C++, which is generally a more user\u2013friendly language, but you're taught nearly nothing about it. This makes homework 5 kind of tricky because your teaching yourself a new\u2013ish language, then homework 6 gets even harder just because of some hard algorithms you have to write and tricky UI implementation. The final project is essentially any game you want it to be. You have to tell them 10\u201312 things your game will do (functional requirements), and that counts for about 60% of your final project grade. Overall, the work load in this class is incredibly high and pretty tough. I turned in 4/6 assignments late, and 2 of them over a week late. THIS IS OKAY THOUGH!!!!Because Jesse and Branden are super understanding. This was what made the class manageable. Jesse and Branden are great and super helpful, even if sometimes live lectures got pretty in the weeds, they were mostly just office hours basically. The grading in this class is AMAZING! Every day your late is only 1% of your homework assignment, which lets you turn things in, see how well you do with the autograder, then resubmit as much as you want. There are also office hours every day with very helpful TAs. I think these aspects almost make up for the difficulty of the work.If you're taking this class it's probably not a question of if but when, so no one is probably reading this like oh wow maybe I'll take it now. I just appreciate details about classes so here you go",
        "Overall, I learned a lot from this class. Just make sure to start the homeworks early and go to tutoring hours whenever you need help with something.",
        "This class was pretty good! The course is difficult if you don't have any experience with C, and the assignments are tough, particularly a bit intimidating at the start with the console. Jesse Tov was a great professor, Branden Ghena was an alright professor.",
        "The course was hard but honestly learned a lot. I got behind for a few weeks which made the class a lot harder than it needed to be.",
        "I feel like I definitely learned a lot but this course was a lot of work. Finishing one assignment meant immediately having to start the next one. The late policy was very generous in order to ensure everyone learns. We had a lot of support from the professors and the TAs.",
        "The course was surprisingly hard to follow for an introductory level course. I do not think this is due to the content, but rather due to the teacher of the course being hard to follow. Most of what you learn will be through online forums and extra help rather than the teacher.",
        "yes",
        "This course is a ton of work and can be frustrating at times, but the TA's and professors are really knowledgeable and do everything they can to help you succeed and learn. Plus, the game\u2013making portion (the second half of the class) is fun too!I would advise anyone who takes this course to start early on their homework assignments and to take it on a quarter with a lighter coursework load, if at all possible. If you do those things, then you should be fine in this course.",
        "Honestly, this class just sucked the life out of me. Yeah... The profs try to make this class challenging but they did not have to do us like this. It is also demoralizing when you know other people are finished in a couple hours while you take days to finish the homeworks. Definitely go to TA office hours. I'd also say Jesse's office hours are better than Branden's, but take that with a grain of salt. The first half of the class is in C and the second half is in C++. There are videos to watch before lecture, but it got to the point I think most people stopped watching them. But at least watch until you cover the basics of C++. The profs used lectures to demonstrate principles covered in the videos. Only a third of class showed up as the quarter went on. I'm just saying it as it is. The hw's get harder as you go in my opinion. HW1 and 5 are individual. HW1 should not be hard. HW4 is the last homework in C and it's pretty difficult. Then you move on to C++ to make games. I'd say HW5 and HW6 were extremely difficult and wrecked my morale. Good thing is you only get 1% deduction for every day late. You have to guess which tests they'll ask in the self evaluations which was annoying. The final project you have to make a game from scratch \u2013\u2013 they don't give you anything. I'm pretty salty as I write this right now because the final project is just so time consuming. Part of it is probably that it's winter quarter and we're still online. The homeworks were hard enough idk why they feel the need to load us with a final project. This class just disregards the fact you have other classes. Get a good partner or AT LEAST a hard working one because you will be spending a lot of time working on this class. If I had to say one good thing about this class, it's that it makes you learn C and C++. You only have a couple weeks for both languages but the assignments make you understand the languages better and makes you better at programming. this class broke me and built me up as a programmer.TLDR big Spain without the S.",
        "Pretty challenging class, but in the best way possible. I think that the extremely lenient assignment due dates are sort of a curse in hiding; I found myself not prioritizing 211 assignments because I knew that it was fine if I submitted the assignments a few days late. I would highly suggest students treat the given due dates as hard due dates. Brendan is great at office hours and all the TAs are also phenomenal.",
        "If you had just came from cs 111 and thought you could do 211, you are in for a treat. I struggled so much it was painful. If I could go back I would take 150 and 214 beforehand so I would be more prepared. If you have a background in C or object oriented programming you can go from 111 to 211 but if you do not, you will struggle. It is a tough class and goes by quick. Tov and Ghena are great professors but if you fall back one week, you are in for a ride and painful, endless night. Do not overcomplicate your final project, when you can not finish it, it will hurt so much that you gave yourself something excruciating to do. Recommend to take this with other people to rely on help, going alone into it will be difficult and a lot of hours in office hours. Overall, the lectures felt overwhelming as we would have to watch 2 hours of lectures before class every other day.",
        "Though this class may be challenging, office hours are your greatest friend! Lecture recordings were always posted before class days, and class periods were usually spent as demo and Q&A times. There would also be coding labs to help you learn concepts, which would be followed by short quizzes. Half of the quarter was spent learning C, while the other half was C++, so if you feel like you are struggling at the beginning, know that it gets much better! My biggest piece of advice would be to try to start your homework as soon as possible so you can go into office hours when you have questions. The late work policy is extremely flexible, so do not feel overwhelmed if your tests are failing near the due date! Overall, despite the challenge, I feel like I have learned a lot in this course.",
        "Take this class virtual if you can. Office hours are SO helpful\u2013 the peer mentors are amazing.",
        "CS211 has a very steep learning curve if you have not been exposed to C/C++ before. The difficulty of assignments ramp up quite quickly and it is easy to get lost in the homework assignments. I would recommend taking advantage of office hours if possible. The course does require a lot of work and can be frustrating, but I do believe it is rewarding.",
        "I really appreciated how this course adapted for the virtual quarter, since most of the grade depended on homework. In this setup, it felt that the emphasis really was on our understanding the programming language and the concepts through working through the homework projects. Coming into this class, I didn't really have experience beyond programming single file code. I learned a lot regarding how to work with larger projects and seeing how the compiler interprets the code I write. Sometimes it was easy to forget that everyone in the class was a beginner to the concepts, but office hours with TAs/PMs and the professors were always very accessible. There was an environment very welcoming to questions and our learning.",
        "The class is very well taught.",
        "I felt the last couple of assignments were quite hard, but I learned a lot and I am appreciate the course challenging me intellectually as it did. I would perhaps cover a bit more of C++ fundamentals (where can we look for documentation, functions, classes,..)",
        "This class really isn't the best. The structure is a flipped classroom style where you watch lectures before class and then go to class and ask questions or for demos. The recorded lectures themselves from Jesse weren't the best. I never really showed up to the synchronous lecture and I did fine because the entire course is just coding homeworks. If you are coming into this class with a good understanding of C, you will probably breeze through this class just fine. If you don't know C coming into this class, the homeworks will be a little harder for you but overall manageable. Overall this class was just another requirement and the homeworks were mangeable for the most part.",
        "Big time commitment\u2013\u2013 homework can take many many hours, and going to office hours is basically necessary.",
        "Pretty good class",
        "The 1% late penalty is massively helpful \u2013 the course is demanding but being able to continue to work on the assignment after the deadline without a significant repercussion removes any incentive to cheat.",
        "This course is HARD. That being said, it's also awesome and super interesting. Jesse and Branden were awesome instructors. If you just want to know what you need to know to do work, the lectures may not seem that useful, but they were super interesting for doing deep dives into how things work. That being said, keeping up with live lectures, labs, pre\u2013recorded lectures, and homework can be a lot, especially virtual. Going to campuswire or office hours is pretty much necessary but very worth it. Also be sure to start the homework many days in advance so you have time to test and bugfix.",
        "Great course, just make sure to keep up with the work!",
        "Class is kinda hard, but still doable. Some of the latter hw's can get kinda hard so just start early and go to Office Hours when you get stuck. I found the synchronous aspect of the class not that useful? I feel like this class could've easily been asynchronous. At the end of this class you'll be pretty solid in C/C++ so that's a plus. If you don't know the ins and outs of C and how the GE211 library works, it can get tough, but at the end of the class you'll be pretty solid. Just try to stay on top of everything.",
        "This was one of the most challenging classes I have ever taken, but I really enjoyed it. The homework assignments were really difficult, but it was super rewarding when I finally figured them out. Jesse is a really great professor too.",
        "I learned the basics of software design using low level languages.",
        "Lectures are boring and barely help, especially later in the course. As the course went on, the lectures dwindled from having 110 people to 30 people. The course is paced nonsensically, however the professors know it, and have a chart of assignment difficulty, with one assignment being a 2/10 and another being an 11/10 (they did not exaggerate). The professor uses campuswire instead of canvas for everything, and has his own grading server that went down at least half a dozen times when assignments were due. However, late assignments are accepted for 1 percent reduction per day.",
        "TAKES SO MUCH TIME. Basically consisted of 14 hours a week trying to teach myself how to code. Also sometimes we would get up to 2\u20133 hours of prerecorded lecture, and they didn't teach during the actual lectures, because it was just a time for Q&A. Would not recommend to anyone not required to take this class.",
        "We built this snake game, pretty neat stuff!!!!!!!!!!",
        "This class is challenging and time consuming \u2013 the instructors will make that clear to you from the first lecture as they give a scale of each homework's difficulty at the very beginning. But even though they make it seem daunting, Jesse and Branden set up this course so you can succeed through all these difficulties, and they're understanding and great people themselves. This class's assignments are mostly partner\u2013based, so find a good partner and set up a good schedule and dedicate time and crank out each homework and GO TO OFFICE HOURS and you should be good. Also the course's late policy is super forgiving \u2013 only 1% off each day it's late, so you're encouraged to complete the homeworks thoroughly even if they're late. You can get super behind in everything and still end up ok, so stick through it and you'll come out on the other side. Heads up that for us the lectures were prerecorded :/, so if that's not your thing make sure you dedicate time to watching them each week",
        "I really enjoyed this course. You will learn almost everything by doing the homework assignments. By the end of the course, most people stopped going to the synchronous lectures, but that was a great time to ask questions and get help. Make sure that you work well with your partner and start homework assignments early. Professor Tov and Professor Ghena are both very enthusiastic and helpful teachers. If you start homework assignments early, you're able to get valuable help from them and the course staff \u2013\u2013 It is very non\u2013intimidating to ask questions in this class! The late policies are also extremely forgiving.",
        "The structure of the class was awful for me personally. I would wait hours for help from TAs/Peer Mentors and the environment of the class felt competitive which disincentivized asking for help. Especially after the anti\u2013cheating presentation that scared me from talking to anyone else. I would spend several days and hours each day trying to work through homeworks and keeping up with lectures and by mid\u2013quarter I was burnt out. Every night this quarter, I would dedicate myself just to the homework assignments from my last class at 6PM to midnight which also hindered my progress in other classes so do not take this class alongside other heavy courses. I would be regularly post on Campuswire and go to office hours. Class needs so much reformatting, especially for an online format to ensure students are not just keeping up but comfortable at the class's pace.",
        "This course will be very time\u2013consuming although there are chances to work with other people and TAs / professors will help you if you ask. The class will first cover C using a terminal and afterwards C++ using an IDE. For assignments, some code is already written for you which sometimes take awhile to understand. The assignments are difficult in the sense that the syntax of C/C++ will feel \"restrictive\" compared to syntax from like Java, Python, or Racket. Be prepared to spend several hours and days on each assignment however you can get help from TAs and the professors. However, the course will better help you understand the intricacies of computer science and you will have a chance to make games.",
        "I learned a great deal about programming in C and C++ in this class. It was very challenging but it was a mentally stimulating class all the same. Professor Tov and Professor Branden are very knowledge about what they do. They are also very passionate and you can often hear this as they talk in class. They are always willing to help out even outside office hours. This class is by no means easy. It will stress you out most times especially when you run into bugs into your code that you can't quite solve. Always make a point of going to office hours if you do. The professors are extremely helpful. Also, find a great partner to work on assignments and the final project with. They will make or break you.Overall, this is the best class I've taken at Northwestern so far. We did pretty cool stuff, like make games in C++ during the second half of the quarter.",
        "Overall, the course had a lot of homework. The assignments took a lot of time, but if you don't procrastinate, then the class is very doable.",
        "Although the quality of the instruction varies from different professors, I did enjoy the course materials. People trash on C/++ stuff a lot, but to be honest, it is a fun class after the start, and I enjoyed implementing the games. Using Linux, terminal, and GCC are essential skills, and I appreciate the opportunity to get familiar with them.",
        "Especially with the shortened quarter this year, I found this course to be pretty stressful and hard to balance with my other courses. At least for me, it often felt like there wasn't enough time to stay on top of watching the prerecorded lectures and completing the homework (the lateness policy is very lenient, though, so that ultimately wasn't that big of an issue). However, though the assignments were difficult, there was always a lot of help available to us. I felt that Campuswire especially was incredibly helpful since the instructors and TAs usually responded very quickly with detailed responses. Overall, though this is a difficult class for people without too much prior programming experience, the content was very rewarding to learn, and I felt that my programming skills improved a lot.",
        "I thought that this course could be very challenging at times, but also rewarding when we were able to complete the assignments.",
        "Overall pretty fun course. Pre\u2013recorded lectures are clear and easy to follow. If you don't have questions from the recorded lectures, you don't really need to go to the live classes. Homework assignments really ramp up at the end of the quarter but overall fun class. pretty standard c/c++ class. you have to code in emacs in the first few weeks of class which was really annoying.",
        "This class is a ton of work and the instruction isn't very helpful for the homeworks which take a ton of time. The TAs are super helpful and I definitely would've failed this class if it weren't for office hours but they're super overloaded and waiting for them to get to you can take 2 hours. This class made me rethink majoring in comp sci and coding is less fun now.",
        "I really enjoyed this course. Jesse and Branden did a great job of teaching. It was a pretty quick pace but I learned a lot.",
        "This course is okay. All of the homework assignments seem extremely difficult when you first start them, but as you get used to the specifications and what you're actually being asked to do, it gets so much easier. They do take a lot of time though. It is IMPERATIVE that students start them and the final project ASAP. There were some points where I felt so lost and confused, but I always got over it. It's really important to ask for help if something is just not clicking. I think if you're genuinely interested in CS and also did fine in previous CS classes, you'll do fine in this course.",
        "This is a tough class, and it didn't need to be anywhere near as challenging as it was. Assignments weren't explained very well at all, and this was mainly why it was so hard. The PDFs provided felt like scavenger hunts, and were pretty unclear. Thank god for the peer mentors in this course, they saved me.",
        "I enjoyed this class. I learned mostly through doing the labs and homework assignments, I would say the lectures were not very helpful and can be quite confusing... I watched them in the beginning and then realized there wasn't much point so I stopped. Also the class time, the \"Q&A sessions\" were not helpful either. The homework can be challenging and take a good amount of time, so start early. The nice thing is only 1% is taken off for each late day, so not a big deal at all, working code is more important than being on time. Go to office hours, the peer mentors are super helpful. They do get busy close to deadlines, so again start your hw early! Work with a partner too, it's super nice to have another mind for problem\u2013solving. I think it's super smart that they got rid of tests for remote, I feel like tests for cs are stupid in the first place. Also use campuswire, it is so nice to be able to ask questions and see other answers that might help you out as well.",
        "This is a difficult course, but not as bad as some make it out to be. Try and find a good partner, because most of the homeworks can be done with a partner. As long as you mostly understand the lectures, you should be able to do the homework, although 2 out of the 6 are pretty difficult. The TAs are very helpful if you're stuck and give good feedback.",
        "This class was very difficult and moved very fast.",
        "This is a hard class, both in terms of content and workload (Taking this class feels just as if you are taking 1.5 classes). Homework assignments are a big part of this class, you learn mostly from struggling on your assignments, not lectures. You would probably expect yourself to spend a long time trying to make sense of how the homework program works. If you got stuck on it, ask the TA during office hours. The TAs are pretty helpful. Asking them is faster than working on it alone."
    ]
}{
    "course_code": "Student Report for COMP_SCI_211-0_1",
    "course_name": "Fundmtls of Computer Prog II",
    "instructor": "Branden Ghena",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.28",
        "count": "116"
    },
    "course_rating": {
        "mean": "4.96",
        "count": "119"
    },
    "comments": [
        "This class is definitely a step up from 111 and 150, but it is a good class to take. Homeworks were challenging but fair. Quizzes are definitely very hard so make sure you study for them. Branden is a great professor though and you can tell he really cares about his students. Overall it is a good class and I feel like I learned a lot from this class.",
        "Pretty good class. Assignments aren't that bad and you can submit as many times as you want",
        "Branden is an incredible teacher and I had a great time learning from him this quarter. He's great at conveying the content on a level that everyone, no matter their coding proficiency/background, can understand. This class will challenge you most through the homework, so start them early and go to office hours early in the week (or long before the assignment is due). Office hours tend to fill up and wait times increase as the deadline approaches. The homeworks themselves are actually pretty interesting, and if you (are able to) pick your final project carefully, the final can be fun. There's a substantial time commitment for this class, so be ready to spend a while on the assignments if you're like me (not a coding god).",
        "This class was definitely a class to weed out people. I was one of those people who got weeded out. This was a very difficult course that I would put a lot of time and effort into getting the assignments done. I would never put myself through this course again because it was purely horrible.",
        "The class taught c/c++ and had homework assignments in both languages. Hold out to the second half of the quarter because the c++ assignments are really rewarding\u2013\u2013 you build playable games. You should definitely review for the quizzes since there are only 4 so they cover a couple weeks worth of material but going to class and doing the homework effectively teaches the material.",
        "While the programming assignments are not the most difficult, if you're new to programming it can take time and be a little frustrating. That said, Branden is a great instructor who explains the concepts very well and does programming demos to show an example of code implementations. I also appreciate the huge amount of office hours there are, while it can take a really long time to get help, it at least gives you the option of getting help whenever. Also, working with a partner on the assignments is a huge plus since that way it takes up way less time.",
        "The class was definitely a lot of work, but I genuinely enjoy coding so it was honestly kind of fun as long as you don't procrastinate (if you do, you will definitely be stressed). There are no exams for this course, so I personally found that it is a lot easier to get a good grade in this course than in other CS courses that have exams. There are occasional lab assignments that take no more than an hour maximum to complete and are extremely easy, and there are weekly coding homework assignments that are definitely way more time consuming. A lot of the homework assignments can be done with a partner, and some are more difficult and time consuming than others. The office hours are so amazingly helpful, and I attend multiple sessions weekly. The PMs are all super competent and will help with any problems with your code, so I cannot recommend taking advantage of office hours enough. To summarize: the course is really helpful for learning C and C++, and although the assignments can be time consuming, if you pace yourself and use the resources provided you will likely do well.",
        "I left this course very satisfied with the assignments and projects I had completed, and I think the course did a good job of challenging me intellectually while also not wasting my time with pointless assignments or tasks.",
        "Do not take this course if you do not plan on doing the CS Major. This is a huge undertaking but overall the course is very informative. Prof. Ghena is brilliant and will allow for immersive learning in C and C++. Expect to work at least 20 hours a week outside of class for the homework assignments and do not give up! Everyone does well in the course as long as they don't throw in the towel.",
        "This course definitely had a steep learning curve in the beginning but after the move from C to C++, I started to get the hang of it. The difficulty of earlier homeworks makes it hard to enjoy but once you get in the habit of it, by the final project I had fun programming my board game.",
        "Very good. Fair grading, and very chill class. Try to start homeworks 4,5,6, and the final project early. Ghena is a wonderful professor.",
        "CS211 is a great class, especially with Branden! The only thing I would say that could be improved is that the homeworks/projects seemed to be a lot of like self\u2013learning and wasn't really related to the material in class.",
        "Ghena is by far the best prof you'll get for 211. His slides are amazing and he cares a lot about teaching. 211 is definitely a class you'll have to dedicate quite some time for but it is very useful for future CS classes as this is the intro to low\u2013level programming and big projects.",
        "Rely on office hours with PMs for homework assistance. Branden was extremely unhelpful even during in\u2013person office hours and never gave more than an extremely vague comment.",
        "This class is very difficult. Do not take this class unless you are a CS minor. I am dropping my minor after taking it. Projects are really difficult.",
        "Be prepared to dedicate time to this class! The difficulty peaks at week four (my partner and I unfortunately worked on that assignment for about 24 hours that week), but it doesn't get much easier from there. You will feel very comfortable coding in C and C++ by the time you are done with this class, which is great. Branden is a super kind professor and the TA's are amazing. Take advantage of office hours. For quizzes, I studied for all of them but I think I would have done the same on them if I didn't study because it is based on general understanding and syntax so if you're understanding the homework assignments, you should be fine (they quizzes were not necessarily easy for me though). I took this class after 214 and it was nice having data structures under my belt because went over linked lists and vectors but you'll be fine if you haven't yet taken 214. Also, the homework pdfs provided really great guidance. I was intimidated by the CTECs coming into this class, but it was not as bad as the CTECS made it out to be and you will be fine. The class is really rewarding in the end!!",
        "This course was amazingly well designed and I learned an immense amount but not in an overwhelming way. I will say, the lectures were on the lengthier side and you kind of just tuned out after a certain point but because the lecture material was so good and everything was recorded, it was easy to refer back to. As a first\u2013generation low\u2013income student I applaud the professor for making the course approachable to people who have never touched or seen C/C++. We had the opportunity to work in partners for 4/6 of the homework assignments as well as the final project. We had quizzes which were small assessments of what we had learned and for the most part they were fair but at the same time coding quizzes without resources allowed does not make much sense in the real world. It was definitely a difficult course but office hours and all the resources the professor Ghena gives are plenty to make it through the course. All the lectures were also recorded (which I hope continues in the future) making it easy to refer back to them. I do wish we covered more towards the end of the course on implementation of the things we learned (such as use of smart pointers, polymorphism, inheritance and whatnot) but I do understand time is limited. Another concept we did not cover at all was that of composition (which I learned about while doing the final project) and maybe that could be mentioned as well. Overall though, amazing course that is not overwhelming as is (and hope it does not become so).The course was graded as follows: 60% homework, 5% labs, 10% quizzes (4 of them), 25% final project.",
        "Homeworks 5 and 6 and the final project were good because they were the first chance I've had in my coursework to work on a 'real' thing instead of something that only makes sense as a homework.",
        "Homeworks can be time consuming. Just work with someone you trust. If I can get an A, so can you! Very good course.",
        "This course is very well set up. The homeworks can be difficult, but they teach you a lot. A lot of varying material is covered in this class, but starting early on homework helps a lot.",
        "Prof Ghena is a great professor. His lectures are super interesting to listen to and he teaches a lot of material in one lecture. Sometimes it seemed overwhelming, but recorded lectures let me go back and take notes again.",
        "The homeworks for this course are definitely quite challenging, but are really good practice for learning C and C++. Professor Ghena is also a fantastic teacher and makes lectures very engaging. The one gripe I have about this course are the self\u2013evaluations, they ask for very niche test cases that are pretty annoying so make sure you think about all the edge cases.",
        "I think this class was challenging but in a good way in that it really helped me grasp the content. However, one aspect of the way the course was run that could use improvement is the office hours. Generally, I would have to wait at least an hour to be helped in office hours. This was honestly pretty stressful and I would have to spend entire days waiting for help on a tough project. I think this is in part due to a high demand in OH but also due to the fact that TAs will spend 30+ minutes with a single group. When you do get help, the instructors are helpful, but this class is pretty time consuming and can be stressful.",
        "P standard CS Major required course. Not as bad as some people made it seem. Most projects can be completed with a good 1\u20132 days of grind. When you have a good partner, life is a lot easier. Final project was p tough but you can choose what you code so can def make it easy if you want to.",
        "Lecture was irrelevant",
        "This course is nowhere near as difficult as people say it is. The most important thing is to have a good partner for the coding assignments. They are fair even though they do require a lot of time spent coding and in office hours. I'd say my partner and I spent a few hours most nights from Sunday to Wednesday/Thursday working on the assignments, and some time during the day in office hours. Brandon isn't my favorite \u2013 he's a great speaker, but he isn't very approachable. I stayed after class once or twice to ask a question and he answered it as if it was obvious and I was dumb for not realizing it. Also, as more and more class time was spent on live coding demos, I paid attention less and less. They are pretty hard to follow. The material itself isn't very hard but it's a little bit hard to understand how it is implemented when we aren't using a lot of the abstract concepts in our assignments. Most of the quizzes were also fairly easy. Overall, this class isn't super hard but does require a substantial time commitment. I took it at the same time as taking cs 214, which I was cautioned against by my advisor, but I had no issue taking them concurrently. If anything, the data structures we learned about in 214 were helpful for 211.",
        "This course is time\u2013consuming but doable. Start the homeworks early enough, give yourself time to go to office hours, and it comes together eventually. I am not a CS major and just taking this for funsies, and I definitely think I grew as a programmer, so I'd say worth it if you're undecided! Just again, know that it takes some time.",
        "This class was definitely hard, but I feel like it was the subject matter rather than the course itself. Additionally, someone was always available to help. I also think the lectures were formatted well, with frequent examples to go along with the concepts we were learning.",
        "This class was tough. There are projects due weekly. I think that this course kind of throws you into C++. The introductory assignments(labs) were really easy, but the projects themselves were so much harder and I felt very lost navigating the first few assignments for each language that we did. Obviously the class is big so the professor moved kind of fast, which meant that rewatching lectures was a big resource.",
        "Really impactful course. Pretty challenging to learn C, but the material is taught well, and the professor does a good job breaking down material",
        "This course will take up a majority of your time during the week. Especially hw 4 and the final project. Make sure you choose a good partner as that will contribute to how long it takes to complete programs. The final project wasn't too bad but I wish it was due finals week instead of reading week so that we could actually enjoy our thanksgiving break and to have enough OH time to get help and actually complete the project.",
        "Class a lot of work, but it was not that difficult. A lot easier if you have a good partner. Brenden really nice. Online office hours were kind of a mess though. Quizzes were hard, but they weren't a big part of your grade.",
        "Course could\u2019ve been good if Branden didn\u2019t ruin it for the students.",
        "Prior to taking this class, I was honestly scared of it because everyone made it sound horrible. My biggest piece of advice is to not be scared of this class, but to be ready for it. I spent ~13 hours per week on the assignment and I would start on them the day they were released. If you pay attention in class and go to office hours often, you will also be fine in this class. Be prepared to put in a lot of work for HW4 and HW6, but all of the assignments are more than doable.",
        "Lectures were well\u2013organized, funny hidden references were made in lecture, and the homeworks were just the right difficulty. I had a great time in CS211! Take this class with Professor Ghena \u2014 he's an amazing professor!",
        "I liked how the class was organized, and the projects were directly related to what we were learning.",
        "Class is not that terrible but make sure you have a useful partner. C is a real pain but you just have to struggle through it. Start the assignments early because office hours for homework 4 fill up very quickly.",
        "Was a great intro to C and C++",
        "The course provides a basic focus in c++ programming starting from the basics and ending with the advanced. The course was very helpful overall.",
        "there was easy access to office hours and guided homeworks",
        "211 is really intimidating and pretty hard if you don't have a lot of previous experience with c or c++ but the instructor and especially the TAs are super super helpful. I went to at least two office hours every week because I barely had previous coding experience and they were all really nice.",
        "This course was great as taught by Professor Ghena! Sometimes there was a bit of an offset between content covered by the lectures and a given homework assignment for a given week, but not too bad overall. The in\u2013person quizzes can be particularly difficult even if you look through the notes and keep up with the HW.",
        "Great course, super manageable if you just keep up with the work and go to OH",
        "Homeworks were difficult to get started on, but weren't bad overall. Labs were very easy. Honestly more labs would've been useful to get more exposure to some syntax and concepts before starting homeworks.",
        "A good class. Prof. Ghena was an amazing lecturer. The assignments were quite fun and the course staff were always willing to help. Definitely start the assignments early. If not for tedious bugs here and there, the assignments aren't hard at all if you have enough time.",
        "Really good course. I learned a lot and was comfortable doing the homework assignments. Go to OH and TRY to start the hw early. Professor Ghena is a great teacher and is the best at answering any questions you have. I took cs214 last spring and now cs211 and I think that it's better to do 214 before 211.",
        "I think this course is super useful for your overall competency as a programmer. First of all, getting to know the terminal is a valuable life/career skill. Second, C teaches you a lot about how memory in your computer works, and what we need to do in our code to prevent memory\u2013related bugs, crashes, and even security vulnerabilities! I liked that we did homeworks with partners. Get yourself a good partner to work with!",
        "As the last CS course that teaches you general programming, I found this to be the most engaging and rewarding to complete. Take this with Branden if you have the chance, his lectures are super easy to follow and the class structure makes reaching out when you are struggling a breeze.",
        "the assignments are challenging and the material is hard to absorb, but you learn a lot in the class and prof. Ghena is an excellent instructor.",
        "People greatly exaggerate the difficulty of this course. Make sure to pick a good partner cause mine made me want to yeet myself off mudd",
        "This course was really helpful in providing foundational knowledge for computer science. Also Brandon is a really awesome professor, I HIGHLY recommend taking a class with him.",
        "Definitely a challenging class. Sometimes the projects can be frustrating. Finding a good partner and starting the assignments early is really important. Also, GO TO OFFICE HOURS AND TEST YOUR CODE THOROUGHLY. If you're able to do all of these things, you should be able to succeed.",
        "I had prior experience, so this was my first (cs) course here and if you are able to get out of taking 111 and 150, I advise you to do the same. Course staff were nice to have but not the best choice to rely on, except for one legit goat who recorded a tutorial for every advanced homework assignment. Thank you; you know who you are.",
        "The homeworks provide students the opportunity to learn c and c++.",
        "This course is interesting, and Branden did a great job! If you have a good partner and make an effort to start early, you'll be able to enjoy and learn a lot from the course. All the best, don't sweat it. You'll be fine!",
        "C and C++ programming.",
        "This class is difficult but incredibly interesting. It does a really good job of explaining basic C and C++ concepts especially memory management.",
        "This class is definitely hard, but it's interesting. It's a lot of work, especially if you don't have a good partner, and can take up hours of your time.  Use office hours, they're the most useful part of this class. The PMs are really great at helping with debugging and are really patient. Some of the lecture material didn't really align with the class material, but it was fine anyway. Make the final project spec as easy as possible for yourself. You're essentially creating your own rubric.",
        "This class is hard. No way around that. C is a picky language, but you can get through it.",
        "To be honest, I don't think that this course was nearly as difficult as I expected. I came into the class with object\u2013oriented programming experience with Java and Python, so I was familiar with the OOP side of C/C++. The only topic that I had a bit of difficulty with was pointers/memory management in C, but I found it relatively easy to pick it up. My biggest complaint is that I really disliked that the class switched from C to C++ near the end of the quarter. It felt like I didn't get enough practice/experience with either language to do anything useful with it.I found the homework to be slightly time consuming at times, but for the most part, the instructions practically laid out exactly what you had to do. The homework felt more like translating written instructions into code rather than traditional coding assignments.Overall, I thought the course could be more challenging, but I enjoyed it and learned a good amount that I didn't know before. Brendan and the PM's and TA's did a great job teaching the course. They were all incredibly helpful and responsive to questions.",
        "The course is difficult, but if you use office hours and start early, it will be very manageable.",
        "This course is not easy, but it is manageable. If you've taken CS214 before this class, you'll probably find that the homeworks are of a similar level of difficulty and time consumption. I was not a fan of the four quizzes we were given, as they varied wildly in level of difficulty and you never really knew what to expect. With all that being said, Branden is a good lecturer and I suggest taking this class with him if you can.",
        "Professor Ghena is a very good professor and really cares about his students. The content was not really difficult, but the assignments were very time consuming and required a lot of help.",
        "This course was not easy for me. The jump from 150 to 211 is a huge jump conceptually, but that also made the class very interesting. I had never dealt with memory, command line, or C before this class, and I feel like this class did a decent job at introducing these concepts. The assignments take a long time, but they were mostly fun and felt meaningful to the overall course objectives. My complaints about this class are that the assignment guides sometimes don\u2019t cover everything, and so that lead to me getting lost quite a few times, but office hours is always helpful. My other complaint is the written quizzes, just felt like they were not very useful for this course. Overall, I think this class is pretty decent, it can get difficult, but that\u2019s what office hours are for."
    ]
}{
    "course_code": "Student Report for EECS_211-0_20",
    "course_name": "Fundmtls of Computer Prog II",
    "instructor": "Sara Owsley",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.75",
        "count": "200"
    },
    "course_rating": {
        "mean": "5.37",
        "count": "199"
    },
    "comments": [
        "As always, Sara Sood is a phenomenal teacher. There was a lot more to digest in this course than in EECS 111, even having the same teacher. Lecture is a great starting point, but it really took going to office hours and doing the assignments for me to fully understand the concepts we were discussing, especially in the second half of the quarter.  The exams are far harder than the assignment, but if you study hard and take advantage of all the resources built into this class, you will do just fine.",
        "Sara is a fantastic teacher. She teaches in a very clear way and is always happy to provide help and answer questions. This class provides an appropriate level of challenge for the material it is covering.",
        "Aside from the fact that I had trouble staying awake, the class is alright. Sara lectures really well and provides excellent resources and examples. The homework assignments just took way too long and generally were a headache to complete.",
        "I am proud of the fundamentals of programming I was able to absorb through the course. However, I think the class could be designed better so that there is more weight on the assignments since writing programs is what actually develops the students programming skills rather than writing code in proper syntax on a piece of paper during written exams.Exams would much better gauge students' ability to code if they were done on an online IDE platform where students aren't allowed to open any other webpage.",
        "The first couple of assignments were not engaging and did not teach much outside of syntax. The assignments as a whole were less intellectually stimulating than those in EECS 111. The lectures were pretty good. Some of the examples need revamping to be at the level that the examples in the review lecture were.",
        "211 is a class that has a bad reputation, but is really quite wonderful given the professor. Sarah Sood is an absolute joy to learn from and I walked away from every lecture with a level of understanding that I did not expect. The exercises were difficult but within reason and it truly felt like the material was made accessible.",
        "This was one of my favorite courses that I have taken at northwestern. I found the material stimulating, the workload very manageable and the teaching outstanding. Sara puts a ton of effort into what she does and posts a ton of slides and examples which are great to study. The weekly homework are not that difficult and help you understand material much better. Exams are a little annoying in how the small details impact your scores but otherwise a great class",
        "Great class, definitely take it with Sara. Ton of help is given on assignments, so basically everyone gets 100% on them. Exams are more difficult, but definitely manageable.",
        "this is a great course. as someone whose only coding experience was 211, I found this to be pretty challenging. I went to office hours weekly for help on the assignments, but the TAs were always extremely useful. Sara is awesome. the book is also a good resource if you find the class to be moving too fast, especially in the beginning.",
        "Assignments get harder near the end of the quarter, but any prior coding knowledge is beneficial.",
        "As a person with experience, I thought the stuff I already know was easy, but the stuff I have not got over was interesting and did provide a challenge.",
        "Sara is one of the few professors in the CS department that I consider approachable, so naturally, she is very relatable and understandable when she lectures. I always went to lecture because I knew Sara would make it worthwhile.",
        "YET ANOTHER AMAZING course with Sara. Assignments are fairly straightforward, peer OHs are an absolute gem for getting help and debugging. Tests are fair and resemble the practice test. Really making me consider a CS minor. Grade breakdown: 40% Homework Assignments (8 total, weekly), 30% Midterm 1, and 30% Midterm 2.",
        "Great CS class especially with Sara. The course content is presented in a very logical way and an order that makes sense. You will have an easy time if you have coded before and even if you haven\u2019t the concepts and topics arent hard to understand if you put in the time to study",
        "Sara is awesome as always and would definitely recommend taking it with her. If you've coded in C++ or Java before, you'll find the class a lot easier than someone who's only background experience is Racket in 111, but its still not a cakewalk even with a ton of previous coding.",
        "Take this course with Sara. She is excellent at explaining concepts in different ways and providing examples until everyone understands. C++ is much more complex than what is delved into for high school courses; the playing field was leveled by week 3 when prior programming experience became less relevant.",
        "The use of C++ instead of racket makes the course feel much more applicable, and the work load wasn't as bad as it was made out to be",
        "Sara is possibly the best professor at Northwestern. She presents the information in an interesting way and makes sure every one understands the details. She truly wants every single student to succeed in the class.",
        "Take this class with Sara! She is the best. I personally found this class a lot better than EECS 111 (which I also took with her) mostly because Racket is terrible and there are more applicable uses in C/C++. The assignments are 40% and both exams are 30%, so you can still get an A in the course even if you don't do super well on the tests. The codes are easy if you have a good understanding of the material, but I would suggest just going to peer mentor hours and doing them there. Overall, pretty easy A and take it with Sara!",
        "The class was great, and I feel like I definitely learned a lot more than in EECS 111. One thing I will note is the fact that the homework \"estimated time\" is definitely inaccurate, as I definitely never took more than 4 hours to do any of the assignments.",
        "sara is such a great professor and will answer all of your questions. exams are hard but fair. assignments are very doable and she always has peer mentors available to help you. TAKE THIS CLASS WITH SARA!",
        "This is a more difficult class than 111. Taking it with Ian or Sara is advisable. If you have previous experience with computer programming, then you may not find this class very difficult. The assignments make you think, but are not overly difficult. Sara is also an amazing teacher and will be glad to help you if you go to office hours.",
        "TAKE THIS CLASS WITH SARA! She is fantastic. Also utilize the peer mentors; they are also great!",
        "much more helpful class than 111, Sara is great",
        "This class was challenging but manageable with the help of the peer mentors who guided me through all the assignments when the lectures sometimes left me confused. EECS 211 is a big step up from EECS 111 because Sara moves a lot faster and sometimes explains concepts vaguely and quickly. I had only taken EECS 111 as my only computer science exposure and I would not have been able to handle this class without the peer mentors",
        "This is an outstanding course for anyone looking to experience intermediate programming. It is much more applicable to real life than EECS 111 where we learned Racket.",
        "Easy + low time commitment class. Sara's really friendly.",
        "Great course to take with Sara! Very solid lectures and explanations of new topics. Some of the hw assignments can get complicated, but she is great about laying out all the steps for you.",
        "Course is very well\u2013run/taught. Assignments reflect the previous week's concepts, while still requiring additional problem\u2013solving to make sure you know the concepts beyond syntax memorization. Lectures are thorough\u2013\u2013information\u2013dense without going too fast. Overall good class, and Sara is a really good lecturer.",
        "C++ kinda sucks. Sara is wonderful. Be sure to prepare yourself for the end of the quarter when assignments REALLY start taking a lot longer to finish",
        "Enjoyed this class. Not too bad. Sara was good.",
        "This is definitely gonna be said a lot, but take anything you can with Sara. She is enthusiastic about teaching and very clear in her communication. As for 211 specifically, definitely helps if you did Java.",
        "Sara is a wonderful teacher. I learned a lot more on this class than with Jesse Tov.",
        "EECS 211 was really useful and much preferable to 111. If you took 111 and felt a little disengaged, 211 will be better because the C++ language is more useful/applicable, and it dives into more serious programming/CS concepts like pointers and inheritance. The exams are more difficult than 111, but still not that bad. The assignments are substantial (especially the last 4 or 5 of the 8) and some took 10+ hours of work. Pay attention during lecture and think through each example. Sara is an excellent professor and has deserved all the praise and teaching awards she receives.",
        "As always, Sara is legitimately the best. Hands down take 211 with her. The class has tons of support and makes CS a lot less scary than it seems. Tests are basically class notes/practice tests.",
        "Sara does a really great job of explaining all concepts and going over relevant examples. Lectures are super useful and she does her best to keep the class engaged! Material and homework gets significantly harder in the last third of the course but peer mentor hours are super useful.",
        "I learned a lot and would recommend it to another.",
        "The assignments were a good difficulty level I'd definitely recommend taking this course with Sara over Jesse.",
        "Sarah is a great lecturer and very approachable. The assignments were decently hard, but there were a plethora of office hours to help with any issues. For me, the tests were tough, but other students thought they were easy.",
        "Good class, take it with sara, she's a gem. Not bad at all, assignments are all straightforward and not hard at all",
        "Definitely take this class with Sara! She provides examples on canvas before so you can easily follow along during lecture. The assignments can take a long time and can get frustrating, but none were too bad.  If you get stuck, definitely go to peer mentor hours!!! There are so many office hours everyday and the peer mentors are great resources. Overall great professor and good class.",
        "I loved this class. Interesting assignments, Sara is amazing, and I found the class easy.",
        "About the same level of difficulty (and same format) as 111. There's less guidance given, but Sarah and the peer mentors are still really helpful resources.",
        "sarah is amazing",
        "Straightfoward, fun class to get a good grip on programming in C++",
        "I enjoyed learning C++ and the important fundamentals of computer science. Exams were pretty difficult but if you study the material and understand everything well, it is going to be fine.",
        "Sara is great!! She's really understanding and good at explaining complicated topics. Definitely take 211 with her!",
        "Definitely enjoyed taking it with Sara, the assignments get tough at the end but office hours are helpful and overall a manageable class if you put work in.",
        "We focused on the most important parts of C++ like classes, linked lists etc. C++ is a moderately difficult language, which makes the class an ideal starting point. Sara is a great professor. From what I've heard from others, taking 211 with Sara is the correct decision. The other professors apparently make the class way harder than it is supposed to be.",
        "This is very helpful in learning how to code in c++. It is pretty easy in the beginning but towards the end it can get a bit more difficult. It is still very manageable though, especially if you take advantage of office hours. You will learn a lot from this course.",
        "Sara is an AMAZING  teacher and all the peer mentors are so so helpful. This class is great it is not too hard but you still have to think deeply and learn a lot. Going to office hours is super helpful and going along with the examples in class is also great. This was my second time coding (after 111) and it is so much better. TAKE IT WITH SARA!!!",
        "Taking 211 with Sara is a rewarding experience. Certainly a step up from 211, but Sara is such a guide through it all. The homework can be challenging, but it can help make you a better programmer if done correctly. Try debugging on your own before asking, it is a great skill to develop. There's a lot more going on in the exams but they're plenty fair.",
        "Liked it better than 111",
        "Take this class with sara!!! Its a fine class, some assignments are kind of long but if you go to office hours you can finish in one third of the time",
        "Sara is awesome, makes the class make a lot of sense. You learn a lot without being stressed about work loads.",
        "Sarah is probably the best professor I have had so far at this school. Take this course with her. It is not an easy course. It starts off fine and week 6\u20138 assignments are the hardest assignments I have ever had, taking well over 10 hours in total. But they teach you so much, and this class is well worth it. There was a lot of cramming of assignments followed by exams which was a bit hard to balance.",
        "So this class was not a terribly difficult course as Sara was teaching it. I took the course with Professor Jesse Tov and by week two I dropped. This wasn't really because Jesse was a bad teacher and Sara was much better but instead because Sara's content was not as difficult as Jesse's was. You won't have to put that much time into the course which is good if you are taking this with a rough schedule",
        "First half of this class is review for anyone who took AP CS in high school. The second half is new and moves quickly but is very manageable. Sara is fantastic and very helpful. The assignments get more time consuming as the quarter goes on, so just start early. There are tons of office hours though, which is very helpful.",
        "I don\u2019t know how helpful the lectures were for me personally",
        "Sara is a great professor who really wants all of her students to learn and succeed.  I highly recommend taking this course with her",
        "It was a course that covered a lot of concepts at an introductory level and felt fast\u2013paced but manageable.",
        "Pretty easy class, might seem difficult at times because some concepts are legitimately difficult (dynamic memory allocation was annoying) but the tests are fairly easy, esp if you do the practice tests \u2013\u2013 the actual test isn't so different. I found it really difficult to pay attention during class, stopped going for a bit, but that may be more the fact that it's impossible to make learning CS fun and less the teacher.",
        "Decent course but the hw assignments are pretty boring. Regardless, sarah is a great lecturer easy to follow",
        "Sara is the best! Take it with her!",
        "The previous quarter I took 211 with Jesse and had to drop because I simply did not understand anything. Even with previous coding experience past 111, it was really hard to follow. After taking 211 with sara, I understood so much better and she explained ideas much better. Also all the peer mentors in office hours were very helpful. Take 211 with sara if you can. The assignments start out pretty easy and slowly build up to be more difficult but it's really easy to get 100% on all of them if you manage your time.",
        "Great class! Take it with Sara. Everything felt very straightforward. Lots of office hours available if you need them. The way Sara speaks and explains things make for an engaging lecture. She's also very clear about what will be on the exams and how long each assignment will take.",
        "it's a fundamental cs course, you're going to be learning c++. Go to office hours for homework, they're all cool; Sara is also cool.",
        "EECS 211 with Sara was great! The assignments pertained to the course content and helped you actually use what you learn. The lectures are great and Sara is a great professor",
        "take with sara sood if you can! she's the best and makes things really clear in lecture. the assignments are pretty straightforward and this class has tons of office hours to help when needed. tbh the assignments were actually fun to do. the tests require quite a bit of practice/studying, since not all the concepts covered in lecture appear on assignments in time for the exam.",
        "I took EECS 211 during the winter quarter with Jesse, and had to drop it because the way he taught was too confusing and challenging for me. Taking the course with Sara definitely felt refreshing after what I went through last quarter. What I love about her teaching is that even though I've programmed in the past, she makes sure that she's teaching the course with her target audience being someone who's never coded before. She makes this class feel inclusive. I think this course starts to pick up after the first midterm, so it's important to not fall behind or slack off during that time. The homework can be challenging, but it just takes time and help. I also appreciated how many exam resources there were available. The homework is good at preparing you for the midterms, but in my opinion the past practice midterms are extremely helpful.",
        "You can't write pseudocode on exams, which is annoying, but good class nonetheless",
        "Loved this course. It's hard at some points because of everything else everyone has going on, but Sara is great and she will help you however long you need. Take this course!",
        "I would very much recommend taking this course with Sara. She is consistently aware of the pace she is going to make sure that the information that she is telling is delivered to all of the class before moving on. The first assignment can seem especially daunting but the assignments are generally not too difficult to complete if attention is paid during lectures. I, coming into the class with no prior programming experience (except for 111), found this as a very manageable class in learning the main aspects of the C/C++ programming languages. The assignments can take a long time to complete, but again if you pay attention in class, it's likely you'll finish the assignments at the lower end of the predicted time to complete. The exams are not terrible, but I recommend using the provided past exams as they don't relate as much to the assignments.",
        "This course is not bad. The assignments are a bit long but the peer mentors are always willing to help you. There is no reason to not get a perfect score on every assignment because you know when the code is right. Professor Sara is a great professor and teaches C++ in an understandable way. Take this class with Sara!",
        "Great course even for someone that has no prior coding expereience other than 111. Sarah makes sure her classroom is open to all backgrounds and takes all and any questions. Sarah is a great teacher.",
        "This course is a great introduction to the world of object\u2013oriented programming through the C++ language.  No matter what your previous coding background, this course is designed to intellectually challenge those of all coding abilities.",
        "This is a pretty good class \u2013 a little bit harder than 111 is, but not terrible. C++ isn't a horrible language once you get the hang of it, and Sara is awesome",
        "Sarah is an incredible teacher and the codes were never too difficult. The approximate time to finish always seemed way too long for me. Pay attention in class and actually do the code and it is an easy class.",
        "10/10. I know that if you're considering taking 211 it's probably because you're a CS major and you have to, but this is really a fantastic and enjoyable course that won't suck too much of your time and will do great things for your programming. I took it as a fifth class and it was still manageable. The peer mentors and Sara are super helpful and frequently available. Anticipate ~5 hours for each assignment, many will take less, but about 2 will take more. You cut your debugging time in half if you do it in office hours (so if you code slowly, go to the peer mentor hours. Seriously).",
        "The class is very doable if you put in the effort. Take it with Sara, she's great.",
        "Doable course, not the hardest course I've taken at Northwestern and seemed easier than EECS 111. Some of the things you need to know may not be explained in class, but assignments are still not hard to get done given the length of time to do the homework. Sara is an understanding professor and great at explaining the material. Best professor I have had thus far at NU.",
        "sarah is my mom and i WOULD die for her",
        "way more interesting and harder than eecs 111. the assignments were long and hard but there are a lot of peer mentor hours which are very helpful (even though the mentors don't really give you the answers).Sara explains the concepts very well",
        "Good course. Important as well. Sara is a great teacher. Take it if you can.",
        "I enjoyed this course! Sara is amazing and a great lecturer. I really appreciated that she had office hours every day and always had a great attitude about helping students. The assignments were sometimes a lot of work, but very manageable, and the peer mentor hours were very helpful. The tests were challenging but very fair. I appreciated that we were given plenty of practice tests to help us study.",
        "It was great.",
        "Definitely a challenging course, but Sara is a very good instructor, and she and the TAs are very willing to help during office hours. The class is so rewarding when you finally figure out each assignment.",
        "Great class, definitely do not wait for the last minute to begin on the homeworks \u2013 the lectures in Ryan are not the greatest simply due to the size of the class, but this is unavoidable",
        "Loved the teaching and examples provided. Final exam was very hard but the rest of the course at a good, manageable pace.",
        "sara is a g",
        "I had no programming experience other than 111 before this class... The quarter before this, I tried (emphasis on the tried) to take this class with Jesse and couldn't handle it. The man could not teach and I had to drop the class. After that very rough quarter, Sara was such a breath of fresh air! You can tell she wants us to succeed. I found the homeworks to be pretty tough, but peer mentors are very helpful and Sara makes herself very accessible outside of class (again, complete opposite of Jesse). Exams are also tough but very fair.",
        "This course is very challenging. Much more than 111. You\u2019ll need a lot more hours for assignments and need to understand the material for you to successfully complete your assignments and pass your tests. Professor Sara is very good at teaching this course and she explained the material so well, as long as you attend her lectures",
        "Sara is AMAZING. She takes complicated topics and makes them simple. Take this class with Sara.",
        "SARA IS AMAZING. Take this class with her. Projects take a decent amount of time but help you understand the material better and prepare you well for the exams.",
        "I loved this class! It was very enjoyable, and I truly learned a lot.",
        "Sued is good but honestly I learned nothing in lecture and everything by working on the code. It might be more beneficial to just work on the code during lecture. Assignments can be pretty tough.",
        "LOVE SARA. She's the one to take it with. Goes between code and powerpoint. Start the codes early so you have a chance to go to office hours. There are many TAs that have office hours pretty much every day all day.",
        "Instruction was great quality and assignments helped to understand and apply the concepts taught in class. Peer mentor hours were super helpful and saved me on numerous occasions. GO TO PEER MENTOR HOURS. Assignments were doable without help from peer mentors but they saved a lot of time and helped understand topics that were hazy to me.",
        "This is a great class to take with Sara, she really cares about describing the concepts in an approachable way, and there's more than enough help to get you through the tougher assignments.",
        "Useful class for learning a language (C++). Many peer mentor hours makes it extremely easy to get help on the assignments and help for the exams. Sara also did well in covering the topics in an easy to understand manner, but I think she used too many examples to illustrate the same topics which got confusing \u2013 I would prefer if she covered a few examples in depth.",
        "I liked this class a lot better than EECS 111, as I found C++ to make a lot more sense than Racket. Some of the assignments can take long, but they really help for the exams.",
        "Sara is very good at teaching and this is a good course for getting into C++",
        "Sara is a great and fair teacher. The course should be easy with any prior coding experience.",
        "Sara is the best! Do not take this course with any other instructor.  I want to take more CS classes with her! First midterm is super easy.  Second midterm has a lot of content on it.  Absolutely loved this class although lectures can run a little long.",
        "The class is really good. I was a bit worried about learning C++ since its known to be a harder programming language. Learning the language turned out to not be as bad as I thought. I definitely want to continue learning more complex stuff through C++ in the future. The later assignments are a bit more time consuming but they're still really manageable. Do study a bit more for these test since they're a bit tricker than 111's.",
        "I really liked this class and as always Sara was a fabulous teacher! Definitely a fun and engaging class and there is so much support available to you for homework assignments.",
        "This is a very good class! Sara is the best and she helps you learn a lot and really care about her student.",
        "big lecture, required, take it with Sara for sure",
        "I really enjoyed this course. I learned a lot.",
        "Better than the class of Jesse (took it and dropped last quarter). Sarah is very understanding and explains quite well. However, lectures sometimes feel unnecessary, it's really hard to stay awake the whole time during a 90\u2013min lecture. I feel like a small stretching break of 3 mins in the middle would exponentially increase the learning capacity of the students.Last few assignments are tough...start early and go to PM hours",
        "Sara is absolutely amazing. For sure the way to go when you take this class. 211 honestly is not as difficult as it is hyped up to be. Definitely go for it",
        "This course is definitely harder than 111, but I felt well prepared, and Sarah makes it very manageable. I kinda felt like I was getting behind at first, but the assignments really do help with solidifying concepts from lecture.",
        "did not like this class at all!",
        "I love Sara.  Definitely worth taking, especially with her.",
        "For a non\u2013major student that has minimal previous programming experience, this course is demanding and quite hard. It is a solid introduction course to C++, and Sara is a really nice professor in office hours and when directly communicating with students. I find her lectures too fast and hard to follow though. The lectures did not help me much. It was more effective for me to just read the slides myself, but no doubt, if you are interested in C++ or programming in general, this is a must\u2013take, and definitely take it with Sara.",
        "Sara is absolutely amazing at explaining everything in the clearest way possible and the structure of the class is well thought and engaging. I don't think there is any way this class could be any better. If you go to the lectures and do the weekly assignments, you should have no problem getting A in this class as the exams are straightforward and fairly simple. If you have to take this class, take it with Sara :)",
        "Really need to stay on top of this class from day 1.",
        "Peer mentors were very helpful. Love Sara.",
        "This was an excellent course, probably my favorite one so far. The content was challenging but not impossible, and there was always someone available to help if I had any questions.",
        "This class was definitely challenging at times and I definitely needed to go to office hours or work with other students to get homework done sometimes. The exams could also be challenging but manageable with plenty of studying. I enjoyed learning C++ and I liked it better than Racket for sure. Sara was a fantastic professor for this class. The only thing that I didn't like about this class was that the 80\u2013minute lectures twice a week felt too long. I think this class would have worked better as a 50\u2013minute class.",
        "This class was extremely well taught!! Take it with Sara if possible, she's an amazing professor. Also, be sure to utilize peer mentor hours because they were very helpful.",
        "This course was pretty straightforward. Sara does a good job of teaching the material and making sure she isn't going too fast or too slow. The homeworks aren't too bad, they can take a while but if you know what's going on in class it won't be too hard.",
        "Sara is a good lecturer. However, there isn't enough practice with the harder concepts that we get tested on.",
        "The course is not bad for what it is, but I found myself never really learning anything from the lectures and still being able to do the assignments. The paper exams are annoying, since they test stuff differently to all the work you do throughout the quarter.",
        "This course is hard and tedious but extremely rewarding. Sara is a great teacher but the TAs are my lifesavers for this course.  In order to excel in this course, 1. take it with Sara, 2. Go to the TA office hours and complete your weekly assignments in those office hours (it save alot of time to have them by your side) 3. Start early (It will be difficult but try. The time crunch is very stressful).That being said, the moment when you click run and the output code is identical to that of Sara's output file, is immensely rewarding. Even though I spent about 8 hours a week on this class, I really learnt and grew from it.",
        "Sara is an excellent professor and extremely helpful in office hours. Assignments can get very long/ hard to debug by the end of the quarter. Exams are fair.",
        "Sara was a G for sure,, the lectures were really long so just focus on the important stuff and go to office hours whenever you. Can or whenever you have questions. It was interesting overall and the first exam was a breeze especially. Have fun w it!",
        "Sara is a great professor. The lectures give you all the information you will need to be successful and she makes them informative and enjoyable.",
        "Always choose Sara for 211. Do not hesitate. She is the best comp sci teacher I have met.",
        "This class is hard but Sara makes it manageable. Just go to peer mentor hours and you'll be fine.",
        "It's pretty good I guess",
        "Sara is amazing, this course was challenging but doable with the help of the peer mentors. It was hard to conceptualize the actual goal or usefulness of the code we were learning though",
        "Sara teaches well as always. the homeworks were quite tricky, and you need to spend time finishing those. also the exams were fair but the mean was unexpectedly high. if you are willing to spend time studying, you'll be fine",
        "Felt really proud after each week, because of how detailed and in\u2013depth the lectures and notes were, to be able to code and utilize a language as notoriously difficult as C++."
    ]
}{
    "course_code": "Student Report for COMP_SCI_211-0_20",
    "course_name": "Fundmtls of Computer Prog II",
    "instructor": "Jesse Tov",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "3.99",
        "count": "77"
    },
    "course_rating": {
        "mean": "4.00",
        "count": "78"
    },
    "comments": [
        "Overall, this course was pretty good & it seems like they improved it a lot from previous iterations (where there were a lot of complaints about the workload and teaching). While it would certainly help to have prior experience in C/C++, it definitely isn't necessarily to succeed in this course, as they basically start from the ground up and make things approachable for beginners. Sometimes, I wish Professor Tov's lecture videos were a little bit more structured \u2013 at times, it can feel like he's jumping around a bit between disparate coding examples & I think it would be good if he focused a little bit more on concrete concepts and theory. But overall, his teaching was pretty good & he is clearly very knowledgeable about the subject (just go on CampusWire for questions and you will likely received a detailed response from him or one of the TAs). Despite what you may have heard from others, do not be intimidated to take this class. Just be willing to spend a little bit of time, and you will likely be fine.",
        "You're either gonna ace this class or fail it. It was pretty easy for me cause the material clicked. You have to understand Jesse's logic. Otherwise, this class will be really bad for you.",
        "Jesse sometimes made the core content difficult to understand. A useful class for CS",
        "The class is hard as hell, but I learnt a lot. Jesse is a good instructor. The problem is, he has a predisposed urge to make things harder than they should be. I struggled with the homework: It's almost like the homework is engineered to make you fail.",
        "This course was overall a good class. I don't think the asynchronous style molds very well to this class, as there are only a few videos to go off of per assignment, and the videos were overall somewhat limited and sometimes did not directly relate to the homework. The last homework assignment is particularly difficult, but the others are not terribly hard but require lots of work to complete on time and thoroughly. I spent a lot of time on this class because I procrastinated, and I feel bad for doing it, because it was very hard to dig myself out of the hole I dug myself into.",
        "This was a rather curious course. I am fully aware that Professor Tov's previous CTECs criticize him for giving too much work, but having taken the COVID\u2013reduced version I'm not too sure I believe the critics; the workload probably should have been increased (it seems there were technical issues with the grading system that lead to some long delays between assignments).",
        "Really flexible, professor and TAs are helpful",
        "The automatic extensions this quarter were very helpful in helping me find the motivation to do the assignments",
        "Good",
        "The part of the class taught in C makes little sense, but is doable with a good partner and lots of time in office hours. The part of the class taught in C++ makes much more sense. Jesse seems to care a lot about his students, and was very kind in terms of extending deadlines, but sometimes the lectures went off\u2013topic and explained things that weren't applicable at all, which could be confusing.",
        "Prof. Tov is a little disorganized, but to make up for it, he's very accommodating and flexible about homework and deadlines.  The homework is mostly partner\u2013based and presented somewhat confusingly, but it's reasonable. I went into the class with Java from AP Comp Sci, so the learning curve for C/C++ wasn't too steep, but I think if you only go into the class with 111 or 150, this class will be significantly harder.",
        "Oh my... this class was a roller coaster. The coding assignments were pretty interesting and office hours (both students and Jesse) were extremely helpful for clarifying concepts and debugging code. Lectures were not helpful at all, although the videos Jesse made covered some important topics. Assignments did not come out on time (like not even close), but thankfully we got automatic extensions that were VERY lenient throughout the quarter. A wild experience for sure. I'm definitely more interested in CS though and C/C++ will come in handy so learn it well \u2013 just be prepared to do a LOT of learning on your own and HOURS of coding.",
        "I actually greatly enjoyed this course. It was difficult for me, with very little experience in computing. However, the material was very interesting, and once I put the time in to understand the concepts, the homework was very easy. Jesse changed the syllabus up due to some changes in how the quarter progressed, and I found the changes very beneficial and the flexibility provided was very helpful for me during this quarter. However, these changes were communicated very slowly, which I did not enjoy. I also would have preferred live lectures rather than recorded, like Jesse began to do towards the end.",
        "The course drastically improved my fundamentals and gave me a feel for my first non\u2013educational programming language(s).",
        "The professor was very lenient and always tried to help us when we encountered a problem. He also provided many videos for us to watch to understand C and C++ programming.",
        "Take this with Sood. Jesse wants the course to be \"hard\" so he does not provide office hours and fails to respond to questions for days at a time. The actual work is not hard at all, but with no one teaching any relevant concepts and only huge long videos of live coding on a separate topic to help you, you will spend a lot of time on each homework. Office hours will often have only one/two students helped. Get a tutor if you need one. The course was frustrating. I often felt like I was being challenged on my Googling skills rather than learning. I've spent over 3 hours in office hours at a time only to not be helped. Having the videos released sporadically and only in huge hour chunks discouraged me from watching them. It was very overwhelming.",
        "This course overall felt a bit disorganized as the quarter moved on, lectures weren't being posted on time, homework projects got more and more delayed. At least Jesse didn't take it out on the students and gave us basically indefinite extensions on the homeworks and made the final project optional. Find a smart (or at least hardworking) partner and go to OH, or else the homeworks are a real struggle. Jesse and the TAs are always willing to help.",
        "This class required hands\u2013on experiential learning. There is a pretty big time commitment for anyone who does not come in familiar with C or C++ coding. Most of the time, I was doing self\u2013learning by trying things out and failing over and over again. The assignments ask us to do things that we never learned how to do, which is very time\u2013consuming and confusing. Be prepared to invest a lot of time into this class and be prepared to feel frustrated almost all of the time.",
        "For those who have programmed in python or java or some other higher level language, this class was super cool in that you get to learn about pointers and memory management and other functions of lower\u2013level programming. The course was difficult in that if you've never programmed in C before, you can get a multitude of memory errors that just fill your screen with a wall of rainbow\u2013colored text when you're trying to code. But that's just a part of coding. If you're very careful and do your best to truly understand the concepts that you are implementing, the class will be much easier.",
        "CS 211 with Jesse is very challenging. Be prepared to spend hours working on projects, and in office hours. Zoom CS office hours are pretty awful, however, and in my opinion unless you have prior experience in CS (I only took 111 before this class), you will need substantial help from office hours to be able to complete projects. Be prepared to wait for hours to get help. The TAs/peer mentors are great and try their best, but over zoom office hours are just so overcrowded that students can't get the amount of help they need to get projects completed.",
        "It's kind of a hard learning curve figuring out C and C++, but the TA hours are extremely helpful. Towards the end of the quarter they get pretty full so you have to wait a lot. There's no exams which is pretty nice.",
        "Class is very difficult without some programming experience and a interest in the topic. You'll get the hang of it eventually. HW6 was very tough",
        "This course is very challenging and frustrating but leads to you learning a great deal. The lectures are very hard to follow and largely dive into tangential topics that are hard to truly connect to the homeworks. The class centers around ~weekly homework assignments that ranged from 10\u201320 hours of work for me. I personally had not gone to many office hours for other classes, but for this class it was a necessity in order to resolve issues with your code. Java experience helps. Clear up your schedule around this course and buckle up.",
        "The course was not very well organized (although keep in mind this was a tough time for anyone to stay on top of things). Jesse is very flexible and lenient, but that means that it's up to you to keep on track of things. Especially during this period of online classes I think the better organized the professor is, the easier it is for the student to stay on top of things, but I appreciate how he was kind enough to accommodate for everyone.",
        "If you can take this online, your entire grade is just completing the homeworks which aren't impossible if you stay on top of the material. Jesse is a lot, but he's a nice guy that knows his stuff once you get past how overwhelming he can seem. \"Bro I ain't gonna lie, I haven't started the homework assignment yet.\" \"I have a feeling like you'll need another day, let me give you an extension.\" He isn't scary, you just have to ask. Also, if he keeps the auto\u2013extensions like we had this quarter, you *can* complete the whole course in about a week without food or sleep. Just saying.",
        "Personally I struggled because I don't have coding experience besides CS 111. It picks up fast and if you struggle go to office hours regularly.",
        "You learn most of the content through the homework and the homework can be really tough. I highly recommend taking the class with a friend with who you work well and do the partner assignments together. Having someone else there to help you makes it more bearable and sometimes fun. Jesse was all over the place this quarter and the deadlines and lecture videos were also all over the place.",
        "This course was not particularly helpful and I feel I didn't learn much. The assignments were definitely challenging and thought provoking, but because lectures came out so inconsistently and were frequently not helpful for the assignment, I felt little was to be learned.",
        "I was pretty nervous to take this course because I had no prior experience with programming except for taking CS 111 and because I had heard this class was very difficult. But although this class was definitely intimidating and time consuming, I finished feeling like I grew a lot as a programmer. The homework assignments were always challenging and pushed me to understand the new material and apply it and the spec both grew in complexity, but also gave less instruction as the course went on, which pushed me to problem solve quite a bit. The grading was always fair and Professor Tov always had his student's best interest at heart. Definitely a great class but very difficult and time consuming! I think I came out of this class as a better programmer but also with a better attitude about learning since it forced me out of my comfort zone quite a bit!",
        "The homeworks were a very fair ramping difficulty that was warned about, the lecture videos didn't come out on time every time, but Jesse graciously extended deadlines to accommodate.",
        "This course is great if you want to learn C and C++. I already had some experience with C++ and similar languages going in but I still feel like I learned enough for it to have been worthwhile. And learning how these languages work is really helpful for learning how to program in other languages.",
        "This course was helpful. I think learning C before C++ will be helpful for classes like CE205 and CS213. The homework was challenging, so I recommend attending office hours frequently so you can debug your code faster.",
        "This course was frustrating. The assignments varied from almost mindless to extremely hard, and Jesse got very behind on releasing lectures and the course had to be restructured as a result. At times, there was no work for the class, and at others it seemed like overkill.",
        "The course was extremely challenging, and I think the instructor tried his best to cope with the new format.",
        "Difficult. Very difficult. I dropped the class once before and took it again but it was still difficult. I think Jesse probably could've explained more basic things, especially for C++ so that it wouldn't take up SO much time for the assignments. Just be aware if you're not so familiar with CS and is going to take this claass",
        "Good course. It's not too difficult, especially if you've had prior coding experience and/or take advantage of resources (OHs, q&a posting site, peer mentors). It's also cool that you're making actual games in the course.",
        "This class was so bad remotely. We fell so far behind in lectures and didn't have them weekly as we were supposed to",
        "This is a fantastic class. I found the homework to be difficult in the best way possible. I was intellectually challenged, and it definitely took some time looking over the homework starter code in order to understand it, but I found that once I understood I was able to cruise through the homework and feel like I learned something about C/C++ while doing it. Making unit tests that you think will be spot\u2013checked is difficult, but is a good practice to get into for the future.The asynchronous videos that Jesse makes were solid and I would give them a 7.5/10.",
        "This course may have been better if it was in person, but the remote learning version was not the experience I wanted at all. A couple of weeks into the class, Prof. Tov canceled both synchronous lectures and discussion sections, and instead, posted lectures on Canvas, which were often late and came in bursts. There were only six grades in the entire class \u2013 the homework assignments. The final project was made optional because he did not get around to posting information about it on Canvas in time. He never set up an extension/late policy, so it was like there were no due dates. The TAs in office hours spent about 5 minutes per student, which was not helpful. The class was very disappointing after CS 111. I felt very disconnected, frustrated, and lost for the vast majority of the class.",
        "Homeworks are super long but will make you apply useful concepts. The homework directions could be confusing at times but Professor Tov does a good job of making himself and the TA's available for Office Hours. Definitely use Office Hours, they will basically give you the correct code if you ask the right questions and show a good understanding. The self evals are also huge grade boosters.",
        "READ THIS if considering the course. Other Ctecs I read for this course especially with Jesse were harsh and inaccurate to my experience so I am writing what I wish I read then. Yes, there is a difficult course that is time consuming and you likely need to use resources outside lecture. However, don't let that stop you from taking this course or fearing it, especially because if you are considering 211 you probably are interested in pursuing more in CS and to do that you need to take this course. I actually enjoyed it and it was my favorite class this quarter. I had NEVER coded outside CS 111 before this and was able to do well, even without a partner on some assignments. I think Jesse is a great professor for this course. His enthusiasm for CS and quick live coding can be a bit overwhelming if you have no prior experience like I did but don't be afraid to ask questions and enjoy this wealth of info because once you understand it is fun and it will help down the line. Start projects early, go to office hours, and ask questions on campuswire. Make sure you take time in the beginning to learn the fundamentals because the projects build on each other. This quarter grades were 100% projects and Jesse was very flexible with providing help, extra time, or even allowing you to correct your code. I definitely felt like this course with Jesse is built so that you learn a lot that you can carry throughout your time with CS. It definitely isn't a course where lecture gives you everything you need if you don't have prior experiences but talking through problems at office hours and reading through documentation are helpful things to get used to and it also sparked my interest in the subject even more. If you read all this, my parting message is take the course when you can, knowing that you definitely can succeed if you put in the time and effort and take action when you need help.",
        "Course was messy and unclear at times, sometimes for weeks on end, but the professor still cares about the students' well\u2013being.",
        "This course is rough.  The overall structure of the course makes it feel very sink\u2013or\u2013swim, with a large portion of the burden of learning the material falling on you rather than on the professor or the TAs.  While this might in some ways be the norm for CS classes, the remote instruction combined with the teaching style of Professor Tov made this sink\u2013or\u2013swim approach feel even more prominent than normal, to the point where the course ended up feeling far less intuitive and enjoyable than it should have.  I would recommend waiting until in\u2013person instruction can resume to take this course.",
        "The class was very disorganized. The professor was late to post lecture videos. The videos were confusing and over complicated things. The homework website was not setup properly before the first assignment and caused the whole class to be set back over a week.",
        "Professor Tov is a really nice person and very understanding this quarter. It was great not having exams but the homework assignments were challenging. I went to a lot of office hours for help with the assignments and it paid off, I highly advise students to go to office hours. I learned a lot in this course and really enjoyed coding(more in C++ than C)",
        "This class is unnecessarily hard and every homework takes forever to work on. I lived in office hours for this class and don't know how people did it otherwise.",
        "This is a great course if you have some prior experience with programming. I don't think CS111 is a good enough intro. The class is pretty interesting because the homework assignments are fun to work on. The last three assignments are making games in C++ which is cool. However, the assignments do take some time to complete and there is an initial period when you might not fully understand what you have to do or how to do it. You should go in with a positive mindset and be prepared to learn quickly. Prof. Tov was very supportive and his lectures explained concepts decently.",
        "I really enjoyed this class. Jesse is very aware of the difficulties students can face in the online learning environment and made the class as accessible as possible without compromising his students' understanding of the material (ex: adding additional office hours, unlimited hw extensions, all project based without exams, etc.). I also appreciated his recorded lectures since I could watch them back whenever I was confused. The hw assignments are challenging, though not impossible, and I think I learned a lot.",
        "The class kinda went off the rails week 4 or 5, no homework\u2019s or videos were posted for about 3 weeks and it caused me to get way behind",
        "I'm very pleased with this course because it gave me a deeper understanding of C and what our computers are doing when we allocate memory or perform operations.",
        "I feel that Jesse is a professor who genuinely wants his students to learn and improve, but he is not well suited for an online setting. The lectures were sparse and far\u2013between, and often\u2013times difficult to follow or understand as he went off on a tangent or started using Computer Jargon that I didn't know. The homework projects were very difficult at times. Although it was very rewarding when I would figure something out, the amount of time it took was really disheartening, especially when I wouldn't be able to work it out in the end. Coding in C is something that I felt is very important to know but I still don't feel I have a great grasp of. C++ was definitely my cup of tea, though.",
        "This class is hard. Unfortunately It seems like Professor Sood won't be teaching this class for a while, but I wouldn't say the class is impossible. Professor Tov has a very particular teaching style that only a small select percentage of people will enjoy. Go to office hours, start your assignments early, and work hard and you'll survive the class. Professor Tov is EXTREMELY helpful though a little difficult to get a hold of sometimes.",
        "Hard but doable."
    ]
}{
    "course_code": "Student Report for COMP_SCI_211-0_1",
    "course_name": "Fundmtls of Computer Prog II",
    "instructor": "Branden Ghena",
    "year": "2022",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.51",
        "count": "110"
    },
    "course_rating": {
        "mean": "5.02",
        "count": "112"
    },
    "comments": [
        "CS 211 is a difficult, yet worthwhile course. You learn a bunch of syntax very quickly while engaging in the homework assignments. Overall really enjoyable course to take.",
        "Difficult class. There's just a lot of material thrown at you that you have to figure out on the homework.",
        "I think I became much better at programming by the end of the course. The final project was a much bigger project than I've ever tackled before.",
        "hard class but part of the sequence. no drops, 4 quizzes, labs are easy and final project was alright. use OH!",
        "Good class; the lectures were clear. Take this class with Branden",
        "Most of the homework assignments were difficult enough to be intellectually engaging and stimulating, but not to the point where I was discouraged. Branden is an excellent teacher and his lectures were well presented and the class moved at the right pace. It was also nice that the course was project based and not assessment based, which made it less stressful.",
        "I really liked the format of CS211 and Branden was a great professor. However, sometimes it felt like we spent too much time on the little things and went too fast through the more important ideas. Still would highly recommend this to anyone who wants to program in any capacity; I really feel like a better programmer.",
        "You will learn a lot. But course load is unreasonable. Go to office hours.",
        "I had a tough time in this class, but I'm sure if you attend all the lectures and do the homework, you'll be fine",
        "I thought this course was very useful in teaching programming in C and C++. It was also enjoyable to create a final project at the end which was a game of our choosing. (Unlike many other classes, it showed how our typical code could be used in parallel with a user interface). The homework in this class can be difficult and you may need to go to office hours. But it should be relatively easy to get an A or A\u2013 as homework makes up the majority of the grade.",
        "This class is great. Prof Ghana is really good. I wouldn\u2019t worry too much about the workload. Just start a couple days ahead and it\u2019s not too bad.",
        "The lectures were given in a clear and concise manner, and examples were useful in helping understanding.",
        "Very good, straightforward course. If you have any significant coding experience going into this, it will be very easy; manageable for those without. All homework and project based and you essentially know how good your code is when you submit. Ie, if you put in the time, you will get an A.",
        "The course is challenging but since I had a legitimate interest I did not mind other than for some of the late nights I had to spend on assignment sometimes. The instructor is interesting and lecture is helpful",
        "This class is soooo overhyped. It really is not bad in terms of workload, 6 homework assignments that take 1\u20133 hours a week is really all there is. Branden and the TAs are all wonderful. I took it as my overload class as a freshman and had absolutely no issues with it in any case. Generally a very leniently graded course as well, I would recommend having a good partner but you could easily complete the entire class solo. Writing tests is relatively annoying but that is just part of the entire SDE grind.",
        "Take this class with Professor Ghena!!",
        "There's not much to say because if you're taking this class it's probably for a requirement. It's difficult but definitely doable, especially if you split the homeworks with a partner.",
        "Assignments are usually quite tough but if you play your cards right and go for office hours, and always ask questions on the coding assignments, this class is an easy fail. I failed most my quizzes but kept my head straight with assignments and got an A.",
        "This was a really great class.  Branden explained things really clearly, and the assignments were applicable, engaging, and often fun.  Take this class with Branden if you can.",
        "211 is not hard but its a lot of work. None of the concepts are difficult, but I still spent up to 15 hours a week on the assignments. I think the switch from C to C++ was hard, and you can fall behind if you dont pay attention to learning the syntax of C++ (i didnt pay attention that week we switched and so I had some trouble in future assignments)",
        "I was a bit frustrated when I was stuck with a problem in the homework that I knew could had an easy solution involving syntax or functions that I didn't know existed.",
        "Take it with Branden. Best professor at NU. Solid class, sometimes challenging and but isn't that the point??",
        "CS 211 is a great programming class. Branden's lectures were always pretty interesting and helpful. He has a great attitude about teaching, though sometimes his in\u2013class coding demos can get a bit lengthy. While the homework assignments were not easy by any stretch, I learned a ton through them, and by starting early, my partner and I got through them without much stress at all. This is definitely a class that you get out of what you put in; while it's possible to skate through it doing the minimum, you definitely won't learn as much, so be willing to put in an extra bit of effort on assignments.My only critique is that it was frequently hard to study for quizzes since the content on it wasn't always listed, but they usually covered material that I incidentally happened to learn, so I can't complain too much there.TL;DR: Good class. Worth the (fairly large amount of) time.",
        "This course is hard, but very rewarding.",
        "This course was pretty great because of Branden, but not entirely easy. Think about taking 214 beforehand, because it helped me do much better than I would have. Overall, start assignments early and you'll do fine.",
        "Focussed a lot on self\u2013directed learning like looking up concepts/coding platform related stuff you don't know.  Felt much more independent in exploring a much wider world of programming and getting help when I needed it.",
        "Difficult class but manageable. Office hours are hit or miss but make 211 way less overwhelming. Try to work with a partner if you're struggling.",
        "Branden's lectures are the first I've had at this campus that I would describe as \"transcendent\", not in the sense of them being beyond the comprehension of us mere mortals or somehow allowing our minds to escape the barriers of human reality, but just that they surpassed the typical limits of quality offered by services at Northwestern.Let me explain: imagine if you went to eat at Sargent one day and the all the food offered was actually not just edible but actually pleasant, none of the drink fountains were broken or gave you water instead of lemonade, and there were enough silverware, cups, etc. available during busy hours. Perhaps you would leave with a feeling of surprise, and a refreshed sense of trust in Northwestern's ability to satisfy your basic physical needs. You might even think, \"wow. that was actually good.\" Now imagine if one day you went to a course lecture that didn't leave you with a general sense of trepidation about the fact that the supposed pinnacle of our education system, which you are paying hundreds of thousands of dollars to experience, which many people would metaphorically or literally kill you for a seat at, can only offer instructors that despite their overabundance of academic qualifications are andragogically mediocre or incompetent to an astonishing degree. Imagine if, at such a lecture, you actually felt like you wanted to be there, and like you were becoming more prepared for your future as an engineer/computer scientist/etc.You may mock me and say such a lecture is impossible, and that no such thing could possibly exist on this campus. But before you scoff at such an idea too much, I beseech you, take a course with Branden (it doesn't necessarily need to be this one; I think he teaches several), and then tell me what you think. It might not be life\u2013changing, maybe not incredible, nor even particularly pleasant. But can assure you that every single one of his lectures was the following: sufficient, satisfactory, and *thoroughly unobjectionable*\u2013\u2013and that, my friend, goes orders of magnitude above and beyond every other course I've been required to take at this institution so far. It's deserving of note, and the only way I could feel confident that I get my message across is with this unnecessarily long and arduous read of a CTEC. Because Branden is something that so many other lecturers at NU should strive to become\u2013\u2013a good teacher.Also somebody please, PLEASE, add better examples to the GE211 documentation.",
        "Pretty hard course! The weekly assignments were very stressful and took a lot of time. It was also very tricky ro write tests and hope they match the ones we should be testing for the self evaluation. Prof. Branden is amazing though! TA\u2019s are extremely helpful.",
        "This is an enjoyable course if you enjoy small programming projects. The quizzes are very easy, so the only difficult part comes from the homeworks.",
        "This course was hard and a big step up from previous cs courses. Dedicate time to the homework every week.",
        "Class moves really quickly and can be challenging if you don't have much experience with coding and C beforehand, but is still very interesting and you learn a lot.",
        "The homeworks were sometimes very time consuming and frustrating. I struggled a lot for some reason when we switched to c++ from c; for one of the homeworks I think I went to almost all office hours to get help.",
        "I learned quite a bit about C and C++ from this course and I found it to be a good introduction to programming on a memory management level. Branden did a good job in lectures and was very attentive on Campuswire which I appreciated.",
        "I really enjoyed this course. The project focused structure worked very well, as opposed to tests. While the homeworks were very challenging, they were very satisfying to complete and I always felt like I improved at the end of them.",
        "This is a relatively time consuming class that seems like it is focused on tedious work. Having a good partner will make this class much easier to deal with.",
        "This class is very intensive, and the workload is very heavy especially with the homework assignments in C. Office hours run by peer mentors are very helpful, and Branden imo is a great professor and really cares about his students.",
        "Overall a good course with a great teacher. This is a course that isn't that difficult conceptually but requires a bit of work on homework and projects. Still, Branden made lectures very interesting, and I appreciated the in\u2013lecture breaks. Make sure you do most of your code for homework on the weekends and not the middle of the week.",
        "It was a good intro to C and C++, and wasn't nearly as much work or as hard as I had heard it would be (doesn't mean it was easy though).",
        "First half is C, second half is C++. Conceptually, not too difficult especially with AP CS or Java experience. 4 quizzes throughout the quarter that are very straightforward. Assignments may take a while because of debugging. Have to spend some time making test cases for self\u2013evaluations for each assignment. Office hours with PMs or the professors are very useful.",
        "Honestly this class was really interesting but a lot of work since debugging took a long time. I learned a lot though and enjoyed it. Make sure you have a good partner, it can really make doing the assignments more efficient. The last few assignments using the ge211 game engine were a steeper learning curve for me, but it was always rewarding to finish projects and assignments.",
        "Great class that was structured extremely well. Homeworks were coding assignments that took anywhere from 2 to 7 hours each week (they got more difficult towards the middle of the quarter and then easier towards the end). Quizzes were short and low stress because they didn't impact your grade that much (2.5% each). The final project was coding a game of your choosing in C++. If you get started a week before it's due, then you should be able to finish it easily. Overall, I learned a lot and had a lot of fun.",
        "This class was challenging at times but overall an educational experience. There are lots of helpful office hours and Professor Ghena is really good at keeping up with campuswire, so take advantage of these resources.",
        "This was a good course. Projects were interesting and challenging, but not unreasonably so. TA's and instructors were incredibly helpful and made it easy to access resources for help.",
        "Fun course, not too hard and not too easy. C is kind of annoying some time, but there were lots of office hours and resources to fully learn the material pretty easily.",
        "Good class and professor.",
        "Good course for programming fundamentals in C/C++, although the C part is a pain",
        "Just a pretty straight forward course. You will be challenged but it is rewarded as you will just get better at coding.",
        "Coming from CS111, 211 gave me the opportunity to feel like I was really starting to become a programmer. I felt excited by the material and was eager to try out and get a feel for C and C++. I was already familiar with some OOP concepts from AP CS in high school, so I wasn't too much like a fish out of water, but I was thoroughly challenged by the homework assignments and got an equal return of satisfaction after completing those assignments. I especially had a lot of fun coding the final project and got to have a chance to physically see how far I had progressed in just a quarter. Branden is such a great and likable guy which made lectures a lot more bearable and enjoyable. The quizzes were no pressure at all either. Office hours on Gathertown was also surprisingly entertaining and fun. Overall, I had a lot of fun in this class and I feel a lot more confident that CS is something I wish to pursue.",
        "The course is very fun and interesting. However, be prepared to learn 50% of your C++ on your own.",
        "If you have prior experience with Java and Python, this course programming\u2013wise isn't too difficult. You'll mainly learn how to apply what you already know into the C/C++ environment. The tests aren't difficult at all if you attend class. Fun final project.",
        "Branden is kind.",
        "This course did an excellent job of teaching me about using the Terminal and C/C++ programs effectively.",
        "I really enjoyed this course.",
        "This class was entirely too difficult, so if you're trying to take it for fun, DO NOT! It felt like if you didn't already know how to code then you didn't stand a chance.",
        "This class was actually pretty decent. Branden is a great professor and does a good job at explaining key concepts of the course. The assignments themselves can be a little difficult, so you should definitely get started on them early.",
        "The programming assignments were fun and not too challenging provided you have some experience programming or attend the numerous office hours",
        "If you don't try to find a partner and don't start doing assignments early in the week, you are gonna have a lot of trouble. If you dedicate yourself, you gonna learn a lot and acquire good coding skills.",
        "The class is very hard and need a lot of time to finish the work, but you will learn a lot throughout the course.",
        "I felt like the class was a pretty good class. I don't particularly love C or C++ but the class felt productive.",
        "Great class. Very good quality notes and prof is great at teaching. Fun material and homeworks too.",
        "Start early, go to OH, learn the syntax, and you'll be okay.",
        "This is a hard, but extremely useful class. Branden gives really good lectures and provides a lot of support via Campuswire. The homeworks/project are very doable if you take advantage of all the support resources (partners/office hours/campuswire). You learn a ton about low\u2013level & high\u2013level programming using C and C++, useful not just for CS but also CE and EE.",
        "not too bad if you put in the time and effort and have a good partner that you communicate well with.",
        "this class was so freaking hard. the coding assignments would sneak up on you and were so inconvenient to do. but they were very useful and interesting to complete so i didnt resent doing them. branden was very sweet and accomodating and made me feel like i could complete the course with the support i needed \u2013 rth",
        "First of all, there are mixed opinions about this class. Some loved it and found it easy because they had prior C/C++ experience and some are beginners who are drowning (I was one of them). HOWEVER, luckily, I have a deep\u2013rooted interest in low\u2013level things (such as building a PC and mining rig) and electronics, so I was quite intrigued by the lessons in memory management (despite how much I wanted to give up while spending hours on fixing memory leaks while the rest of my program was running just fine). Some tips: use homework partners! Also, take advantage of office hours EARLY in the week because if you go on Wednesday and Thursday (due date of homeworks), it will take at least half an hour to for the PM to get to you. Since I had no prior programming experience and was proactive to go in on Mondays and Tuesdays, it was a big help because I actually got to sit down one\u2013on\u2013one with the PMs (John you're a legend if you're reading this. You saved me in this class.) and bounce ideas back and forth to clear up confusion and not have to wait half an hour between each question you have. Finally, a big shoutout to Professor Branden Ghena. He is a very organized lecturer, explains things very clearly (although sometimes he does rush through coding examples), is very enthusiastic and passionate about the material, and reasonable person.Overall, this class is really a time\u2013suck if you come from a similar background like me. If not, it should be a breeze according to what more seasoned programmers have to say.",
        "Professor Ghena is a really enthusiastic professor and the class covers interesting topics in C.",
        "This was a great course. The lectures were entertaining. The homeworks were the perfect amount of challenging and reinforced the material well.",
        "Not too difficult, debugging can be time consuming but the homeworks were pretty straight forward. Branden is a good professor to take this class with, although lectures can be boring at times.",
        "Projects are fun, professor is super organized with slides. If you stay on top of things it's a pretty easy A.",
        "Great course, but quite a lot of work so plan out assignments, having a partner definitely helps a lot! The final project is really fun to work on."
    ]
}{
    "course_code": "Student Report for COMP_SCI_211-0_1",
    "course_name": "Fundmtls of Computer Prog II",
    "instructor": "Sara Owsley",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.75",
        "count": "65"
    },
    "course_rating": {
        "mean": "5.35",
        "count": "65"
    },
    "comments": [
        "The length of the class is a bit long to stay focused the whole time. Professor Sood covers topics quickly but there are so many office hours and the teacher or other students are very helpful in explaining concepts. One thing I didn't like is how a large portion of tests go over syntax instead of coding concepts.",
        "As someone with a good amount of previous programming experience I found this class not difficult, but also not easy. I felt like the class was definitely challenging at times but fair, and never went to a level where I simply couldn't understand a concept even after working on it.",
        "This class was very hard. Sood prepared you for the exam in a way, but her questions on the actual exam were out of this world. She would disagree me on this but she did screw our grades. Do everything to finish assignments on time.",
        "This was a wonderful class. Love Sara Sood. I wish that the course was more design oriented though. The homework assignments were very simple and required little to no design to complete.",
        "This class with Sara is really great. She is an incredible professor who has been teaching this course for years. She is really great about making sure all students are following along as well as ensuring that there are plenty of opportunities to get help outside of class. I would definitely take this course!",
        "Take 211 with Sara. She's the best. Her lectures flow well and are easy to follow along with. Assignments could be challenging, but you have more than enough resources to take advantage of to finish them.",
        "This was a great course! Professor Sood was a great teacher and was always willing to help her students. Her lectures were interesting and the slides were informative, but her examples were the best. I learned a ton in this class, and with all the resources Professor Sood provided, it was pretty easy! The assignments can be hard but are doable and there are plenty of office hours all week, so that if you have a question, you can go pretty much any time and have your question answered. Some assignments took only an hour and some took ten hours, but Professor Sood gives a time estimate for the longer ones \u2013 I found it usually didn't take me quite as long as expected, and one or two assignments were far easier than said to be, but in general it's probably smart to mind the estimate. Professor Sood also gives plenty of resources for the midterm and the final that make studying easy. This was a great course that I highly recommend for anyone interested in programming!",
        "The course was very fair, Sara was great, and I learned a lot about C++ and programming in general.",
        "Sara did a good job presenting the ideas in class, but I always felt it was going too slow due to my prior experiences.",
        "assignments could be very difficult and time consuming.",
        "This class is not too hard and the assignment were relatively enjoyable.",
        "It was very clear and all the topics are highlighted  and organized well.",
        "This class is AMAZING. Sara is an INCREDIBLE professor. I love how she asks if people have questions frequently, and she answers questions very well. She explains concepts very well too. Sara has sparked my continued interest in Comp Sci and I am so happy I got to take this class with her!",
        "The course is great! Sara is a great lecturerTAKE IT WITH SARA",
        "Great class. Slightly challenging to get an A if you don't have much prior experience coding.but Sarah is a great professor and the peer mentors are very helpful",
        "Class is very manageable. Prof. Sood is a great instructor.",
        "Sara is probably the best CS professor I have ever had. She stays on task during class, covers material quickly (but makes sure everyone understands), and doesn't ramble (unlike another professor I'm thinking of). The TAs were also very helpful and had good office hour availability.",
        "Great class, take with Sara for sure! Some of the assignments were very long so be sure to go to office hours for help.",
        "I legitimately enjoyed this class. It is incredibly well run \u2013 the assignments are very clear, with almost every potential point of confusion clarified in the instructions. There are plenty of resources (make sure to look at the example code from lectures) and Sara is wonderfully kind and approachable. The concepts taught in this class are very useful, from what I can tell. I would definitely recommend taking this class with Sara \u2013 it's a great course, so you don't want to risk making it a negative experience by taking it with a different professor.",
        "sara is great, take 211 with her if you can",
        "This course was pretty interesting and not incredibly difficult up until the very end, where there were several topics covered in lecture that we did not get a chance to cover with assignments before the final exam. There is an assignment that is due after the exam that covers some of this content, and it helps in reviewing it, but not nearly the whole of those topics is covered that way.",
        "I did not spend a lot of time on this class, but I studied before the final and did ok. Great class with Sara again. Her classes would never let you down. The peer mentor team is also amazing.",
        "Learned a lot, love Sara Sood, favorite prof at NU, would take any of her classes. Good amount of work on the assignments, but the TAs are super helpful and it's really not that bad. I liked this class a lot more than 111. Midterm wasn't bad at all either, from what I can tell you could easily do this class along with another EECS class and be fine. Sood is the best.",
        "It is hard to stay attentive for the entire hour and 20 minutes lecture, but if you go to office hours and read the book you will learn a lot.",
        "really loved this class with Sara. homeworks are also really good for practicing and understanding the material, so really put effort into it (you'll be forced to). Peer mentors are really useful.",
        "Great course. Thought I would never take another CS class after having a mediocre EECS 111 experience, but after taking this class I like CS a lot more.",
        "Great course, Sara is great",
        "TA's were great, homeworks were fair, lectures were a but dry but its hard for them not to be given the length of them",
        "Many of the subjects were akin to Java and felt redundant at times.",
        "I found this course to be logically taught. That is, the progression of concepts and subjects taught were in a perfect order.",
        "One aspect that was important was the great support and assistance from peer mentors during office hours",
        "This class is challenging and demands you engage fully in all lectures but very rewarding.",
        "I was able to gain experience in coding in c++ while learning core CS concepts",
        "Sara is a model teacher",
        "The lectures were great, the assignments are challenging but they're very helpful to understand new concepts. The final was unnecessarily difficult. The professor was trying to trick us rather than checking our understanding of the concepts",
        "I am a bit of a cs nerd but this course was really fun! I enjoyed the assignments and the problem solving aspects of them especially because they were based on real life uses of coding. Sara is great too! Highly recommend speaking to her one on one!",
        "This class is very doable in that there are weekly assignments that you can learn a lot from that will prepare you well for exams. Lectures are incredibly boring and honestly you don't learn a lot from them. Sitting in a lecture for an hour and a half twice a week is not an effective way to learn comp sci. Sara is a nice professor, but she says a lot of unnecessary information and repeats a lot of information without distinct emphasis, so her lectures start to feel overwhelming. it's a lot of information thrown out you without good tempo and emphasis, so its hard to understand that only a fraction of what she's saying is new information that's important to know. It's really helpful if you befriend a peer mentor that can help you with the assignments. Exams are fair enough, they give practice exams which make it really helpful to study.",
        "I loved this course, I'm a CS major and this course was intellectually challenging and fun.",
        "Enjoyed course. Take with this prof.",
        "This course will be a breeze if you have any experience in Java or other statically\u2013typed languages. No need to go to office hours or study besides for exams. Sara is fantastic as everyone knows.",
        "This class was really good to take with Sara. She always gauges whether she's going too fast or too slow, her teaching material is really helpful, and she answers questions really well. I've heard that other professors teach this class differently, but if you get the chance to take it with Sara Sood, I would completely recommend it.",
        "Take this course with sood!! Shes great!!",
        "Really good class. Sara Sood is the best CS prof at this school.",
        "Sara is a great professor; try to take this class with her if you can. Office hours with TAs and with her are super helpful for getting assignments done and for understanding in general. Very fair course; do the work and you will be able to succeed",
        "Sood is easily one of the best professors I've had NU. She's super enthusiastic and still clear in lecture, and super accessible for help in office hours. She does a fantastic job of laying out the central concepts you need to know in an approachable way, and everything about the course is so well organized. Peer mentors were super organized \u2013 s/o Daniel, he was on his stuff. Take this class with Sara, it'll be super worthwhile"
    ]
}{
    "course_code": "Student Report for COMP_SCI_212-0_1",
    "course_name": "Mathematical Found of Comp Sci",
    "instructor": "Connor Bain",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.75",
        "count": "32"
    },
    "course_rating": {
        "mean": "4.00",
        "count": "76"
    },
    "comments": [
        "The course is time consuming and seems difficult at first, but is doable if you have a good homework group and put in enough work. Attending lecture is a must, and the professor does a good job explaining the topics and showing examples. If you compete the homeworks and understand them, the exams will be easier.",
        "It is the most interesting math class I've taken at Northwestern. Prof.Rao is a really great lecturer. The homework questions are sometimes difficult while the exams are relatively easy.",
        "It's very challenging if you have no background in higher maths. Be prepared to spend hours on homework sets.",
        "This course was very challenging and I felt that learning proofs leads to less understanding of material and more just using theorems and creativity to solve problems.",
        "I was very pleased with this course. I think it challenged me intellectually while also teaching me in a such a way that I will retain much of this material for a long period of time. The course also helped me see the relevance of many mathematical ideas in fields of computer science.",
        "I felt the amount of course content covered in each lecture was very large. While the proofs were all pretty hard, they do not reach the un\u2013understandable level yet.",
        "The class is tough. I didn't have much proof based math background coming in to the course and found it quite challenging. The weekly problem sets are pretty much impossible to do without office hours so go to those. The exams aren't as bad, but the course is hard and Shravas isn't the best but if you rewatch lectures and read the textbook you should be fine. Just don't go into the class expecting an A without really working for it",
        "Generally a challenging class but office hours and assignments helped me understand the concepts.",
        "It's not as hard as a lot of people say, homeworks are only 4 questions each week and I could generally finish them in 2 or 3 hours of uninterrupted work. Midterm wasn't very difficult, hopefully final is similar. Homework problems are far harder than midterm problems, but there's lots of office hours time and lowest homework is dropped so not too bad. The math is also pretty interesting, lots of interesting algorithms",
        "The lectures for this class are really boring and not super helpful. I think the homework assignments were difficult but manageable, especially if you work with a group and go to office hours.",
        "This is a really interesting course, albeit difficult. Rao can sometimes be a little unfocused his lecturing or start proofs without mentioning why, but overall he was a solid professor.",
        "This class is not necessarily too hard if you go to office hours. It's hard to practice for the exams, however, as many of these questions are very abstract. Shravas is great though",
        "This class is notoriously difficult. I will say that having background in math and proofs helps a lot, as proofs are not exactly taught in the most straightforward manner. Just make sure to have some friends and be in a good group with people that know math and to go to office hours very often to get help on the homework.",
        "Overall I think the class was pretty chill, more chill than other people told me it was beforehand. One homework per week, if you work together with other people you can normally do ok on them, just make sure to start early as the amount of time you spend per week on them can vary a lot. Shravas is really chill and open to answering questions. Overall, nice class.",
        "this course was challenging, find a good TA that can help you get pass the roadblocks on some of the homework problems",
        "This was a difficult class. It's entirely proof\u2013based. Except for basic algebra, there isn't any complicated math in the class, only complicated theorems and concepts. The homeworks are difficult and require a fair amount of time, although your mileage may vary depending on how good you are at math. I'm mediocre at math and I found this class very difficult. Professor Shravas lets you work in groups for the homework, so definitely take advantage of that. There are also plenty of office hours for people who need help, although it could be difficult to actually ask for help in them.",
        "Cool",
        "If you do now have a foundation in proofs or any of discrete maths, get that foundation before taking this class. The only reason I survived was because I had access to such a foundation from before. If you do have a background in mathematical reasoning or competition math, especially the latter as many concepts in this course are used there, then you may find the class a breeze. You may spend more time writing solutions instead of making them, and also cursing the gods for how this course makes things as simple as counting needlessly (from one perspective) tedious.Homework is not as accessible though, as solutions and advisory require you to physically go to a room in Mudd instead of being accessible online, like almost every other class, so be prepared to have to physically go to your answers or get advice from people who know the class.",
        "This course material can be very dry at times, but Shravas is an excellent professor who does a superb job of explaining every intricacy of every proof that he writes during lecture. Homework problems are definitely tough but there are so many resources and office hours provided to make them manageable. I highly recommend you take this class with someone you know to be reliable, as having a partner on the homework makes it a lot less time consuming. Lastly, homework can either be done in Latex or by hand, so unless you already have experience in Latex or think that you will need to rely on it heavily in future classes, you're probably better off not going through the learning curve and just doing every homework by hand as long as you have the option to do so. Shoutout to the PMs for being the best!",
        "This class is hard, but that's pretty common knowledge. The peer mentors were super helpful for working on the homeworks \u2013 you can definitely get 100%s on all of the homeworks if you utilize their help and start early, which gives you a solid buffer for the exams since homework makes up 40% of the grade. The exams are hard, but they give tons of partial credit and curve it like crazy. So study hard, but don't freak yourself out too much.Doing well in this class is a BIG time commitment, but doable if you have the time to give to it. Planning to take it during a quarter where you're taking easier classes would help!",
        "It's really unfair that this class exists, the idea that this is supposed to weed out people who aren't prepared for a CS major sucks because I'm almost done with the major and this is by far the hardest, least useful, class I have taken. They should market it as something majors have to take in their last year instead of early on or they should just rework it period. The last two weeks of material are not even on the final, I say we get rid of them and use those two weeks to get more practice on problems that will be on the final. The homeworks are incredibly, incredibly difficult, which makes the rather easy midterm/final questions impossible to understand because we have never seen anything like them before. The homeworks should be half difficult, more theoretical problems, and half easy problems that will give us the foundation to do the midterms and finals. Don't take this class unless you have to, it sucks, the CS department is terrible. Also the teachers don't like helping students and often just leave Campuswire questions unanswered. But I've heard Shravas is somehow better than the other guy so I don't know.",
        "You already know it. This class isn't easy. However, it's nowhere near as bad as everyone said. My friends and I would just spend all Sunday working on it in Office Hours (god bless them) and got As on all the homeworks. The midterm had an amazing curve (like 20%) and I'm expecting similar for the final. Not too bad. Take it and get it over with :)",
        "I think this class is underhyped, but like...not *that* much. People always say this class is useless but like that's literally true about all CS classes like if you actually just want a swe job with as little student debt as possible literally do not go to college and just grind by yourself and do leetcode. Like I actually bet you the average networth of people who go through the CS curriculum here is lower than the net worth of people who take 211 and 214 and then drop out of college. Anyway, 212 isn't useless per say, it's just you only really need to absorb ~15% percent of it, not 100% of it. Like, I don't remember what the context was, but recently during a coding interview I was able to out of nowhere whip up something like \"Oh yeah, well if you initialized 2 variables to the same int value and then incremented 1 of them and then took their sum, the sum would be an odd number regardless of whether the original value was even or odd. And I feel like taking 212 has made me better at thinking like that. You also need it to take 336 which *is* actually useful for interviews kinda sorta. My biggest complain would probably be course organization. It's not even that I think the contents of each roughly defined unit (tutorial, set theory, probability part 1, probability part 2, graph theory) don't have the potential to fit together well enough, but I just felt like the class wasn't really taught with like a clear sorta central narrative, right? Like, it wasn't really clear to me how the things we discussed built on top of each other, they all just sorta felt like basically unrelated subjects laid out horizontally to one another. At the same time, there isn't really a super fancy reason for why you need set theory to be able to do graph theory, it's just like, sometimes V or E are defined as tricky sets. Even still, I felt like the prof cud have made at least some sort of an attempt to make that a thing. Like, the first lecture we didn't even try to make an argument for this class was relevant, nor did we like discuss what sort of work this class would be doing (i.e. like, i've taken the phil class on truth functional logic, where, if anywhere, maybe nowhere, does this class fit into that?). Early in the class I really struggled to gauge what was like \"sufficient\" to successfully construct a proof or like what the \"rules\" were. Like, I thought the whole idea of formal proofs was that it let you be really clinical about math and logic and prove things about logic beyond a doubt in a way akin to like natural science. But it sorta just felt like \"anything goes,\" which just compounded upon the already inevitable amount of feeling like a proof only worked solely because the prof said so (see, The Aspen Tree Theorem). This as again compared to a class like phil 150 where when we did proofs we were given a set of like, basically ~3 legal moves that we could then combine (and we're shown how to combine during lecture) into an array of techniques that were more sophisticated yet still very clearly enumerated and finite. Maybe the sort of stuff we're doing here just simply doesn't allow for that sort of an approach, I would not be surprised if that was the case.My other big complaint is that I think too much class time is spent on proofs of big\u2013name theorems. Like, I don't really think that having us watch the prof prove Chevy Chase's Inequality helps us better understand how to deploy it. The thing about this sort of logic I feel like is that because you're trying to pin things down beyond a doubt instead of just relying on things feeling intuitive, sometimes you have to do really roundabout things that really aren't all that immediately related to the relationship embodied in the theorem you're proving.  But these are all critiques that I think really only pertain to the 212 curriculum overall honestly, and I would be surprised if any prof's version of this class was especially better or worse about them. Shravas is very chill and smart, there's never a question he can't answer and most of his time formulating a response is just trying to figure out how to explain it to our noob\u2013y swe brains. I definitely think he's a good prof to take this class with. Go to lecture and go to discussion section. Going to discussion section REALLY helped me. If you feel like you're bombing the midterm while taking it, know that my 54 got curved to an 83 so don't panic like I did just keep your nose to the grindstone and try to get as much partial credit as possible. I feel like this class is VERY hard, and yet it isn't the most time intensive class in the world. It's just, the time you do spend on you really need to be seriously dialed in. Also, the homeworks are essentially impossible without going to office hours. Luckily, office hours really do be out here existing, so go to them.",
        "If you've taken a math department course that deals with proofs, this course will be very easy.",
        "Shravas is a clear lecturer. This class covers a lot of material but keeps things at a fairly basic level. The homeworks and midterm were both reasonable as long as you understood what had been done in lecture.",
        "go to office hours!! the homeworks are hard, but doable with good guidance. the tests are not as hard as the homeworks",
        "The theory on its own is cool... I actually kind of like the math we did, even if it was basically impossible! The fact that there was no application, or even an attempt to apply the theory to CS, was so frustrating.It was truly difficult. I think maybe how hard it is can be exaggerated? Not by much. The material is challenging, and of 24 different homework problems I did, I was able to accurately complete 2 without going to office hours. I spent usuall.y 5\u20137 hours in OH a week. This is an upside of the class: the PMs are generous and willing to basically just guide you to the answers. Because of that, I averaged 98% on the homework. The midterm is hard (50\u201355%ish was a B), but it's curved. We haven't taken the final yet, but I hear it's curved too, and the class as a whole might be as well! One can hope...Unfortunately, though Shravas is a kind person, he's not an engaging lecture whatsoever. He is quiet and seems to be reading off his notes the whole time, meaning he has no room to adapt the curriculum to the student's needs.",
        "Professor: 4/10. Interest: 2/10. Difficulty: 2/10.Professor Rao is a nice guy, although his lecturing style is a bit unmotivated and class can get boring at times. The proofs shown in class are a bit questionable, I think that a lot of times they are overly complicated in order to force a way of doing it that includes the topic of the day. It's also my opinion that some students make the homework and tests way more difficult than they need to be, because they try to replicate these overly complicated methods in their own proofs without finding a more straightforward solution.When reviewing, I would suggest reading the book instead of looking at the lecture notes. If you wanted to review a specific example only given in the lecture notes, I would suggest pulling up the panopto recordings to help in your review. Sometimes steps are left out in the lecture notes. Do make use of the practice midterms/finals they give you. The midterm specifically was basically the same problems as the practice midterms, with a few specifics tweaked.",
        "This course rushes through a lot of content, would recommend taking Math 300 + 308 instead (you still get credit for CS 212 and the instruction is much better).",
        "What you've read in other CTECs for the class is pretty much true, point\u2013blank. The class covers stuff that the majority of us will never interact with outside of the class itself and the theory requirement. Lectures generally weren't too hard to follow, but their main flaw was in Shravas giving examples and example proofs that weren't complete, weren't adequately explained, and were often next\u2013to\u2013useless for working on the HW or studying for either exam since their bases were never fully covered. Unfortunately you can't get out of taking the class, so... sorry. It made me consider dropping the major a couple of times but I pulled through and hopefully passed; I hate to pile on to the dread you might already have before taking the course (I tried going in with a positive mindset), but depressingly this is the reality. With that said, here's the grading breakdown:Assignments \u2013 40%Midterm \u2013 25%Final \u2013 35%Assignments are four proofs each (sometimes with multiple parts) that you work on with up to two other people, and they were super time\u2013consuming. The longest one that I did took me something like 14 hours. With that said, OH are an absolute lifesaver \u2013\u2013 some of the PMs took themselves way too seriously and refused to help you check your work or explain the material, but the majority seemed to understand how hard the class is and were happy to help guide you through the proof\u2013minefield (so long as you actually put in the legwork). They drop the lowest assignment, which is nice I guess, and questions about the problems were always answered pretty quickly on Campuswire by course staff. The midterm and final were 5 and 6 questions, respectively, and are what I can only describe as hellish. You're given two practice exams to look at for each, but don't let doing well on those fool you! They weren't indicative of the question types that showed up on exams. Studying was also a massive pain, since it's impossible to prep for question types that you've never seen before. I wasn't able to find any good online resources to practice with, but other people may have. Thankfully, they were pretty generous with partial credit, and the exams are curved (around a 50% on the midterm was a B\u2013) which is a saving grace. While I'm writing this our finals still haven't been graded, but I know myself and others are seriously relying on the curve to get us through the class. In my opinion, having exams is kind of ridiculous given how long the homework takes, even if the questions are easier.Good luck. PS: It's worth saying that the class could absolutely be worse \u2013\u2013 like if lecture notes weren't posted and everything was written on a chalkboard, or Shravas didn't explain anything \u2013\u2013 but I consider that a really low bar. Something I did appreciate though was that class was streamed simultaneously on Zoom, and recordings were posted, which was an absolute lifesaver if you missed class or wanted to review. That's one of the only positive things I can say about the class.",
        "Shravas is a very chill professor, and he does as well as you'd expect from any professor who's teaching material that would most likely be bland to a lot of students. The lectures felt a little unhelpful because they didn't go as in\u2013depth as the homework. Most of the learning you'll do for this class will come from doing the homework assignments and going to office hours. Overall, I wouldn't say this class was a waste of my time. I only wish that the final wasn't as brutal as it was \u2013 it felt much harder than the homeworks, which are supposed to be easier than the exams.",
        "This is a very tough course, so I would highly recommend going to office hours as often as you can if you take it. It will challenge you, but it is possible to persevere if you accept the opportunities for help. Make sure to set aside time for weekly homework assignments and ask questions if you have any. Also, attend the optional discussion sections if possible. This course will take you a lot of time, but the time taken will help you learn!",
        "The course notes were difficult to understand",
        "Very hard, strongly recommend going to office hours and finding a good homework group.",
        "I think this class requires more than just the content learned in class. If you come from a background that does not contain a lot of proof based math, it is going to be quite difficult to wrap your head around some of the core concepts. For me that was the most difficult part, along with the fact that the class moves at a very fast pace.",
        "This class makes me feel stupid. There's no assigned work to do outside of watching lectures & doing weekly homeworks. However, if you want to do well and actually understand stuff, you're going to need to do a fair amount of practice outside of class (unless you have a background in math, in which case, you'll probably be fine).",
        "It's definitely a hard class, and the homework require a lot of time just to figure out what you're supposed to do. Luckily exams are more straightforward, but it was definitely not an enjoyable experience. It's a required class for computer science, so it is what it is. Professor Rao is great and the TAs were helpful, it's just a rough class.",
        "This class is straight up not a CS class, it's a math class. I am not interested in this content at all, but the professor was very good at teaching it. 40% of the grade is homework, which tends to be pretty tough and take a lot of time. However, office hours are super helpful, and the homeworks are quite good at teaching you the necessary content. Midterm and final are much tougher than the practice exams they give you. Do not be fooled, the exams will be tough.",
        "Great class. You have to stay on top of it, but the content is very important and the lectures are good.",
        "This class is really hard. There's no getting out of if you're CS so try to take it in an easier quarter. Shravas is a fine professor. Then again I don't think you could necessarily teach this class that well to the point its easily understood cause its really hard.",
        "This course pushed me past my comfort zone to develop my mathematical knowledge in a computer science context.",
        "A good class. The material is pretty interesting, and it's really helpful to have the lecture recordings. Grading is fair.",
        "Take this class with Shravas! This is a fast\u2013paced course with a lot of content as well as non\u2013trivial homeworks and exams. I found this class very interesting and Shravas gives a lot of help inside and outside of class. He's also just a cool person in general so it's hard to not enjoy your time in class though the content can sometimes be a pain.",
        "Professor Shravas is a really nice guy, but I did not think he was an effective professor. I didn't feel like the lectures were helpful for the homework past the first assignment and I basically spent all my time learning during office hours, which were definitely really helpful. For those taking this class in the future, I definitely recommend going to office hours, because the homeworks are really difficult. Additionally, I was a bit annoyed by the fact that Professor Shravas would mention that he'd post a hint on Campuswire for specific questions, but would wait until Sunday 3 PM to actually post them, which was frustrating because my group would work on the assignments on Sunday Mornings and having to wait for the hints was not fun.",
        "Assignments tend to take a while to figure out. Lectures were just definitions and proofs and not very engaging. Personally, the material was not too bad but trying to use said material to figure out the logic for proofs was.",
        "This class is pretty miserable regardless of who you take it with, but you kind of have to take it for the CS major. Shravas is pretty chill and genuinely seems to want his students to succeed\u2013\u2013he can't make the content seem super interesting, but that's not his fault when it is seriously just that dry. Homework assignments are super long and time\u2013consuming, and even just *starting* the homework is an intellectual hurdle in and of itself\u2013\u2013but if you have a good group, you can get through it, but you'll still probably struggle. Unless you've done higher math before, learning how to write a proof is a learning curve on top of the already confusing content\u2013\u2013which is taught so quickly that it's hard to keep up, so rewatching the lectures (if recorded on Panopto) is probably necessary. The good thing is that the midterm was not nearly as hard as the homework. I can't speak for the final, because I haven't taken it yet, but the midterm was quite generously curved, so if your brain can't save you, the curve probably will. Overall, I can't count on my fingers the number of times this class had me contemplating dropping the CS major, but I guess it's near\u2013decent with Shravas.",
        "Office hours and homework partners are essential. Very hard and difficult to grasp. The prof and TAs are nice.",
        "This is probably one of the worst courses I have ever taken. Although I have a very strong interest in Computer Science, the instruction was really unengaging and confusing, making it really hard to focus and actually retain the material I was supposed to learn in this class. I'm sure people who have experience with proof\u2013based mathematics will not find this class that difficult, but my zero experience in proofs made it a lot more difficult, especially since the lectures were very unclear.",
        "This class is very difficult but rewarding if you put the time and effort into it. The homework\u2019s are very difficult and require a lot of time but the exams are much easier so if you do the homework\u2019s and keep up with the work, the class is manageable."
    ]
}{
    "course_code": "Student Report for COMP_SCI_212-0_1",
    "course_name": "Mathematical Found of Comp Sci",
    "instructor": "Shravas Rao",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.33",
        "count": "69"
    },
    "course_rating": {
        "mean": "4.00",
        "count": "76"
    },
    "comments": [
        "The course is time consuming and seems difficult at first, but is doable if you have a good homework group and put in enough work. Attending lecture is a must, and the professor does a good job explaining the topics and showing examples. If you compete the homeworks and understand them, the exams will be easier.",
        "It is the most interesting math class I've taken at Northwestern. Prof.Rao is a really great lecturer. The homework questions are sometimes difficult while the exams are relatively easy.",
        "It's very challenging if you have no background in higher maths. Be prepared to spend hours on homework sets.",
        "This course was very challenging and I felt that learning proofs leads to less understanding of material and more just using theorems and creativity to solve problems.",
        "I was very pleased with this course. I think it challenged me intellectually while also teaching me in a such a way that I will retain much of this material for a long period of time. The course also helped me see the relevance of many mathematical ideas in fields of computer science.",
        "I felt the amount of course content covered in each lecture was very large. While the proofs were all pretty hard, they do not reach the un\u2013understandable level yet.",
        "The class is tough. I didn't have much proof based math background coming in to the course and found it quite challenging. The weekly problem sets are pretty much impossible to do without office hours so go to those. The exams aren't as bad, but the course is hard and Shravas isn't the best but if you rewatch lectures and read the textbook you should be fine. Just don't go into the class expecting an A without really working for it",
        "Generally a challenging class but office hours and assignments helped me understand the concepts.",
        "It's not as hard as a lot of people say, homeworks are only 4 questions each week and I could generally finish them in 2 or 3 hours of uninterrupted work. Midterm wasn't very difficult, hopefully final is similar. Homework problems are far harder than midterm problems, but there's lots of office hours time and lowest homework is dropped so not too bad. The math is also pretty interesting, lots of interesting algorithms",
        "The lectures for this class are really boring and not super helpful. I think the homework assignments were difficult but manageable, especially if you work with a group and go to office hours.",
        "This is a really interesting course, albeit difficult. Rao can sometimes be a little unfocused his lecturing or start proofs without mentioning why, but overall he was a solid professor.",
        "This class is not necessarily too hard if you go to office hours. It's hard to practice for the exams, however, as many of these questions are very abstract. Shravas is great though",
        "This class is notoriously difficult. I will say that having background in math and proofs helps a lot, as proofs are not exactly taught in the most straightforward manner. Just make sure to have some friends and be in a good group with people that know math and to go to office hours very often to get help on the homework.",
        "Overall I think the class was pretty chill, more chill than other people told me it was beforehand. One homework per week, if you work together with other people you can normally do ok on them, just make sure to start early as the amount of time you spend per week on them can vary a lot. Shravas is really chill and open to answering questions. Overall, nice class.",
        "this course was challenging, find a good TA that can help you get pass the roadblocks on some of the homework problems",
        "This was a difficult class. It's entirely proof\u2013based. Except for basic algebra, there isn't any complicated math in the class, only complicated theorems and concepts. The homeworks are difficult and require a fair amount of time, although your mileage may vary depending on how good you are at math. I'm mediocre at math and I found this class very difficult. Professor Shravas lets you work in groups for the homework, so definitely take advantage of that. There are also plenty of office hours for people who need help, although it could be difficult to actually ask for help in them.",
        "Cool",
        "If you do now have a foundation in proofs or any of discrete maths, get that foundation before taking this class. The only reason I survived was because I had access to such a foundation from before. If you do have a background in mathematical reasoning or competition math, especially the latter as many concepts in this course are used there, then you may find the class a breeze. You may spend more time writing solutions instead of making them, and also cursing the gods for how this course makes things as simple as counting needlessly (from one perspective) tedious.Homework is not as accessible though, as solutions and advisory require you to physically go to a room in Mudd instead of being accessible online, like almost every other class, so be prepared to have to physically go to your answers or get advice from people who know the class.",
        "This course material can be very dry at times, but Shravas is an excellent professor who does a superb job of explaining every intricacy of every proof that he writes during lecture. Homework problems are definitely tough but there are so many resources and office hours provided to make them manageable. I highly recommend you take this class with someone you know to be reliable, as having a partner on the homework makes it a lot less time consuming. Lastly, homework can either be done in Latex or by hand, so unless you already have experience in Latex or think that you will need to rely on it heavily in future classes, you're probably better off not going through the learning curve and just doing every homework by hand as long as you have the option to do so. Shoutout to the PMs for being the best!",
        "This class is hard, but that's pretty common knowledge. The peer mentors were super helpful for working on the homeworks \u2013 you can definitely get 100%s on all of the homeworks if you utilize their help and start early, which gives you a solid buffer for the exams since homework makes up 40% of the grade. The exams are hard, but they give tons of partial credit and curve it like crazy. So study hard, but don't freak yourself out too much.Doing well in this class is a BIG time commitment, but doable if you have the time to give to it. Planning to take it during a quarter where you're taking easier classes would help!",
        "It's really unfair that this class exists, the idea that this is supposed to weed out people who aren't prepared for a CS major sucks because I'm almost done with the major and this is by far the hardest, least useful, class I have taken. They should market it as something majors have to take in their last year instead of early on or they should just rework it period. The last two weeks of material are not even on the final, I say we get rid of them and use those two weeks to get more practice on problems that will be on the final. The homeworks are incredibly, incredibly difficult, which makes the rather easy midterm/final questions impossible to understand because we have never seen anything like them before. The homeworks should be half difficult, more theoretical problems, and half easy problems that will give us the foundation to do the midterms and finals. Don't take this class unless you have to, it sucks, the CS department is terrible. Also the teachers don't like helping students and often just leave Campuswire questions unanswered. But I've heard Shravas is somehow better than the other guy so I don't know.",
        "You already know it. This class isn't easy. However, it's nowhere near as bad as everyone said. My friends and I would just spend all Sunday working on it in Office Hours (god bless them) and got As on all the homeworks. The midterm had an amazing curve (like 20%) and I'm expecting similar for the final. Not too bad. Take it and get it over with :)",
        "I think this class is underhyped, but like...not *that* much. People always say this class is useless but like that's literally true about all CS classes like if you actually just want a swe job with as little student debt as possible literally do not go to college and just grind by yourself and do leetcode. Like I actually bet you the average networth of people who go through the CS curriculum here is lower than the net worth of people who take 211 and 214 and then drop out of college. Anyway, 212 isn't useless per say, it's just you only really need to absorb ~15% percent of it, not 100% of it. Like, I don't remember what the context was, but recently during a coding interview I was able to out of nowhere whip up something like \"Oh yeah, well if you initialized 2 variables to the same int value and then incremented 1 of them and then took their sum, the sum would be an odd number regardless of whether the original value was even or odd. And I feel like taking 212 has made me better at thinking like that. You also need it to take 336 which *is* actually useful for interviews kinda sorta. My biggest complain would probably be course organization. It's not even that I think the contents of each roughly defined unit (tutorial, set theory, probability part 1, probability part 2, graph theory) don't have the potential to fit together well enough, but I just felt like the class wasn't really taught with like a clear sorta central narrative, right? Like, it wasn't really clear to me how the things we discussed built on top of each other, they all just sorta felt like basically unrelated subjects laid out horizontally to one another. At the same time, there isn't really a super fancy reason for why you need set theory to be able to do graph theory, it's just like, sometimes V or E are defined as tricky sets. Even still, I felt like the prof cud have made at least some sort of an attempt to make that a thing. Like, the first lecture we didn't even try to make an argument for this class was relevant, nor did we like discuss what sort of work this class would be doing (i.e. like, i've taken the phil class on truth functional logic, where, if anywhere, maybe nowhere, does this class fit into that?). Early in the class I really struggled to gauge what was like \"sufficient\" to successfully construct a proof or like what the \"rules\" were. Like, I thought the whole idea of formal proofs was that it let you be really clinical about math and logic and prove things about logic beyond a doubt in a way akin to like natural science. But it sorta just felt like \"anything goes,\" which just compounded upon the already inevitable amount of feeling like a proof only worked solely because the prof said so (see, The Aspen Tree Theorem). This as again compared to a class like phil 150 where when we did proofs we were given a set of like, basically ~3 legal moves that we could then combine (and we're shown how to combine during lecture) into an array of techniques that were more sophisticated yet still very clearly enumerated and finite. Maybe the sort of stuff we're doing here just simply doesn't allow for that sort of an approach, I would not be surprised if that was the case.My other big complaint is that I think too much class time is spent on proofs of big\u2013name theorems. Like, I don't really think that having us watch the prof prove Chevy Chase's Inequality helps us better understand how to deploy it. The thing about this sort of logic I feel like is that because you're trying to pin things down beyond a doubt instead of just relying on things feeling intuitive, sometimes you have to do really roundabout things that really aren't all that immediately related to the relationship embodied in the theorem you're proving.  But these are all critiques that I think really only pertain to the 212 curriculum overall honestly, and I would be surprised if any prof's version of this class was especially better or worse about them. Shravas is very chill and smart, there's never a question he can't answer and most of his time formulating a response is just trying to figure out how to explain it to our noob\u2013y swe brains. I definitely think he's a good prof to take this class with. Go to lecture and go to discussion section. Going to discussion section REALLY helped me. If you feel like you're bombing the midterm while taking it, know that my 54 got curved to an 83 so don't panic like I did just keep your nose to the grindstone and try to get as much partial credit as possible. I feel like this class is VERY hard, and yet it isn't the most time intensive class in the world. It's just, the time you do spend on you really need to be seriously dialed in. Also, the homeworks are essentially impossible without going to office hours. Luckily, office hours really do be out here existing, so go to them.",
        "If you've taken a math department course that deals with proofs, this course will be very easy.",
        "Shravas is a clear lecturer. This class covers a lot of material but keeps things at a fairly basic level. The homeworks and midterm were both reasonable as long as you understood what had been done in lecture.",
        "go to office hours!! the homeworks are hard, but doable with good guidance. the tests are not as hard as the homeworks",
        "The theory on its own is cool... I actually kind of like the math we did, even if it was basically impossible! The fact that there was no application, or even an attempt to apply the theory to CS, was so frustrating.It was truly difficult. I think maybe how hard it is can be exaggerated? Not by much. The material is challenging, and of 24 different homework problems I did, I was able to accurately complete 2 without going to office hours. I spent usuall.y 5\u20137 hours in OH a week. This is an upside of the class: the PMs are generous and willing to basically just guide you to the answers. Because of that, I averaged 98% on the homework. The midterm is hard (50\u201355%ish was a B), but it's curved. We haven't taken the final yet, but I hear it's curved too, and the class as a whole might be as well! One can hope...Unfortunately, though Shravas is a kind person, he's not an engaging lecture whatsoever. He is quiet and seems to be reading off his notes the whole time, meaning he has no room to adapt the curriculum to the student's needs.",
        "Professor: 4/10. Interest: 2/10. Difficulty: 2/10.Professor Rao is a nice guy, although his lecturing style is a bit unmotivated and class can get boring at times. The proofs shown in class are a bit questionable, I think that a lot of times they are overly complicated in order to force a way of doing it that includes the topic of the day. It's also my opinion that some students make the homework and tests way more difficult than they need to be, because they try to replicate these overly complicated methods in their own proofs without finding a more straightforward solution.When reviewing, I would suggest reading the book instead of looking at the lecture notes. If you wanted to review a specific example only given in the lecture notes, I would suggest pulling up the panopto recordings to help in your review. Sometimes steps are left out in the lecture notes. Do make use of the practice midterms/finals they give you. The midterm specifically was basically the same problems as the practice midterms, with a few specifics tweaked.",
        "This course rushes through a lot of content, would recommend taking Math 300 + 308 instead (you still get credit for CS 212 and the instruction is much better).",
        "What you've read in other CTECs for the class is pretty much true, point\u2013blank. The class covers stuff that the majority of us will never interact with outside of the class itself and the theory requirement. Lectures generally weren't too hard to follow, but their main flaw was in Shravas giving examples and example proofs that weren't complete, weren't adequately explained, and were often next\u2013to\u2013useless for working on the HW or studying for either exam since their bases were never fully covered. Unfortunately you can't get out of taking the class, so... sorry. It made me consider dropping the major a couple of times but I pulled through and hopefully passed; I hate to pile on to the dread you might already have before taking the course (I tried going in with a positive mindset), but depressingly this is the reality. With that said, here's the grading breakdown:Assignments \u2013 40%Midterm \u2013 25%Final \u2013 35%Assignments are four proofs each (sometimes with multiple parts) that you work on with up to two other people, and they were super time\u2013consuming. The longest one that I did took me something like 14 hours. With that said, OH are an absolute lifesaver \u2013\u2013 some of the PMs took themselves way too seriously and refused to help you check your work or explain the material, but the majority seemed to understand how hard the class is and were happy to help guide you through the proof\u2013minefield (so long as you actually put in the legwork). They drop the lowest assignment, which is nice I guess, and questions about the problems were always answered pretty quickly on Campuswire by course staff. The midterm and final were 5 and 6 questions, respectively, and are what I can only describe as hellish. You're given two practice exams to look at for each, but don't let doing well on those fool you! They weren't indicative of the question types that showed up on exams. Studying was also a massive pain, since it's impossible to prep for question types that you've never seen before. I wasn't able to find any good online resources to practice with, but other people may have. Thankfully, they were pretty generous with partial credit, and the exams are curved (around a 50% on the midterm was a B\u2013) which is a saving grace. While I'm writing this our finals still haven't been graded, but I know myself and others are seriously relying on the curve to get us through the class. In my opinion, having exams is kind of ridiculous given how long the homework takes, even if the questions are easier.Good luck. PS: It's worth saying that the class could absolutely be worse \u2013\u2013 like if lecture notes weren't posted and everything was written on a chalkboard, or Shravas didn't explain anything \u2013\u2013 but I consider that a really low bar. Something I did appreciate though was that class was streamed simultaneously on Zoom, and recordings were posted, which was an absolute lifesaver if you missed class or wanted to review. That's one of the only positive things I can say about the class.",
        "Shravas is a very chill professor, and he does as well as you'd expect from any professor who's teaching material that would most likely be bland to a lot of students. The lectures felt a little unhelpful because they didn't go as in\u2013depth as the homework. Most of the learning you'll do for this class will come from doing the homework assignments and going to office hours. Overall, I wouldn't say this class was a waste of my time. I only wish that the final wasn't as brutal as it was \u2013 it felt much harder than the homeworks, which are supposed to be easier than the exams.",
        "This is a very tough course, so I would highly recommend going to office hours as often as you can if you take it. It will challenge you, but it is possible to persevere if you accept the opportunities for help. Make sure to set aside time for weekly homework assignments and ask questions if you have any. Also, attend the optional discussion sections if possible. This course will take you a lot of time, but the time taken will help you learn!",
        "The course notes were difficult to understand",
        "Very hard, strongly recommend going to office hours and finding a good homework group.",
        "I think this class requires more than just the content learned in class. If you come from a background that does not contain a lot of proof based math, it is going to be quite difficult to wrap your head around some of the core concepts. For me that was the most difficult part, along with the fact that the class moves at a very fast pace.",
        "This class makes me feel stupid. There's no assigned work to do outside of watching lectures & doing weekly homeworks. However, if you want to do well and actually understand stuff, you're going to need to do a fair amount of practice outside of class (unless you have a background in math, in which case, you'll probably be fine).",
        "It's definitely a hard class, and the homework require a lot of time just to figure out what you're supposed to do. Luckily exams are more straightforward, but it was definitely not an enjoyable experience. It's a required class for computer science, so it is what it is. Professor Rao is great and the TAs were helpful, it's just a rough class.",
        "This class is straight up not a CS class, it's a math class. I am not interested in this content at all, but the professor was very good at teaching it. 40% of the grade is homework, which tends to be pretty tough and take a lot of time. However, office hours are super helpful, and the homeworks are quite good at teaching you the necessary content. Midterm and final are much tougher than the practice exams they give you. Do not be fooled, the exams will be tough.",
        "Great class. You have to stay on top of it, but the content is very important and the lectures are good.",
        "This class is really hard. There's no getting out of if you're CS so try to take it in an easier quarter. Shravas is a fine professor. Then again I don't think you could necessarily teach this class that well to the point its easily understood cause its really hard.",
        "This course pushed me past my comfort zone to develop my mathematical knowledge in a computer science context.",
        "A good class. The material is pretty interesting, and it's really helpful to have the lecture recordings. Grading is fair.",
        "Take this class with Shravas! This is a fast\u2013paced course with a lot of content as well as non\u2013trivial homeworks and exams. I found this class very interesting and Shravas gives a lot of help inside and outside of class. He's also just a cool person in general so it's hard to not enjoy your time in class though the content can sometimes be a pain.",
        "Professor Shravas is a really nice guy, but I did not think he was an effective professor. I didn't feel like the lectures were helpful for the homework past the first assignment and I basically spent all my time learning during office hours, which were definitely really helpful. For those taking this class in the future, I definitely recommend going to office hours, because the homeworks are really difficult. Additionally, I was a bit annoyed by the fact that Professor Shravas would mention that he'd post a hint on Campuswire for specific questions, but would wait until Sunday 3 PM to actually post them, which was frustrating because my group would work on the assignments on Sunday Mornings and having to wait for the hints was not fun.",
        "Assignments tend to take a while to figure out. Lectures were just definitions and proofs and not very engaging. Personally, the material was not too bad but trying to use said material to figure out the logic for proofs was.",
        "This class is pretty miserable regardless of who you take it with, but you kind of have to take it for the CS major. Shravas is pretty chill and genuinely seems to want his students to succeed\u2013\u2013he can't make the content seem super interesting, but that's not his fault when it is seriously just that dry. Homework assignments are super long and time\u2013consuming, and even just *starting* the homework is an intellectual hurdle in and of itself\u2013\u2013but if you have a good group, you can get through it, but you'll still probably struggle. Unless you've done higher math before, learning how to write a proof is a learning curve on top of the already confusing content\u2013\u2013which is taught so quickly that it's hard to keep up, so rewatching the lectures (if recorded on Panopto) is probably necessary. The good thing is that the midterm was not nearly as hard as the homework. I can't speak for the final, because I haven't taken it yet, but the midterm was quite generously curved, so if your brain can't save you, the curve probably will. Overall, I can't count on my fingers the number of times this class had me contemplating dropping the CS major, but I guess it's near\u2013decent with Shravas.",
        "Office hours and homework partners are essential. Very hard and difficult to grasp. The prof and TAs are nice.",
        "This is probably one of the worst courses I have ever taken. Although I have a very strong interest in Computer Science, the instruction was really unengaging and confusing, making it really hard to focus and actually retain the material I was supposed to learn in this class. I'm sure people who have experience with proof\u2013based mathematics will not find this class that difficult, but my zero experience in proofs made it a lot more difficult, especially since the lectures were very unclear.",
        "This class is very difficult but rewarding if you put the time and effort into it. The homework\u2019s are very difficult and require a lot of time but the exams are much easier so if you do the homework\u2019s and keep up with the work, the class is manageable."
    ]
}{
    "course_code": "Student Report for EECS_212-0_1",
    "course_name": "Mathematical Found of Comp Sci",
    "instructor": "Aravindan Vijayaraghavan",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "4.67",
        "count": "88"
    },
    "course_rating": {
        "mean": "3.97",
        "count": "88"
    },
    "comments": [
        "Overall I thought this was a good course although it could be very stressful at times. If you start the HW assignments early and have good partners to work with it is not awful although I found the practice exams not exactly reflective of the actual exams given. Generally, I learned a lot in this course although it is very important to stay on top of the material and HWs otherwise it will be a rough time.",
        "This course is hard and a bit time consuming. Budget for that.",
        "This class was great and Aravindan was a good lecturer. The homework assignments are difficult but with the help of TAs during office hours, they are doable.",
        "It is difficult and will take some time from you, but it will pay off.",
        "I know many people complain about this class but this is one of my favorite class so far. I really find discrete math interesting and the professor was really focusing on helpling us learn instead of just for better grade. Thank you professor.",
        "Great course that introduces proofs and important theorems effectively.",
        "Homeworks were very challenging but necessary for the content of the course",
        "Prof V is one of my favorite CS professors. He does a great job of delivering the material in a sensical way. However, you're on your own with the assignments. They're worth a good portion of your grade, so take them seriously and just know that you better have a good group and utilize office hours as much as you can. Good luck...",
        "There's altogether too much content over too many topics. Not enough time was spent for anything to stick. Would really help to have some previous knowledge in all the topics that are covered.",
        "Overall I thought this was a good class: working with the math side of CS was interesting and a lot of puzzle solving which was a nice break from coding. Having a good group is key and all work is group work which is nice. 1 midterm 1 final and the class is heavily curved which works out, so even though I failed both midterm and final I'm still gonna have a B in the class. Work hard on problem sets and you'll be fine. Don't over stress yourself because it's going to be fine. Aravindan is a great professor also, and was very accommodating.",
        "Although the course is very challenging at times, especially toward the end of the quarter, much of the course material can be learned thoroughly through enough time spent with the topics and problem sets. Do not wait until the night before an assignment is due to begin it.",
        "This course covers a lot of material and that may be an understatement. Almost every lecture is a completely new topic in math. That being said, the math itself is interesting and definitely applicable to computer science in a theoretical way. Problem sets can be extremely difficult so start early and get a good team. Also don't expect to kill tests, they are really quite hard and a single wrong question can put you down 25%.",
        "Take this class with Prof. Aravindan! He is excited about the course material and is so sweet. He will sit with you in office hours and help you with whatever you need. The material is interesting but very hard if you've never seen proof\u2013based abstract mathematics before, but lots of studying and online videos should help you. Psets are done in partners so choose a good one! The tests are extremely difficult but the class is curved so it will all turn out okay if you study lots and go to OH!",
        "Not as hard as people say if you start early and go to office hours every week.",
        "Definitely a difficult class, especially for someone who's never done proofs before, but there are a ton of office hours and the TAs were super helpful in figuring out the homework problems. Definitely spend time in OH before turning in assignments.",
        "Find a good group for homework. It's definitely a difficult class because the concepts themselves are hard to wrap your head around. You don't really learn how it relates back to computer science, and what you learn in class vs. what you do for homework and the exams is classic northwestern where you need to know a lot more than actually taught.",
        "Crazy hard class in my opinion. It at times felt like a math class as opposed to an EECS class, as I felt that lecture lacked concrete CS examples and applications of what we are learning. Homework is hard and often times utilizes class topics in a niche or abstract way, so start early and utilize the group principle. Office hours go a long way.",
        "This course was extremely difficult. The homeworks each week took multiple hours, and the exams were extremely challenging and hard to finish within the allotted time. I suggest taking a light course load when you take this class.",
        "I learned a lot and sharpened my math skills through this course. It's pretty hard if you don't have a strong math background so be sure to go to office hours for help with psets or understanding concepts.",
        "This course was particularly difficult. I didn't enjoy math that much to begin with, but this class at times felt unnecessarily hard at times. I didn't appreciate how time\u2013consuming the psets were. I think a good analogy for this course is trying to run when you haven't even learned to walk yet. The professor isn't bad at explaining the concepts, but the difficulty of the psets often exceeded what we learned in class. I'd appreciate it if he threw in a few simpler problems to get our feet wet before leaping into especially advanced problems. Moreover, given the notoriety of this course, I was upset at how few office hours there were. When there were office hours, the room was way too crowded and not conducive to students to ask questions. Overall, expect this course to be hard and time\u2013consuming, and try your best to keep up.",
        "This class is definitely hard and requires you to put in a fair amount of work so be prepared.",
        "Hard, but good class. You definitely learn a ton, especially with Professor Vijayaraghavan. The problem sets make sure you know how to apply the concepts and don't be afraid to ask for help from the TAs.",
        "Lots of work and the problem sets take a long time so start early.",
        "I believe that this course was interesting, difficult, and had very good instruction that made it a very complete class. This class is heavily mathematically focused and requires commitment to do well in (in and out of class).",
        "We all know the rumors regarding this course. I was just trying to take this course and get it over with. The homework assignments were very hard, but going to office hours helped a ton.",
        "This class is pretty hard. It was a struggle staying awake in this class for a lot of people. I think I still learned a lot from the 8 problem sets, and I'm super grateful for the generous curve.",
        "The course is alright. The content is tough and somewhat boring, especially if you like practical stuff more than theoretical, but managing and not that time consuming.",
        "There is a generous curve. Homeworks can be hard. Study the practice exams.",
        "Kind of annoying class. It really matters that you go to office hours because these assignments are not common sense and honestly the material in class doesnt fully prepare you for the homework or quizzes. Im glad its over with",
        "Very hard, go to office hours and read the book every lecture, curve is nice tho",
        "This course was really difficult. The problem sets took so long and some of them were even unworkable without office hours. People say this is one of the hardest eecs classes you take, so if you don't need it, don't take it. There is a curve though which is nice.",
        "Weird difference in grade distribution for tests and PSETS",
        "Hard ass class, lives up to the reputation. Office hours are a god send because lecture barely scratches the surface on anything. The TAs are the best \u2013 literally your lifeline on these homeworks. Honestly, TAs do a better job explaining than the professor. Put in the time to go into office hours, start early, form a good group and you'll survive this class.",
        "This class is tough. the midterm is hard and the assignments are challenging...if you go to office hours those are helpful & if you take the class with a friend so you can be partners. definitely you have to go to class to keep up and actually understand whats going on.",
        "Class is pretty confusing and its hard to grasp the course material.  It's kinda like a \"how smart are you?\" class because it seems like you do better if you're naturally smart and the amount of time you put in is secondary.  Lecture was boring and didn't seem very important.",
        "Lectures and discussions are not necessary if you have studied for Olympiad Math competitions in the past. Slides are sufficient as a review for the materials l learned in the past. Some of the homework problems can be a little tricky in the last two problem sets. However, in general, the course is pretty easy and fun.",
        "This course is difficult. Make sure you go to office hours each week for help with the problem sets, and also take the course with 2 friends you can form a group with.",
        "Everyone says 213 is the hardest course in the core sequence, but I'd argue this was just as challenging (in different ways). Topics seemed disconnected from both each other and from computer science. Between math and stats classes and some overlap with 214, I'd already seen a lot of the material, yet the homework sets were still incredibly difficult and time\u2013consuming (and due every week), so I have no idea how most people without prior knowledge managed. Office hours were at inconvenient times, too: Homeworks were due on Tuesday, but we wouldn't learn most of the material we needed until Friday, and there was one hour of OH on Monday (crowding 20\u201330 people in a room meant for like 6) and NONE on Tuesday, so it was very hard to get help. Even in OH, the TA's answers tended to be vague and unhelpful. You will rely mostly on your partners, so choose wisely. If you've done 300\u2013level math and or stats, I recommend asking about bypassing this class.",
        "This course was extremely challenging. Considering the load of the HW assignments, it would have made more sense to make them weigh more towards the final grade.",
        "Course is kinda tough but you gotta take it. You definitely learn a lot.",
        "Actually a pretty great class. I learned a ton about different mathematical areas and how they apply to computer science. That being said, the class was a ton of work and was very difficult, especially at the beginning of the quarter. Don't take with other difficult courses. Office hours helped immensely. One of those classes that you'll be glad when it's over, but if you have any interest in math, you'll be glad you had to take it.",
        "Extremely hard class. Go to OH if you want to survive.",
        "Really really really hard course. The homeworks are especially difficult and are often way beyond the scope of what we learn in lecture. We learn the simplest forms of the concepts in lectures and then are asked to apply them in the most high\u2013level and difficult ways possible for the problem sets. That being said, Aravind and the TA's are great and the grading is quite lenient. I think the final grades reflect how much effort you put in. Take advantage of office hours!!",
        "Generally considered one of the least interesting courses in the CS major, to which I agree. Most of the material is covered in other required courses, so I don't fully understand its purpose. Focus is heavily on writing proofs, but in my opinion this is not taught well (in terms of time allocation). The professor is knowledgeable and is not my issue with the class; I feel he made the best of a bad curriculum.",
        "Discrete math is pretty important and is the basis for a lot of other programming concepts. If you want to get into algorithmic ways of breaking down problems, nailing this class forms the basis for a lot of it. It's also insanely interesting.",
        "This is a notoriously tough course. The real challenge comes from needing to cover at least 4 different areas of mathematics in 10 weeks (structure of proofs, probability , graph theory, number theory). However, because of this if one section isn't your cup of tea then one can recover in the other sections. There is no coding in this class. Not even alluding to coding, which I liked. First lecture had the quote \"computer science is to code as astronomy is to the telescope\" [tools of the field]. 8 weekly problem sets that will take many hours every week.",
        "I really liked the course content and the type of thinking we learned in this class. Solving psets were fun because I had a great group and at times it felt like intellectual play rather than homework.",
        "This class is challenging if you've never taken any class that involved proving things because that's all you do in this class. That being said as long you have a good group and go to office hours you will do fine in this class.",
        "This is a class that you would have to take as a major. It's pretty dull mathematical and theoretical stuff that will not seem relevant at all to cs. Having a good foundation of proofs would be very helpful. Doing the homework will take a lot of problem\u2013solving but will help you prepare for the midterm and final because the exams will mostly contain the same problems.",
        "This course is very difficult. The problem sets are not understandable simply from lectures, and because no solutions were posted to anything ever, it makes it very difficult to study for exams. Would suggest taking it knowing who your partners will be, and knowing that they will be able to work through it with you.",
        "If you thought EECS 213 was hard, this class will be worse. Incredibly difficult class if you don't have a strong math background. I'd definitely recommend taking the linear algebra course required for EECS minors/majors before taking 212 if possible, because the last half of the course is a lot of linear algebra with not much instruction on how to do it. Students are often expected to have background on the concepts covered in class. Additionally, the homework assignments are poorly written and incredibly difficult, often being updated throughout the week to fix errors without the due date changing to reflect this. Definitely take this course with people you know so you'll have a group to do homework with. Office hours are practically required for this class, with a weekly discussion section not listed on Caesar. If I hadn't gone to office hours to get help on the homework, there is no way I would've made it through this class. Use office hours! The TAs were one of the few good things about this course.Definitely the worst of the EECS courses I've had to take so far at Northwestern. For as much work as I had to put into this class, I saw very little payoff. Would not recommend.",
        "This is the best professor to take EECS 212 with \u2013 great lectures, supportive and approachable professor, and great TAs too. The curve is very generous and no one assignment or test will generally make or break your grade, so the grading is very fair too.",
        "This course is extremely difficult. Make sure you have ample time to go to office hours because you will need to in order to complete problem sets.",
        "This class is objectively hard, and you'll be spending anywhere from 10 to 15 hours on each problem set.  Go to Aravind's and the TA office hours because they'll help you with the homework so much.  Aravind's also a really good lecturer and is definitely the professor to take this class with.",
        "If you're reading the CTECS for this you know you have to take 212 and you know it will be hard. I was actually impressed by how much I liked it, and I think that Aravindan is a great professor. The material is hard and sometimes overwhelming, but this class exceeded my expectations and is bearable if you have a good group and are disciplined about starting the homework early.",
        "It's a really difficult course, and I wish the final exam had been a little more straightforward, but perhaps it just has to be that way.",
        "Start the problem sets early and go to office hours! Aravindan does a really good job of taking complicated material and explaining it clearly, so go to class also! Remember that this class is required so you just have to take it even though it's difficult, good luck :)",
        "This class definitely lives up to its reputation; it truly is as bad as people say. My recommendation is just go to as many office hours as you can, you're gonna need it.",
        "If you are looking at this then you are probably a CS major and all I can say is this will be a very tedious class. If you are not a CS major and want to take a class in cs to see how it is then stop reading and do not take this class because it is not a good representation of computer science. The lectures are like learning single variable calc and then all the sudden the homeworks are multivariable calc. The homeworks are very difficult and in order to succeed you will have to go to office hours occasionally. Overall, however, the curve is fairly generous.",
        "go to office hours",
        "It was helpful in terms of knowing how to apply math to cs and why it\u2019s important."
    ]
}{
    "course_code": "Student Report for COMP_SCI_212-0_20",
    "course_name": "Mathematical Found of Comp Sci",
    "instructor": "Shravas Rao",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.14",
        "count": "79"
    },
    "course_rating": {
        "mean": "4.56",
        "count": "80"
    },
    "comments": [
        "The material in this class is so fast paced that u really dont have time to learn it all unfortunately. Shravas is a super nice guy though and he genuinely seemed to want to help students understand but classes could be a little disorganized sometimes and the content was definitely really hard to understand at times. Sometimes it felt like we\u2019d just jump into one topic with little explanation and it was just really confusing. I dont feel like i learnt too much just because of how much there was and how difficult a lot of the proofs were to understand, homeworks were pretty hard as well so be prepared to spend a lot of time and frustration on those. One good thing though is that it\u2019s def very possible to get an A if u put in the work because they aren\u2019t too strict with how u write ur proofs.",
        "It's a good course, Shravas and the TA's are great. Despite all you hear about this course, it's really not that bad \u2013 if you make an effort to understand every example Shravas goes through in lecture, and do understand, then the homework will be feasible and the exams definitely doable. Don't be afraid of 212!",
        "This class and the professor are both pretty solid. The lectures are a walkthrough of textbook problems. Shravas doesn't really have any energy but he responds helpfully to all the questions during class. The homework is 4 problems/week in a 3 person group and can get pretty time consuming/difficult by the end of the quarter, but entirely doable if you refer to TAs. The homework is submitted in LaTeX, which was actually a useful thing I learned from this class. If you pay attention in lecture and are good at math, this class is completely fine. The discussion section is optional but I recommend going because I found it helpful before completing homework and also to review for exams. There are 2 exams (midterm and final) which are well\u2013reflected in the practice exams. Linear algebra was not on the final, so the last few lectures weren't worth going to. I suggest taking CS 214 before/during this class because 214 gives you a slower, more methodical teaching of graphs, trees, and graph search, although it's not as necessary for 212. I would also suggest taking stats (like IEMS) before/during 212 because it will help a ton with the probability unit.",
        "Homeworks aren't bad. Would recommend starting early and going to the earlier office hours because everyone waits till the last minute and so the OH before homeworks are due are usually pretty full. Exams are reasonable and Rao is pretty nice and chill. His lectures are pretty straightforward. Personally, I wouldn't say this is as hard as people make it seem, but it's by no means easy. Proofs are hard to think about.",
        "Thoughts during (and before and after taking this course): I don't know what's going on. I don't know why I'm in this program, in this school, or at this university :').Prof Rao and PMs are generally helpful if you go to OHs tho. Though sometimes PMs will completely conflict in their advice to approaching a problem. I once went to 4  different OHs with 4 different PMs who each gave different and contradictory ways of approaching the same problem. I redid the problem 4 times.",
        "Shravas is nice and really organized. The HW is quite difficult.. Def go to OH. The midterm wasn't bad... The final was quite harder in my opinion.",
        "This was probably one of the hardest classes I have ever taken. Rao is great, a really nice guy. He's a genius and is pretty good at teaching. It is just hard to translate the teaching/book into the homework, which is worth a ton. Don't be surprised if you fail a homework spectacularly. My friend described doing the homework as being like trying to defeat a super tough video game boss with only the vague lore entree as your guide.  The midterm was fun and so much easier than the homework. The final, I think I did rather badly on, but I'm glad I tried. If you like graph theory, you'll like the final. Probability in this class is the most confusing approach to probability I have ever learned, so try to take stats before this. I have no clue what grade I'll get but I sure learned a ton.",
        "A requirement for CS major / minor. Though it doesn't seem to be very related to CS topics, or be of interest for those that are not that into theory. The lecture could be a little more interesting / engaging \u2013\u2013 50\u2013minute pure theoretical content is quite hard to absorb. Can also try to connect the dots a little bit more on why certain concept flows from one to another.",
        "Reading through the solution to problem sets is one of the best ways to study for the exams",
        "Even though I thought the class was very difficult, if you put in the time it's quite manageable. Sometimes I would be so lost during lectures I wouldn't even know what question I'd ask. However, going through homework definitely helped a lot with the material. The homework can be quite consuming, so get them started early. Although sometimes I felt like some concepts could have been explained better, I thought Rao generally did a good job teaching us the concepts in the course.",
        "This course is really challenging and requires going to multiple office hours each week in order to understand and complete the homework. The tests are easy in comparison to the homework and are fair.",
        "212 has actually been one of my favorite CS classes so far. The material was very interesting, and Shravas was always willing to answer peoples questions. The problem sets are manageable if you start early and go to office hours. I recommend staring the course with an open mindset as you may be surprised to appreciate the class! You also don't really need a partner to do the homework, but it was nice to talk some of the solutions out with people. Shravas is also really nice!",
        "This course is not easy but it is for sure doable. A good amount of background knowledge in math is essential. The homeworks don't seem very long but it can take a long time to come to an answer and I would tend to dedicate my free time for a couple of days to completing them as they could take many, many hours to finish, as is normal for comp sci classes (Note: I worked alone on them but 2 additional partners were allowed so they many have finished in a much shorter time). The lectures and material are not the most interesting but it was quite satisfying when I completed each homework and it was fun to use LaTeX.",
        "This course was difficult mostly because I'm used to CS with immediate application rather than helpful theory.",
        "The lecture for this class felt redundant because I had learned a lot of the math concepts in other classes, like stats, EA, and CS214. However, the homeworks were still challenging and I felt like I learned a lot from completing them. Having a great partner(s) was a huge help as well, as I was much more motivated to go to (incredibly useful and amazing) office hours and try and pull my own weight on assignments. The midterm wasn't crazy difficult either, and although I haven't taken the final yet, I think it won't be anything unexpected. Shravas was a pretty good lecturer as well and gave some great strategies to try and attack problems.",
        "Not too difficult. Follow the lectures and work on the homework by yourself, then you should be fine",
        "I had no previous knowledge of proofs before this class so anything it focused on was important to me.",
        "Yeah I mean everyone who is reading this CTEC knows what they are getting into. It's 212. It's going to be quite a bit of work, but it's a necessary course so buckle up man. If you do take it though, Rao is just the complete best. His lectures are very clear, he goes at the right pace, he's the nicest guy, and his tests are actually fair. He's one of the only professors I've had where you take the test and you think to yourself \"wait we fully learned this in class and I'm prepared.\" So yeah, the course was cool. The homeworks are 5+ questions but they take hours. Either way, if you're reading this CTEC you're probably not deciding on whether or not to take the course but rather preparing yourself for trauma. I'm here to tell you it's not that bad and you'll get through it. Start early and go to office hours and it'll feel like a regular course. If you've taken Jesse's 211 you're already prepared. Oh also during lectures Rao answers every question on the spot so no one is left behind <3",
        "The course was extremely challenging, but the tests were a fair assessment of the material covered.",
        "Absolutely loved this class, loved the independent learning component of it: so many topics are covered that you have to take the time to understand some topic, while Shravas is already onto teaching something else in lecture. I loved the fast pace, keeps you on your toes. The homeworks were really hard but really thrilling and really piques your curiosity. This class will make you want to drop CS and just do a PhD in pure maths.",
        "This course is hard. I spent most of my time in office hours. It is very helpful to have a good group.",
        "Definitely introduced cool theorems and made me better at thinking logically. The homework's definitely require a lot of thinking and the final was graded harshly but there is a nice curve.",
        "The homework problems could be challenging at times, but not impossibly difficult. I liked this professor since he explained concepts and answered questions clearly.",
        "This class is insanely hard and quite annoying, its super long and complicated theoretical mathematical proof.",
        "This course was not as bad as I thought it would be. Prof. Rao is a really good professor in my opinion. He is really patient and good at explaining things. He also lets you work in groups on the homework, and I think I learned a lot by talking through the concepts with my peers. Prof also communicates really well, so students know what is expected of them and is also very reasonable.",
        "Shravas is a pretty engaging lecturer and the concepts presented are interesting probably even if you're not into math/computer science . definitely go to office hrs bc TAs are super helpful and the more you discuss the hw the better you will do on it in my experience.",
        "This class is definitely difficult, but it's manageable. The homework is pretty difficult and takes a lot of time, so definitely start the assignments as soon as you can after they're released. The exams are significantly easier than the homework, though, which was helpful as it tested us more on recognizing proof techniques and knowing the basic concepts from class. Also definitely collaborate with others on the homework, it'll be hard to figure out the proofs on your own.",
        "Professor Rao is a great and kind person and truly cares that students understand the material. The material itself is unfortunately a bit bland and mind\u2013twisting at times, but i understand that it teaches necessary skills for Comp Sci. The proofs covered in class and the homework problems are incredibly challenging and sometimes frustrating, but the exam problems are more straight\u2013forward, which is appreciated.",
        "If you are looking to take this course during Winter or Spring 2021, DO IT. I enjoy math courses quite a bit, but this course was of a different breed. You definitely have to be built differently to tune into lectures every week and complete the homework assignments. The questions covered in class are from the book, so there isn't any other practice material. Regardless, the type of questions asked are extremely different from what you'd expect out of any other math class, so don't get fooled. Credit/no credit here I come :)",
        "I don't think this class is nearly as bad as people make it out to be (and that is coming from someone who has suffered through almost every CS course since 111). If you have a good group, you will definitely be fine. It helps that Shravas is a very understanding professor and he made sure to answer all questions until you understand them. The exams are pretty easy in comparison to the homework assignments which was really nice. There are many office hours and other groups are often willing to help other groups if needed. Shravas also got to know the students (if we wanted to) throughout the quarter and made getting to know us meeting which I really enjoyed",
        "Typically, I have trouble in very math\u2013focused courses, but this wasn't a problem for me in this class. The homeworks were challenging, but really helped learn the course concepts and were very do\u2013able if you put some time into them. And the exams were very fair \u2013 difficulty was scaled down from homeworks so that the problems were feasible in the time given for the exam. The professor was really nice and seemed like he genuinely wanted students to succeed. I highly recommend taking with him.",
        "Shavras was a very understanding professor, so I would recommend taking 212 with him. Not the most enjoyable CS class in terms of material but definitely very doable",
        "Not as overwhelming as expected. Definitely a doable class if you pay attention in lecture and make use of office hours.",
        "Got mixed feelings for this class. I feel like the class can be more engaging.",
        "Fairly difficult course. If you have not done proofs before, it will be even more difficult. The remote instruction worked well. I was able to view the lectures on the time that best suited my schedule. The office hours are nearly constant.",
        "The professor was pretty good at explaining the course but sometimes goes too fast without explaining some of the middle steps.",
        "TAUGHT ME A LOT CUZ ITS SO HARD",
        "As a math major, I had seen a lot of the material before so I found the course fairly easy. It is interesting nonetheless and the professor does a good job.",
        "They aren't lying when they say this is one of the harder McCormick classes. I feel like most of the stuff I learned was on my own while I was doing the homework. So much content was crammed into every lecture that all I could do was scramble to take notes and I never really comprehended any of it during lecture. The homework is very hard but the exams are objectively easier. Still not very easy though.",
        "This is a hard class, especially without significant math/stats experience. Shravas was great to take it with and is very accommodating. 1 3\u20135 hour long pset a week and exams took me consistent daily studying over 1\u20132 weeks to feel comfortable on.",
        "I expected this class to be horrible but I honestly enjoyed it. Shravas is a great lecturer and very helpful in office hours. The material wasn't too hard and the homeworks prepare you well for exams. Not impossible to get an A\u2013 or B+ if you spend time on homework and study for exams. Definitely go to office hours if you're struggling.",
        "Although this class seems very and it can be hard to tech, I think Prof. Rao is a really good lecturer for this class as he makes it seems a bit easier and he is very approachable.",
        "I personally found this class very intellectually stimulating. It's a hard class for sure, probably one of the hardest in the CS sequence and most likely will tank your GPA. But if you're doing the major or minor, it's required, and it's super interesting and you see a lot of real CS applications.",
        "The course was difficult at times, but the many office hours available made it easier. Rao did a great job teaching this course and answering questions along the way.",
        "I think the course opened my mind to many of the underlying conceptual things in different parts of CS. I really enjoyed the graph theory section and started to dig more to learn more about it.",
        "Overall, the course was easier than I expected it to be based on previous CTECS. Homeworks were difficult but as long as you put in the time and effort with your group, you'll get full points because almost everything is proof\u2013based. However, exams were hit\u2013or\u2013miss for me since it can be difficult to write proofs in a timed session.Shravas is a really kind professor and did a great job teaching. The lectures are formatted and paced well.",
        "Enjoyed learning how to write simple proofs and learning LaTex. The material is not difficult, most of the confusion arises from the mathematical notation rather than the concepts.",
        "There was probably a way to make mathematical foundations more stimulating and inspiring than it was. The material itself is pretty dry but I think shravas could've been a little more captivating"
    ]
}{
    "course_code": "Student Report for COMP_SCI_212-0_1",
    "course_name": "Mathematical Found of Comp Sci",
    "instructor": "Benjamin Golub",
    "year": "2022",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "4.63",
        "count": "87"
    },
    "course_rating": {
        "mean": "3.91",
        "count": "89"
    },
    "comments": [
        "Problem sets can be long and difficult. Exams are hard. Seems standard for CS 212. Golub is an excellent lecturer.",
        "This course is obviously hard but with enough effort and textbook reading it is manageable. Golub is a great professor who keeps you engaged during the entire class.",
        "Very demanding and difficult class, but it's worth it, the math content is really interesting. Learning Overleaf is also worth it. Prof Golub is great.",
        "Good lecturer, but exhausting to deal with. A lot of work, this iteration of 212 was much harder since the professor challenged the students more. That being said, if you can handle a difficult course, take it with Golub since you get a more rigorous training.",
        "Rather difficult class, not sure it was any harder or easier than with any other professor, but I really liked Golub's teaching style. Going to class actually did help, which isn't always the case for classes like these.",
        "This course was very difficult \u2013\u2013 However, it was also very interesting. Go to lecture! Professor Golub made this class the most interesting lecture class I have ever taken, he is extremely passionate about the material.",
        "LOVED this class. It caused me so much pain and I am currently crying while writing this because I probably failed the final lol but it's also one of the best classes I've ever taken. The content is so interesting, and you really do leave with a good understanding of a lot of fundamental math concepts. It is a huge time commitment though. This is by far the hardest iteration of 212 compared to other professors', both in terms of content and workload. Even as someone who's done proofs before, the PSETs took a solid 20 hours every week, and it was a struggle to even get 50s on the exams. The stress from this class probably took years off my life.BUT I still really enjoyed the course overall. Like this class had me reading the textbook for fun because the material was actually so interesting to think about. Ben is also hands down one of my favorite professors here \u2013\u2013 he is genuinely such a sweet person and so enthusiastic about what he teaches. His lectures were always engaging and really made you excited to learn. This is just a very very hard class and all of your free time is consumed by PSETs, but Ben is the best and you really do learn a lot of very cool things! I think if you can get through this class, you can do anything :)",
        "This class is pretty difficult. There is a heavy curve on exams since the averages were pretty low. The problem sets are challenging and time consuming, but pretty interesting to think through. You are encouraged to type up answers to the problem set in LaTeX, which honestly ended up being the most time consuming part of completing them. I know many people who just handwrote answers and did fine. It is difficult to study for exams because of the conceptual nature of the class; you kind of have to go in just hoping that you learned enough through the problem sets.",
        "This class was relatively difficult. However, Professor Golub was a good professor and the TA's and PM's really made the class doable.",
        "I feel like one big thing for this class was that previous classes had a lot less work compared to us. Every question has at least abc, and sometimes d and e. This makes it really time consuming since we have to do 15\u201320 proofs per homework",
        "Way too work intensive. I would recommend watching Albert Meyer's MIT lectures if available for whatever subject you are on. Golub's lectures consist of him giving examples and then never solving them, calling them practice (in addition to the problem sets and readings which take 10+ hrs a week). Good luck.",
        "Very time consuming class. The course content was more interesting than I expected",
        "If you have taken proof\u2013based math classes before and enjoy math, the class might be okay for you. However, I don't think it really treats students who have never written proofs before fairly, and this is a large portion of the class. I've heard from friends that the class is easier with different profs, so maybe wait for a different quarter to take it if you're not very math\u2013oriented. As a mathy person, the class was alright for me but the weekly problem sets did take a solid 3\u20134 hours of my time.",
        "I learned how to think like a mathematician.",
        "Professor Golub meant really well but this class could have gone a lot better. I understand that we're his first experience with this course, but there were constant errors and typos on the homeworks that would sometimes only be corrected a few days before they were due. There was constant miscommunication about grading (for example, repeatedly saying leading up to the midterm that a 70% would be an A with the rest as \"bonus,\" but then actually making the cutoff for an A an 80%.) As a math major forced into taking this class for a CS degree, I also just think that there was a lot of disorganization in terms of material. At this point in the course, we're expected to draw from multiple textbooks in what we study and aren't given any definitions in lecture. This makes completing the problem sets extremely annoying, because on top of problems being assigned in different books, there are different definitions within each that, although not necessarily contradict one another, can confound so many concepts. This class was not enjoyable, and I didn't get much out of it. I hope this goes better for whatever group takes it next.",
        "To be honest, I did learn a LOT in this class. However, this class took an insane amount of time outside of class. The problem sets each week got longer and longer despite him saying that it gets easier after the \"trial by fire\" problem set in week 3. At one point, we had a problem set where there was 5 questions but each question had subparts and the subparts themselves had subparts that were all proofs. Every week I am in misery because of the problem set and it consumes my entire life and soul. The exams are also quite brutal. For the class itself, Golub just sometimes gave up on Fridays and would post a sequence of Youtube videos? He would also get confused sometimes in the middle of class and then tell us something extremely questionable that he has to correct the following class. For the most part, he was an alright lecturer and this class has potential to be a good class with some adjustments (I would cut him some slack since this was his first time running this class).",
        "The best class that I've taken in Northwestern so far. Prof Golub was very interactive and the content was very interesting. The problem sets take a lot of time but help you understand the lecture. Although it is definitely a hard class, it improved my thinking and problem solving skills a lot. Take it from Benjamin Golub if you can.",
        "This class is very difficult and time consuming. The first part of the quarter was easy enough as it introduced the types of proofs and applying those to simple number theory examples, but the rest of the quarter ramps up exponentially when talking about matching, graphs, and probability spaces. The homeworks can take easily more than 15 hours per week, and office hours are essential. Golub is very passionate about the subject and will thus assign more problems/homeworks than the syllabus suggests. He loves his graphs so be prepared to see lots of problems related to those. Office hours and finding a collaborative group to work with are essential.",
        "Take this class with Golub! It is definitely a lot of work but this class is tough with any instruction and Golub is a fantastic lecturer, super transparent and open with students, and not a very harsh grader, the curve for this class was actually pretty forgiving if you put in the work. Be prepared to sink in 8+ hours for each week's problem set if you want to get solid scores (and I say that as someone who is usually able to complete math homework very quickly, this class the time commitment is real unless you are already super familiar with proofs, set theory, graphs, etc).",
        "I won't lie, this course was ridiculously hard.  Professor Golub is a great lecturer to be certain, however, his homework is no joke.  Even starting a day or two after the homework is released didn't feel like enough time, and I often spent upwards of fifteen hours on a single problem set, only to still feel dissatisfied with my answers.Further, the exams were a bit difficult to me in terms of having enough time, they weren't as bad as a problem set yet they also felt like a lot to solve within an hour (the midterm) or two (the final).  The singular saving grace of this class is that the professor has said that it is curved, however expect to cringe constantly at your numerical grade in Canvas.",
        "It was a great course overall, mostly due to the part that Professor Golub is a genius. I loved his explanations in class, and he was a really amazing professor. This class was not easy at all, and the exams were difficult, but once we got through homework and exams, I felt rewarded. Definitely recommend taking the class with Professor Golub, and I mean it.",
        "Really enjoyed this course. Professor Golub is great, and really wants everyone to do well and understand the material. This class shouldn't be too difficult if you've had prior exposure to proofs.",
        "I don't know if this is just how every discrete math/intro to math for CS course feels or not but I honestly didn't see how some of the material related to Computer Science. I've no doubt it does or else there would be no reason to teach it but I think it would be helpful to increase the focus on how particular ideas relate or can be applied to CS fundamentals or to programming. Otherwise it just feels like we're being taught a grab\u2013bag of random mathematical concepts that we could easily pick up later in other courses as they become relevant (i.e. the purpose of the course is invalidated \u2013> the course seems useless \u2013> students lose motivation to actually learn the material). And if the point is just to teach us proof\u2013writing/rigorous logic, then why not advertise it as such?In terms of the actual course itself, I really liked Golub as an instructor; he seems very intelligent and was great at explaining the material. The TAs/PMs sometimes took a long time to grade or made grading errors but on the whole they were a helpful resource as well. The assignments seemed to be an appropriate difficulty and helped me understand the concepts better/prepared everyone well for the exams. On the whole I enjoyed the course and I think it was done well.",
        "This class sucks. Too difficult and not well organized towards the end. I spent many hours on most problem sets and found myself needing to go to office hours often. Thankfully, the TAs were helpful and work was graded somewhat leniently. Professor Golub was sometimes nice but sometimes condescending. If you have never done proofs before and are not some math prodigy, good luck \u2013 this class was not the place to learn.",
        "This is a very hard course. Every week I worked for hours on pset to get low scores. Do not take it with any other hard courses and make sure you're prepared for the difficulty level.",
        "holy guacamole. This course with prof golub was insane. Ahhhhh. Homeworks are insanely hard. Lecture is too entertaining.... in all of the worst ways. Goodluck. Don't take this class if you don't have to, sorry cs degrees. The content was pretty good, I wish we didn't have to prove everything. Homeworks did NOT need to be that hard",
        "Ben Golub is an interesting teacher. He definitely scared me at first, but over the quarter, my friends and I started to find his somewhat condescending attitude very charming and quirky, so class time was quite entertaining.  However, he makes this class VERY hard.  There are weekly homeworks that just take up so much time every week, so you have to start early and plan ahead. Also, we did no coding and the topics are very loosely related to CS.  The TAs were usually very helpful, and we did well on homeworks even if it wasn't 100% perfect.  I really think I would do much worse in the class if I didn't have friends in it, so if you're going to take it, make sure you have a solid group of people you can work with.  All in all, Ben is an interesting guy and this class is super hard and you'll be happy to be done with it.",
        "This course should be challenging, but it was too challenging and unfairly evaluated. The bulk (probably upwards of 15 hours per week) of our work went into figuring out problem sets that often required large leaps of intuition to finish, unexpected leaps we were never given the tools to make, and yet half of our final grade was comprised of exam scores in which we did the amount of work in about half a problem set (say, 5 hours of work normally) in the space of one or two. Speedy thinking was not something that the course taught, yet it was what we were tested on. The professor mentioned at one point in lecture that two of the following would be sufficient to pass the class: collaboration, time commitment, and previous aptitude in math classes (the last of which I have a big problem with, because a course should teach regardless of previous skill) \u2013 I put in all three of these and still majorly struggled on the midterm.",
        "This class is as bad as people say it is. It's required for the CS major, so have a good group of friends to take it with \u2013\u2013 you'll definitely need to rely on each other. Unless you really really love math, this is absurdly difficult and confusing. Professor Golub is a super interesting teacher... he absolutely wants to see his students succeed, and is always willing to answer questions, but sometimes just does so in a weird way. He's absolutely a genius, and definitely became entertaining as the term went on. In the beginning of the class though, he seemed a bit cold, but we started to like him. I do think he made the class more difficult than other quarters though, so definitely consider that.",
        "Undoubtedly the hardest class in the CS 200\u2013level intro sequence by far. You have to put a lot of thought and creativity in order to solve problem sets. Problem sets are a massive time sink and usually take me at least 6\u20138 hours of intense work to do. Problem sets are doable though, moreso if you go to office hours and have a good group to work with. This class was definitely the hardest class I've taken but I really enjoyed how intellectually challenging it was.Golub did a pretty good job teaching, but sometimes he seemed unprepared for lecture and would trip up and confuse people with his notation. From what I've heard though he made this class harder than previous professors. Sometimes Golub can be pretty intimidating and really likes to passive aggressively get people to participate in class.",
        "If you do not have to take this course, you absolutely should never take it. If you have to take this course, you absolutely should not take it with Benjamin Golub. The material was unnecessarily difficult to the point that the TAs were having trouble explaining how to approach it. The professor is often confused during lectures and explains the same concept 3 different ways before settling on how he wants us to interpret a certain context. He often needs student help to complete the problem he constructs himself. The exams are graded in an extremely harsh manner, with points being docked for no apparent reason. The problem sets are by far the worst part, taking at least 12\u201315 hours a week to complete on their own.",
        "Ben Golub is the GOAT. I learned so much in this class and just overall am much better at reasoning rigorously.",
        "I\u2019ve never taken a class at Northwestern where I felt like you had to be inherently talented at something to succeed \u2013 if you put in the work necessary, you can get an A. This was the first class where I didn\u2019t feel that way. In fact, Golub said this himself. To do well in this class, you can choose 2 of 3: spend excessive time, possess very good math skills, or be part of a great collaborative group. The problem sets were very not great. Before I had a collaborative group, I was averaging 15 hours per problem set (keep in mind that I\u2019ve taken AP Calc, MATH 220\u20132, 230\u20131 and 240 and did decent in them, but I don\u2019t have a strong math background). Golub told us that even he and the TAs themselves struggle to do the problems. So then why would he assign them to us, the world will never know.Don\u2019t take this class with Golub. Pros: uses a textbook, good with tech (Panopto, Piazza, knows how to use Zoom), midterm was very reasonable. Cons: textbook isn\u2019t that great (practice problems with no solutions, some of the proofs/explanations aren\u2019t thorough, no physical copy), lectures were often disorganized (he spent an entire class trying to explain the answer key for a problem set question, confused himself, and then called it a day; many times, he didn\u2019t really seem to know what was happening\u2026 like he was just writing down stuff and seeing how it would turn out\u2026 as if the answer would surprise him too). Taking this class with Golub was SIGNIFICANTLY harder than with other profs and covered more topics. My advice: take this class with friends. Smart friends. Take it before 214, since some of the content overlaps (e.g. graphs). Don\u2019t take it with Golub unless you (1) have a strong background and intuition for math (2) genuinely want to learn discrete math. If you are like me, just getting this requirement out of the way, put it off for later. Taking 212 is helpful, but isn\u2019t necessary for a career in computer science.",
        "This class is challenging. The amount of time and thought that goes into every homework assignment is a massive commitment. Sometimes this class will cause you emotional pain. With that said, I really enjoyed it. There are concepts that I've never seen before that I really loved and lecture is amusing. Prof. Golub is a literal genius and he expects a TON from his students but he never fails to entertain and explain really hard concepts in the most seamless ways.",
        "While I did enjoy covering the material in the course, I would recommend against taking this course with Professor Golub. Don't get me wrong, I like his lectures and I think he teach well overall. However, the assignments he gives are insane compared to other cs212 professors. Most people spent 15+ hours on most assignments because of their insane difficultly compared to the concepts taught. Unless you have a decent background in proofs already, the assignments will be near impossible to complete by yourself and even with a group it is difficult. The exams were overall ok, still difficult but reasonable in my opinion.",
        "If the content of this course was not already challenging, the weekly problem sets were borderline absurd. I do not know of a single person who was able to complete these accurately and fully without going to office hours or working with other people. The exams (or at least the midterm) was not so bad at reflecting what we learned until then. The problem sets, however, were always very hard to complete and always took upwards of 15 hours per week. I really thought that people were exaggerating about cs212 being rough, and regarding the content I did feel this was the case, but the workload was crazy.",
        "I would not recommend taking this class with Prof. Golub. I know for a fact the class was exponentially harder than the previous quarters. The homework was unreasonable and the amount of topics covered was unreasonable. He attempted to cover the same amount of math as a math class here does in one quarter, in a few classes, which clearly doesn\u2019t work. As a math major I\u2019m not new to proofs, but I felt as if this course emphasized the wrong aspects of them, and the exams (which end up being most of your grade even though the homework takes hours) are heavily multiple choice based despite the focus on proofs.",
        "I found this course to be frustrating because, for the type of computer science I'd like to pursue in my career, it felt rather pointless. The problem sets were challenging but doable and the grading is fair with a curve.",
        "I recommend that you don't take this class with Prof. Golub. The homeworks were extremely difficult. I didn't learn anything out of the homework because I couldn't do them on my own without my partners. By far the hardest class I've taken in my life.",
        "This course was intellectually challenging and it was the hardest course I have ever taken.",
        "While a challenging class, it is also very interesting and engaging. The instructors do an excellent job explaining the material, and, given adequate work outside of the class, it is easy to succeed.",
        "This course is very challenging at the first half, but you still learn interesting concepts despite the degree of difficulty.",
        "This class is so hard. I would be consistently spending 15+ hours per week on problem sets, only to still not feel that confident in my answers. It really felt like I was being thrown off the deep end every single time we learned something new. That being said, writing proofs is something you can only really get better at with practice and time. I have surprised myself at how far I have come from the beginning. This is a challenging class, but can be really rewarding if you put in the effort.",
        "The material was very difficult but Professor Golub was great. Very time intensive problem sets.",
        "Problem sets were very much impossible",
        "Professor Golub took some time to grow on me but I ended up really liking him. The content is very challenging but Prof Golub is extremely knowledgeable and able to assist at all points and is very good at answering questions. It can be intimidating because he is clearly very smart but if you ask questions he is very helpful. The class is challenging due to the nature of the work but it is doable. Collaboration is extremely important.",
        "Prof. Golub was an incredible teacher. It was obvious that he cared for his students and that they not only were provided with a rigorous base of knowledge which will prepare us for further mathematical studies, but also that we retain (or gain) an excitement for the possible applications of the math we are learning. He can be a bit intimidating, but I thoroughly enjoyed his class and hope to take more classes with him in the future!",
        "This class is very hard. Office hours were not that helpful, the only way to get through this class is to have a good group that you can collaborate with on the problem sets. Good luck!",
        "This class awakened a new desire in me to study mathematics. It was a challenging class, but not an unfair one. If you enjoy proof\u2013based math, this class is a great way to explore discrete mathematics. If not, the first few weeks are a true \"trial by fire\". Professor Golub is an engaging professor that is genuinely committed to having students puzzle out the answers with some help rather than spoon\u2013feeding theorems.",
        "Overall not that bad especially if you've done probability and proof based math courses. Golub is a great lecturer but his notes are a bit disorganized so you really need to listen in class. Midterms and finals are difficult but have a massive curve. Overall didn't have to do much studying. Same case with the homework. They are unreasonably difficult but again 80% is an A in the class. So TLDR, time consuming class but easy A.",
        "This class is so very very hard. I already had an idea of what to expect coming into this class but did not expect it to be so overwhelming. This guy is definitely harder than Rao or Vijayaraghavan. It's very obvious the professor wants students to learn and gives them extremely difficult and time consuming assignments. It came to the point where I would dedicate three full afternoons/evenings to work on the assignments with my partner. The class starts out very intense, laxes a bit in the middle, and then picks up the intensity at the end. Towards the end of the quarter, it felt like a lot of students were mentally checked out because of the difficulty of the homeworks. The only way to do good on the homeworks is to either be extremely smart, have smart groupmates, or go to office hours a ton. This class' workload ended up equaling my total courseload for my three other classes. I This class was always at the back of my mind. I would not take it with him again if I could. I understand he makes the assignments difficult for us to learn, but it came to the point they were so difficult we were more focused on getting the answer than actually understanding the solution. The exams weren't as hard as the homeworks but the averages were relatively low. Also, the prof can be funny and sarcastic sometimes in a funny way and engages the class by encouraging discussion, but then there are times he says stuff like 'this should be very easy' or 'this is very trivial' even though it may not be. He is from Harvard and NU is definitely a step down, but his attitude irked me as well. The Jesse Tov of 212 has arrived. After having taken all the CS 200 level courses, my ranking from most difficult to least is 212, 211, 213, 214. Overall, terribly difficult class and made my quarter miserable.",
        "This class is so hard, that I don't think I fully learned anything. Definitely take with a friend or someone you know is smart, and study well in advance for midterm/final",
        "This course is HARD, but that will be true regardless of the professor you take it with. Homeworks take forever to complete. Sometimes, you could spend the entire week working on the problem set and going to office hours with no guarantee that you'd understand or finish by the end of it. Professor Golub is very clearly smart and does his best to engage with students during class, but sometimes he's difficult to understand. I've definitely (among other students) walked out of lectures thinking \"wow I have no idea what he just talked about.\" The instructional team kinda disappeared towards the end of the class (no Piazza posts were answered for like an entire week straight.) My only advice is to do the homework ahead of time. Start as early as possible!",
        "This course was very difficult for me, as this was my first exposure to rigorous proof\u2013based math and most of the concepts in the course. Though I did not have high expectations for my performance grade\u2013wise, I think that I overall gained a lot from taking this course in terms of problem\u2013solving skills. Professor Golub also somehow presented math in a really interesting and application\u2013based way, and I gained a better appreciation of the  role of math in helping us understand deeper truths about the world. Unlike other math classes, the course didn't seem like trivial manipulation of numbers.The problem sets were difficult and a time commitment, but in retrospect caused me to more deeply understand the material that I otherwise would. Definitely more than for other courses. I would recommend finding a good partner(s) to do the homework with to alleviate the time and frustration of solving the problems alone. TA/PM office hours were also very helpful.",
        "The course with Prof. Golub was challenging and required a lot of time, effort, and patience. I did get a lot out of the class. The problem sets required too much time in some cases and at times the class environment was not the nicest.",
        "Really hard class, learnt a lot of mathematical concepts but there seemed to be a lot of workload which could have definitely been reduced for the students. Class was overall well organized however it felt like too much pressure even though I always tried to finish my work and assignments on time. Final grades wouldve been more representative of knowledge if the exams were weighed less.",
        "The professor made this class really unenjoyable. We were expected to combine concepts that we barely had a chance to learn.",
        "This is a very tough class. Ben does a somewhat decent job at explaining concepts, but this class lacks structure. The psets took a LONG time. like upwards of 15\u201320 hours. The exams were tough. Honestly everything about this class was just very hard. The one good thing about this class is that it's actually pretty interesting, and this is coming from someone who has never had any experience with proofs or any previous ineterst in the subject. Other than that, it's just a hard class.",
        "This class was amazing, my favorite class at Northwestern so far. I feel like this class taught me a new way to problem solve. Ben did a great job of challenging us, and I learned a lot because of it.",
        "To be fair, you have to be mathematically inclined to succeed in Golub's Mathematics for Computer Science. The concepts are extremely subtle, and without a solid grasp of Proof by Induction, the Pigeonhole Problem, and Polya's How To Solve It (1945), most of the lectures (which are very good) will go over a typical student's head. There's also Golub's nihilistic outlook on the rote repetition of modern mathematics education and his perceived endorsement of difficulty and discouragement as part of the learning process, which is deftly woven into his inscrutable, labyrinthine 20\u2013question weekly problem sets that seem to befuddle and frustrate as much as they teach \u2013\u2013 the term \"sink or swim\" comes to mind. As a consequence, those unprepared for CS212 will find little to enjoy \u2013 being saddled with three other classes and concerns about summer employment, of course they won't pick up on the sliver of encouragement in Golub's admonitory catchphrase \"We're not children anymore\" (which in retrospect was also a cryptic reference to 0\u2013degree  graphs). Looking about LR2 every week, I couldn't help but commiserate with the visibly confused. Golub's 212 is not for the unprepared, and it's definitely not to be experienced alone  \u2013\u2013 make sure you find a study group, or at the very least have the TAs/PMs on speed dial. If I was working by myself I would have dropped in the first week.",
        "You will learn a lot in this course if you try a lot but the hw\u2019s were kind of ridiculously demanding and long. Quite time consuming and annoying",
        "This course made me go to therapy."
    ]
}{
    "course_code": "Student Report for COMP_SCI_212-0_20",
    "course_name": "Mathematical Found of Comp Sci",
    "instructor": "Aravindan Vijayaraghavan",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.56",
        "count": "78"
    },
    "course_rating": {
        "mean": "4.00",
        "count": "80"
    },
    "comments": [
        "Professor Vijayaraghavan goes through lectures following the slides closely. He usually proves theorems or gives basic examples of a topic in class. The homework for the same topics is leagues ahead of the class. It would make sense if harder problems were solved in class or if TAs were more helpful during office hours. Additionally, the class received 3 practice questions for the midterm and book questions or other discrete math problems had no available answers. The combination of no practice material and homework that is too difficult made this class too much for many students.",
        "Everyone gets so heated about this course and it's super fine. Just do the homework.",
        "The homeworks are really hard in the beginning but get more manageable as you go on. This is probably the first class where I actually feel like I learned a lot. Take it him; even though it is tough stuff, he tries to help you learn without dumbing down the material.",
        "This class was great! I really enjoyed the concepts and content. The challenge was present and kept pushing me to learn more on my own. I really liked the Prof. The homeworks took a while to do though.",
        "Coming into this course I heard a lot of horror stories about how boring it was, but honestly it was quite a good course! Aravindan is a very good professor; his lectures are informative and he grades fairly. Make sure you go to office hours, however, because the TAs are very helpful and without them the homeworks are extremely difficult. Either way, the homeworks are time\u2013consuming and you want to allocate about 8 hours a week to do them.",
        "I think the teacher is fine as a person, but the content is poorly organized. WEEDOUT CLASS. There's a tough curve, you need to beat the mean by a whole standard deviation to get an A so only 16% of the class gets 'A's. Also, content is covered really quickly so if you have little to no proof\u2013based math experience, you are going to have a TOUGH time. He covers entire branches of math in only a couple lectures and then moves on. Math is interesting, but not if it's taught in this way to weed out people.",
        "The class shares a lot of material with CS 214, so they are great classes to take in the same or consecutive quarters. The problem sets are relatively easy as the answer is almost always in the lecture slides.",
        "Honestly, a really interesting class with some cool, conceptually challenging material.  The homework is challenging, and you should expect to put some meaningful time into completing it.  This class is held back by two things: un\u2013engaging lectures and not enough time to finish tests.  The midterm average was quite low, and the primary limitation for students wasn't knowledge of the material, but time to write everything down.",
        "This is the hardest class I have ever taken at Northwestern, so if you don't need to take this class, I wouldn't recommend it. Of course, if it's a requirement, then the only way out is through \u2013 you still need to take this class. It's tough but doable and was curved rather forgivingly when I took it. The professor is really nice too, will root for you, and be a great resource the whole way through. Try to do the best you can on the problem sets, because if you're like me and absolutely bomb the midterm, good grades on the homeworks will help you salvage your grade. I found the problem sets extremely difficult, so going to office hours often really helped me achieve the good grades I needed.",
        "this course was very difficult. i was not prepared for the learning curve at the beginning of the course, but the homework got me well prepared for the tests",
        "This is a tough class. Problem sets take multiple days and office hour visits for most. Very interesting material usually, but often tough to wrap one's mind around. The midterm was brutal. It was probably the most prepared I've been for any test here and far and away one of the worst performances of my Northwestern experience. Final wasn't as bad.",
        "This class requires a lot of time for homeworks, so starting early is key. Going to office hours helps a lot. I would recommend taking it with Prof. Aravind as he explains concepts very well and makes a hard class a little bit easier.",
        "Alright, here is a 100% HONEST review. This class was such a backwards experience. The first thing you should know about is the lack of resources provided. We are provided with a textbook, which was actually pretty helpful, but not much else. The lecture slides only provide us with tangential proofs and theorems, and it is difficult to determine which topics are important when they are all given the same slide space and emphasis. Then, when you ask the TAs which topics are most important, they give vague, general answers (as they always do). For the exams, the resources were close to non\u2013existent. They provided us with 1 practice exam 2 days before the midterm (for which we were only told to take into account 3/4 questions\u2013\u2013so in reality, it was 3/4ths of a practice exam). When students requested more resources on Piazza, they directed us towards the textbook (lazy) and told us to \"look at some of the assignments/ problem sets online from similar courses in other universities\" (I quoted this from Piazza). This is unacceptable and not at the Northwestern standard. The instructors are supposed to provide us with the tools to succeed, but it felt like students had to dig up a lot of those tools themselves. The second thing you should know about is the unhelpful office hours. They are always swamped because there aren't enough hours and the problem sets are so difficult. On top of that, the TAs aren't very helpful. They often just direct us to the slides, so you feel like you're in this cycle of slides\u2013pset\u2013TA\u2013slides\u2013etc.. One time, I was at office hours and\u2013\u2013I kid you not\u2013\u2013the TA just burped loudly in front of me, did not even excuse himself, and continued with his confusing explanation of a problem. I didn't even know how to react. The last aspect is the lack of preparation on behalf of the course staff. The TAs often can't operate without the professor, which was shown in an incident during the midterm exam (the prof was absent). When time was called, the TAs only picked up exam booklets from the students in the first 4 rows and all other students received more than 5 minutes extra (in a 50 minute exam) because they just didn't feel like walking over to pick up the other exams! It wasn't until I personally confronted a TA that they began to pick them up. Everyone who didn't sit in the first 4 rows received more than 10% more time. When they finished picking up the exams, I again confronted the TA and he didn't give me any explanations, he just packed his bags while I talked to him and left. Nothing was done about this incident even though many people complained about how it affected their grade. It's a shame that this class was so backwards because the material was genuinely interesting and applicable. There were other negative aspects about the class but didn't include them because it would actually take too long. Overall, I would recommend taking 212 early on just to get it over with.",
        "It was a constant struggle doing the long assignments. It helped that I was in a very efficient group. The first midterm left me in shock and all I remember was \u2018spreading rumors\u2019 on my exam. It has been the hardest class so far and it\u2019s a relief I\u2019m so done rn",
        "This class isn't so bad. I personally don't feel that I've learned the material well because the pace is too fast for me, but even working on the homeworks alone is perfectly doable if you use office hours and ask the TAs questions. Would recommend taking with friends so that you can help each other on homework.",
        "This is a hard class. The homework assignments are tough but doable with a lot of help. The midterm is kind of impossible and everyone fails, and the final is a little bit better. The professor was nice and engaged, but the TAs were completely unhelpful which made everything a lot harder.",
        "I learned a lot about the mathematical foundations of CS. The weekly proof assignments were very time\u2013consuming, but worth it, because they exposed me to new ideas. The professor was a great instructor as well.",
        "this class is manageable if you have a group to do assignments and study with. i'd recommend taking linear algebra alongside or before it though, because it comes up in the final units and I wasn't prepared for that as well as I could have been",
        "The professor was incredible, one of the best that I've had at this school. Definitely take 212 with him. Also, this class really wasn't as bad as people make it sound. Get a good team together for the homework, and start the homework early and you'll be fine. Office hours were super helpful.",
        "Math is hard",
        "mad boring",
        "This class is by far been the hardest class but Professor Aravindan is great and is really engaging. If you have to take this class, take it with him!",
        "hard class, interesting material",
        "This course was really hard from the get\u2013go all the way up to the midterm, which most people did not do well on. Afterwards, though, the topics got much more interesting and actually somewhat easier to wrap your head around. I also noticed the homework assignments took less time (more about 6 hours instead of 8 or 12) after the midterm, which might have been due to the learning curve of the course. The final exam was also better than the midterm. TA office hours were good and helpful for the most part, but the Discussion sections were not helpful at all unless all you were expecting was to get answers to the previous homework. Overall, Aravind's course was a great experience and I recommend taking it with him. He is very reasonable and really wants his students to worry only about learning the subject taught in lecture and not about the grade they get.",
        "Midterms are much easier than the homework, homework takes a while.",
        "You learn a lot in this class, but I feel like I didn't learn anything from before the midterm until I needed it for the final which made the first half of the quarter pretty rough. I had a good partner for the homeworks so that and office hours made those doable.",
        "Challenging course but I learned a lot and enjoyed it",
        "The problem sets were hard, the exams aren't too bad because you get a cheat sheet.  If you put in time on the problem sets and study the lecture notes, should be able to do pretty well.",
        "I had to take an incomplete.",
        "Heard this class was going to mess me up.*Get's a 10/20 on the first homework after spending 12 hours on it*They weren't kiddingTo improve I went to office hours and read the textbook. It worked and I felt like I learned something by the end of it. Am I still bad... probably, but at least I felt like I learned a new skill. What felt like a chore turned to a class I was starting to enjoy.",
        "The course definitely requires you to spend a lot of time, but you also learn a lot. Aravindan was a great lecturer and cares about his students.",
        "I recommend having a group to work with going into this class, preferably including someone with a math background. The proofwriting part of this course is very quick just so you can get into studying CS concepts and having someone used to proof techniques is very useful.",
        "Probably the worst taught course I've taken at Northwestern so far. There were not enough resources for this class: we didn't have enough problems to solve, no set of solutions was ever posted and grading took a lot longer than in other classes, some questions on piazza weren't even answered and the difficulty of the homework went way beyond the content covered in class. Although some lectures are interesting and the professor is very passionate, the simple lack of resources made this course extremely difficult when it didn't have to be.",
        "There's so much to learn and the problem sets are really hard but prepare you well for the exam. Go to lecture if you have Aravindan.",
        "Why isn't this a Math class?",
        "TAs were a bit unintelligible, especially given that proofs are to be explained in a clear, concise manner.",
        "Aravindan is a fantastic lecturer, and the homeworks were pretty reasonable.  My only gripe with the class is that they grade quite harshly and then heavily curve at the end; I'd prefer more lenient grading with a smaller curve.",
        "This class is extremely challenging. Make sure you start the homework early and go to office hours.",
        "The first few weeks of this course were hard, but after that I really enjoyed the course. The professor and TAs are also really nice and want you to do well.",
        "For sure a difficult class. Problem sets were rooough. But hey, you get through it. Go to office hours.",
        "Hard class, the homework takes time and a lot of thought but I felt like I learned a lot and improved a lot overall. Exams can be hit or miss, you either get it or don't.",
        "The problem sets are pretty difficult, try to start them at least a few days before they're due.",
        "it's a requirement, so take it",
        "This course was extremely challenging. The lectures were helpful in understanding the basics, but the problem set questions were way beyond the scope of the lecture notes. Problem sets were good to do in groups, but even then some of the questions were difficult to understand and know how to approach. The instructors including the professor and the TAs were not helpful in office hours. Their policy was essentially we cannot give you the answer or tell you how to approach or think about a problem. This proof based class was extremely challenging and took a lot of time and effort.",
        "Maybe an unpopular opinion, but I would highly suggest majors/minors to TAKE THIS AS A FRESHMAN. Yes, this is a hard class, but I think it would be helpful to take it as close to calc and EA1 as possible because this course does require applying knowledge of limits, logs, derivatives, and linear algebra. Don't do what I did and take it 2 years after last being exposed to calc or linear algebra, just creates more stuff for you to (re)learn. Also, I'd say people wayyy hype up the difficulty of this class. Yes, it is hard, and you will spend ridiculous amounts of time on the problem sets, but the class is graded on a curve, and well, everyone does poorly, so as long as you don't do extra poorly, you'll be fine. Also the syllabus says you have to be 1 standard deviation above the mean to get an A, but that's just a scare tactic, the grading is actually much more lenient than that. They grade homeworks strictly, but know that for the midterm and final, grading is VERY friendly. Literally write anything you can because its amazing some of the stuff they'll give you partial credit for.",
        "Hard class. Easier if you know people who can help you with the homework. Grading policy makes it hard to fail but also hard fo get an A. Unless you ace the exams which were pretty hard you will likely get a B.",
        "i wish lectures were recorded and published online",
        "Gotta take it! Wish they weren't so secretive about hw solutions b/c how else are students supposed to learn?? I understand that cheating is bad but learning from correct solutions is such an important resource and TAs are always so reluctant to give out any concrete help \u2013 hope this is addressed for future students!",
        "Algorithm helps me do leetcode",
        "This class is extremely hard. It was my second time taking this course and I was scared I was going to pass it the whole way through. You need to go to all of the office hours just to have a very remote understanding of the material. No matter how much you study, it is hard to actually grasp the content of this class.",
        "This course is going to hurt when it hits, but you gotta do it and you will learn a lot.",
        "This is a fantastic class taught by a fantastic professor. Aravindan does a great job explaining things and is always supportive during class + office hours. The peer mentors and TAs were great too. This class is always hyped up to be so hard, but it isn't bad at all if you go in realizing that you will have to put in a lot of work. And if you do this, you will get sooo much out of it. But go in with the perspective that yes this is a hard class, and yes you will struggle, but as long as you put in effort you will come out a lot smarter",
        "Sadly there isn't really a way to get around this course. A lot of the material in this course is covered in other courses like math 300, but in a much worse way."
    ]
}{
    "course_code": "Student Report for COMP_SCI_212-0_20",
    "course_name": "Mathematical Found of Comp Sci",
    "instructor": "Shravas Rao",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "4.79",
        "count": "75"
    },
    "course_rating": {
        "mean": "4.22",
        "count": "77"
    },
    "comments": [
        "By far the hardest math course I\u2019ve ever taken. The TAs helped a bit when I couldn\u2019t figure out problems by myself, but the professor didn\u2019t really help me understand the concepts. He mostly only had one way of explaining things (quite mathematically which most students taking this class aren\u2019t prepared for), so even though the explanations were good, it was hard to decipher if you didn\u2019t understand. I did like how he was enthusiastic about the material he was teaching, even if I didn\u2019t understand it that well.",
        "This class is probably the hardest I have taken at Northwestern. Shravas is a great lecturer, and he does a good job at answering questions both on Piazza and in lecture, however the material can be super complicated. Be prepared to spend a lot of time on your homework, and make sure you have a good group to work with.",
        "This class is all discrete math and very hard. Prof. Rao is a great professor to take it with. He is very helpful in office hours and a good lecturer.",
        "I mean I think the only person you should take it with is Shravas. This class is definitely not easy BUT it seems to be extremely manageable. Like from a scale of difficulty from 1\u201310 I would give it a 8 conceptually and a 6 for time consuming.Shravas is also very nice and understanding which helps.",
        "Good class. Shravas is very helpful and open to student's needs. Although I didn't go to half the lectures it was quite doable to follow through from his material. Would recommend taking the class with him.",
        "This class is hard. Professor Rao is a pretty good lecturer but occasionally glosses over important content. The homeworks are very difficult and require teamwork and lots of office hours. Good Luck!",
        "SOOOOOOOOOOOOO hard!! This class is a major time commitment for sure, and the material is not easy. I went to lecture, office hours, and read the text and I still struggled to do well on homework and tests. It's not impossible, but it does require a major time commitment to be successful",
        "This is a great course. I think probably the most challenging in the core sequence. All other core classes should be as challenging as 212.",
        "GO TO OFFICE HOURS. Go to lectures. I tried to watch them asynch and that didn't work. Some people find the material easier, some people find it harder. I found it hard. Take it with Shravas if you can. He's great. Very difficult class. Not 213, but still pretty difficult. There are so many office hours which is fantastic.",
        "This course is different from all the math course that I have learned before. It's all proof based. Normally you will expect yourself spent a long time doing your homework. It would be better to discuss your answer in your group. Prof. Rao is really approachable and his lectures are very structured.",
        "I have a lot of experience with mathematical proofs and this course was fun for me because it addressed a different set of subjects than many of my math classes in the past.",
        "Very difficult course and material but can be interesting.",
        "This course was run well. The lectures were straightforward and helpful, and the lecture notes were done very well. The assignments and exams were very challenging but a lot of help through office hours was provided to get through them.",
        "This is definitely not an easy course.",
        "Extremely difficult course so be sure to use office hours",
        "Honestly not that scary if you really put into the effort into understanding proofs and definitions covered in lectures. The HW can be really tricky, make sure you start early and find a group of people to do with. Otherwise I thought the class is pretty fair with grading and curve.",
        "This course is like the opposite of Hidden Valley Ranch: you either hate it or you really hate it.",
        "Shavras was a great professor, the subject matter isn't the most interesting, but he is able to teach it in a concise way that was really enjoyable.",
        "Shravas does a really good job of explaining things, and is always willing to review and reexplain the more difficult concepts. The homework and the the lectures prepare you for the homework which prepares you for the exams, so there isn't anything that feels like it comes out of left field.",
        "This class sucks. There are weekly problem sets which require an extremely heavy time commitment (several days worth) and attending office hours is basically a must if you wish to get anywhere. The TAs will often guide you towards an answer and without this guidance the problems in problem sets are so complex that you could very well have all the time in the world and still not figure out the problems. The whole course is very theory based which is extremely irrelevant to most computer science students. Although the general concepts are good things to know, the way that this course is taught (heavy in proofs) is completely out of sync with what computer science students should be taking from a discrete mathematics course. Grading wise, homework was 40% of the grade with 7 total assignments (lowest score is dropped), a midterm worth 25% of the grade, and the final exam worth 35% of the grade. Definitely a hard class to pass, but I luckily had the opportunity to credit it. This course needs heavy restructuring or it just needs to be removed from the CS curriculum and replaced with a different, more relevant course. I personally could probably spend 40 hours a week on this course and still not perform well enough to get an A. If it is an option, maybe consider taking a comparable course at a different institution.",
        "Overall, I felt neutral about this course as I was able to learn new concepts although challenging.",
        "super hard content, not taught clearly, written hws were so hard but at least in groups",
        "This class is no joke. Make sure you go to lectures and take notes. Prof Rao is great but the content can very easily get away from you if you let it",
        "Shravas runs a well\u2013structured, thoughtful and straightforward class. The material is complex and the problem sets are difficult, but it's all packaged into discrete parts that make it easier to digest. In addition, the content is interesting\u2013\u2013I'd recommend taking this class with Shravas.",
        "Shravas was great! A little shaky on the teaching stuff sometimes but he got there and was helpful in office hours.",
        "This is easily the hardest course in the CS 200 sequence.  Weekly homeworks were absolutely brutal and I took up a lot of time.  Honestly kind of rewarding though, especially when you are able to solve the problems.",
        "Learning in groups, retaining theorems",
        "Its kind of hard to know whats ever going on during class, but proff Rao would always ask if there were any questions and was very nice in explaining confusing things.",
        "Very hard to grasp and understand the content at first, but the more you stick with it, the easier it'll get.",
        "Very difficult course. Problem sets take a long time to complete and get progressively more difficult. Be prepared to spend a lot of time on this class.",
        "Lecture & notes given are very organized. Material doesn't always make sense, but a good faith effort can go a long way.",
        "As you probably already know, this class is hard. You are most likely taking it for a CS major and minor. But, if you put in the time to learn and ask questions in lecture you can and will do well. Because I did this, I found the material pretty engaging as well even though I went in without a strong interest.",
        "This class takes a lot of work! It definitely is hard to wrap your head around the concepts and they take time to make sense which is hard with the pace of the quarter. The homework was especially challenging to apply the concepts from class but the exams were a bit easier.",
        "It's only a hard class that nobody likes because proofs are just hit or miss as to whether you understand them or not. Professor Rao is no doubt fantastic at what he does, but what he teaches doesn't prepare students for HOW to do proofs. Also, if you're reading this, that means you have to take the class anyway, so start early on your homeworks and go to every single TA office hour because they give you hints as to how to do problems if you're lost. TA's, if you're somehow reading this, thank you for saving my sanity on numerous occasions. Professor, if YOU'RE somehow reading this, this class wasn't as awful as everyone said it would be, but it still wasn't great. Hope you all have a great summer!",
        "This is not an easy course but can be really interesting if you put some time into it. Solving problems and writing proofs is actually pretty fulfilling when you reach the end \u2013\u2013 they're often like puzzles. Lecture wasn't always the most helpful but Prof. Rao is knowledgeable and will take time to explain things. Other resources like the textbook and office hours are fairly useful. Overall, homework is a grind and you'll need OH to help you get started, but other than that it's not as bad as some people say it is.",
        "Lectures were solid.Problem sets were really good prep for the midterm and final.The problem sets covered the important parts of the material nicely.Not that much work.Getting an A\u2013/A isn't too difficult, you just have to get a bit lucky with the midterm and final (don't blank on them).",
        "Very hard class, so you definitely need to put time and work into it. The homework assignments are pretty difficult do be prepared to start early and live in office hours.",
        "Shravas Rao is a great professor! Of course, this class is kind of hard especially if you're not that interested but seriously go to office hours and the TAs and professor will be really generous will help. Tests were not bad compared to the homeworks",
        "A very hard and confusing course. It was tough to understand I spent a lot of time each week on hw.",
        "Don\u2019t get behind \u2013 this class moves very fast. Start homework assignments early if you want to have any chance of completing it on time",
        "Go to office hours to help with the homework",
        "I would say that this class is more time\u2013consuming than hard, although it is still both. Sometimes the weekly homework problems are very hard to figure out without going to Office Hours so definitely go to those as much as you can (you can ask PM's to look over your written out proofs too). The exams are usually pretty challenging though because of the time constraint, and it feels like you either figure out how to do a problem or you don't. But Shravas really cares about giving his students the best experience so don't be afraid to go to his Office Hours too. Make sure you get a good group because it is hard to carry assignments on your own.",
        "This course was an okay introduction to the topics it introduced, but I don't know if much of the material will really stick with me. Overall it was pretty good and I had fun at times, but some questions were written in overly\u2013confusing ways. It definitely is helpful but a bit of a grind."
    ]
}{
    "course_code": "Student Report for COMP_SCI_212-0_20",
    "course_name": "Mathematical Found of Comp Sci",
    "instructor": "Shravas Rao",
    "year": "2020",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "4.73",
        "count": "64"
    },
    "course_rating": {
        "mean": "4.21",
        "count": "63"
    },
    "comments": [
        "Shravas did his best but he just basically regurgitates the textbook onto the slides without ensuring anyone understand anything. Lecture notes are usually all online. Tests are fair though.",
        "Difficult, but with time put in it was fine. Studying with a good group was important",
        "This class is pretty rough.  The homework assignments are difficult, the lectures are complex and at times difficult to follow, and the exams are tricky to study for.  I cannot recommend highly enough that you make use the option to form a group that works on homework assignments together; doing so was crucial for my success in this class, and the added help it provides in completing assignments and preparing for exams is invaluable.  If you take this class as part of the CS major/minor, be prepared for a challenge.",
        "I actually really enjoyed the material because I like logical thinking and reasoning. The material could have been presented better in lecture though. I learned a lot more from doing the homework and looking things up online than I did in lecture.",
        "Shravas is a very good professor. He's very nice and always willing to spend time after class answering a few questions. The course itself is not extremely difficult if you finish the homeworks.",
        "I do not see how this class is relevant for the computer science major. Unnecessarily hard, got lucky with a good teacher, still there is so much material about 34 topics to prepare for on the final. It's all building on each other so You can't cram Homeworks will take a VERY VERY long time. It seems impossible but it is actually simple if you focus very hard. Proof Based. The math and probability is relatively easy. if you've never taken proof based you will struggle.",
        "spent so long on psets... this prof is goat though",
        "I think this was the first quarter Shravas taught 212. He went pretty fast during lectures so sometimes it could be easy to get lost in proofs. That may also be just due to the fact there's a ton of stuff to get through in 50 mins. Office hours and notes are pretty helpful for homeworks.",
        "Reasonable discrete math class and solid teaching from Prof. Rao. The material in this class definitely feels useless but it's a staple of the undergraduate CS degree for better or for worse. If you're a \"math person\" or have taken other math\u2013heavy classes, this course is really not nearly as challenging as it's cracked up to be. It's just a 4 question problem set each week and that's pretty much it.",
        "I liked this class.  The homework questions definitely made me think, and I could feel myself getting better at proofs and the puzzle\u2013like questions as the course progressed.",
        "This class is really hard and will take up a ton of your time.  It's crucial that you find a good group to work with early on.  You do not want to be stuck doing the homeworks alone.  The lectures are fairly dry, but Shravas takes pretty solid notes that he uploads to Canvas.  But yeah, prepare to pull your fair share of all\u2013nighters for this class.  I'll admit some of the problems are kinda fun, but they can be just as frustrating as well.",
        "Shravas is really good. People tell you a lot about how 212 is impossible. It really wasn't with Shravas",
        "So this was professor rao's first year, and overall i would say he did alright. I definitely really liked this class, and I think that this class gets a bad rap for no reason. I think the issue is people seriously don't try in this class, and then they dislike it because they do poorly. As a computer science student, this class can offer you so much if you want it to, but you have to be willing to put the work in (which genuinely is probably only 4 *serious* hours a week). Also, Rao is a really nice guy, but I'll admit his lectures are pretty dry. If he reads this, I would strongly recommend moving away from his current method of teaching by writing on his laptop. One day his laptop wasn't working, so he wrote on the board, and that class was a lot more exciting and interactive in my opinion. Lastly, the notes he posts from lecture are pretty hard to use after the class because it's just a straight copy of what he wrote on his laptop during class. I would also recommend that maybe he create some general write\u2013ups which he posts after each lecture.",
        "Class is pretty boring and the homework can sometimes feel excessively difficult, but the midterm is very reasonable (I didn't take the final because of Covid\u201319). If you're looking to really understand the material, then the class will probably be pretty time consuming and hard. But, if you're aiming for a B+/A\u2013, then the class honestly doesn't require as much time/effort as one would think.",
        "Professor Rao is a smart and coherent lecturer. We cover a lot of ground in a short period of time, and the homework sets are definitely a grind week in and week out. In order to succeed, it's necessary to learn the concepts early, attend office hours, and internalize the material. But it is definitely possible to do well; the exams are fair and if you tune out all the buzz of people saying how terribly awful and hard this course is, it's not too bad. Homework questions are definitely way harder than the actual tests.",
        "Lectures are dry but homeworks help you learn. Midterm/Final weren't too bad they are a time crunch so be ready for that. Overall not as bad of a class as everyone says it is.",
        "I personally went into this class with very little interest in discrete math and this course didn't really change my mind. The material was boring and difficult, so I can't say this made for a positive learning experience. If you don't have to take this class or don't have an overwhelming interest in proofs, I do not recommend 212. Professor Rao is nice though and he is sincere and helpful, which is very much appreciated in a class that is insanely difficult.",
        "This class is very difficult. Make sure you have a good group and study hard for the exams. Shravas is a solid lecturer, but can be boring at times.",
        "This is entirely a math\u2013based proofs class, and it is certainly challenging but very possible to do well on the homeworks.",
        "Interesting class, but lectures are a little dry. Shravas Rao was a good professor for it.",
        "We did basic proofs, set theory, probability, graph theory. It was hard, but work with your group and go over all the example proofs at home and you'll do fine. I wish we did number theory, and other things but we didn't get to that stuff which is unfortunate. I strongly recommend you take this class. And i recommend you take this class with easy classes so you have time to focus on the material.",
        "This is probably the worst class at Northwestern and is completely irrelevant to CS majors/minors although you have to take it anyways. If you get a good group for the HWs then you're set because even if you don't do super well on the tests the curve is really good.",
        "This course is very difficult, and I frequently dreaded going, but I ended up really appreciating the content as a CS major.",
        "Shravas is a great professor. Despite being relatively new, this course went smoothly.",
        "Fantastic course. This course will teach you not only proofs, probability, and graph theory, but also will sharpen your problem solving skills. Shravas is an incredible professor, and the PMs are very helpful as well. This course is not easy, however, and be prepared to sink 5\u20138 hours into a problem set.",
        "I think the important thing to do is understand the concepts and spend time on the homework rather than be able to follow the lecture. I was able to do that best through the textbook and not class time. It's not that hard if you're willing to struggle and think at times.",
        "It is a good class to learn about the basic mathematical knowledge. Not very specific to CS, actually. More like a introduction to probability and graph.",
        "Its hard but office hours?? and youtube are your best friends. Start assignments early",
        "The problem sets will help you learn a lot and Rao is a great teacher and really nice person.",
        "Difficult course like always. Shravas can be confusing at times but is very very helpful and nice! Take advantage of office hours and piazza.",
        "hard and takes a lot of time, homework's are time consuming and make you feel like you are going crazy. I wouldn't bother taking this class if you didn't have to.",
        "The class takes time but shravas made it doable.",
        "The weekly homework was hard but if you go in office hour, you should be fine.",
        "I feel like I did the problems with other peoples help but I never actually understood what I was doing. Office hours were not very helpful since they gave us hints that we knew and weren't actually able/allowed to explain concepts since they were always so busy. I don't feel like I actually learned much as methods were not communicated, it was all examples in class.",
        "GO TO OFFICE HOUR. You basically get full credit for homework. There's a huge curve. A 50% on tests is like B\u2013.",
        "Can be challenging, but overall a fine course.",
        "Shravas is a very effective teacher. I was not at all interested in this class at the start, but over time I realized how cool the material was and that I\u2019d be unwise to waste an opportunity to learn from Professor Rao.",
        "This class can be hard, but thankfully it seems that Shravas alternates between a week of a hard problem set and an easier problem set. The hard ones can take quite a while and some office hours visits, but you do learn a lot. The examples in class got hard towards the second half of the quarter and I found myself not understanding them completely but as long as you get the general gist of what he's trying to get across in a certain example, you should be fine for homeworks/exams. There are also hints in his lectures and sometimes past problem sets that can help you out when doing problem sets, so going to lecture can be really useful. He posts his notes on canvas too.",
        "I went into this course without any knowledge of proof\u2013based math other than taking geometry in high school and let me say, this course was difficult. This was (I think) Professor Rao's first time teaching discrete math at Northwestern and I think he did fairly well, it's just that proof\u2013based math is incredibly different from any calculus or programming class. To an extent, this is good because it means that most of your class will be struggling as much as you are in this class. The curves for the midterms were INCREDIBLY generous, and they also drop your worst homework grade. I've spent several hours looking at a homework problem and just thinking, \"what is the question even asking?\" but often there are clarifications and hints posted on Piazza that lead you to the answer. You will have to take this class, but you will (hopefully) pass.",
        "Prof. Rao is super nice",
        "Yeah ngl this class is HARD. It's gonna be hard regardless of who you take it with. Get a good group to work with.",
        "This is a hard class. I enjoyed the first part but then the class got extremely hard. Office hours are necessary. Homework is insanely hard. a lot of content in one lecture. The professor doesn't try to explain with examples. He just writes proofs and that's all. This class was sooooo hard",
        "Lectures are super boring and not that helpful for the homework. I went to office hours every week with my group for homework.",
        "I was a huge fan of this course. Lectures weren't always necessary but were extremely helpful. Prof. Rao was a wonderful professor with a good sense of humor. He was respectful and responsive on Piazza and in person.",
        "It was the first time Professor Rao was teaching and I think his instruction was pretty good. Lectures were structured and it was easy to follow. Also, the assignments were super interesting! Definitely recommend taking it with this instructor. He was always ready to help if you don't understand something. The course is challenging, but rewarding for any future coding interview you might have.",
        "NA",
        "This course was HARD. Start the homeworks early and be prepared to go to a lot of office hours!",
        "This is a hard course but it\u2019s very doable if you hang out and do the homework at office hours and read the optional textbook before exams. The peer mentor and TA office hours help a lot so use them!"
    ]
}{
    "course_code": "Student Report for COMP_SCI_212-0_20",
    "course_name": "Mathematical Found of Comp Sci",
    "instructor": "Aravindan Vijayaraghavan",
    "year": "2021",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "4.89",
        "count": "73"
    },
    "course_rating": {
        "mean": "4.12",
        "count": "73"
    },
    "comments": [
        "The concepts showed no real\u2013world applications. Class was hard",
        "The material in this course was quite difficult, but grading was surprisingly lenient. The problem sets were tricky, but the TA's office hours always helped a lot. The class was held on Gather.town, which I found to be very cumbersome and glitchy. We experienced so many problems with it that the TA ended up holding his office hours on Zoom instead. Participation was graded so attendance in Gather.town classes was mandatory, but often fairly useless. There was not much time to work on the in\u2013class exercises, and my group was often stuck waiting for help from a TA.",
        "This course was different from what I expected. It's entirely math \u2013 no coding at all. And right from the get\u2013go it can be extremely difficult. I took an entire class on proofs the quarter before, and still some of the early assignments were challenging. There's really a lot to take in those first couple weeks (and I imagine it's way harder if you haven't taken Math 300 like me). After that, things get a bit more manageable, but I have to recommend starting as soon as possible on the assignments because it might take a few days to think of the solutions. Also, the class was taught in flipped format on gather.town. I was unsure about this at first, but I actually think I enjoyed it more than Zoom just because it gives a chance to actually talk to classmates, which is something most virtual classes lack.",
        "Challenging course for those unfamiliar with proofs. Practice brings a lot of improvement.",
        "This class sucks if you hate math, if you enjoy torture take it, good luck.",
        "This class was pretty difficult, definitely one with a steep learning curve and gets more manageable after a few weeks but I'd say slightly easier than CS 213. Aravindan was a good teacher, nothing bad to say about him.",
        "This course is ok. You do have to spend some time on the assignments.",
        "I had a pretty scared reaction to this course, I had never done math like this before and it was really hard to grasp at first. Then it just got harder. I think this class takes a lot of time and effort with the peer mentors/prof to really understand.",
        "This class was pretty solid! I felt like most of the material felt not too complicated. The only two concerns is that you should probably take linear algebra before taking this course even though it isn't formally a pre\u2013req, and also the proof papers themselves take a lot of time to type up (although they aren't generally too difficult). The exams weren't too tough either.",
        "This class is tough, but doable, as long as you take full advantage of office hours. It starts off seeming like too much to handle, but if you persevere it can be a rewarding class.",
        "This class was not a good experience. The flipped classroom format the professor used made me feel less engaged in the lectures and the class time felt somewhat pointless because most of it was spent on group problems so I just felt lost a lot of the time. I am also not entirely sure what the point of the class was since it was never explained why the things we were doing would be relevant in computer science.",
        "This course is really interesting and well taught, and the professor lectures very well and engages the class despite the online format. The homework isn't too intensive and the exams are challenging but fair. The only thing I would say is that the class goes over many topics in a short amount of time, so there's a lot to remember.",
        "the class pretty hard but it was managable. i like the prerecorded lectures but gather.town was a terrible platform and the lectures there were a waste of time because no one wanted to talk in the groups. the midterm and final were not as hard as the problem sets and they are open notes",
        "If you're not too good at math, you're in for a fun time. Honestly, this class is pretty doable coming from someone who isn't too great at math. The psets took a lot of time and I went the office hours pretty often which were helpful. Just put in the time/effort and this class will be alright. The class can get a bit overwhelming towards the end though. It started to feel like every class we'd be doing a new topic whereas in the beginning we would spend a week learning the topic (2 classes). The midterm/final were also pretty doable. If you're just aiming to pass this class it's very doable, getting an A/A\u2013 though I think is pretty tough though.",
        "This course was not fun. The assignments are very difficult and time consuming, and the material is very dense and at times fairly abstract. That said, I thought the professor did about as good of a job as possible of teaching the information in lecture. I would've rather he just lectured live though, instead of in recordings.",
        "The problem sets were fairly difficult to do without any hints/help. Once my group realized how big of a difference office hours made, we started going multiple times a week to get help with the problem sets. The exams were a bit easier than the problem sets because they mainly dealt with things similar to examples from lecture. Aravindan was a good professor and I think he explained things fairly well. He was also very nice.",
        "the professor is amazing. the hw assignments are hard. watch the lectures, do the quizzes and hw \u2013\u2013 B+/A\u2013 guaranteed",
        "Hard class.",
        "Grading is very fair. Aligns pretty well with the curriculum for 214 so if you need to double in the core I'd recommend this combo. Overall, not as bad as people say. Go to office hours!",
        "Professor is amazing and the TA was super nice. Great class, take it with this professor",
        "Class covered a lot of content but not deeply, problem sets were incredibly time consuming and flipped classroom + mandatory participation during live class time was frustrating as the problem sets already ruined my Saturdays.",
        "I felt that this course taught me a lot about problem solving and thinking abstractly.",
        "This is a hard class and they did it in the flipped format so it was hard getting the motivation to go to classes but you needed the participation grade. I think they could've been more helpful in preparing for exams like giving more examples or having a review session with TAs. But overall TAs were super helpful",
        "CS212 is a challenging, but interesting class. Aravinda is a great professor as he explains the concept clearly and the class discussion time is an opportunity to take more exercise. Be prepared to spend a lot of time on problem set and going to office hour is very helpful. Final is challenging as well, but this class is overall rewarding.",
        "This course packs about 3 courses worth of content in a very short time frame \u2013 it\u2019s extremely fast paced!  Office hours are crucial for successfully completing the homework.",
        "This class requires a lot of time. The problem sets take a really long time but they're the primary way to learn the material for the class. If you did ok on the problem sets you'll probably do fine on the exams. Also, the class seems really impossible during the first two weeks since most people have never taken a proofs class before. Stick it out and it'll get easier over time.",
        "Fast\u2013moving class but managable",
        "It isn't super fair, but good internet will really help you to do well in this class. You need to watch the lectures on your own time, but the class meetings are on gather.town. The platform is so glitchy and it can be hard to understand people if your wifi is bad. You do practice problems in each class meeting, and it is really important to know how to do those problems...and a small part of the grade is based on attendance and participation. You should try to speak and have your camera on; if your internet connection is bad, get in contact with the prof about it ASAP. Once I saw him call someone out over not having their camera on, so that wasn't great.ALSO: BE SURE TO FIND A GOOD STUDY GROUP! I don't know if i would have gotten through without my team <3",
        "This course was definitely hard but manageable if you keep up with the lectures and do the problem sets. The professor is very reasonable and helpful!",
        "Course was good. Just that the 9 weeks quarter made organization a little compromised and hence we had to rush over a few topics and not really delve into them in detail",
        "It was just really hard, I didnt like the proofs, like idk its just not the class I would like to take on my own, but to be fair I don't think there was a kid in the room who was excited about the class. Not to dig on the teacher though because he was amazing and is probably the best teacher I have had on zoom.",
        "I definitely didn't enjoy this class at all. There were a couple problem sets that were just ridiculously invovled, and the fact that everything was due at 5pm on Sunday was horrible. The instruction was pretty decent, but in the later sections they assumed a ton of knowledge about linear algebra especially, which meant that we basically took a linalg class in 2 weeks, which was very ineffective. Also, often TA's would give contradictory answers that just confused things even more, because it felt like each ta just had their own opinions that were different the professor's.I liked the gather.town flipped format though, it felt like a good use of class time.",
        "Overall, good course & not as bad as I had expected going into it. Almost all of the problem set questions are pretty doable based on the examples from lecture and from class, and the midterm/final exams were alright as well. Just be prepared to ask for help if needed and make sure to stay on top of the work. Also, the actual mathematics required for this course isn't too intense, so even if you aren't the most mathematically\u2013inclined person, as long as you are a good algorithmic and logical thinking, I think you can do well in this course.",
        "Office hours are keyyyyy. Make sure you understand what\u2019s happening in class and don\u2019t rely on your team too much. It really comes down to actually understanding what you\u2019re learning and not just replicating it on a service level. With that said the problem sets take forever and this isn\u2019t an easy course.",
        "I was concerned this class was going to be super hard, but it was not nearly as bad as expected due to the great teaching staff. The TA Adiao was great, and same with the PMs. The homework was hard, but gong to office hours made it much easier\u2014definitely use them! The exams were also pretty straightforward, as the proofs were typically very similar to ones shown in class. Overall a great course, would definitely recommend taking with Aravindan",
        "The course throws a lot of (sometimes difficult) concepts, each of which will be used in proofs, which are core to the class. Regardless of how well you understand the concepts themselves, the problems in the coursework will still sometimes be challenging and require creativity and thinking.",
        "Overall fine. Math isn't particularly hard, but some concepts can be tough. Take time to think things through and practice writing proofs. Arivindan is good, tried to keep class engaging, and felt pretty lenient in grading",
        "It was hard and a lot of work",
        "This is a very hard and time consuming course, but Professor Vijayaraghavan is extremely nice, teaches well, and tries to help his students succeed as much as possible. I'd recommend taking 212 with Professor Vijayaraghavan.",
        "Basically covers a little bit of everything you need. Math isn't too bad, but getting used to writing proofs takes a little work.",
        "This class is challenging in terms of the amount of content that is covered in lectures. Students must stay on top of the material because it is hard to catch up if they fall behind. Instructors could do a better job of providing examples of formal proofs and their format.",
        "This course was tough but the topics were interesting.",
        "This class was really well done for an online class, by using gather town.",
        "The flipped classroom was interesting. I liked that I could pick my own pace."
    ]
}{
    "course_code": "Student Report for COMP_SCI_213-0_20",
    "course_name": "Intro to Computer Systems",
    "instructor": "Branden Ghena",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.61",
        "count": "72"
    },
    "course_rating": {
        "mean": "5.16",
        "count": "74"
    },
    "comments": [
        "This class was not as bad as people made it seem, however this probably only applies to you if you have a solid grasp on lower\u2013level concepts in computer science. The homeworks were not too time consuming and the labs, while difficult, were manageable. TAs were very helpful in office hours.",
        "Branden is such an amazing professor, and I'd highly recommend taking CS 213 with him. He's super organized and approachable, and his lectures are great. He's very fair with assignments and exams as well. I don't think I would have enjoyed this course as much as I did if it weren't for him.",
        "This course was fantastic. Although it could be difficult at times, Professor Ghena was a fantastic instructor and the homeworks and labs were excellent as well. The whole instruction team including PMs and TAs were so helpful and interested in the subject. I had a great experience and would strongly recommend to anyone.",
        "This course was very fun, especially the labs, which took a significant amount of time but had interesting concepts and partnership.",
        "Not necessarily stuff you want to learn, but stuff you definitely need to know. This class answers a lot of questions related to low level processes.",
        "Brendan is a good professor and definitely cares about his students. The powerpoints are very helpful and as are the lectures. The homeworks are incredibly helpful for the exams too. Hardest part of the class was the first lab for me. The exams aren\u2019t too difficult either as long as you study the HW and slides.",
        "Branden is the GOAT. Even though this is his first time teaching this course, he did a good job teaching the subject in a concise manner. Also, his grading and testing style is really reasonable.",
        "This course is what made me interested in computer systems despite not knowing anything about the subject beforehand. The class was well organized, the professor was open and helpful, and the assignments and labs were interesting.",
        "Interesting concepts. Exams can be challenging, but worth taking if you're interested in this kind of stuff.",
        "The lectures were clear and understandable. The homework was manageable and I appreciated the exam reviews. There were a lot of office hours and the TAs were very helpful.",
        "So I went into this course not really expect to enjoy it that much (as a blanket statement, most CS students are looking to do high\u2013level things, namely software engineering, for instance). However, I was totally wrong. The material was really interesting, Branden was an engaging instructor who explains difficult concepts well (not to mention that he responds fast on Campuswire to students' question). The infamous labs are difficult and take a long time, yes, but I feel like I learned a lot from them & if you enjoy problem solving and critical thinking, they shouldn't be too bad for you. With the labs, tl;dr \u2013 Data & Bomb Lab are probably more difficult than Attack & SETI, but to each their own (I personally really liked the bomb lab, as I felt it was just like a bunch of puzzles that were fun to solve, but this I probably just me & I digress lol). Seriously though, go into this class with an open mind, and s/o to Branden for being awesome!",
        "Lectures were very good but homework and labs are hard.",
        "Be on top of your labs and find a partner early; they can take a while, even with help. Most of the time spent on this course was in labs. Course material was quite intuitive.",
        "Branden is an amazing professor and an amazing addition to our faculty and I'm so honestly so glad our department recruited him. Like I seriously cannot say enough good things about him and I just do not know what else you could possibly want in a professor. He puts so much effort into addressing student needs and concerns, and I feel like more broadly just staying attuned to the vibe of the students, both in and outside of lecture. It seems like he really puts a lot of work into creating and facilitating our homeworks, labs, exams, etc. He also just is a very chill and nice guy.(He also probably made the exams a little bit too easy :), though that might change as he gains more experiencing teaching haha. The first midterm grade was my highest exam grade in I think just actually my entire academic career. People really, REALLY hype up this course being incredibly tough, and while I'd agree the first three labs were EXCRUCIATING \u2013 luckily my partner did the labs without me basically as soon as they got released lol \u2013 but otherwise it's totallllllllly manageable.)CS 213 is a really fun and cool class, but I think Branden does a really good job of making it even better. I feel like Branden is really good at like, telling us the actual raw course material but then also being like \"and if you were to take that concept a step further, you'd end up in the sub\u2013field of xyz thing which you can even learn more about in abc class and is actually a really major factor in the way ijk thing is designed.\" Like I feel like if you are interested in computers at all, this class just does such a good job of stoking your curiosity and revealing just how extraordinary, gigantic and strange computer systems and architecture and just computer science writ large truly is. Like I feel like for everything you learn in this class, it's like you become curious or mystified about something else, but in a really exciting way rather than in a confusing or overwhelming sort of way. Likewise, I feel like Branden is really good at answering questions which ask about things which are related to the topic at hand yet also beyond the scope of the class in terms of depth where he can answer the question really well without getting totally sucked into a rabbit hole and in a way that I think still enriches even the people who didn't ask that particular question.",
        "This course was much better than I expected.  Branden explained everything really clearly, and the homeworks were very helpful in understanding the material.",
        "I felt like the lectures and the labs we had to do weren't really related.",
        "I thought the course was well adapted to the online environment. There was a lot of help as well for students that might have had difficulty.",
        "I liked this course a lot. It was quite time consuming, generally, but the homework assignments/labs teach you so much. Branden and the TAs are super helpful\u2013\u2013they have ample office hour time for you to ask questions (which you likely will have to go to, particularly for labs), which also makes the process of learning and doing the assignments much smoother.The content of the course, and the labs in particular are super interesting. While I did not consider myself to be very interested in systems, I definitely am after taking this course!I'd recommend trying to find a good partner early on and also make sure to take this course in a quarter that looks like a lighter load, because it does take time to learn the material and complete the assignments. However, this course is very fun and a great intro to systems in general!",
        "Overall good course, labs were fairly challenging but it was not hard overall",
        "I really really struggled with the material of this class. I dread computer systems as a topic, I find it hard.That aside, Brandon's instruction is solid.",
        "If you can take this class with Branden, do it. This class with him was about as good as I feel that it could get. The material itself will not be everyone's favorite, but it will at least be interesting if you let yourself be interested by it. Branden also goes out of his way to show you how the class affects many things in general computer science. Lastly with the amount of office hours and the great TA\u2019s its not very hard to land an A if you put in a bit more effort.",
        "This was a wonderful course! The content was interesting, the lectures were great, and the assignments helped solidify the concepts.",
        "Class material was more or less easy to understand from lectures. Applying it in to the lab assignments was very difficult. I definitely relied on Office Hours to help me through labs and double checking understanding during homeworks.",
        "A pretty good course, not my favorite but still fine. Ghena teaches the course well, but computer systems either really is for you or it really isn't.",
        "Course was really fun with Ghena, labs were long but the material wasn't super hard",
        "The instruction was great, and I sincerely found the majority of the material very interesting (basically everything except a good chunk of assembly).  The labs are just insanely hard \u2013 individually, some of the most challenging assignments I've had at this school.  The homeworks and exams are reasonable, though, and honestly felt more rewarding than the labs.",
        "its hard",
        "This course was good, but difficult. You need to put in a lot of time to be successful with it.",
        "The course content was extremely exciting! Branden is a great professor in lectures and offers great direct help in class and office hours.",
        "The lectures and homework were very straightforward. The labs were somewhat challenging but never made me incredibly angry.",
        "Really fun course, the homework was all helpful and the labs were a lot of fun. The exams were well designed and graded very fairly. Learned a lot and was probably my favorite class of the quarter.",
        "As a CS major, I appreciate how this class can provide me with knowledge of how things work behind the scene. It definitely helps me to write better code in the future.",
        "Hard labs but the rest is ok. Professor Ghena is a wonderful instructor.",
        "Good course! Office hours are very helpful for homeworks, labs, and preparing for exams. Staff was great.",
        "I thought it was cool to understand how computer systems work",
        "Good.",
        "This class was really interesting because it was different than all the previous computer science classes. The labs were challenging, but other than that, it was not too hard.",
        "I found the instruction and lectures to be fantastic, but the curriculum (particularly the HWs) extremely tedious.  I severely doubt I will ever read hundreds of assembly lines, manually compute cache tags, or any other of the simple but very annoying tasks this class has you do.  The high levels ideas are interesting and easy to see their importance, but the insane level of detail seems excessive for an introductory, required course.",
        "I found it enjoyable and engaging even though systems is not my foremost interest in computer science."
    ]
}{
    "course_code": "Student Report for COMP_SCI_213-0_20",
    "course_name": "Intro to Computer Systems",
    "instructor": "Vincent St Amour",
    "year": "2020",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.31",
        "count": "83"
    },
    "course_rating": {
        "mean": "4.79",
        "count": "84"
    },
    "comments": [
        "Vincent prefaces the class with  'This will be among the top 3 hardest classes you take'. to a room of cs majors :o... and it was really challenging, especially as someone coming new to this stuff and from outside the dept. BUT, you put in the work and get a good partner, and you take a lot away from the class. ofc, I didn't have to do the malloclab because of corona, but still, you learn a lot, just be ready to push yourself",
        "Get a good partner and if you can't, do it yourself. There are plenty of resources out there to help you. Vincent is very meticulous and by the book, so unless you have a good reason you goofed up on something you are out of luck. It's a lot of work, but it can be very rewarding. There will be days where you hate yourself and others where you feel like the smartest person a live. I personally had more downs than up.",
        "This class is an experience. Do find a partner who you vibe with and hold them close. I've been up late doing homework for this class with my partner so many times and it did put our friendship to the test at times but we've come out strong so far. I've seen other friendships get \ud835\ude35\ud835\ude26\ud835\ude33\ud835\ude2e\ud835\ude2a\ud835\ude2f\ud835\ude22\ud835\ude35\ud835\ude26\ud835\ude25 over this class and it happens, someone can be a good friend but not a good class partner. If you've been working on your time management skills, do plan for this class during break. Vincent is great as an instructor but he is relentless as a professor. The class will not ever move off pace with the schedule and any exceptions/leniancy/slack will be \ud835\udc2c\ud835\udc24\ud835\udc22\ud835\udc27\ud835\udc27\ud835\udc32\ud835\udc32. So putting this class on the back burner/counting on extensions or anything like that is not ever an option. TAs are also very important in this class. Sample different office hours to get a feel for them, they are all made differently. Some will be helpful for homeworks, some for labs, some for test prep you really just have to get a feel for them and if you find an office hours day that is empty: \uff43\uff41\uff50\uff49\uff54\uff41\uff4c\uff49\uff5a\uff45\u1d52\u207f \u1d57\u02b0\u1d43\u1d57 because when office hours get packed it is no joke. Also: seating. This class will probably be at capacity so if your preferred seating is popular, \u1d04\u029f\u1d00\u026a\u1d0d \u026a\u1d1b from day 1, it is no joke there was people sitting in window stills as of week 8! Vincent knows what tf he's talking about though if you have questions do bring them up, he's itching for them in class and he'll also take them after class. Basically, just brace yourself and get through this class.",
        "Personally, I feel that this class is not super difficult. Even if you do poorly on the exams you will not fail the class. To do well, however, I feel that one would need to put an amount of work into the course that isn't especially worth it.",
        "Take 213 with vincent. Vincent really wants you to learn and is an engaging lecturer. The class is pretty hard though so take advantage of office hours and stay on top of the material.",
        "Too much content in too little time to actually understand any of it. And no practice problems before your expected to dip the homework.",
        "213 is a great course, especially with Vincent. The class will be really hard, but that isn't necessarily a bad thing. I was scared to take it after reading the CTECs, especially since the rest of my schedule was super heavy. But, I made it through, went to OH, and put a lot of hard work into it. My partner did not really do anything which meant I was responsible for doing all the HWS/labs on my own, which sucked in the moment but now I have done everything on my own which means I really learned it. It's hard, but not impossible. If you work hard at it you can definitely get at least B+/A\u2013. And Vincent is an amazing professor so just go to lecture, do all the homework's and labs, go to OH, and you'll be fine.",
        "Vincent is a great professor but the class is super hard, time consuming, and not necessarily interesting to people who want to learn more of the coding side of computer science. Exams are fair but homework is extremely difficult, even with partners.",
        "You will learn a lot. You will get out what you put in, and you will put in a lot of work. It seems a bit scary but you are more than capable of rising to the occasion.",
        "You have to spend a lot of time to do well in this class. It is very hard but doable if you dedicate the time.",
        "This class is tough but I honestly really enjoyed it! The material is challenging but important, I think, and the assignments, while tough, were still fair. Vincent is awesome\u2014super interested and excited about what he's teaching and genuinely seems to care about his students' success.",
        "This class is SO HARD. Hardest CS I've taken. There is never a break \u2013 always homeworks or labs due. The homeworks are hard but once you get it you understand a lot. The labs are also really difficult and require a lot of time. I HIGHLY recommend going to office hours \u2013 the TAs  are so helpful with HW and labs. I recommend taking this class with Vincent, he is a really good lecturer and super helpful in office hours. Overall, really hard class, but mandatory for CS major/minor so have to take it.",
        "This course is going to be difficult but not conceptually. You have a lot to keep in mind, but definitely manageable.",
        "Honestly a really cool course. It's time\u2013consuming, but if you put the time in and have a partner who's reliable, you'll learn more in this class than in 111, 211, and 214 combined.",
        "I just wanna say thank you Vincent for being so passionate about the course material and making the content interesting. I was not interested in the content before but I have to take it as a major requirement. Vincent really stimulates my interest in the topic. That being said, the course is hard and time\u2013consuming.",
        "Honestly, this course isn't hard if you put in the time. A lot of the material is just certain rules you have to remember and follow, and once you understand them, you should get everything right on the test. You do have to put in the time to do the readings and the homework, though. If you can completely understand and complete every homework, you would only need to spend ~2 hours studying for the midterm and final. The only problem is that Vincent is not a good lecturer (in my opinion) and passive aggressive sometimes...",
        "This course is definitely as hard as everybody says it is. Essentially everything you learn is new unlike other CS 21X courses. It's so important to make sure you are caught up to the lecture contents every week because the next week's material will only make sense provided you understand the concepts from the previous lectures. Taking good written notes will be beneficial as the exams are open\u2013note and open\u2013book. The course's homework assignments and labs are done in pairs so you should try to have enough time to meet up with your partner every week.",
        "Vincent tries to trick you on exams.",
        "Very hard class. Start the labs very early (like at least a week early)",
        "The class covers a lot of material all the way from binary operations to memory allocation. Assessments were spread out evenly throughout the course, and the option to work on homework and \"labs\" with a partner made the work load incredibly manageable. It's a tough class but definitely interesting and fairly graded.",
        "This course is quite demanding with both written homework and labs demanding a lot of time and effort to complete. Exams are also quite difficult but they are open note which is a plus.",
        "Honestly not a miserable class like many people say it is. While there is a lot of work involved, it was interesting to see how the assembly matches up to the code and most of it makes sense once it clicks. The homework and labs are difficult, but office hours helps a lot. Vincent was great at explaining things and sprinkling his humor into many topics to make them more enjoyable.",
        "213 was not as bad as my first impression painted it. Overall, it's a really great class. You learn so much about another world of computer science that you may never have thought about before (like me). It's a lot of material that can be a little intimidating at first, but Vincent does a great job at explaining, and he welcomes questions, so feel free to ask as many as you'd like. The lab assignments were my favorite part because they make the concepts tangible and practical, and the latter half of the course is definitely very interesting, in my opinion. Vincent is a great professor. He really cares about students and shows his interest in the subject with every lecture. There may not be anyone more suited to teach this class than him.",
        "Even as someone who has very little interest in the material, I respect this course. I truly do feel that I'm coming out of it having gotten a good introduction to systems. Vincent is great as always! He is so passionate and for some reason I can't help but feel happy watching him lecture!",
        "Vincent is a great professor, take 213 with him. Assignments and labs can take a decent amount of time, so start early. Exams aren't hard if you do the practice and understand those. Taking this class with CompEng 205 (like I did) is interesting since they cover similar material but have subtle differences. This class is good for learning concrete fundamental concepts for CS that you will find useful in the future.",
        "Not that bad, actually. The final lab is super hard, but all other assignments are not too bad to be solved with the help of the TA.",
        "This class is a lot a lot a lot of work. You always have two assignments out at a time and it can get very overwhelming you just have to stay on top of it. It is required for CS so I would reccomend taking it with a lighter load in other classes otherwise you just wont have the time to work on assignments. For nonCS, it is a good class and you learn a lot so it is definitlely not a bad option just be warned its a time suck.",
        "This class was pretty difficult. I had no systems background going in and I found things to be very challenging both conceptually and in practice. Vincent is a good lecturer, although his pacing is rather quick, but office hours are frequent and he is willing to go over things again in class if you ask questions. Homeworks were tough but manageable, and labs were, to be frank, really tough. Especially for the malloc lab, I spent a lot of my time in the week sitting in office hours trying to figure out how to complete them. The good part is that you generally know what your grade will be ahead of time as the labs come with grading components already in place.",
        "Vincent was pretty Good other than the fact that he just like talked really fast. Definitely start all of the homework and labs as early as you possibly can and then asked the Teays and friends for help. In terms of exams you such a do you like the Homeworks and book problems like 1 million times to get good at it and then you\u2019ll be fine.",
        "I truly do not think I would have gotten through this class had it not been for the coronavirus making the malloc lab and second exam optional. However, that being said, a lot of the labs before the malloc lab were really fun and the homework is doable. Make sure you get a partner that you like or getting through this class will be very miserable!!! I learned the hard way. Vincent is a really nice guy, so take it with him if you can",
        "Vincent talked so quickly, I don't know how some people in the class processed what he was saying and had questions to ask. Interesting class, took it only as a prereq for another class. I don't like C, and I would have liked to learn more about using assembly code.Every lecture went from easy to more difficult material, but the hardest stuff was always in the last 5 minutes and sometimes went overtime. Do not take this class if you cannot stay for an extra 5 minutes.",
        "Great course and professor! Absolutely no complaints",
        "This course is dense. Go to office hours as much as possible and make sure you really understand the written hw assignments.",
        "This class is really challenging. If you are willing to put in the work though, you will be fine. Vincent is a great lecturer and TAs are very helpful at office hours.",
        "It takes a heck of a long time to do stuff. A lot of the time is just sitting there going like, \"What the heck is going on?\" which is basically like coding, I guess. I'm glad I took this with Vincent since he's super clear on stuff and engaging too. Make sure not to procrastinate on the homework and especially the labs.",
        "Lots of information to learn, especially because the 80 minute lectures can be dry by the end. But the homeworks actually really help you learn the material.",
        "With the whole COVID\u201319 panic at the time, I would take these reactions (and others) with a grain of salt, especially for aspects towards the end of the quarter. This course can be incredibly fun and incredibly challenging at the same time. While I very much enjoyed the topics covered in the class, the homework and lab assignments were the most difficult I've had in any CS course at Northwestern so far. Still, I believe the course prepares you well to take on the other 300\u2013level systems courses, and Vincent truly cares about students learning in his course. Vincent's recommendations for how you should distribute your time for the coursework should be taken seriously, as starting as early as possible on everything made the course manageable and otherwise I don't think my partner and I would be able to finish on time. It is also important to get a partner with a similar or even better grasp of the content than you and that both of you keep to a schedule for working on the assignments because it can get very frustrating otherwise and you want to avoid that at all cost.",
        "Vincent is an excellent instructor and articulates content very clearly and tries to be conscious of students with less background knowledge. However, as there is a very large amount of content to cover, lectures tend to go quite quickly. There are both written assignments and coding labs which are extremely time consuming and challenging, and office hours are almost always packed because of this.",
        "Great class. Homework helped with learning a lot. Labs were definitely time\u2013consuming, but pretty engaging. Vincent was good.",
        "This class is definitely very time\u2013consuming, so you need to be on your feet all the time and make sure to start everything as early as possible (ideally, as soon as it's released).  That being said, I never felt like this class was overwhelming, but if you don't have a good understanding of the material from the very beginning and you work on assignments and labs last\u2013minute, then I could see it being overwhelming.  The material in general is also just super interesting to learn about, and I really appreciate that I have a better understanding of what's going on under the hood in computers.  Vincent's a great professor too; he's super enthusiastic about the material, and he's really easy to approach whenever you need help.  Overall, one of the best CS classes I've taken at NU.",
        "This was my favorite class of the quarter. It teaches you the fundamentals of systems, which is good to have to be a good software engineer. It takes a lot of time to do the HW assignments and the labs, so start them early. Go to OH cause they will save you hours and a lot of concepts will be explained better than during lectures.",
        "This class is definitely one of the more difficult ones of the CS prereqs, but if you put in the work then you will likely not have trouble doing well. The homework assignments are all pretty manageable and the midterms are not very difficult, but the labs are definitely the more difficult part of the class. You should definitely pick a partner that you are comfortable working with for many hours, but know that paying attention in class and studying the material on your own will keep you very prepared. Also, Vincent is an excellent teacher, and you should definitely try to take the class with him if you can.",
        "This class is pretty hard but Vincent is a great professor. The lectures do feel a bit long and it can be easy to drift off which is not helpful, but if you truly pay attention you will be fine. The labs are time consuming but are fun to do. All the homeworks and labs are with partners which helps a lot.",
        "I really enjoyed this course! I don't think the material is my strong suit in any way, but it was so interesting, and the course was set up in a way that made it easy to understand what I needed to do to succeed. It is a time commitment but not unreasonable or unmanageable. I think knowing someone to partner with going in is a good idea, but they will help you find a good partner if you don't have one!! The tests are very reasonable and fair. I found the book and office hours very helpful on homework assignments and studying for tests.  I was nervous about the course before taking it, but I am very glad I did and wish someone had told me that it is not as scary as people say at all. Vincent is a really good professor, and the peer mentors are a huge help.",
        "The course aws great! Definitely difficult, but easier than any other into breadth course I would've taken. cool course",
        "Challenging class, but a necessary start for any comp sci major. The Professor made it very helpful with very good resources and structures the class very well, combining very technical things with real\u2013life applications and comp sci history",
        "Vincent is a great lecturer who is knowledgeable about the material and answers questions very well. The amount of material can be exhausting sometimes, but if you attend all lectures and take good notes, you will do fine.",
        "This is the best cs core course I have taken so far. The labs and homeworks were fun to do. The prof was very passionate about the material. The exams were easy too",
        "Vincent is the best CS teacher I've had probably. The content is actually super hard, but his lectures are engaging and he's overall a great lecturer. Homework/labs can take a very long time, so make sure you have a dedicated partner going into this class.",
        "go to office hours, consult others who have taken the class before for homework help",
        "Take this class with Vincent. He cares so much about teaching for the sake of learning, rather than just for tests, and it really shows in his passion in teaching and explanations of the material. You'll likely cover more material in this class than any other CS class so far, so having Vincent there to help is a huge bonus. Overall its a large amount of work, but if you stay on top of notes and lecture it's definitely manageable.",
        "You definitely learn a lot in this class, but it is very time\u2013intensive. Lectures can also be quite tedious. Homeworks are interesting and mentally stimulating.",
        "Vincent is a great professor. He really knows his stuff and does a great job explaining it. My biggest recommendation is to stay laser focused during lectures and take great notes. The textbook can be super helpful too, but I don't think it's worth the time to read every section carefully; it's great to use as a reference while working on homeworks and to help you with concepts you're struggling with. My other advice is to not split up the homeworks with your partner at all, instead do them separately first and use each other as a way to check your work and work through the ones you got stuck on. If you can fully understand each of the homeworks and practice midterms, you will succeed on the exams. Lastly, have confidence in yourself going into exams! People over\u2013hype the difficulty of this class. It is challenging for sure, but it's not as impossible as people make it out to be.",
        "The course is challenging but organized well and you get out of it what you put in",
        "All I can say is: Vincent is the man! This course is definitely super challenging especially the first couple of weeks (bit manipulation and intro to assembly) but it slows down toward the end. It's not that any of the individual material itself is that difficult, but the fast pace of the class combined with a lot of very detailed topics makes it hard to keep up. That being said, I don't think I have ever learned more in a 10 week span than I did in this class. For the first time in my CS career I actually feel like I understand computers better rather than just how to make them do certain tasks. Make sure to read the book before lecture, start hws and labs early, and print the slides for the exam.",
        "This class is hard but if ya gotta take it, take it with Vincent!! He's a great prof. Also make sure you have a good partner because that's important! This class is tough because people come in with very different levels of previous systems knowledge, so it's easy to feel like you're behind. But you can do well on HWs and the labs that are the hardest are the first and last, and everything else you can get help on. A class where you learn a lot, also exams are open notes/book.",
        "The class is not as difficult as people say it is. The lectures are very helpful as an intro to the material. You have to show special care to the homework and labs to master the material. Good news: if you work on the homework and the labs, you will nail the exams with little additional effort. Bad news: it will require good scheduling and commitment.",
        "I really enjoyed the course with Vincent. He is an awesome professor teaching something he is passionate about. I don't think it is as hard as the other CTECs say."
    ]
}{
    "course_code": "Student Report for EECS_213-0_1",
    "course_name": "Intro to Computer Systems",
    "instructor": "Vincent St Amour",
    "year": "2019",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.38",
        "count": "63"
    },
    "course_rating": {
        "mean": "4.67",
        "count": "64"
    },
    "comments": [
        "Vincent is a great professor. This class is definitely very difficult but he is a really good lecturer and is engaging during class. This class is very time consuming and homework and labs take quite a while but you get to work with a partner which is really nice. 213 has a scary reputation for a reason but the class is definitely doable if you put in the time.",
        "this class was hard :(",
        "This course was very fascinating and it was really cool for us to work on the labs and actually see/work out how systems work at their core.",
        "Vincent is a great professor! He is super nice and really does care whether or not people learn. Some of the homework can get a bit tricky, and the labs will take a decent amount of time to finish. Reading the textbook and doing all the homeworks are essential to getting a good grade. Even though you get to work with a partner, I highly recommend doing the homework on your own and then comparing answers with your partner.",
        "This class has a decent amount of out of class work. However, this work will really help you understand the course material better.",
        "This course was great. Pretty tough, but if you put the time in to learn the concepts you learn a lot.",
        "interesting material \u2013\u2013 go to OH for HW and make sure you're on top of your game on those, doing well on these make studying for the final and midterm easier.",
        "This class is definitely as hard as people say, if not harder. Be prepared to spend a lot of time in office hours for hw/labs, and get a good partner. Vincent is a great professor, though, who really cares about his students and the material. He's an engaging lecturer, and really focuses on making sure every student understands what's going on.",
        "Its pretty tough especially with some of the labs that are just stupid hard. Just go to office hours and don't get behind",
        "Very time consuming, make sure you go to TA office hours. If you can understand all of the homework problems, you will do well on the exams. Start labs early.",
        "Vincent is the best professor, the material is difficult but manageable. All the work will be very difficult (homework, labs, test) so make sure to set aside a lot of time for this class.",
        "Very interesting class. Worth effort.",
        "I know this course gets a bad rep for being notoriously difficult, but I think if you put the proper effort into the course and listen in lecture you will be fine. Vincent is an amazing teacher who really cares about his students and you learn so much in the class.",
        "Pretty hard course. Besides midterm and final, lots of the grade comes from Labs and Homework. It is essential to go to office hours and look at slides, or else you won't know where to begin.",
        "This was the hardest class I have taken at northwestern. You will spend hours on the homeworks and labs, and you should not miss a lecture if you can avoid it. That being said, mastering the material is possible if you can afford the time to study and do the homeworks. Do not take this class if you are taking other difficult classes or if you are in any kind of demanding extracurricular process.",
        "Extremely challenging \u2013 labs and homework can be super time consuming. Vincent is super approachable and is a very clear and coherent lecturer. He is also super passionate and wants to make sure everyone understands what is going on in class.",
        "This class is very hard, make sure you review the topics you went over in class after each class or at least during the week.  The tests are very hard also, I felt that even if you studied all you could for hours and hours, the tests were STILL hard.  Maybe it's just because I don't understand systems or had ANY exposure to anything systems before, but it was very hard and the homeworks take a long time even if they look not so bad",
        "very hard.. do it if it's only a requirement... go to office hours all the time... start labs and assignments early",
        "This course is definitely challenging, but if you put in the work and go to office hours, you can do well. Vincent is a great professor too, so take 213 with him!!",
        "I knew this course was going to be hard coming in, however I was not expecting it to be so draining of my time for very little benefit. The labs and homework\u2019s take absurd amounts of time to complete because there really is a huge disconnect between what is covered in lectures and what you have to try and do on the assignments. The Malloc lab was a poorly designed assignment as I spent the entire week in office hours and over 20+ hours on it myself as well trying to figure it out and was still unable to solve it. Leaving me with the same grade as someone who would have put minimal effort into it. Even the TAs were unable to help us out at all.",
        "Dayum boi this class is hard af, find a good partner, 2nd half of the class is easier than the first",
        "Material in the class can be dry, but Vincent is really passionate about the class and material and wants all of his students to succeed.  Class will require a lot of time and effort to do well.",
        "This class is not hard like everyone tries to make it out to be. It just takes a lot of time and patience. The work comes fast. Some weeks you will only have 5 hours of week, and other weeks.....ahem malloc......you will work for many many hours. PS if you want a good grade on malloc start it early and be prepared to work at least 20 hours to get even a decent grade.",
        "Difficult and time consuming. Pick a good partner. Review concepts and especially review homework problems to prepare for the tests.",
        "IF YOU ARE NOT CS OR COMPUTER ENGINEERING DO NOT TAKE THIS COURSE! IT WILL DESTROY YOUR SOUL.",
        "213 is ridiculously dense, but Vincent is a great and supportive professor, especially one\u2013on\u2013one. The homework assignments are very useful for understanding the material, as well. The labs are very rough and require a lot of time, so having a good partner is pretty important.",
        "This is a very detailed oriented course, but the assessments and assignments give plenty of opportunities for practicing lecture concepts. The programming labs were also incredibly fun but a lot of time is needed to fully grasp the ideas behind what you're doing. My advice would be to start early to get the most out of the course.",
        "Take the course with Vincent",
        "Hard class, but Vince is the man",
        "This class is brutal! It is a lot of work but very rewarding at the end. The exams are fair but the homework and the labs are stressful. Definitely be prepared to live and breathe eecs.",
        "Be prepared for long nights in tech office hours and the feeling like maybe you just want to give up the world time. If you really apply yourself YOU WILL DO WELL\u2013\u2013but you have to care enough to really give this class your all.",
        "Wish St. Amour gave us a 2\u20133 minute break in between lecture, since it's hard enough to pay attention for 1.5 hours",
        "It\u2019s a hard class, and the professor will admit that to you too. You will spend a lot of time on this class, especially the labs and homework which are a HUGE part of your grade. I will day though, if you take the time to do the homework\u2019s and labs it will benefit you in the long run",
        "The return on investment for this class was terrible. I spent ridiculous amounts of time working on assignments for this class with very limited return in terms of both learning and grades. That being said, this class taught me a lot about starting assignments early, learning the material as you go and not cramming, perseverance, and the value of failure.",
        "Challenging but doable",
        "Expect to spend most of your week on the homework/labs for this class. The TA's were very helpful and you'll need them.",
        "Tough as nails but put the work in and you'll get a lot out of it",
        "INSANELY hard and a lot of time but if you put in the work it's really rewarding and you can do well",
        "While the workload of this class is substantially more than close to any other class I've taken during my Northwestern career, the topics of focus within the course, primarily memory hierarchies and machine assembly language, were taught in a way that was both challenging and engaging.",
        "This is a terrible, terrible class. Not only is it extremely difficult material, but the homework and labs are absurdly time consuming. I never felt like I had an actual grasp on the material because there was a new ~20 page assignment every week and I was struggling to even complete them on time. Also, lectures were extremely difficult to follow. The material is very dense and is not presented in a clear way. The fact that there is a lab that hardly anyone can even finish just shows how little this class lets you succeed, and I think that is really pointless. It has made me question everything I love about computer science, and don't think that Professor St. Amour will do anything to prevent this.",
        "Vincent is great and really cares about his students.",
        "Tough class. Watch the online carnegie mellon lectures. Vincent is great and really cares for his students. Take this class with him.",
        "Definitely think this class just moved too quickly. After all the time you put in trying to finish the homework assignments or the labs, the tests aren't too bad. The homework is definitely the tough part of this class.",
        "Vincent is a great lecturer!",
        "THIS IS SUCH A HARD CLASS. I mean I guess it is notorious for being hard but for reals as everyone probably told you already its really hard. Make sure to go to office hours and do the homework beforehand. DON'T PROCRASTINATE. A lot of my friends started the day beforehand and would end up staying up the whole night or not finish it. So make sure to start early. Professor Vincent's a really good professor and does a really good job explaining concepts so don't even think about skipping class.",
        "I liked that the class was structured really well, it was always clear what we were meant to do",
        "There was a lot of information in each lecture to be absorbed \u2013 often times it'd feel a bit overwhelming. However, the professor does an amazing job structuring the course and setting you up to succeed.",
        "Vincent is great, the class is tough. I liked the homework assignments but the material was hard to dive into."
    ]
}{
    "course_code": "Student Report for COMP_SCI_213-0_20",
    "course_name": "Intro to Computer Systems",
    "instructor": "Vincent St Amour",
    "year": "2021",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.53",
        "count": "86"
    },
    "course_rating": {
        "mean": "5.02",
        "count": "88"
    },
    "comments": [
        "If you're reading this, chances are that it's required for you and that you'll take it at one point or another. Take it with Vincent! Wile it was undoubtedly the second hardest course I've taken at Northwestern (first was EA 2 \u2013\u2013 I'm not good at Physics), Vincent is a great professor who sometimes lectures a bit too quickly, so be sure to ask questions to fill in gaps in your understanding. The labs are time\u2013consuming and a grind, but having a partner is handy for bouncing ideas and homework help. Take advantage of office hours. The TAs were extremely helpful for this course, so be sure to take advantage of office hours. I learned a lot.",
        "Vincent is a great lecturer.  The course was definitely challanging but not too difficult in that it wasn't possible to do well.  Midterm was pretty easy, the final was a lot harder because miss cache rates were a pretty big portion and we didn't really spend too much time in class learning about them.",
        "Really nice class, its a little hard at the beginning but very interesting class.",
        "\u2013Homeworks: Very manageable, try to start early (everyone will say this), but not because you won't finish if you start late. They're doable in one night for sure if you understand the material, but having the time to ask TAs is really nice because they can sometimes be tricky.\u2013Labs: Lab 1 and 2 were very doable as well. I would definitely suggest starting early because sometimes (very often in fact) they're just puzzles and if you're lucky, you'll see the answer right away. If not, you'll have to spend more time thinking through the problems. Really work at these. The labs are super helpful for learning.\u2013TAs: Amazing TAs (Spencer, I love you). Only critique would be that office hours got SUPER packed. I waited for nearly 3 hours once to get my question answered (in all fairness I could've just asked on Piazza but after the 20 minute mark I refused to leave).\u2013Lectures: Prof. St\u2013Amour is amazing. He is super enthusiastic and knowledgeable. The lectures cover everything that will be on the midterms (there are 2 midterms).\u2013Book: Dope book, read it if you wanna be cool. Trust me, I read it and I'm super cool :sunglasses: :dab:",
        "This class is hard but i ended up learning a lot. Very necessary if you are trying to get a degree in cs",
        "Great course. It's definitely challenging, but it's rewarding.",
        "Very difficult, but Vincent is super great and I learnt so much. The homework and labs really helped solidify understanding even though they were super time consuming and tough",
        "Great class. Vincent is a really good lecturer, and the material is interesting. Also, he actually adjusts methodologies based on the feedback surveys, meaning if there theoretically were any issues they would be resolved. Labs were brutal time\u2013wise, but I actually found them decently enjoyable. Hw's were pretty standard. TA's were typically pretty fast at answering piazza questions. Overall, I would definitely recommend this class.",
        "This course is amazing, especially Professor St\u2013Amour is an excellent instructor, and lecture slides and lectures were very informative. The homework and labs do take time, but are very effective in solidifying concepts.",
        "We didn't have to do malloc, which I hear is pretty much the toughest CS lab ever. I found both the midterm and final to be really hard. I didn't print out the midterm, which is a mistake because writing what each line of assembly is doing is the easiest way to understand it. I didn't print it out because Prof. St.Amour says that he \"catches people cheating on Canvas\" and that Canvas notifies when your primary window is not the test. I took a risk and printed out the assembly for the final and was not punished or even contacted whatsoever, so don't be afraid to print out the questions. I honestly feel like this quarter rewarded cheaters. Apparently the labs are on the internet and (I've heard thirdhand that) some people just copy and paste them. This is why I liked the attack and bomb labs that were randomly generated for each student. I also converted binary\u2013hex\u2013decimal by hand (not with some online calculators) on all the tests and homeworks, which Vincent said you should do in order not to cheat. Unfortunately the tests were so time pressured that I feel like I was punished grade\u2013wise for doing these the right way and not cheating. This was probably my hardest CS class (Jesse's 211 was maybe harder, but in that you were either getting a 0 or a 100), I feel like caches, virtual memory, miss rates, and optimization were rushed over and not well explained. Vincent is a good teacher, but he spends way too long on the theory, to the point where we don't have the time to do examples or straight up do not do an example. If we did examples of even a few more topics, I would understand faster. He also went overtime a few times by quite a bit, and it is pretty much imperative that you ask questions live to fully understand. I had a job right after this class so I often felt conflicted and guilty deciding between understanding and being late. That said Vincent is very nice, very smart, and a good teacher. He does talk too fast over complicated topics sometimes.",
        "I really liked 214 with Vincent. However, I didn't really like this class. There is just so much to cover, so the lectures aren't really enjoyable. And all the material was completely new to me.",
        "Vincent is a really good prof to take this course with. It's a tough course for sure, content\u2013wise, but Vincent does make the learning much easier.",
        "The course was really challenging. The professor was good as well except that his exams are really tricky and you need to be attentive.",
        "This class was very well\u2013structured and Vincent's lecturing was really good. The material itself was challenging, but as long as you go to class and office hours (the PMs are incredible) you'll be fine.",
        "Unless you have to take this class or are super interested in computer systems, I would not recommend this class. A LOT of tears were shed because of this class. Vincent is a good lecturer and the homework and labs \u2013 although they take a lot of time \u2013 are doable, I just found all the content extremely boring and difficult to comprehend and did not enjoy this class at all. I would also note that Vincent aims for the averages on the exams to be around a 70 so he makes them hard on purpose. The TAs were incredible though so definitely utilize office hours as much as you can.",
        "This class was incredible. I learned an insane amount about systems and Vincent was an awesome professor. We also had TAs that were amazing and really helped you if you needed it. Vincent's lectures perfectly reflected the material he wanted us to know for the exams and homeworks, so if you understand lectures, you will be okay. I also am not very interested in systems and hope to pursue more of it later on.Again, if you're looking to do well, just know lecture slides and pay attention in class. Labs and homeworks will be fine if you do just that. The textbook is also pretty helpful but I didn't even look at it until I studied for the final. For that, it was pretty helpful. Anyways this class was really great, learned a lot and was able to do well if I studied :) Vincent is also very engaging and excited about the course as he always is.",
        "This class is fun but kinda hard and taking it at remote quarters has made it slightly harder w time difference and all those stuff I feel like. I worked hard and was able to see a graduate improvement over the quarter!",
        "This is pretty tough content but if you are one of those folks who is good with textbooks you got this but for me it was pretty difficult.",
        "This course was the most conceptually difficult CS class that I have taken at Northwestern thus far. However, Vincent did a great job teaching the concepts needed to succeed in this class. The homeworks were all easy to complete, but the labs were another story. I don't think that the skills needed to complete the labs connected with the skills we learned in class that much. TA office hours were great for trying to figure out how to attack problems, though!",
        "This course covers many interesting topics and uses many fun and engaging labs to cement that knowledge. This is one of the most interesting courses I have taken.",
        "I thought this class wasn't nearly as bad as it was made out to be. Vincent was very clear in his lectures even if the material was complicated, it still made a lot of sense. The homeworks and labs where hard but fair and if you put in the effort you could always get a good grade on it. Also the TA system was very helpful by having the TA answer questions in slack.",
        "Good class. Pretty hard.",
        "This is an incredibly valuable class and I wish I had taken it sooner. The class is difficult, but if you put in the effort, it will be rewarding. I recommend doing the readings and practice problems from the text before class \u2013 especially in the middle of the quarter when assembly programming is covered. The grade is based on homework, labs, and 2 exams. You need to start early on everything, as the homework is long (but comprehensive for studying) and the labs are tough (look for guides online). Labs and homework are done with a partner. It's better to do the HW separately first for practice. The exams were open note / online. Also, if you've forgotten how to work with Linux & a text editor like emacs or vim since CS 211, it is useful to brush up on that. Overall, really great & useful class.",
        "This class is definitely a challenge, but not as hellish as other CTECs make it seem. Vincent is a great professor and takes his time to walk through examples, so definitely pay attention in lecture. Also use Piazza, it's a great resource. The labs take a lot of time, but Vincent assigns them way ahead of time so if you get started early you shouldn't have to rush. I definitely learned a lot and enjoyed low\u2013level programming much more than I expected.",
        "Take this class with Prof. St Amour. He's the best!",
        "It took a while to get adjusted to the course but averagely I found the course intellectually stimulating.",
        "Very time consuming class be prepared to take it.",
        "I enjoyed learning about what happens under the hood when code is executed.",
        "this class is tough because you cover a lot of material really quickly, but having a good partner and doing your textbook readings before class made it totally doable. vincent and TAs are super helpful and really passionate, you'll learn a lot",
        "This class is definitely a challenging subject given that it's not something a lot of us have no prior knowledge on the subject, but it was taught very well (as usual when you have Vincent as a professor). The workload was actually a lot more manageable than I expected, and working with a partner is a plus. You still have to work pretty hard though.",
        "This course was a fantastic course because I learned so much!",
        "The course material is definitely DRY and I was constantly looking at the clock while in lecture, wondering how what felt like an hour was only 15 minutes. The slides are extremely dense and all of the material is very nuanced. The homework is normally no problem and the midterms are very fair. The labs on the other hand, take a lot more time and are where a significant portion of the learning in this class occurs. I know many of the solution guides are online but I would highly recommend doing the labs without any outside help as they were the highlights of the class. The make learning assembly fun and with a partner you work well with, are by far the best part of this class.",
        "I expected way worse coming in. Heard this was the hardest class in the major. Honestly, if you go to lecture and listen it's not too bad.",
        "Tough but good, major requirement, vincent is unreal",
        "Labs are a lot of work, but they are really effective at hammering in the course topics and they are usually pretty fun. Homework can take a while too, but again they are really useful for actually learning the concepts for exams and such.",
        "Amazing class, you must take it with Vincent.  I really feel like I understand computers at a much deeper level and the labs were actually super fun, even though they took a lot of work (we solved puzzles and disarmed bombs and hacked programs\u2013there were even scoreboards for a couple).  It's big on partner stuff, so my suggestion is take it with a friend you can be in person with. I took it with one of my close friends and we had a great time.  Yes, it is hard and takes time, but totally worth it.",
        "This course isn't nearly as bad as you've probably heard it is. Vincent is an incredible instructor and his passion for the subject makes the class kinda fun. The labs do take some time to do, but are very rewarding. The homework is in line with whats taught in class and what you'll see on the exams.",
        "Vincent is amazing always. Seriously 213 was not bad at all, especially with Vincent. Course consists of 5 homework (25%), 3 labs (45%), 2 exams (15% each). The exams weren't bad and were pretty spot\u2013on with practice exams and the homework. There was only one crazy hard question on each exam but this wasn't a huge deal since everyone else struggles with that question too so at least everyone's in the same boat. Take 213 with Vincent seriously. Don't even consider any other option.",
        "Not easy. A good partner goes a long way.",
        "CS213 with Vincent was a ton of fun and gave me very similar vibes to CS214. It was much easier than I expected, definitely one of the easier classes I've taken at Northwestern. Homeworks are very straightforward but labs can take some more time. Exams are also fairly easy with material being almost straight from the lectures/homeworks.Also, CE205 is very similar to CS213 so taking both together makes for an easy elective addon.",
        "Vincent gave amazing lectures which covered almost everything corresponding to the same material in textbook, but condensed and digestible. The TAs were amazing and helpful/responsive.",
        "Take 213 with Vincent! I went into this class expecting it to be nightmarishly difficult and it really wasn't that bad. I had absolutely no interest in systems before this class, but Vincent made the material very digestible and much less intimidating than I thought it was going to be. Do the readings, go to office hours, and don't fall behind and this class will be manageable.",
        "Take the class with vincent!! It\u2019s definitely a hard class but he does such a good job of explaining concepts that it\u2019s definitely VERY doable to get an A. The homeworks + labs are also directly related to the material so they really help hammer in your understanding even if you don\u2019t understand them completely.",
        "Is Vincent the best instructor to 213? I think so.",
        "I honestly rather enjoyed this course, I did not think it was too bad, although it will help if you have done some assembly before.",
        "This CTEC is purely to praise Vincent for yet another amazing course. Literally don't even bother taking this class with any other prof, nobody else can do Computer Systems justice!",
        "This class is definitely very challenging and a lot of work for someone like me who came in with zero knowledge of systems or machine programming. Be ready to spend a lot of time working on labs and homework, and stay on top of material/read the book. One mistake I made was not going to office hours early on in the quarter, but once I started going I started picking up the material much faster. All that said, Vincent is a fantastic lecturer, cares about your progress, and is super fascinating to listen to.",
        "Once again, Vincent did a great job in teaching this course that might be otherwise very conceptually dense and difficult. I think the examples + practices + theories taught in class, and all the hw + labs are very well designed. I think the exam is fair, on par with homework. Lab definitely takes a lot more time, but there's nothing can't be worked through (esp. after OH). Please take it with vincent!",
        "Clear lecture with periodic check\u2013ins and short quizzes to maximize engagement and learning quality. Extremely dedicated peer mentors. Excellent, well\u2013written textbook. Difficult exams (often felt very rushed) but not a heavy portion of your final grade.",
        "This course was very intellectually challenging because all of the low level concepts and learning Assembly were very new to me, but as a result I learned a lot. Vincent is great, would definitely recommend taking 213 with him! Start all the homeworks and labs early so that you can go to OH with questions (take advantage of all of the OH!). Doing the homeworks and labs really helps you strengthen your understanding of the material. It also really helps to have a good partner for the homeworks and labs. Midterms are challenging, but if you do well on the homeworks and labs it should be okay because they are weighted heavily. Would also recommend taking CE 203 before this class, and CE 205 also almost completely overlaps with this class but focusing on a different system instead.",
        "Not as difficult as people claims. Do some work an A should be attainable",
        "Extremely well taught. The workload was heavy but I learned a lot. Vincent is a great instructor and TAs are very helpful. I came with zero knowledge of computer systems but left with a strong motivation to learn more about it.",
        "This class is definitely hard but doable. Vincent is a great lecturer, take it with him if you can. The labs take a while but there's no final which is nice.",
        "Vincent bringing it as always.",
        "In this course you learn an incredible amount about how computers actually work. Very cool to peel away the abstractions that we usually are comfortable with. Very dense course, you must put in a lot of work to understand and be successful, but it's worth it.",
        "Great course. The content is fascinating and labs are really enjoyable. That said, some concepts can seem slightly confusing at first. However, when you keep working on the questions, you will start understanding everything better.",
        "Vincent was a great teacher for this course given the difficult concepts that we covered. The tests were a lot more difficult that I expected given the practice exams which threw me off when taking them. Labs and sometimes homework are a huge time commitment and could take upwards of 10 hours to complete.",
        "Vincent made it very fun to take 213, even though it's a challenging class. Be prepared to keep up with class or it piles up quickly.",
        "it was super fast\u2013paced but I feel I learned a lot. absolutely take with Vincent, he's great! but it's easy to get behind so really try not to. the material is intimidating but if you sit with it for a bit I think it's a lot easier to get a grasp on it than it seems"
    ]
}{
    "course_code": "Student Report for COMP_SCI_213-0_20",
    "course_name": "Intro to Computer Systems",
    "instructor": "Peter Dinda",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.16",
        "count": "70"
    },
    "course_rating": {
        "mean": "3.83",
        "count": "72"
    },
    "comments": [
        "A really crucial class that teaches you how a computer actually works. The labs are bomb (literally) \u2013 super challenging and time\u2013consuming but also quite fun and definitely kept you engaged. Class moves quickly and the lectures weren't super helpful, but other resources were provided (slides and textbook). Probably the most difficult 200 level, but a solid curriculum. Your eyes will swim in binary when you lay in bed at night \u2013 good luck!",
        "Arguably worse than 212. I wish Prof. Dinda would have used slides more/had more structured lectures, once someone asked a question, lectures completely derailed.",
        "The reading is super dry and super long. Lectures are done without slides and can be a slog to get through.",
        "It is a good introduction to some computer system concepts but the course bounces around a lot.",
        "This course is 4 homeworks, 5 labs, 2 exams. Exams in Dinda do legitimately test your knowledge and require studying. The labs you could do on your own, but if you can go into this class with a partner it's much better. He spends a lot of time on the chalkboard and teaches the lectures on the assumption that you have done the textbook reading before hand (ranges between 20\u201360 pages). If you are a slides person you might want to either get another 213 professor slides or look through.I had taken CE 203 and CE 205 before hand and it made the first half of the course very easy to follow and understand.",
        "If you want an easy out with CS 213, do not take this course with professor Dinda. But, with that being said, you probably learn the most with professor Dinda, and has some of the easier grades. There are extra credits for 3 labs, where you can overflow grades to help your term grade. Those overflows came in clutch for exams, considering you can almost improve by 7% on your term grade if you do those extra credits. However, labs, homework, and extra credits do take a super long time. They are not hard, but they could easily be 30\u2013hr projects in a week even if you have a partner. Over 30 students dropped over the quarter. Overall, hard materials, intensive commitment, easy grades.",
        "Class is challenging since all of the material is written on a chalkboard and information can be kind of dry, but i'm walking away feeling like a much more confident programmer. Professor Dinda is really kind and gives out lots of extra credit opportunities \u2013 take advantage!",
        "Since this class is required, there isn\u2019t much to say regarding the difficulty of the class. It\u2019s hard, but Prof. Dinda\u2019s pretty fair and having gone through the course, I found it to be quite manageable after all.",
        "Professor Dinda is not a good lecturer and is pretty boring.  The information you learn in this class comes from the (incredibly dense) textbook.  I studied for the exams by cramming the textbook readings and I did decently well.  It's nice that labs are worth 50% of your grade and it's easy to do well on them (and get extra credit points to pad your grade).",
        "This is a fairly intense class. The first lab is especially tricky, and there's a lot of work (at least if you actually read the textbook). It's not an easy class per se, though if you do the extra credit on the labs then it's pretty easy grade\u2013wise. I learned a ton in the class and did enjoy it overall but it was definitely my most intense/work\u2013heavy class. And the labs are pretty tricky/aren't super easy. I do think the information you learn about is really cool though. Oh, also, I definitely recommend finding a lab partner who will put in as much effort as you.",
        "Dinda is very knowledgable and good at answering questions. Course is unreasonably difficult, though.",
        "The instruction itself 100% requires pre\u2013lecture readings from the textbook. Without slides to refer from, each lecture is very confusing if you miss a reading.",
        "The worst part was having to read through, nay, slog through, the assigned textbook chapters. The experience of trudging through something that dense was comparable to eating mud bricks. Furthermore, not all of the assigned material was relevant, and it could have been condensed down to something more easily comprehensible\u2013\u2013for example, Prof. Ghena's slides from a previous quarter. Unfortunately, while Prof. Ghena's slides were a blessing, they were only helpful up to a certain point, as Prof. Dinda chose to rearrange topics later in the syllabus.",
        "I think this will be applicable to my future career as a CS major",
        "Cool",
        "Courses teaches you about how a computer works. More specifically, how programs interact with the kernel and hardware of a computer. Prof. Dinda was a great lecturer.",
        "Pretty tough course. The labs are a lot of work but actually kinda fun. SOO many readings idk if anyone was actually able to keep up with them.",
        "This class is an interesting introduction into many computer science topics. The professor is interested in the topics and explains everything very well. Lectures are not necessary if you read the textbook, but I would highly recommend them. Exams are somewhat difficult, but doable. Homeworks are easy and helpful for exams. Labs are fun and doable if you start early and have a good partner.",
        "This course is very challenging. The content is complicated and can be hard to comprehend. The homeworks and labs are also challenging. The homework and labs are biweekly and offset but this means some weeks you will no homework, some just a lab or a homework, and some weeks both. Ultimately, the weekly load in this course is very variable but I recommend you get a large head start on all the labs.",
        "a lot of material in this class. a  lot of things mentioned in lecture that went over my head. you're not going to understand it all completely, but given that partner labs are a good portion of the grade, Find a good partner and you'll be golden. As for midterms and final, if you do good on the partner labs they shouldn't affect your grade too much. Office hours are key.",
        "way too difficult. i don't know how anyone can answer a single question in the exam. labs have no guidance whatsoever and there's no way to even figure out what to do",
        "This is not an easy course. Especially the labs, they are not fun whatsoever. Start those early. Very early.",
        "This class is pretty difficult and confusing, but it's definitely doable. Dinda is a pretty good lecturer, always answering questions, and really great on Campuswire at nearly all times of day. The content can be WILDLY confusing sometimes, and the exams are really hard, but graded pretty generously. As difficult as some of the labs can be, if you're with a good partner and try the extra credit, you should be fine in the class. This is required for the major, so it's just something you need to get through. It's hard, but definitely doable.",
        "It was a little difficult to understand several topics, but TAs and Professor Dinda were always there to help out.",
        "This class was pretty hard. The labs were difficult, and there was a lot of content to learn and read from the textbook separately. However, I do feel like I learned a lot from both experiences.",
        "This is an interesting and engaging class, but beware the exams\u2013\u2013 they're quite difficult, and preparing for them is hard, especially if you don't stay on top of lectures and OH. The OH are very helpful though and Prof. Dinda is knowledgeable and patient.",
        "I LOVED this class. Super interesting content, taught by a fantastic Prof (Dinda).",
        "This is hands\u2013down the hardest 200 level core CS class. CS213 is very time\u2013consuming and intellectually challenging, but you will learn a lot in the end. You will expect to spend a lot of time on the labs and the homework. The assembly codes are the language that you will be primarily using, which are very hard to understand and decrypt. Fortunately, Prof. Dinda is a very good professor in explaining things and very benevolent toward grading. Also, he expects you to come to class prepared. If you ever go to his lectures, please do the readings beforehand.",
        "I enjoyed learning about computer systems. The labs were very stimulating and satisfying to complete, though I found the homework assignments to be a bit redundant some times.",
        "Typical comp sys class. Prof Dinda\u2019s lectures can be a bit dry but there are plenty of online resources to help you learn the material.",
        "No slides or visual aids. 100s of pages of reading per week from a dense textbook. Prof. Dinda doesn't use Canvas which is honestly fine. Office hours and optional discussions are just ok. Take this class with a different prof if you can. Prof Dinda is definitely not an undergrad friendly instructor.",
        "If you are taking this course with Prof. Dinda, make sure to learn the material yourself. Almost everything of what is covered on the exam and homeworks is from the textbook. He doesn't use lecture slides, but he does provide you with the original CMU version of the class, and there are a bunch of lecture slides and videos that basically follow the textbook. Labs take up a good portion of your grade and time, but I just don't understand why the homeworks also take a long time but are only worth 2.5% each? It is somewhat organized, but personally, going to lectures didn't help me with this class.",
        "Prof. Dinda is a very knowledgeable person, a very kind and understanding instructor, and is clearly passionate about the subject. He also holds great office hours. However, his lectures are extremely hard to follow and confusing. His style of teaching is free association \u2013 he has an outline for the class but constantly goes on tangents that aren't related to what we are learning. And worst \u2013 he doesn't use lecture slides. The entire class is him writing on the chalkboard and waving his hand to explain the concept. If you are on the same wavelength as him, this will make sense, but the second you lose focus, you will be lost. Again, Prof. Dinda is a really nice and smart professor, but I don't think his teaching style resonates with the majority of people. The labs are very time\u2013consuming and difficult, and though they are ultimately quite fun (if you are a CS major), we start with almost no guidance, which is frustrating. The one redeeming quality of this class is that there is a lot of extra credit with the labs so you can still get an A even if you did relatively poorly on the exams. And, if you put in the effort, you will learn a lot... it would just be easier with clearer lectures.",
        "This class is very hard. I think the homeworks and lab assignments were doable, but took a lot of time and effort to understand. The readings are seriously awful, and lecture was often times boring. I\u2019d still say the lectures were better than the readings. I failed both the midterm and the final and still ended up with a somewhat\u2013okay grade, so I think most students will be okay taking this course. There was one week where I went to office hours every single day and still felt like I was getting nowhere. Definitely don\u2019t take this class if it is not a requirement for you or if you don\u2019t have any interest in computer systems and architecture. There is just so much content in this course and it was hard to keep up with.",
        "So like the labs are really cool, but Professor Dinda's lecture can be quite different from what is required for assignments.",
        "The lectures felt like TED talks. We would learn an overview of the material, but in the assignments and exams it was expected we would have a much deeper understanding. The labs were fun and challenging once you got over the initial hurtle of figuring out what was going on. Overall it was a hard class to understand, but an easy A.",
        "I learned a lot about computer systems from this course, and definitely gained an understanding of what goes on beneath the hood of computers. This class, however, has been the most demanding CS class I've taken at Northwestern so far. Each of Professor Dinda's lectures go over the topics at a high\u2013level, but other resources (hours reading the textbook) are often required to successfully complete the homework. To succeed in this class, I suggest following along with the readings as outlined in the syllabus and going to office hours as needed. All the TAs were extremely helpful. It's extremely easy to fall behind, but I think that this class is manageable if you stay on top of the readings and start all the homework assignments and labs early.",
        "This class is a ton of information and some very time consuming labs, but all super interesting and Dinda is a pretty good lecturer, though he does go on some very unnecessary tangents at times.",
        "Lectures were useless. Peter just told you to read the book that was the onlysource of learning in the course.Hard class, easy A.",
        "Some of the labs could've been a lot clearer.  For example, the bomb lab could've better explained how to actually get and start the assignment.  A lot of the labs didn't seem to be covered much in class and were instead extraneous assignments.  You will likely spend many many many hours doing labs, so start early.",
        "This was definitely a rough course. The content wasn't particularly interesting, the professor and lectures weren't engaging, and the assignments are complex and time consuming. It really was a slog to get through the quarter.",
        "Textbook was too dense so I gave up reading that. I did go to every class because I think the professor is pretty good at explaining concepts, and I learnt the most from that. The lecture does feel like all over the place sometimes though, especially when there are no slides to guide us. Find a good lab partner and you should be good.",
        "This course is required, but Peter does a really solid job with the material and it actually ends up being far more interesting than I thought it would be",
        "Lectures were painful to attend sometimes. Peter was pretty good at explaining, but it was so long and hard. The assigned book is unhelpful and confusing, and irrelevant in a lot of areas so lecture felt very high pressure to understand what he was saying. The labs are impossible without a TA helping you at some point, so get comfortable with going\u2014at the very least the TA OH schedule is packed. The class wasn't impossibly hard, but it was pretty difficult, and it sometimes felt harder than it needed to be.",
        "Expect to teach yourself a lot. It's doable but need to watch videos/read to understand. He posted a few online lectures that were great, but his in person lectures often tangent as he is super excited about what he is teaching.",
        "As others will probably say, this class is hard. 4 labs, 4 hws, 2 non\u2013cumulative tests. I would have to say objectively this class is slightly easier than 211 because where 211 is coding long and hard assignments, 213 focuses more on how computer systems work so there are many resources such as the textbook or online resources available. I also would not have gotten through 211 without a partner but I was able to do the 213 labs by myself which says something. That being said, he expects you to read the textbook before every class (which is like 4 hours of dense technical reading) which is physically impossible (props to like the 5 kids that kept up with all the readings). Labs are difficult and will take time. Thankfully, you can have partners. Midterm was very difficult and the (non\u2013cumulative) final is supposed to follow the same format so I am expecting it to be as challenging as the midterm.On the other hand, his office hours are VERY VERY helpful and homeworks are essentially graded for completion but you should understand them because the tests resemble more homework type questions than labs.Prof. Dinda is very knowledgeable but is one of those profs that is not too engaging. His lectures can cure insomnia. He does not use presentations but writes his thoughts on boards and is difficult to follow. We were given access to Ghena's slides which were LIFE SAVING so I would take it with him if possible. But this is also a class you just have to get through and Dinda is not too bad.",
        "The course teaches you a lot of fundamentals that you should try to understand completely. A lot of things build off of one another, so don't slack off early expecting to understand the later materials. The labs seem intimidating but if you dedicated enough time they aren't as hard as they look, and the homework questions are similar to the exam questions to make sure to do them even though they aren't worth as many points.",
        "Make sure you have a good lab partner because the labs are so much work. The course covers a lot and you will feel like you understand nothing but the grading ends up being pretty generous.",
        "This is the hardest part of the cs intro sequence. There are 4 labs and homeworks, but for some reason, labs and homeworks are always due in the same week. This means half the weeks have no assignments, and the other weeks suck. The labs and lectures felt like they were from 2 different courses, with the homeworks somewhere in the middle, and the tests marginally related to the lectures. There is always a 1 day extension given on everything (4/4 labs and 3/4 homeworks). The professor lectures like he's giving a TED talk, so by the end, you feel you know whats going on, until you attempt any problem, and realize you just know a vague outline of whats going on."
    ]
}{
    "course_code": "Student Report for EECS_213-0_20",
    "course_name": "Intro to Computer Systems",
    "instructor": "Nikolaos Hardavellas",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "4.39",
        "count": "23"
    },
    "course_rating": {
        "mean": "4.33",
        "count": "24"
    },
    "comments": [
        "The class was very demoralizing at times but efforts were made to mitigate it by the end. Getting familiar with the book and assignments is a must. The best textbook I've had.",
        "The midterm was very difficult but overall learned a lot",
        "The class was extremely challenging but I also learned a lot and found the subject matter interesting.",
        "intellectually stimulating",
        "This class is HARD. It might be the hardest class I've taken so far at Northwestern. Personally, I enjoyed the material, so even though the class was tough and the homeworks and labs frustrating, I still found achievements in the class fulfilling, and you might too. Nikos is a good professor who does a good job at answering questions \u2013 he isn't afraid to follow the pace of the students, so if the class is struggling with the material, he will try his best to spend the time that is needed to improve the students' understanding, even if it means not completing all of the course's material. But yeah, be wary that the class is very difficult, especially when you get to the last lab. I would recommend trying your best to build your grade up before the last lab so, if you aren't able to finish it in time (like I was), you're grade can take the hit.Overall, I'm glad I took this class, but I'm also glad it's over.",
        "This class is certainly a lot of work. Do not procrastinate on any of the assignments! My partner and I left the first lab until the last day, working for about 12 hours straight and we ran out of time. The average on the first midterm was unexpectedly low: I think about a 63 or something. To make up for it, Nikos offered extra credit, so that people ended up with reasonable grades in the end, but I think a lot of people ended up dropping. Weekly assignments due on Friday.",
        "This course takes a lot of time, but if you put in the work, it's not that hard, and you learn a lot that will be relevant for the future.",
        "One of the best classes I've taken at Northwestern. It's on the harder side for sure, but it's 100% pure useful information without any busywork or fluff. You just feel yourself learning when you take this class. I'm not a big systems guy and the material is definitely boring, but Nikos makes it more interesting and it definitely grows on you throughout the quarter. It's also super good stuff to know about if you are going into computer science. Grading is low but who cares, you're learning. Don't stress about the Malloc lab because you can just submit the book code and take a 70% in the worst case.",
        "Professors like Nikos are the reason women drop out of STEM fields.  He is rude and condescending.  Our class started with 80+ people and ended up with only about 35 by the end of the quarter.  I've never written a bad CTEC but I really have nothing good to say.  There were only 6 office hours even though there were like 10 peer mentors.  The homework and labs are okay but very time consuming.  Take this class with Vincent if you can.",
        "This course gave me so much stress throughout the quarter. Nikos has a kind soul but his lectures were often hard to understand, and it's an issue because this course is full of hard concepts. He didn't have a good idea of what students are understanding and what students are struggling with, and he made the first midterm way too hard for an un\u2013curved exam. I appreciate how he held an extra lecture to help us go through the concepts on it, and emphasized that it's important for us to ask questions when we don't understand.",
        "This was the most fun class I've taken at Northwestern. It's definitely a lot of material with a new topic everyday, but I think that it was over\u2013hyped. I was nervous coming into this class and even put it off for several quarters, but it wasn't nearly as hard as people made it out to be. Even the malloc lab wasn't really that much more difficult than any of the other labs.",
        "Slides and textbook were informative",
        "Homework is a good practice for exams",
        "Nikos' slides were good, the textbook is a good reference, the homeworks are far easier than the exams which is frustrating and we never got any previous exams or even practice exams. He just said \"go do everything in the book, understand all the labs, all the homework, all the lectures and you'll be fine.\" Kind of subpar teaching but I get it because he's here for research not his teaching abilities. Make sure you get a good partner or you'll be screwed big time."
    ]
}{
    "course_code": "Student Report for COMP_SCI_213-0_20",
    "course_name": "Intro to Computer Systems",
    "instructor": "Peter Dinda",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.99",
        "count": "79"
    },
    "course_rating": {
        "mean": "4.53",
        "count": "80"
    },
    "comments": [
        "I think the textbook readings are really hard to get through, so I don't get a lot out of them. I also think that the lectures were dry and not very engaging. I felt like I had to catch up on the labs and homework assignments because I was not really absorbing the material from lecture or the readings.",
        "good course \u2013 Dinda is not too hard and is very reasonable in assigned workload. Lectures were good to rewatch recorded and he doesn't expect you to know nitty\u2013gritty of everything.",
        "This is a very difficult class. The instruction is entirely lecture based with no slides, which is hard if you have trouble with lectures. Professor Dinda is very willing to answer questions and help, but if you fall behind, it's very difficult to catch up. The homework and the labs are difficult but not impossible. The homeworks are graded on effort as well as correctness, so if you put in the time you'll do well. The labs take a significant amount of time so it's best to get started early.",
        "Great class introducing how low\u2013level computing works. Definitely inspired me to take more courses in this area of cs.",
        "Very challenging subject in with lots of tricky wording that can be hard to wrap your head around. But is very interesting to learn about.",
        "This course is pretty hard, but taking it with Dinda is great. He really cares about students learning the material and reflects that with generous extra credit opportunities. The labs are actually kind of fun. The issue I have with the class is the difficulty of the exam. It always seemed like the exam had questions that we weren't given great examples of. They are also very detail oriented so understanding the basics of each section isn't enough. Definitely put time in to study for the exams.",
        "Good class, felt that I learned a lot. Make sure to have a good partner for the labs, because those can take up a lot of time. Definitely don't wait on them until last minute, because that can cause a lot of problems.",
        "It's a cool class and Prof Dinda is a sound teacher. His style of just writing things randomly on nearby scratch paper and then sifting through the pile to refer to old notes is a little questionable. No PowerPoints, section headers, or organization. Just random scratch paper. But chaos is fun so I approve. He was super generous with HW and lab grading, too.",
        "Get a good partner from the beginning and the Labs are doable, exams are tough.",
        "Start labs early",
        "This is hard course. you have to do a lot of technical readings before each lecture, homewroks take a lot of time and some labs take even more. SETI lab is very doable, because Vincent\u2019s malloc lab is a killer. Professor Dinda and Ghena are very passionate and are very helpful. Highly recommend going to office hours if you didn\u2019t understnad something, because learning curve is steep all the time.",
        "Learning about how things come together. The underlying implementation of what we take for granted is so magical.",
        "Pretty solid class. Learned a lot, and it was indeed challenging. Hard to keep up with the online lecture so I spent an enormous amount of time re\u2013watching and reviewing.",
        "This class was interesting and the labs were difficult but do\u2013able. The professor would handwrite the notes throughout the class which was nice, but sometimes he had prewritten notes and drawings and didn't give enough time to copy everything down. The main issue I had with the class was that the professor would go on a lot of tangents that were outside the scope of the class and it was distracting and confusing.",
        "Dinda's section is very reasonable. The one thing I disliked about his lectures was that he assumed that you read the textbook beforehand (which I gave up on, it's pretty dense), so he wouldn't really motivate why we were learning certain concepts. Besides that, I thought the instruction was good. Grading is also very fair: 4 labs (total 50%), 4 HW assignments (total 10%, pretty much graded for completion), and 2 midterms (20% each). Exams were very fair, and extra credit is offered on the labs. Dinda really wants you to learn the material and not have to worry about your grade, which I think he accomplished very well.",
        "The class is super interesting, but the professors often go off topic and talk about things that aren't tested; good for learning, but a lot of work to get the grade you want. Still highly recommend.",
        "the labs were surprisingly fun, they were like video game puzzles that needed to be solved by learning and usings some concepts from the class. bomblab and attacklab were my favorites",
        "So this course gets all the hype for being super difficult and it absolutely is. However, it is manageable if you stay on top of everything that needs to be done. Dinda did an incredible job of working with the textbook where they made the most since when you read before class so ONLY TAKE THIS CLASS WHEN YOU HAVE TIME TO DO ALL THE READINGS",
        "Peter taught class by writing down diagrams and notes on a sheet of paper in real\u2013time, and would scribble over his writing when he made a mistake. I wish he has powerpoints prepared or something else, because it's hard and boring to follow him just writing stuff down on a sheet of paper in messy handwriting. Also when he would show live demonstrations of something, like coding in terminal, it was boring to watch and also hard to follow.",
        "Great teacher",
        "Overall, both professors were really clear at explaining the concepts in the course, and I'd recommend taking 213 with them if you have the option. Sometimes lectures would drag on, especially in a virtual setting, but attending them was really helpful for me. Assignments were never super difficult besides one of the later labs as long as you put in the necessary time, but exams could be a little tricky. You'll definitely have the tools to succeed.",
        "This course is very challenging but rewarding. Be prepared to put in a lot of work. The labs and homework overlap which can make them quite challenging, be sure to start them as early as possible!",
        "The course was the right difficulty for me. Not too easy and not too hard. Except the exams, which I thought were very tough, but there is extra credit. The labs were helpful with one caveat. I had a lab partner that already had some assembly, and they were able to do the labs much quicker than me, so I didn't get to contribute too much on those labs.",
        "Wasn't a fan of the way Dinda lectured, but you eventually get used to it. Focus on doing well on the labs + HW since they make up the bulk of your grade. Dinda definitely knows his stuff well, so always ask questions or any thing you're curious about.",
        "This class was way too time\u2013consuming because of the textbook readings. We had to do around 5\u20136 hour readings before every class in addition to labs and homeworks and these readings were necessary to read in depth in order to do well on the exams. This class was mostly a large amount of memorization of the textbook and extremely tedious and time\u2013consuming.",
        "This was definitely not an easy course. Peter and Branden are great though. READ THE BOOK",
        "Peter is a good professor. The last lab (SETI lab) takes a while to run and test. If you wait until the last minute, everyone in the class will be using the server and it'll be super slow, so make sure to start early.",
        "Professor Dinda really knows what he's teaching and it shows in every lecture. Professor Ghena is great at holding down the chat and answering questions that students have. The book is actually pretty good although very dense. Looking back, I would use the book more while doing homework and potentially do some of the practice problems instead of trying to force myself to read the chapters for the sake of reading them. Office hours are pretty good and often available. This is a good class for learning to use office hours.",
        "This class is a challenge, but Dinda is great to take it with. He knows the material is challenging, but wants to see students succeed and goes out of his way to help you as long as you ask for it. He's also incredibly knowledgable about the material and is great at answering questions. Best advice is take the class with someone you know or find a good partner some other way to do the labs with, and always try to do the extra credit on labs when its available. The 2 exams were the toughest part for me, but are weighted less than the labs, so if you get extra credit on labs it'll soak up any bad exam grades and you'll still do well. Homeworks are easier and mostly graded for effort. As long as you go to office hours to make sure you do well on labs, you'll do fine in this class.",
        "This course was very challenging but you have a lot of opportunities to boost your grade.",
        "Though definitely challenging, this class forces you to learn about computers on a much deeper level. After taking this class, I feel I have a much better, though still developing, understanding of what a computer is and how they work. Though the concepts are challenging, Dinda is a good lecturer and his office hours are very helpful, as he clearly cares a lot about his students. In addition, though the material is difficult, the grading is actually not too bad, as there's lots of available extra credit and manageable labs.",
        "This class was decent. The content is pretty difficult, but the grading is lenient.",
        "This course needs slides. Most of our time was spent trying to decipher what the professor was writing on a piece of paper,",
        "I was very happy with taking this course I learned a lot while also enjoying it.",
        "Only take this class if you have to!! That being said, you will learn a ton but this will be a very very difficult class. You're gonna need to devote a lot of time to this class. Take this class with Dinda or Ghena, Dinda did most of our lectures and was a very good professor and Ghena was also good when we had him.",
        "Professor Dinda is a very good instructor, but he usually expects you to read the materials before the lecture. The office hours were very useful in understanding the course material and labs.",
        "The subject itself is very interesting. I'll never look at computers and programs the same way again (in a good way). However, this class also made me realize that flipped classroom is not for me. Peter and Branden are both very knowledgeable, they are not bad instructors. I just think the teaching style just did not suit me. However, the homework, labs, and exams are all fair in my opinion. The labs especially were actually pretty fun and helped a lot in understanding certain topics.",
        "This class is difficult, the labs especially. That being said, Prof. Dinda is a great lecturer and I learned a lot from this course.",
        "4 labs(12.5% each), 4 homework assignment(2.5% each),  2 exam(20% each). Homework was graded based on effort and attempt. Labs and exams were extremely hard.",
        "Great professor. Lectures are clear and helpful. However, there are no slides! You have to look for slides on CMU CS213 websites.",
        "CS213 is a challenging class. You need to read the textbook, watch CMU lecture recording or check CMU slides to be able to solve the homework and labs. Dinda is a well\u2013explained professor, but he doesn't use slides which makes the class less structured. He also teaches the material during lecture too little, so it requires a lot extra outside time to learn the material yourself.",
        "The professor doesn't use slides which was a little hard at first, but eventually you can pick out the main ideas of the lectures. The textbook is a little bit of a dread but essential if you want to learn and do well in this class. And office hours were really helpful.",
        "I LOVED this course. Projects are fascinating, Professor Dinda is a legend, and I had an uncountable amount of moments where I learned/figured out something and went \"oh that's sick!\" out loud to myself. I came in knowing nothing about systems, but the class structure gave me a fantastic foundation before moving on to more advanced (for me) topics so that I never felt like I was up the creek without a paddle. One thing to note is that projects are done in groups of two, so it's important to either know someone going in or be comfortable finding a partner. This class single\u2013handedly made me interested in systems as an area of study, and is the reason I'm taking 322 next quarter.",
        "I learned a lot about the different aspects of computer systems.",
        "Professor Dinda is an extremely knowledgeable and clear lecturer. The course was well designed, and the labs contributed significantly to my understanding of the course material. Professor Ghena didn't lecture very much, but the two lectures he did give were well planned and enjoyable.",
        "Dinda is a very smart guy. The class design, however, is pretty flawed. For (virtual) lectures, he didn\u2019t use any slides and just recorded himself writing on pieces of white paper. The quantity and complexity of the material was too much for him to not use slides to guide students. He was pretty lenient on HW because they were only graded on completion.",
        "I enjoyed the material in this course, although I at times felt the layout was slightly confusing. Maybe some more advance notice of what's coming up next in the course would be helpful for organization.",
        "Slightly unorganized class structure.",
        "Great course; introduced me to many interesting topics in CS that I hadn't explored before. Dinda is very knowledgable, and the grading policy is quite fair, with two exams worth 20% each, along with a focus on labs (which made up 50% of the grade). If you make sure to do the readings, find a good partner, and stay on top of things, this class can be very rewarding.",
        "This is a hard class and you have to understand all the material to be able to do the homework and labs but the lectures and material offered did a great job of explaining concepts.",
        "Fall 2020 Remote learning was bad.The worst part was the lectures. Professor Dinda explains things as he writes notes/diagrams on a sheet of paper rather than having slides prepared beforehand. There is little structure to how he writes so it soon becomes incoherent as time goes on. Also, while not necessarily the professor's fault, he doesn't come across as enthusiastic about what he teaches and is monotone. This combined with the bad notes on screen makes lectures unengaging.I stopped going to lecture in week 4 because I realized I would never absorb anything or constantly zone out due to how unengaging it was. Fortunately, he provides links to slides that cover the information he goes over in lecture. I found I learned a lot more by just reading those instead of actually going to lecture.The assignments were all fine, but I thought exams were way too long for the provided 2 hours. Even though I felt well prepared and knew all the material, I had to rush super fast to barely submit on time.",
        "This class is a little rough at times. The 80 minute class periods are rough as the lectures can be quite dry. The material is all there though. The textbook is super convoluted and long, I felt totally lost reading it and just stopped because it also hurt my eyes to read. Other than those problems, the class was fine. I did feel like I learned from the lectures, and the labs were fine, even fun at times. There's not too much work outside of class, so it's manageable for sure.",
        "the class is hard. the labs and the hws are challenging and you need to spend a lot of time on them but there are helpful resources (like youtube videos and githubs) for many of them and the TAs help a lot in the discussion section and at office hours.",
        "It was overall pretty good, not to challenging, but still learned a lot",
        "Loved his zoom lecturing style \u2013 pen and paper and projector. Made the lectures way more spontaneous and more casual, which I think worked well with him and me. The content of this material is mindblowing and will make you want to switch to computer engineering. A lot of sweet things that you learn about, for example the section on virtual memory is insane."
    ]
}{
    "course_code": "Student Report for COMP_SCI_213-0_20",
    "course_name": "Intro to Computer Systems",
    "instructor": "Branden Ghena",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.21",
        "count": "76"
    },
    "course_rating": {
        "mean": "4.53",
        "count": "80"
    },
    "comments": [
        "I think the textbook readings are really hard to get through, so I don't get a lot out of them. I also think that the lectures were dry and not very engaging. I felt like I had to catch up on the labs and homework assignments because I was not really absorbing the material from lecture or the readings.",
        "This is a very difficult class. The instruction is entirely lecture based with no slides, which is hard if you have trouble with lectures. Professor Dinda is very willing to answer questions and help, but if you fall behind, it's very difficult to catch up. The homework and the labs are difficult but not impossible. The homeworks are graded on effort as well as correctness, so if you put in the time you'll do well. The labs take a significant amount of time so it's best to get started early.",
        "good course \u2013 Dinda is not too hard and is very reasonable in assigned workload. Lectures were good to rewatch recorded and he doesn't expect you to know nitty\u2013gritty of everything.",
        "Great class introducing how low\u2013level computing works. Definitely inspired me to take more courses in this area of cs.",
        "Very challenging subject in with lots of tricky wording that can be hard to wrap your head around. But is very interesting to learn about.",
        "This course is pretty hard, but taking it with Dinda is great. He really cares about students learning the material and reflects that with generous extra credit opportunities. The labs are actually kind of fun. The issue I have with the class is the difficulty of the exam. It always seemed like the exam had questions that we weren't given great examples of. They are also very detail oriented so understanding the basics of each section isn't enough. Definitely put time in to study for the exams.",
        "Good class, felt that I learned a lot. Make sure to have a good partner for the labs, because those can take up a lot of time. Definitely don't wait on them until last minute, because that can cause a lot of problems.",
        "It's a cool class and Prof Dinda is a sound teacher. His style of just writing things randomly on nearby scratch paper and then sifting through the pile to refer to old notes is a little questionable. No PowerPoints, section headers, or organization. Just random scratch paper. But chaos is fun so I approve. He was super generous with HW and lab grading, too.",
        "Get a good partner from the beginning and the Labs are doable, exams are tough.",
        "Start labs early",
        "This is hard course. you have to do a lot of technical readings before each lecture, homewroks take a lot of time and some labs take even more. SETI lab is very doable, because Vincent\u2019s malloc lab is a killer. Professor Dinda and Ghena are very passionate and are very helpful. Highly recommend going to office hours if you didn\u2019t understnad something, because learning curve is steep all the time.",
        "Learning about how things come together. The underlying implementation of what we take for granted is so magical.",
        "Pretty solid class. Learned a lot, and it was indeed challenging. Hard to keep up with the online lecture so I spent an enormous amount of time re\u2013watching and reviewing.",
        "This class was interesting and the labs were difficult but do\u2013able. The professor would handwrite the notes throughout the class which was nice, but sometimes he had prewritten notes and drawings and didn't give enough time to copy everything down. The main issue I had with the class was that the professor would go on a lot of tangents that were outside the scope of the class and it was distracting and confusing.",
        "The class is super interesting, but the professors often go off topic and talk about things that aren't tested; good for learning, but a lot of work to get the grade you want. Still highly recommend.",
        "Dinda's section is very reasonable. The one thing I disliked about his lectures was that he assumed that you read the textbook beforehand (which I gave up on, it's pretty dense), so he wouldn't really motivate why we were learning certain concepts. Besides that, I thought the instruction was good. Grading is also very fair: 4 labs (total 50%), 4 HW assignments (total 10%, pretty much graded for completion), and 2 midterms (20% each). Exams were very fair, and extra credit is offered on the labs. Dinda really wants you to learn the material and not have to worry about your grade, which I think he accomplished very well.",
        "the labs were surprisingly fun, they were like video game puzzles that needed to be solved by learning and usings some concepts from the class. bomblab and attacklab were my favorites",
        "So this course gets all the hype for being super difficult and it absolutely is. However, it is manageable if you stay on top of everything that needs to be done. Dinda did an incredible job of working with the textbook where they made the most since when you read before class so ONLY TAKE THIS CLASS WHEN YOU HAVE TIME TO DO ALL THE READINGS",
        "Peter taught class by writing down diagrams and notes on a sheet of paper in real\u2013time, and would scribble over his writing when he made a mistake. I wish he has powerpoints prepared or something else, because it's hard and boring to follow him just writing stuff down on a sheet of paper in messy handwriting. Also when he would show live demonstrations of something, like coding in terminal, it was boring to watch and also hard to follow.",
        "Great teacher",
        "Overall, both professors were really clear at explaining the concepts in the course, and I'd recommend taking 213 with them if you have the option. Sometimes lectures would drag on, especially in a virtual setting, but attending them was really helpful for me. Assignments were never super difficult besides one of the later labs as long as you put in the necessary time, but exams could be a little tricky. You'll definitely have the tools to succeed.",
        "This course is very challenging but rewarding. Be prepared to put in a lot of work. The labs and homework overlap which can make them quite challenging, be sure to start them as early as possible!",
        "The course was the right difficulty for me. Not too easy and not too hard. Except the exams, which I thought were very tough, but there is extra credit. The labs were helpful with one caveat. I had a lab partner that already had some assembly, and they were able to do the labs much quicker than me, so I didn't get to contribute too much on those labs.",
        "Wasn't a fan of the way Dinda lectured, but you eventually get used to it. Focus on doing well on the labs + HW since they make up the bulk of your grade. Dinda definitely knows his stuff well, so always ask questions or any thing you're curious about.",
        "This class was way too time\u2013consuming because of the textbook readings. We had to do around 5\u20136 hour readings before every class in addition to labs and homeworks and these readings were necessary to read in depth in order to do well on the exams. This class was mostly a large amount of memorization of the textbook and extremely tedious and time\u2013consuming.",
        "This was definitely not an easy course. Peter and Branden are great though. READ THE BOOK",
        "Peter is a good professor. The last lab (SETI lab) takes a while to run and test. If you wait until the last minute, everyone in the class will be using the server and it'll be super slow, so make sure to start early.",
        "Professor Dinda really knows what he's teaching and it shows in every lecture. Professor Ghena is great at holding down the chat and answering questions that students have. The book is actually pretty good although very dense. Looking back, I would use the book more while doing homework and potentially do some of the practice problems instead of trying to force myself to read the chapters for the sake of reading them. Office hours are pretty good and often available. This is a good class for learning to use office hours.",
        "This class is a challenge, but Dinda is great to take it with. He knows the material is challenging, but wants to see students succeed and goes out of his way to help you as long as you ask for it. He's also incredibly knowledgable about the material and is great at answering questions. Best advice is take the class with someone you know or find a good partner some other way to do the labs with, and always try to do the extra credit on labs when its available. The 2 exams were the toughest part for me, but are weighted less than the labs, so if you get extra credit on labs it'll soak up any bad exam grades and you'll still do well. Homeworks are easier and mostly graded for effort. As long as you go to office hours to make sure you do well on labs, you'll do fine in this class.",
        "This course was very challenging but you have a lot of opportunities to boost your grade.",
        "Though definitely challenging, this class forces you to learn about computers on a much deeper level. After taking this class, I feel I have a much better, though still developing, understanding of what a computer is and how they work. Though the concepts are challenging, Dinda is a good lecturer and his office hours are very helpful, as he clearly cares a lot about his students. In addition, though the material is difficult, the grading is actually not too bad, as there's lots of available extra credit and manageable labs.",
        "This class was decent. The content is pretty difficult, but the grading is lenient.",
        "This course needs slides. Most of our time was spent trying to decipher what the professor was writing on a piece of paper,",
        "I was very happy with taking this course I learned a lot while also enjoying it.",
        "Only take this class if you have to!! That being said, you will learn a ton but this will be a very very difficult class. You're gonna need to devote a lot of time to this class. Take this class with Dinda or Ghena, Dinda did most of our lectures and was a very good professor and Ghena was also good when we had him.",
        "Professor Dinda is a very good instructor, but he usually expects you to read the materials before the lecture. The office hours were very useful in understanding the course material and labs.",
        "The subject itself is very interesting. I'll never look at computers and programs the same way again (in a good way). However, this class also made me realize that flipped classroom is not for me. Peter and Branden are both very knowledgeable, they are not bad instructors. I just think the teaching style just did not suit me. However, the homework, labs, and exams are all fair in my opinion. The labs especially were actually pretty fun and helped a lot in understanding certain topics.",
        "This class is difficult, the labs especially. That being said, Prof. Dinda is a great lecturer and I learned a lot from this course.",
        "4 labs(12.5% each), 4 homework assignment(2.5% each),  2 exam(20% each). Homework was graded based on effort and attempt. Labs and exams were extremely hard.",
        "Great professor. Lectures are clear and helpful. However, there are no slides! You have to look for slides on CMU CS213 websites.",
        "CS213 is a challenging class. You need to read the textbook, watch CMU lecture recording or check CMU slides to be able to solve the homework and labs. Dinda is a well\u2013explained professor, but he doesn't use slides which makes the class less structured. He also teaches the material during lecture too little, so it requires a lot extra outside time to learn the material yourself.",
        "The professor doesn't use slides which was a little hard at first, but eventually you can pick out the main ideas of the lectures. The textbook is a little bit of a dread but essential if you want to learn and do well in this class. And office hours were really helpful.",
        "I LOVED this course. Projects are fascinating, Professor Dinda is a legend, and I had an uncountable amount of moments where I learned/figured out something and went \"oh that's sick!\" out loud to myself. I came in knowing nothing about systems, but the class structure gave me a fantastic foundation before moving on to more advanced (for me) topics so that I never felt like I was up the creek without a paddle. One thing to note is that projects are done in groups of two, so it's important to either know someone going in or be comfortable finding a partner. This class single\u2013handedly made me interested in systems as an area of study, and is the reason I'm taking 322 next quarter.",
        "I learned a lot about the different aspects of computer systems.",
        "Professor Dinda is an extremely knowledgeable and clear lecturer. The course was well designed, and the labs contributed significantly to my understanding of the course material. Professor Ghena didn't lecture very much, but the two lectures he did give were well planned and enjoyable.",
        "Dinda is a very smart guy. The class design, however, is pretty flawed. For (virtual) lectures, he didn\u2019t use any slides and just recorded himself writing on pieces of white paper. The quantity and complexity of the material was too much for him to not use slides to guide students. He was pretty lenient on HW because they were only graded on completion.",
        "I enjoyed the material in this course, although I at times felt the layout was slightly confusing. Maybe some more advance notice of what's coming up next in the course would be helpful for organization.",
        "Slightly unorganized class structure.",
        "Great course; introduced me to many interesting topics in CS that I hadn't explored before. Dinda is very knowledgable, and the grading policy is quite fair, with two exams worth 20% each, along with a focus on labs (which made up 50% of the grade). If you make sure to do the readings, find a good partner, and stay on top of things, this class can be very rewarding.",
        "This is a hard class and you have to understand all the material to be able to do the homework and labs but the lectures and material offered did a great job of explaining concepts.",
        "Fall 2020 Remote learning was bad.The worst part was the lectures. Professor Dinda explains things as he writes notes/diagrams on a sheet of paper rather than having slides prepared beforehand. There is little structure to how he writes so it soon becomes incoherent as time goes on. Also, while not necessarily the professor's fault, he doesn't come across as enthusiastic about what he teaches and is monotone. This combined with the bad notes on screen makes lectures unengaging.I stopped going to lecture in week 4 because I realized I would never absorb anything or constantly zone out due to how unengaging it was. Fortunately, he provides links to slides that cover the information he goes over in lecture. I found I learned a lot more by just reading those instead of actually going to lecture.The assignments were all fine, but I thought exams were way too long for the provided 2 hours. Even though I felt well prepared and knew all the material, I had to rush super fast to barely submit on time.",
        "This class is a little rough at times. The 80 minute class periods are rough as the lectures can be quite dry. The material is all there though. The textbook is super convoluted and long, I felt totally lost reading it and just stopped because it also hurt my eyes to read. Other than those problems, the class was fine. I did feel like I learned from the lectures, and the labs were fine, even fun at times. There's not too much work outside of class, so it's manageable for sure.",
        "the class is hard. the labs and the hws are challenging and you need to spend a lot of time on them but there are helpful resources (like youtube videos and githubs) for many of them and the TAs help a lot in the discussion section and at office hours.",
        "It was overall pretty good, not to challenging, but still learned a lot",
        "Loved his zoom lecturing style \u2013 pen and paper and projector. Made the lectures way more spontaneous and more casual, which I think worked well with him and me. The content of this material is mindblowing and will make you want to switch to computer engineering. A lot of sweet things that you learn about, for example the section on virtual memory is insane."
    ]
}{
    "course_code": "Student Report for COMP_SCI_213-0_1",
    "course_name": "Intro to Computer Systems",
    "instructor": "Branden Ghena",
    "year": "2022",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.63",
        "count": "115"
    },
    "course_rating": {
        "mean": "5.08",
        "count": "117"
    },
    "comments": [
        "The bomb, attack, and SETI labs were super gratifying and taking the time to annotate my steps allowed me to come up with a system for reading assembly and I'd recommend that for sure. The TAs and PMs were helpful for understanding how labs worked, and getting familiar with the concepts used, but I enjoyed not spending a ton of time in OH debugging because I learned how to use GDB pretty effectively (also there's not a lot of syntax errors in the course which is a big change pf pace). Working with a partner was great. Homework was helpful for exams.",
        "213 assignments alternate between written homeworks and labs. the lectures are helpful mainly for homeworks, and only provide a very basic conceptual understanding for the labs. expect to spend a lot of time in office hours or googling to get the labs done.branden's lectures, as always, are clear and organized, he responds super promptly to campuswire, and his slides are great. i'd recommend taking this class with him if you can.",
        "This course is a good introduction to computer systems and provides a fairly broad coverage of the topics. What stood out to me was the lab on optimization that taught us how to improve the efficiency of computer programs.",
        "Branden is a fantastic professor and a wonder to work with. There is a lot of extra credit available in the class so don't stress too much. Just make sure you are on top of your assignments.",
        "The labs in the class are intellectually challenging, which means they can get frustrating but are also quite fun to do. Ghena's exams and homeworks aren't too difficult and a lot of extra credit is given from the labs, so i'd say this course was quite easy.",
        "Ghena is a great professor and the course was very doable",
        "I learned a lot about computer systems and their logic.",
        "I liked this structure a lot better than CS 211. We got two homework assignments at the same time and had one week to complete the first one and had two weeks to complete the second one. This was helpful because I could finish the first assignment really quickly to have more time on the second assignments. There were opportunities for extra credit on almost every lab which was so helpful because I didn't do that great on the first midterm and now I have a lot of cushion for the final. Overall, I feel like the structure of this class made it less stressful than 211 and some of the homeworks and labs ended up being kind of fun. You should be fine.",
        "The difficulty of this class is EXTREMELY overhyped (at least with Branden). You do end up learning a ton of new concepts but Branden keeps everything super manageable and is overall the best CS professor I've had yet. The homeworks are super chill and help with the exam a ton. Since you're allowed cheat sheets on the exams, you don't ever need to memorize anything you don't want to. The labs are definitely the hardest part of the class but are still super manageable if you get started a couple of days in advance (there's also a ton of extra credit available on the labs).",
        "This class is way easier than everyone said it was. I was scared for nothing",
        "Tough but good class. Lots of stuff that\u2019s good to know. Ghena is amazing, explains stuff very well, really nice guy. Labs take a long time, make sure to block off a good section of your week to work on it, it may take more than 1 day sometimes, unless you\u2019re a genius.",
        "This course provides a great high\u2013level overview of computer hardware and what goes into processing speed along with other issues. Ghena is a great professor for this course and has a lot of knowledge on the subject. He dives into great detail but keeps it relatable and easy to follow along.",
        "This class is HARD, especially the exams. Stay on top of the assignments and really review the material and you'll be fine (unlike me :/). Going into the class with someone else so you have a guaranteed good partner for the labs and studying would be even better.",
        "The course covers some important comp sci topics that were not addressed in the other core classes I have taken so far. However, there is a lot of material, so it is very easy to fall behind a lecture or two and struggle to catch up. The labs were very difficult, and although my partner and I got good grades on them we very likely would not have been able to figure them out on our own in time without outside help (i.e., office hours).",
        "Great Class! Definitely take it with Branden if you can.",
        "CS 213 with Branden was great. He is a really engaging lecturer and does a good job explaining tough concepts. The grading was also very lenient, no one in the class was stressed about doing poorly, which made it much easier to learn the material well. However, the labs definitely took a while to do, and they would be very hard to finish unless you start early.",
        "This class has pretty difficult concepts but it is definitely manageable to get an A. Start your work early though. labs are due on thursday and i started all of them on the wed and ended up not getting an A cause of late penalties so start early",
        "Overall, this course is very good. The topics are interesting, and it's paced reasonably well. As usual, professor Ghena is a good lecturer, and understanding with students. Every two weeks, you get a homework assignment due in a week and a lab due in two weeks. The homework assignments take an hour or two each, and are mostly just practice with concepts. The labs are larger assignments, and you'll have a good time if you start them at least week before they are due. Data lab and bomb lab are the hardest, but bomb lab, attack lab, and SETI lab all have opportunities to get a decent amount of extra credit. There's a midterm and a final, for which you get one note sheet and two note sheets, respectively.",
        "As a student coming from a first\u2013generation low\u2013income background I found this course to be fairly accessible, with some minor exceptions. The main issue being the first lab, Data lab. This lab was ridiculously difficult and I was honestly unable to complete it without the PMs straight up telling me how to code the solution. Even the PMs struggled to explain this lab and I feel like being thrown straight into this lab is extremely overwhelming. The topics covered with data lab are far too demanding and obscure and aren't necessarily explained very well on how to approach during the class. Outside of this lab, I feel like the rest of the course was very well designed and the Professor did a great job at explaining all topics in depth. The additional labs typically had adequate resources available for them to be feasible for a partner pair to complete (we were allowed partners for all labs, which is an AMAZING tool a capability to have).There were 4 homeworks (5% each), 4 labs (12.5% each with extra credit available on labs 2, 3 and 4), and 2 midterms (15% + 15%). If you manage to do the extra credit on all the labs, it is relatively easy to get an A in the course even if you score below average / don't do so great on the exams.Each homework was just relatively easy practice problems of concepts learned during lecture.Labs were very deep and applied versions of concepts learned during class.Exams were fair with Professor Ghena and very similar to homework style problems.Overall great course, minor tweaks could be made to make it even better though!",
        "Labs are the most challenging to complete, but easy to get high grades on if you can figure it out. Lecture slides are especially helpful, and overall the workload is not unmanageable.",
        "Take this class with Branden. If you haven't already had the pleasure of being in one of his classes, this is a great place to start \u2013\u2013 he's a great lecturer, gives fair assignments with fair deadlines, and (from what I've heard from other people at least) is very receptive to his students. Lectures were also recorded, which was a real lifesaver sometimes. This class had both written assignments and programming ones (\"labs\"). Office hours were always helpful for both kinds of homework. Some labs took way more time than the others, but we tended to spend less time on them as the quarter continued.As someone who despised everything about 212, this class was a relief. I can't imagine someone liking 212 more than 213; though, from what I hear, one of them will be the real make\u2013it\u2013or\u2013break\u2013it class for you. Grades:HW (4) \u2013 20%Labs (4, optional partner) \u2013 50%Midterm \u2013 15%Final \u2013 15%I think the midterm was much fairer than the final, but even then, neither was too bad. We were allowed an 8.5\"x11\" notes sheet on the midterm and two for the final, so it's worth putting time into making those. With that said: they can't carry you through the whole exam, so review the assignments and do the practice exam.Take advantage of OH and the Campuswire, don't wait until the absolute last minute to do the HW and labs, and pay enough attention in class, and it's a very doable A (in my opinion).",
        "I think this course is fairly demanding of your understanding of the concepts in the lectures and your time. However, it is definitely worth it because Branden is a great teacher and he makes the lectures really intersting and brings out great atmosphere during lectures. The labs took a long time, especially Data Lab, Bomb Lab, and Seti Lab, but they are still fun in the end and are good practices",
        "When you have to take CS213 ABSOLUTELY take it with Ghena! Everything was communicated very clearly and we were given a lot of help with challenging assignments. But also make sure to start assignments really early because otherwise this course can be tough.",
        "challenging class but definitely doable. honestly pretty chill in terms of work load. easier than 211 imo.",
        "Branden is a great professor, this is overall a pretty good class considering its reputation. Really not that bad if you put in the time and go to OH.",
        "Ghena makes this course very manageable. The pacing of the projects and homeworks was very reasonable. Honestly I would say that this course was easier than CS 211 (contrary to what most people told me before I took the course).",
        "This course is extremely difficult and time\u2013consuming, but definitely worth it.  Make sure to visit office hours often and attend every lecture, otherwise you may fall behind.",
        "Take this class with Branden if you can. He's a great lecturer and is super helpful with answering questions. While the work may be intellectually challenging, you do very little programming. The exams are very straightforward as well. Be sure to get a good partner and start the labs EARLY, and the extra credit from the labs is super super helpful. Lab difficulty (IMO) from hardest to easiest is Data > Bomb > Attack > SETI. Like branden says, some people might not find these concepts interesting, but if you do end up enjoying it then this class is pretty good.",
        "This course isn't as bad as I thought it would be. I was worried that it would be very tedious because it's such low level, but the course is structured in a way that wasn't too bad. I actually had fun in this class when I wasn't confused.",
        "Great introduction to computer systems \u2014 Branden is a phenomenal professor who, although takes lectures at a relatively slow pace, allows the time and flexibility for any questions that arise",
        "Despite 213's reputation as being a really hard class, I thought it was very manageable with Branden! His lectures were very engaging, especially with his sense of humor and the fact that he incorporated examples to explain concepts whenever possible. His midterms were also pretty fair, with many questions being very similar to the homework. I thought the hardest part of the class was the labs, which each took me a fair amount of time (especially the Data Lab). However, if you start early enough and go to office hours before the queue is too full, completing them isn't too difficult. Overall a great introduction to systems!",
        "AMAZING TAS AND PROFESSOR. There was always help available if you needed it and the prof always has time to explain things to you and answer questions.",
        "Firstly, this class will probably take up a lot of your time. The labs (which are basically just big homework assignments) can be very time\u2013consuming, along with making sure you understand the proper material for the worksheet homeworks and the tests. Not to mention that all of this information will be very new and different if you haven't taken a CompE class, so there will be a lot to learn.That being said, Ghena does a great job of explaining the material in lecture and would always be very helpful in his office hours. He's also very active on Campuswire so if you have a question you can put it on there and he'll get to it fairly quickly. As far as grades go, most of your grade will come from the 4 labs. While they are time\u2013consuming, if you put it in the time and start somewhat early you should be able to get 100 on them. Additionally, most of the labs have some form of extra credit that ends up boosting your grade a lot as labs were worth 50% of our total grade. So definitely start the labs early, and do the extra credits if you're worried about your performance on exams. Overall, this class will be manageable if you put in the time and you'll be able to come out with a good grade.",
        "This class is probably the hardest intro comp sci requirement but it\u2019s really easy to get a good grade if you put the work in. The labs are tough but you know exactly what your grade is going to be and the two midterms felt fair.",
        "TAKE THE CLASS W GHENA. I took 211 with him in the fall, and le me just say, this man is a god at teaching. His slides are so clear, with very great descriptions and diagrams that help us understand the concepts, and he is very responsive on Campuswire if you need any help. This course has been a great introduction to what goes under the hood of a computer, and if it wasn't for Branden's slides, I don't think I would've been able to understand the course material so well. Also: Please try to put in your best effort on doing the labs, they are so important to your understanding of the course. There are a lot of online resources for a few of the labs, but if you don't understand the concept well you won't survive in future systems courses(and you have to take at least 1 more if you're a CS major.)",
        "Branden is a fantastic teacher, and I thought the material was honestly pretty interesting. The labs do take a bit of time, but the provided write\u2013ups are really thorough and helpful. Otherwise, the homework and tests are fair and reasonable.",
        "Branden is the best. He does a great job explaining the course material in a clear and interesting way. Labs are hard but overall worth it in the end.",
        "This is a challenging but informative class. I definitely recommend taking it with Ghena because he does a great job making the sometimes overwhelming content feel as manageable as possible.",
        "The class is one of the more challenging ones in 200level comsci, but i'd say take it with Branden if you need to take the class!",
        "The homeworks and labs are all around useful for better understanding and learning the concepts. I think the labs were difficult (sort of a given) but always a great source of practice.",
        "This class is definitely difficult, but Prof. Branden definitely makes the content easier to digest. Go to lecture! Make sure to clear plenty of time to go to office hours to work on labs, and take this class with people you know.",
        "This class is difficult, but doable. Branden is an incredible professor who really cares that students learn and are excited about the material. I can't imagine taking this class with anyone else. The 4 homework assignments are very comparable to the exams and don't take a super long time to do. The labs are all very challenging and take a long time to complete. However, there's a ton of office hours and if you start early enough, you'll definitely be able to finish the assignments. Overall, this class wasn't as bad as people say.",
        "This class is definitely very content dense \u2013 we covered almost everything to do with low level computer systems in a span of just 9 weeks, so the content did feel a bit rushed. The labs were also quite difficult and took some time to figure out, and the content taught in lecture was only somewhat helpful for finishing the labs. The extra credit is also very generous and basically gives a massive cushion for the midterms, which aren't too bad either. Branden is also an incredible lecturer but sometimes goes a bit fast (but that's just the nature of the class)",
        "Systems is not my thing, but Branden made the course (not easy but) great! Definitely take it with Branden (even if other profs teach it.) Midterms are fair, and homeworks are extremely great resources to study.",
        "I liked the structure of this class. You have two weeks to complete the labs and a homework assignment between each lab. The labs are time consuming so make sure to start them early. The lecture material is presented in a straight forward and understandable manner.",
        "so hard :(",
        "There was too much information on the slides to understand. Ghena would talk. We got breaks in class which was nice but sometimes the textbook was more helpful than lecture. SETI lab is the most confusing lab and was super stressful.",
        "I loved the class! The course is really geared for you to learn. As long as you don't procrastinate on the projects, grades should not be a problem. Branden really cares about teaching and we can easily feel that in his class. Difficult but good class!",
        "This quarter's 213 was very different from the previous quarters. The materials were the same, but prof. Branden made the class so sooo much better. His lectures are fun and he explains things in a very non\u2013confusing and easy way. His exams are challenging, yet very fair. He does not write the exams to trick or fail students. He genuinely includes the things students should have learned from lectures and does not go deeper than that. While the labs are still as hard and time\u2013confusing as previous quarters, they are all very interesting which makes up for all the frustration and time spent. If you have the chance to take 213 with Branden, do so by all means. He is amazing and make your life so much better.",
        "This wasn't nearly as bad as I expected! First off \u2014 Branden is really phenomenal. We're super lucky to have him, and you should absolutely take 213 with him. There are four written, problem set\u2013ish homework assignments, four hard labs, and two exams. Homework assignments can be tricky but ultimately aren't too bad. Labs can be HARD. You have two weeks to complete them, so definitely start in the first half. Exams are often REALLY close to the practice ones he gives you, so pay attention to them. I think an A/A\u2013 in this class is super doable, it might take a bit more effort than some other CS classes though.",
        "Class is pretty hard, but working with a partner and slip days on labs help. The final was insanely difficult, the girl next to me even started crying during the exam. Wish there would be at least one late day per lab as they take a pretty long time. Overall, was not too interested in this course going in, and still am not too interested, but you have to take it as a CS major so may as well get it done early.",
        "Pretty good course with Brandon. The class is really organized which makes it very doable. The labs are hard and take a lot of time, but going to office hours helped a ton. The written homeworks are pretty easy and exams aren't hard. They just test what homework is on.",
        "The class content was challenging but worth learning. Professor Ghena is a great lecturer and you should take this class with him if you get the chance. The labs take a lot of time and thought, so start them as early as you can.",
        "take this class with branden!!!!!!!!!I took it the quarter before and dropped it because it was so boring and I was not looking forward to it at all. Branden did such an amazing job teaching this lectures. Honestly, he is hands down the best CS professor at Northwestern. He is so engaging and his lectures are organized so well. The graphics and the way he moves throughout it and explains his thought process makes the class so engaging and also easy to understand. It was actually a ton of fun when I took it (all that credit goes to Branden) even though the material is pretty challenging and different than a programming class.",
        "Prof Ghena is awesome. Do the homework assignments because it will make you look at the slides. This will pretty much make you learn everything you need to know for the midterm and final.",
        "do NOT take it with Dinda. Ghena is guarunteed A. Labs are hard but if you go for extra credit, midterm and final are basically irrelevant.",
        "This class is hard \u2013\u2013 harder than any of the other 200\u2013level CS classes. The labs, which constitute 50% of your grade, are frustratingly difficult because the examples and material covered in lecture do not prepare you adequately for the level of rigor and depth that the labs ask of you. Branden seems like a pretty cool guy, but systems programming is just difficult to make accessible and the learning curve is very very steep.",
        "Definitely a challenging class, but if you put the work in you'll do fine. The midterms are not at all bad, and the labs are doable, especially if you start early. One of the hardest things about each lab is the sense that trying to do it all at once is challenging; it's a lot easier when you have the time to mull the challenges over in your head between each part, especially later in the assignments. But you get a partner and the TAs are very helpful, and your grade will be fine if you manage the workload effectively.",
        "This is a pretty difficult CS course with very hard Labs. Labs are due every 2 weeks and are very challenging, taking many hours to complete. Other than that, the homeworks are easy and the exams aren't bad.",
        "Very interesting course. Some people did not like it at all, while others loved it. Personally, I found the course to be decent and overall it wasn't anything too crazy. I think it's definitely comparable to 211, it's just different from other CS courses. Take with Branden. Amazing professor.",
        "Even though I was not super interested in systems and going on to take more systems classes this was a fantastic course. Branden is an amazing professor, super clear, super helpful, and a great lecturer who makes everything really interesting and is always happy to help. At time the class was super detailed and reading through assembly code is not the greatest, but it was all super valuable and everything taught in the class helps you understand a lot of the things that other classes, especially those leading up to this one, gloss over as a we are just supposed to do it that way topic. Overall, it was a really fantastic course with engaging labs (two week assignments) and lectures. If you can take it with Branden, you should.",
        "This course was very interesting, but the material could get slightly difficult.",
        "I think in many ways the pace of the course can discourage learning. Even though the professor was a great lecturer, the homeworks and labs often had little to do with what we were studying, and since they take so long I often skipped class just to do the homework. Despite being interested in the topic, I got overwhelmed quickly so that I didn't have the time to learn anything except the bare minimum.",
        "The material in this course is very difficult, but Branden is an incredibly nice professor and the way that he structures assignments allows you to learn the material in an efficient and forgiving way. I highly recommend going to office hours and starting assignments early. The PMs are incredibly kind and helpful, and I learned a lot from them!",
        "This course is hard, but also really interesting. I feel like this is the first CS class I've taken at Northwestern where everything I've learned has felt useful/applicable. A large part of that is the labs, where you really do feel like a hacker who's solving complex puzzles. Best advice: do the extra credit on all the labs that have it, start every assignment early, and go to office hours. Homeworks are pretty easy, just make sure not to make silly mistakes and you'll be fine. Overall really liked this class and Branden's lectures, take with him if you can.",
        "The labs can be very confusing!! So start early. Take as many classes with Branden as you can!! I was in his 211 in the fall and now 213 and they both have been great. Even though we are in a \"post covid\" world I suggest you actually go to class rather than watching the videos at another time.",
        "Ghena is amazing. Lecture slides are helpful; I heard that in other quarters with the other professors, the slides aren't well done (or not even there lol). anyway pretty good class"
    ]
}{
    "course_code": "Student Report for COMP_SCI_213-0_20",
    "course_name": "Intro to Computer Systems",
    "instructor": "Peter Dinda",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.13",
        "count": "15"
    },
    "course_rating": {
        "mean": "4.87",
        "count": "15"
    },
    "comments": [
        "This was a great course that is challenging but very rewarding. I really did well with Professor Dinda's lecture approach and really enjoyed the class",
        "Overall, a good class. The labs were pretty fun to do and didn't take up that much time. Dinda clearly knows his stuff, and was able to really go in depth on topics which I liked. He is also very helpful in office hours. Make sure you have a decent understanding of C (or C++) going in, but the class teaches a lot of the specialized aspects that you'll need.",
        "I would highly recommend taking this class with Prof. Dinda! You can tell he cares about his students and their understanding of the material. He does answer questions that lead to tangents, but it is nice to see a professor really care about their students' curiosity. In addition, there are labs but he doesn't work us too hard. I've heard that the roughest lab for this class is traditionally the malloc lab, but we were not assigned it. Instead, for our last lab, we got a lab that Prof. Dinda wrote himself about threading. In addition, there are a few homeworks, but they are optional and very thorough answers are posted after a certain date. I've also heard that Prof. Dinda is really helpful during his office hours, although I have not gone to his OH myself.  Because of scheduling, I tend to go to Brian's (our TA) OH and he is super helpful as well! The only critique I have for this class is that Prof. Dinda doesn't use a powerpoint and mainly just talks in front of us, occasionally using the board, so lectures can be dry and it can be hard to tell which points of his are important for the class material and which are just extra detail. Overall, Prof. Dinda is really knowledgeable and he really cares that his students understand the material and aren't working crazy hours for this class.",
        "Labs were effective and the course material was interesting in my opinion",
        "This course can be very challenging at times and you may feel completely lost, but when completing one of the assignments or exams you will be surprised by how much you've learned and find that they aren't as difficult as you might have thought.",
        "The only disconnect was that I did not at all feel adequately prepared for the midterm and final. What was covered in the book, lecture, and the homework did not always directly help with content on the final. Sometimes I felt blindsided because even after having done all the reading and practice material I would still sometimes have no idea how to do a problem on the test. However, it was still a great class and I learned a lot. It even helped with my interviews.",
        "The material in this course is brutal, complex, and fiendishly detailed. Find a good partner for the labs and do the extra credit though because if you ace the labs you can bomb the exams and still do well because the labs are 50% of your grade, whereas exams were 20% each. Just another requirement you have to fight through.",
        "Hard class in general. TA is very helpful so use office hours. Labs can take lots of time but if you start early and go to discussion then not too bad. Lectures with Dinda can get dry but the information that he says is important. Dense course. Wouldn't recommend taking it unless you have a strong interest or need it for the major. Also Dinda doesn't have malloc lab but does have a lab he's written about parallelism. HW are optional.",
        "This class definitely was not as bad as people made it out to be. The labs are worth a large part of the grade, and there's easy and generous extra credit. Professor Dinda is a good and clear lecturer, but the material varied from very interesting to boring and repetitive.",
        "Hard class but you end up learning alot. The SETI lab was pretty cool.",
        "Prof Dinda is really interested in this subject and is passionate about the subject. The lectures can be hard to focus during, but he is fantastic during office hours. In both this class and Prof St. Amour's class, labs are the majority of the grade; Prof Dinda offers way more extra credit and the final lab is easier than Prof St. Amour's (previous three labs are the same)."
    ]
}{
    "course_code": "Student Report for COMP_SCI_213-0_21",
    "course_name": "Intro to Computer Systems",
    "instructor": "Vincent St Amour",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.52",
        "count": "71"
    },
    "course_rating": {
        "mean": "5.00",
        "count": "68"
    },
    "comments": [
        "All CS majors have to take it, but St Amour is the best. Yes, you have to do malloc and he's \"harder\", but he makes this class easy to understand, thus making everything about this class a little better. You learn so much and St Amour is the nicest prof I ever met. Says hi in passing and tries his best to make sure you succeed without giving the answers away. Malloc is what they all say it is; no getting around that. Material is dense and complex so it can be boring at times.",
        "As expected, it's a very hard class. That said, it's not unreasonable or unfair, and you can do well with some work. Vincent is a great instructor and really wants to see everyone succeed, and he understands how hard it is. Take this class with Vincent, and if you can, take it with someone you know you can work well with, because you'll be spending quite a bit of time with your partner on homeworks and labs.",
        "It's tough but actually interesting. The programming assignments take some time and effort but for the most part are interesting but slightly over\u2013stay their welcome. The HW isn't that tough, it was just repetitive which is good for reinforcing concepts but if you get something the first go, it just tacks on extra time.",
        "Yes this class is hard, and yes this class is time\u2013consuming, but you will learn so much. The homeworks and labs take a lot of time, but they do a great job of reinforcing the material. The exams are very fair as well. Don't be intimidated by this class; there are so many resources to help you succeed (good textbook, plenty of office hours, amazing peer mentors, etc). Find a good partner and just put in the work...it will be rewarding in the end! Also, Vincent is amazing.",
        "Vincent is a fantastic instructor. Between the lecture slides, which are well\u2013made and well thought\u2013through, as well as the great textbook, although the class IS challenging, there is plenty to get you through. It really does further stimulate your interest in computers, as well as make you a better programmer (as it is on the C/systems level).",
        "This class contains a lot of content. You definitely can do well if you put in the time and work. Vincent is very helpful and lives to see you succeed.",
        "Prepare for this class to be the hardest class of the quarter.  The workload + the difficulty of the class dictate it.  I don't think that the material is extremely difficult to grasp, but it is the amount of material + the need to practice a lot for it to succeed on exams causes this class to be difficult. Overall learned a lot and Vincent teaches it very well.",
        "Before this class, I had no experience with assembly or programming outside of class, really. However, I found the class material to be manageable and fun. If you're going into this course for the first time, be warned that its assignments are VERY different from what you've seen before. Always set aside enough time for written homeworks and labs and double check your work. The tests cover what you work on in your written assignments, so make sure that you have a good grasp on those before the tests. The assessments are open\u2013note BUT flipping through all your notes and trying to comprehend them will take up your time\u2013 don't go in with zero knowledge. This class will take hours to fully grasp, but it's extremely rewarding at the end of the day.You don't need a partner, but having a good one is highly recommended. Drop them and find someone better if they don't do the same amount of work as you do; you don't deserve to be stuck with people who feed off of your hard work. Good luck and have fun!",
        "The structure of this class is absolutely fantastic. Vincent is an absolute hype beast, as he gives you hws that actually teach you the material and labs that, while sometimes tedious, are often engaging. This class will require a solid amount of work and dedication to the material, but if you do that you are almost guaranteed an A. You get back what you give in this class.",
        "Vincent is awesome; you'll learn a lot",
        "This course, hard as it was, was worth every minute of time put into it. The amount that you get out of this course is immense, and it's super valuable stuff to know. Vincent is one of the best professors/teachers I've ever had, and the material itself is super fascinating. Even though it was a pain sometimes and took a lot of time and effort, I feel strongly that it paid dividends.",
        "Vincent is a great professor. He's extremely passionate about the subject as well as his students.",
        "hard class, start early on the labs and the hw",
        "Good but somewhat hard class. Lectures can over\u2013complicate things sometimes so going to office hours helps a lot. A lot of work.",
        "This class is going to be hard. Take it with Vincent\u2013 he really cares about his students and wants them to succeed\u2013 and go to office hours.",
        "Great",
        "I don't even know what to say, just praying I don't have to take this class a third time and I can actually complete this CS major. This class is hard, start your assignments early",
        "This course gives a solid foundation in systems. I had trouble in the class at first, but after building the base knowledge, everything was more digestible. Vincent really tries to get the class to participate, and much of that is in begging for questions. I haven't had a professor as visibly passionate as Vincent, which made the class more fun. For some reason I really enjoyed the Attack Lab, and it made me consider pursing a career in security. I was not a fan of all the other labs. The malloc lab especially is insane. Definitely take this class seriously and don't procrastinate. The TA's are also really good and helpful. So going to office hours was actually worth the while.",
        "Computer systems is essential to understanding the make up of programming. I think by understanding how all the concepts work, you will become a better programmer even though most will not use what is thought in the class.",
        "Vincent will make you feel dumb in this class and gaslight its difficulty but don't let him make you want to quit!",
        "This class is definitely one of the more challenging and time consuming computer science courses. However, I think it was taught well, and I learned a lot. Homework assignments and labs take a lot of time, but they are extremely rewarding when you complete them. Exams are tough.",
        "This class is a lot of work. The labs and homework are both difficult to do without help. But it is relatively easy to do well and the work helps you learn. I didnt know anything about systems and now feel much more knowledgable about to area. This was the first class that made me feel like I was majoring in computer science",
        "This is not an easy class. Don't expect to take this \"float\" by, you're absolutely going to need to put the time and energy and effort into learning the material. In many cases, attending lectures wasn't enough and I had to seek outside support through the peer mentor system. Tests were difficult and labs were langthy, so you'll be working on this class more than any other.",
        "The class was really well taught. There were tons of office hours and supplemental materials. The last lab was an intentional grade deflator though which was a little malicious.",
        "This class is one of the notoriously hard classes in CS. However, if you take it with Vincent, it is definitely manageable and doable. Vincent is a great teacher and patient with students. He's very eager to help and explain concepts and it's very clear he's very interested in the material. With all that said, there are homework assignments and labs alternating every week. You have 5 homework, 4 labs, and 2 midterms (no final, not cumulative). Technically you're getting 2 weeks to complete each assignment but realistically, you're probably spending a week on each. That makes it harder to complete the assignments. This means you'll definitely have to stay on top of things. It helps that you have a partner for both homeworks and labs, but everyone knows that working with another person comes with its own set of problems. All in all, its a good class, interesting material. If you don't understand something go to office hours. They're a ton of help. One last thing, really annoying but understandable, when you do the homework, you can only really see if you answer is mostly correct in peer mentor OH because Vincent doesn't believe in confirming answers so he won't answer anything unless it's a legitimate question about the material and not the answers.",
        "Great course for anyone who wants to understand the magic that is happening between the actual code and the work of the hardware.",
        "This is the hardest class you will ever take at NU. Vincent is a wonderful teacher (who can sometimes talk too fast), but he is great with answering questions. The hard part is understanding the material well enough to benefit from asking questions.",
        "Ok, kids, here's the rundown. This is the hardest class I've ever taken by a long shot. Do not take this as a distro. Do not take this as a fifth class. Expect to put work into it. That being said, it's also the best class I've taken to date, and I strongly considered failing the final so I could take it again in order to get more out of it. Hints: do the readings up until when you don't understand the textbook anymore, then stop, because Vincent will explain it way better. Take really good notes and print out slides for the exams. Do not miss class. Take advantage of office hours. They're fun.",
        "The first portion of the course is not super difficult but the fundamentals you learn there are important. First three labs aren't bad. The malloc lab is way more difficult and takes more time than the other labs so be aware. Tests were pretty fair and were similar to the homework assignments with a few tricks.",
        "This course honestly is not as bad as all the other CTECs will make you believe. Yes it is difficult and you will spend a good chunk of your time on the homeworks. But if you actually read the textbook, go to lecture, ask questions, and start early on your homework this class will not be the horribly hard thing everyone makes it out to be. TAKE WITH VINCENT IF POSSIBLE.",
        "CS 213 is a course almost no one takes as an elective, so if you are reading this, then you are probably taking it for your major/minor.  That being said, CS 213 is a hard course and there is no way around that.  The concepts, homework, and labs are all hard.  However, unlike CS 212 (which you should not take at the same time as CS 213), which, unless you are brilliant (in comparison to other NU students), will always be difficult no matter how much you study, CS 213 gets easier the more you study.  In CS 212, every new problem is difficult, but in CS 213, the concepts you are tested on in the homework/exams become much easier as you practice, as there are no new problems, just the same ones which you become more and more familiar with.  To truly understand the concepts, though, takes a lot of work.  Fortunately, there are a plethora of office hours and great peer mentors that are there to help you.  Lastly, it is paramount that you find a good partner to work with in this class, as you are able to cut your workload in half (on average) if you are able to find someone who wants to work just as hard as you do.",
        "This course is a very good introduction course. I've learned so much in 10 weeks and Vincent is a very instructor.",
        "It's probably the most difficult CS course I've taken yet. I also feel like I learned an entire year's worth of material in one quarter. It's fast\u2013paced, it's brutally difficult at moments, and it's a lot of work. You'll end up knowing your TAs rather well by the end of it. It's definitely worth it. Take it with Vincent, if you can \u2013\u2013 he is an amazing instructor and absolutely phenomenal at explaining the course's difficult concepts, and you can really tell he enjoys teaching and cares for his students.",
        "Vincent is awesome, take this class with him. Class isn't too hard, just make sure you go to class and do the homework, the labs can be pretty hard so have a good partner.",
        "This class was very difficult and required the most time out of all my other classes, but my efforts always felt worth it. This is definitely one of the most important classes I've taken so far.",
        "This is one of the hardest classes I've taken. To do well, you really have to put the time and effort in to understand the concepts and the labs are so challenging. If you put in the work and the effort, it's a rewarding experience in the end.",
        "This is a very time consuming class that can be very difficult if you have no prior experience with systems programming. You want a good partner for the class so that you're not doing the labs or homeworks alone. It is good to start early for all the assignments and office hours are a very good time to figure things out. The labs can be especially difficult if you don't know where to start. Be prepared to spend a lot of time on this class. If you put in the effort, you can very easily excel in this class.",
        "I was nervous about this class but honestly its (mostly) fine as long as you have a partner who you like / can stand to be around for several hours every week. the labs are difficult but the homeworks are (challenging but) manageable and the material is challenging but if you work at it / go to office hours it is doable. Vincent did a great job. just definitely work at it throughout the quarter because the midterms are a lot like the homeworks so if you understand each homework as you do it your life becomes so much easier when midterms roll around",
        "Take this class with Vincent. He is an amazing professor. This class is difficult, and requires a large time commitment outside of class. I would recommend starting EVERYTHING early. You don't think you are going to need all of that extra time. But trust me, YOU WILL. This particularly applies to the malloc lab. I started working pretty early and still didn't get to the place I wanted to be.",
        "I thought overall that the class was designed extremely well with the homework being largely helpful for tests and other assignements and also ensuring that you learned the material. While the labs helped you learn and could implement what you learned.",
        "This was very difficult, just as it is known for. The lectures are long and packed with dense and dry material, so you must attend lecture or you won\u2019t be able to understand. Vincent does a great job of livening it up a bit compared to other professors, and he also answers the students\u2019 questions super well. He truly cares about the students which helps a lot. Every week you have either a long homework packet due or a difficult lab in C. These take a LOT of time so don\u2019t start them late in the week or you will not finish. My partner and I spent over 15 hours on each of the labs. Going to office hours helps. Overall, CS students have to take this course so to survive make sure to take it with Vincent because he is awesome!",
        "Take this class with Vincent! Although this is one of the harder classes I have ever taken, it is also the most I have ever learned in a class. Vincent's lectures are engaging, and he makes sure to go through the material in a way that students understand. The material is incredibly difficult to grasp at some times, but Vincent makes it much easier to understand. He is the best professor I have had at Northwestern, and he makes this class much better!",
        "This class is challenging but if you stay on top of the readings and pay attention in class, you should be fine.",
        "This class was very hard and very dense. Lectures often didn\u2019t cover all the material needed to do homeworks, and there was not enough time in the quarter to properly absorb everything. That being said, everything we had to do \u2013 homeworks, labs, readings \u2013 were extremely effective for my learning. That being said, I don't think I would take this class if I didn't have to.",
        "The class material is super interesting as well as practical from a programmer's perspective. Labs are challenging but cool and you learn a lot from trial and error debugging.",
        "If you are CE, I would recommend taking 205 before this class. With that background, this class was not overly challenging.",
        "Being the infamous 213, this class wasn\u2019t that crazy (bar Malloc, but you have lots of time to work on that, so start early and you will be fine) Midterms were fair, and homework sets were mostly straightforward. Vince was a great and personable instructor, and even though I personally do not want to work in systems, I concede that the knowledge I gained is incredibly useful for a career in Software Engineering.",
        "This course was HARD. That said, if you read the textbook and go to office hours, you will learn. This is very much a work and ye shall be rewarded course. I cannot stress this enough tho, read the textbook and you'll do fine.",
        "Take this class with Vincent. I don't know anything about the other guy but Vincent is fantastic.",
        "I really enjoyed CS 213, but it is a very challenging class. If you do not pay attention in lecture, you will get crushed on the homeworks. Many have said this is one of the hardest classes in the CS major, but it is very doable if you stay on top of everything. Also, it is very interesting and cool.",
        "I felt that the labs didn't deepen my understanding of the topics as much as I would've liked, but the going through the homeworks really solidified my understanding. Instead of bi\u2013weekly labs, I believe lab sections that walked students how to do shortened versions of the lab assignment would be beneficial.",
        "This course was hard, but it was not unfair. I felt like the exams were fair to students and the assignments \u2013\u2013 while challenging \u2013\u2013 were doable with office hours, going to lecture, reading the book, etc.",
        "difficult class, make sure to go to OH for homework help and labs",
        "This class is hard as balls, but really interesting imo. I wish I had more time to understand the material, because a lot of complex topics are covered very quickly\u2013\u2013 not to the fault of the prof, however. If you struggle, that is okay! Just make sure to be really candid with St Amour about where you're at, and he will be absolutely willing to work with you. If you aren't upfront about struggles though, he can be less than helpful.",
        "This course is very challenging but very rewarding. The professor makes the class quite engaging and upbeat.",
        "It was very good at teaching a lot of the basic concepts of computer systems.",
        "Good course, take it with Vincent. It's pretty difficult, especially if you haven't had any experience with x86\u201364 assembly, take 205 first."
    ]
}{
    "course_code": "Student Report for COMP_SCI_214-0_1",
    "course_name": "Data Structures & Algorithms",
    "instructor": "Leif Rasmussen",
    "year": "2021",
    "quarter": "Summer",
    "instr_rating": {
        "mean": "5.48",
        "count": "23"
    },
    "course_rating": {
        "mean": "5.26",
        "count": "23"
    },
    "comments": [
        "This course was taught very well, Leif is great. It was super effective in teaching me very important CS topics.",
        "This course needs to improve its grading structure. I believe minor errors in code can lead to costly often irreversible damage to your final grade.",
        "Leif was great, very approachable and quite organized. The async format was good, slides were posted on time and were well explained.",
        "I really enjoyed this course and appreciated the strong background it provided me in crucial aspects of data design and algorithm implementation",
        "Generally a good course with a good difficulty level. I didn't feel overwhelmed, but I felt sufficiently challenged.",
        "This course was overall really helpful for my understanding of a lot of concepts (especially if you're a beginner like me). The course simply goes through all the common data structures and have you implement them all for the assignments, which are definitely manageable if you take advantage of office hours.",
        "Having only taken CS111 and CS150 prior to this course, I found this course to be very feasible and actually found it to be thoroughly interesting applying my learning of the content to exams and homework assignments. Leif Rasmussen taught the class very well and left little questions to be answered. The grading was heavily skewed towards homework assignments, and as someone who does not always perform so great on exams, this was a welcome surprise. Even with the two exams that we did have, Rasmussen made them very fair. Highly recommend this course, especially with Rasmussen!The grading structure was as follows: Homework Assignments 56% (7x8%), Final Assignment 14%, Exams 25% (10% Midterm, 15% Final), 5% Weekly Lecture Quizzes.Some data structures covered include linked lists, graphs, hash tables and several othersSome algorithms include Dijkstra's, Kruskals and several others",
        "Cool, good class. This section was done async, and the recorded lectures were pretty good, occasionally sometimes there'd be something dense and I'd have to replay it to understand it, but it was alright. I'm an applied math major (not CS) but this was a really interesting class. Prof Rasmussen was also pretty chill, and so were the TAs. It was helpful that the prof and TAs created a Slack channel for students to ask any questions.",
        "Overall, the assignments for this course helped me better understand how data structures work and how they are implemented. They also gave me a lot of practice with debugging, especially for the final assignment. We had to decide which data structures and algorithms to use so there was a lot of flexibility to how the program could be implemented. This was a longer and more difficult assignment than the previous ones so I would definitely recommend getting a head start on it. Also would recommend doing some planning first to see what the structure of the problem is, which data structures you're going to need and how the data pieces relate to each other. Lastly, make the most of the office hours offered! The TAs and Leif were all super helpful and they really helped me understand some of the data structures better and gave pointers and how to debug when I got stuck. So definitely go to office hours!",
        "Great class. Prof. Rasmussen was fantastic \u2013 did an awesome job with lectures, homeworks are fun and very good at getting you to apply the material \u2013 everything was fair and organized and well done.",
        "The course was easier to understand visually and so it was helpful to take the time to see the provided videos with visual demonstrations. The course was overall very interesting especially with homework that focuses on ADTs and actual applications."
    ]
}{
    "course_code": "Student Report for COMP_SCI_214-0_20",
    "course_name": "Data Structures & Algorithms",
    "instructor": "Vincent St Amour",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.19",
        "count": "108"
    },
    "course_rating": {
        "mean": "4.81",
        "count": "109"
    },
    "comments": [
        "It\u2019s a great class. Prof. Is quite straightforward and good at explaining.",
        "i learned a lot of material through lectures and office hours",
        "This class was a big step up from 150 but also helps prepare you to be a better programmer. It forces you to learn to write good tests. One thing though is I did not like the midterm portions of this class as they were definitely challenging. Professor St\u2013Amour gave great lectures and made sure to clarify everything that people were confused on.",
        "i like everything about this course",
        "Very interesting class. Vincent makes data structures super fun! Assignments aren't that difficult and definitely doable in one day. Great professor, interesting concepts, fun time.",
        "Vincent is a good lecturer, but he is wayyy too tense in terms of grading. He does not give you any leniency and the exams are graded quite harshly too. For this class, you MUST make sure you do not make any silly mistakes because of how little points you can actually earn. He doesn't curve the class either so don't put your hopes on that.",
        "println('%p', 'I came into CS 214, with an open mind and optimism towards a bright CS future filled with 1s and 0s (binary nerd over here). First day went great, Vincents voice is smooth ( and he's not too bad looking either *blush* ). Every day after that though made me realize that not only was I not meant to be a CS major, but CS men are undatable. Not only did Vincent misuse classtime by focusing on irrelevant details that clouded my understanding and were never a crucial part of the learning objectives, but support was often unattainable after class with officehours being over\u2013crowded by swarms of similar CS students who were assessed on things never taught in class. This class will not only make you hate CS, but will make you question every friendly face and voice for the rest of your Northwestern days.')",
        "If you're taking this course, you're probably as CS major, so anything I say can't really impact whether or not you decide to be in the class. Anyways, lecture was very informative, and Vincent had an answer to every question that was asked (though sometimes people wanted to flex, so the answer was \"that's out of the scope of this class\"). Each of the assignments was dedicated to implementing data structures pretty much from the ground up in DSSL2 \u2013\u2013 I'm sure some people hate that this is the language we used, but it's really not that bad and it works pretty well for making you think about data structures without relying on preexisting implementations/language features. Office hours were almost always busy, so make sure to do the assignments before they're due/early on the day that they're due \u2013\u2013 I don't know if they'll still be online once class is in person again, but I hope they are since it's much easier to get to them and get seen. What I thought was weird about the course is that there were two test\u2013style midterms on Canvas. They were open note, which was nice, but in my opinion they don't really make sense to have; Vincent said that he does them since they're somewhat similar to coding interviews, but I couldn't say how accurate that is. Worse, though, is that the second midterm was four days before the final project was due, so there was a lot on our plate for class in the last couple weeks. The final is another coding assignment, but you use previously implemented data structures to make a program \u2013\u2013 lots of freedom to pick what you think makes sense, but also lots of room for error. Don't wait until the last minute for it, and definitely go to OH for help or to go over your code. The grading scale is:56% Homework Assignments (and a worksheet on time complexity; get help on that as well)14% Final Assignment30% Midterms (15% each)This class was still interesting and more than important to understand the content of if you're planning on doing CS, but it still wasn't my favorite. Good luck! It's not too bad, really \u2013\u2013 they're not out to get you.",
        "This course is greatly helpful in learning how basic computer science data structures work. As usual, office hours and starting assignments early are your best friends! Overall, an incredibly informative and interesting course.",
        "Not hard, but you will learn a lot. The homework are easy, most of the work is in the test cases. The tests are on arbitrary stuff, doing the work doesn't help you prepare for them.",
        "So this class isn't easy, if you went 110\u2013>150\u2013>211\u2013>214. It's definitely conceptually the most difficult class. But, I found it way easier than the absolute insanity that 211 is. Vincent is really harsh at times, but is generally pretty good at communicating the ideas and concepts. Each homework is just implementing a new data structure, with two exams (hard but they actually test what you learn which I wasn't expecting) and a final project. The final project is so incredibly time\u2013consuming it honestly makes sense to start a week or more in advance.",
        "Vincent is an absolutely wonderful professor (my favorite so far). He is extremely prepared for class and always introduces topics conceptually and visually before going into the code. This has been so helpful for me to understand when I've started on homework. I definitely had difficulty with the midterms and assignments, but utilized office hours and Vincent's detailed notes. Vincent cares about us as students and people and cares about growth beyond grades.",
        "The course is pretty well organized, and the structure of what is taught makes a lot of sense. Taking 214 my sophomore spring after taking 211, 212, and 213 definitely made it an easier experience compared to if i took it freshmen spring concurrently with 211 like many students do. The slides are well made, and Vincent is an excellent professor. The exams are rather challenging, however",
        "Don't take this class with Vincent if you want an easy A. He makes the class hard for no reason. The 2 midterms are very tricky and failing one question drops your grade significantly. I also thought the self evaluation assessments were not really good. If you failed to have a single test it made your grade for that homework fall by like 3% which is disheartening especially if your code passed all the instructor's tests during grading. As someone who took 211 before 214, this class was definitely a downgrade, in terms of how grades are handled.All the same, grading aside, this is a very exciting class. And Vincent is an excellent professor. I'd definitely take another class with him provided there are no midterms.",
        "as someone with basically no cs experience prior to college, understanding a couple more complicated data structures was pretty challenging. spend 20 minutes going through the lecture slides before class and it'll be time well spent. vincent does a good job of telling the story of a data structure (going from an intuitive approach to a problem to the data structure's \"final form\"), which helps you appreciate the nuances a lot more. i don't regret taking it with vincent at all.",
        "This class is very structured, and the concepts are not very hard to understand. It's probably because our professor explained it well. Homeworks and exams have clear expectations and they won't be too hard if you actually studies it. Personally I learned a lot of different data structures.",
        "The information in the class was not difficult to understand, making the homeworks relatively easy for me. Though, the exams were quite hard. They require you to understand stuff more conceptually, making it harder. Luckily, the exams weren\u2019t weighted very much.",
        "This course is really useful and you will learn a lot. Vincent is not a great lecturer but just looking at the slides is enough to understand everything and do the homeworks. If possible take this course with Jesse Tov \u2013 grading policy is more lenient, better feedback, and don't have to take midterms with him.",
        "This course is fantastic, Vincent is one of the best profs I've had, he is fair and hard. He wants you to learn and makes himself available for his students. Make sure to not procrastinate on the HW's and prepping for the midterm and final.",
        "This course was good, especially considering it was online. The professor's lectures were great and was always available and willing to answer any questions that came up. The communication of course material was clear, and the homework was never too much work. There's also many office hours opportunities if you need help.",
        "Take this class with Vincent St\u2013Amour. Excellent professor, and he really makes the class material digestible. Not an easy class by any means, so be prepared to study and always go to office hours",
        "Vincent is a great prof and makes the material easy to learn. Overall not a lot of workload. TA's/instructors are really helpful on piazza/during OH which takes a lot of time off of doing the HW. the midterms arent that bad either. Material is really useful for CS technical interviews.",
        "this class is fine. the tests are much harder than the homeworks, which kinda sucks, but otherwise, it's manageable. the homeworks are actually pretty interesting too",
        "Great course. The lectures were very informative and Professor St\u2013Amour does a great job at making sure students know what is going on. What really helped were the homework assignments given every week, those assignments helped apply what you learned. The language use for this class is DSSL2 (using the Racket IDE) which is very similar to Python. I took cs150 and then this class and I felt very comfortable.",
        "As a non computer science major, I really enjoyed this class. Every other CS class I've taken before has been focused on learning how to code, which I found really tedious and boring. This class, however, isn't really about the code, but the data structures you build with the code, which was really interesting and made me think in a different way than I normally. Vincent is also a great professor and does a great job explaining concepts. The homeworks and midterms are not easy, but totally manageable if you start early and utilize office hours. The self evaluations kind of suck and lost me a lot of points, but you start getting used to what types of questions they ask on there.",
        "This course is really quite challenging. Its a clear step above CS 150/111, but also requires you to have done well and fully understood those 2 courses. The programming assignments are challenging, but luckily piazza and the office hours are easy ways to find help. These assignments makes you think about edge cases and complexity (how much time a certain algorithm takes), and you will be penalised if you don't do so. I feel like the classes are taught well, and the instructor is super open to any questions students may have. All in all, the class is a challenge, but it isn't too hard if you put in the time and effort to understand the material well, and thoroughly work on the coding assignments",
        "The ideas in this class are boring but honestly super helpful. I would definitely take this class before 211 because understanding data structures would be super helpful for the assignments in that class where there's a lot of structs and linked lists and such.",
        "Good class, definitely easier than 211. Amour is great.",
        "Honestly, this class was more difficult than I expected.  Complexity took a while to wrap my head around, and the lectures towards the end of the quarter were more challenging to me. However, everything you learn in this course seems really important and relevant to future CS classes.",
        "The lectures and slides were very informative, easy to follow and well taught. The assignments were fair with a lot of emphasis on creating adequate test cases that would be checked in the self\u2013evaluations.",
        "I really enjoyed this course, and I learned a lot. Vincent is a great instructor. He really wants everyone to understand the material, so there is ample opportunity for questions during lectures (but the lectures still don't get bogged down by people's way\u2013advanced edge case questions!).The Piazza forum was an invaluable resource to be able to get answers from the dozens of peers or instructors at any time you need. Take advantage of it!The homework assignments get longer and harder as the quarter progresses. Please please please don't procrastinate these until the last day! For a Thursday due date, I aimed to be done with my code on Monday or Tuesday so I would have plenty of time to build good tests and possibly further improve my code.",
        "Good class. Vincent is a very good lecturer. That being said, getting an A is kind of hard because of the trickiness of the midterms. I learned a lot and was challenged along the way. The class is WAY better than 211 in terms of difficulty and workload. You could do the hws in a day if you have to. But HW7 is not to be procrastinated. That one made me very sad. The TA's were very very helpful.",
        "This class gave me a good picture of the concepts used in coding. I have experience trying to perform small functions but this allowed me to configure whole systems with multiple functions working cohesively.",
        "This class is very rigid in what the professors expect from you. They are very unforgiving with any slight mistakes in homework submissions and don't really work well with you on that side of things. However, the course is actually very interesting and the concepts covered in it are incredibly useful. Just make sure to start Homework assignments early and go to office hours to get help early because at least during Covid, office hours were always swamped 3 or even 4 days before an assignment is due and you would be lucky to get any help from a TA if you weren't one of the first couple of people in the queue. This is probably because basically no collaboration is allowed in the class, so office hours are virtually the only place you can get any live help, which is not ideal at all. The course was actually enjoyable if you ignored what seemed to me as a horrendous class policy.",
        "I think the course was well\u2013taught but grading felt more like a chore than anything else because things were intentionally vague and grade deductions tend to be harsh. For example, a wrong line tag would give you 0 credits even though you had what was required. Exams sometimes had poor phrasing which caused misinterpretation but it could also just be a fact of fatigue from reading everything online.",
        "I felt as though this course was helpful in teaching about the core principle behind computer science, data structures.",
        "Overall a fair course. The tests were quite difficult. There were lots of office hours offered, so there were lots of opportunities to go and ask questions about content/ homework.",
        "The content in this class is very important for anyone in CS, and Vincent is a great professor and is able to convey it in an engaging manner that helps you learn. The homework takes quite a while to do each week, but really helps you learn the content.",
        "This class is fantastic! You will learn a LOT. After every homework assignment, I felt like I'd learned SO much. And Vincent is a great instructor! I loved how engaging the lectures were, and how helpful he was. He was great at explaining content, and while I would say this class was moderately difficult for me\u2013 I feel like the homework being challenging is what really ingrained the knowledge. It's a really interesting all\u2013around great class.",
        "There are so many algorithmic challenging problems that could be in homeworks, but you just straightforwardly implement data structures. This course does not challenge one intellectually. Almost no mathematics is present for the analysis of complexities. Exams often trick you and ask for edge cases.",
        "Was an interesting course that exposed to me several practices and uses within computer science. Very important class for future CS classes",
        "Data structures is one of the most important concepts in computer science and understanding its uses helps to not only code better, but write good code.",
        "The lectures are super amazing, and this professor does an awesome job of consistently fielding all the questions and all the content during class. The coding assignments were, in my opinion, fun and challenging. However, I disliked how there were times exams, and the grading is somewhat harsh compared to other CS courses.",
        "Vincent is an incredible professor. I think everyone interested in developing computer science skills should take this class. I feel like I learned how to think about programming in this class and approach CS problems in a different way than I did before. Truly a wonderful experience.",
        "This was an excellent course that was very well prepared and executed by the professor and TAs. The homeworks took up much of my time and could be frustrating, but if you started early enough, they weren't a big problem. The midterms seemed to ask some trivial questions that wouldn't be necessary to memorize as long as the larger concept was understood.",
        "Best CS class in the major.",
        "All of the lectures did a good job explaining concepts, and the assignments were all reasonable and not too long. The homeworks each have a graded self\u2013eval which could be annoying to get points off of, but in retrospect they were a good way to ensure good coding practices.",
        "Take this class with Vincent! He's super nice and great at explaining things. As long as you listen in lectures, you should be fine with the homework. The 2 exams were fine too as long as you go to lectures.",
        "You learn a ton in this class, really applicable stuff if you want to go into computer science and programming. However, I thought that this class was WAY harder than the ctecs made it out to sound. It's definitely doable, but this class is super conceptual, which can be hard to wrap your head around. The two exams are pretty difficult, and while the weekly homework aren't too bad, they definitely take some time and thought. This is by no means a bad class, and I did enjoy learning about important programming skills, but it definitely is not super easy.",
        "Office hours were available, which were very helpful for the projects. The midterms were definitely difficult and, in my opinion, did not reflect my understanding of the material. However, the projects made up most of the final grade, so it's easy to balance it out. The class was definitely difficult and time\u2013consuming, but if you took the time, you could figure it out.",
        "Okay. I wish he did more coding instead of just explaining all the theories.",
        "I think Vincent is a pretty good lecturer but is a stickler when it comes to grading. I think Jesse allows for some GSC tests to be run before the due date which would be nice, but from 211 experience I think Vincent is a better lecturer. I think the homework assignments weren't too bad, the slides are super helpful to be able to look back and think about what the data structure needs to do. I think it's a helpful class for non\u2013CS majors to take to help with their coding, as a non\u2013CS major it's probably the last CS class I'll take.",
        "214 is a really interesting class, and I feel like the time I put into it was worthwhile. That being said, it's also easy to feel overwhelmed, especially if you wait until the last day to start the homework assignments. The tests are also pretty challenging, especially the first midterm, so make sure to pay attention to lectures and ask questions if you don't understand something.",
        "Vincent was an absolutely amazing lecturer, and I was able to learn a lot from each class. The homework assignments (aside from the last one) also didn't take too much time, and I found doing them pretty rewarding. However, the midterms were difficult and required a very strong understanding of the material to do well on.",
        "Vincent is an incredibly passionate and engaging lecturer. Even remotely, he engaged the class by including polls and frequently asking questions, as well as hosting intermediate Q&A sessions to clarify any content. He's also always happy to stay back and answer any questions students may have. The tests were a bit difficult but went over the content well. The homeworks were challenging but doable, and were good practice.",
        "Great course, Vincent is a terrific professor",
        "I really liked this class.  I think prof. St\u2013Amour did a great job explaining concepts and assigning context to ideas as well.  Each lecture continued to build on one another and the homework\u2019s contributed to learning rather than just being busy work.  Very useful class for anyone doing computer science.",
        "You better learn how to test your code well else you're in for a long ride. This isn't 111,150 or even 211, Vincent is a stickler about testing, and he makes sure that if you cover all your code, the graders will. Great skill to have in the future but an annoyance in the present.",
        "This is a great class to take with Vincent, he really cares and his visuals for the data structures were very helpful in teaching me the course material.",
        "I learned quite many useful things in this course, but I was not a fan of the midterms that were full of tricky questions and constituted such a large fraction of the final grade. Maybe quizzes would've been better.",
        "I thought that Vincent made this class extremely engaging, and that his comment that he was our \"tour guide\" into these topics really set the tone for the class. Although I struggled with the exams on theory, I feel that I learned a lot more from this class than the other CS courses I took in the past. The material was presented in a digestible way, and the homework assignments were definitely do\u2013able with the information we learned. The short uses of each data structure in the homework assignments were all really interesting in their own right, but I felt that they especially prepared us for the final homework assignment. The lectures were synchronous and engaging, but I like how Vincent also was understanding of how students might not be able to make the synchronous lectures as well. Vincent definitely seemed supportive of students, and the Piazza and Office Hours provided a good opportunity to clarify concerns. I think that the course did all that it could to help students digest the material.",
        "The assignments were doable although you should probably start early. If coding is hard for you, the office hours were extremely helpful. The exam questions were also doable but very tricky, which is annoying."
    ]
}{
    "course_code": "Student Report for COMP_SCI_214-0_20",
    "course_name": "Data Structures & Algorithms",
    "instructor": "Vincent St Amour",
    "year": "2020",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.29",
        "count": "80"
    },
    "course_rating": {
        "mean": "5.10",
        "count": "81"
    },
    "comments": [
        "Vincent's the man. Lot of stuff thrown at you this class, but Vincent does a good job of making each individual lesson motivated and he's super solid on anything that might confuse you if you need a longer explanation outside of lecture. Don't underestimate the hws and exams (especially since losing 1 pt = losing 3\u20134% points. ofc, we lucked out with corona >:/ so the final and final hw didn't really stress me as much :P",
        "Great teacher, not that bad of a class if you like CS stuff",
        "Prof St\u2013Amour is amazing!! If you can take this class with him, do it! If you go to lectures, you never need to study from outside sources and get everything you need from the lectures. Everything is very well prepared, the hws are not hard, if you know what to do.",
        "good course",
        "This class was awesome. It is a lot of work but it is clear and honestly can be really fun if you like coding. OH were helpful as were the slides and notes. If you go to lecture and pay attention you will be fine.",
        "The regrading policy can be unfair with regards to correcting grading errors. However, the lectures and assignments are good.",
        "The first half of this course feels like a review of material learned in 111 and 211, but the second half introduces more new topics/concepts. Overall, it's fine. I was not a fan of how the homework was graded though. The assignments would seem very manageable, but when grades were released I was sometimes shocked/very surprised at how low my score was. I also really dislike the self\u2013evaluations. I think they are a good way to reflect on your assignment, but I think they are worth too much of the homework grade.",
        "finals cancelled due to corona... as a result this class was an ez A (midterm was pretty cake)",
        "Overall a good class. I found the class challenging, and some of the homework assignments were very time\u2013consuming. I would recommend going to Office Hours to get help on homework assignments.",
        "Loved the class. Vincent is the coolest professor I've had at Northwestern.",
        "Overall a great class and I learned a lot. Lectures were easy to follow and homework assignments are straightforward. Having Piazza and knowledgeable TAs and instructor (Vincent is great) definitely helped me succeed. Midterm was a bit less complicated than expected which threw a lot of people off \u2013 don't overthink things is the lesson to learn there. Also there was no final because of coronavirus but Vincent did a good job evaluating alternative options and making sure to update students and provide additional information. Great class, not as terrible as I heard it would be.",
        "Very good course that will teach you the fundamentals of data structures and algorithms.",
        "This course is great, and vincent is great as a professor. I highly recommend taking this class with him, I assure you you will not regret it. The homeworks are reasonable, but you still learn a lot. Overall one of the best courses i've taken so far.",
        "Solid course. The homeworks were fair, but the idea of having self\u2013evaluations later to see if you tested your code like Vincent wanted is kind of dumb. It's just another way to lose points on homeworks. Also, you can have a perfectly\u2013running code, but if it doesn't function in the most effective way you get a lot of points off (I got like 12 points off on a homework that ran perfectly fine and passed all the tests I wrote). Overall, though, I think Vincent is the way to go among all the other options.",
        "This was one of the most practical courses that I have taken at Northwestern thus far. I gained a much greater understanding of not only data structures and algorithms but also other aspects of computer science.",
        "Not a whole lot of work \u2013 a lot of the stuff covered in lecture isn't mentioned at all in homeworks or tests",
        "really enjoyed this course, very important for comp sci students and interviews. however, start the hw assignments early, because understanding them is key to knowing that you understand the data structures.",
        "Not a bad class, assignments are very doable, office hours help a lot. Very important in terms of practicality.",
        "Good",
        "Vincent teaches well, last project was kind of hard but otherwise good class",
        "Easier exam than Jesse. HW assignments are reasonable. Lectures are dry and sometimes he talks really fast and you just lost interest in listening",
        "Professor St Amour really cares about students learning, and is extremely knowledgeable about the material. He has engaging and effective lectures.",
        "Vincent grades exams rather harshly, you can lose a lot of points for minor mistakes. If you feel confident about your ability to be perfectly precise you'll be okay. Also watch out for those test cases",
        "This is an awesome course. It's required for the major but you really learn a lot. Utilize office hours. Vincent wants you to succeed, so ask for help if you're struggling.",
        "As long as you read the slides carefully and do all the homework assignments the class isn't too bad.",
        "Vincent is a very good professor and I learned so much from his class",
        "Homeworks could be challenging",
        "This class is not too difficult, especially compared to some of the other CS classes that majors have to take, and I found it more manageable than 211. Homeworks are most of your grade, and are just dense enough to force you to learn the material without being overbearing. Office hours are also a huge help if you get stuck, and the peer mentors are a great resource. Vincent is also a great instructor and one of my favorite in the CS department. He's also willing to help students and to meet with you outside of class if need be. Solid course all around, nothing to worry about. Midterm isn't too challenging either.",
        "214 is a strange course. You learn about data structures and some basic algorithms and yet for some reason there is an assumption that the students can't handle the math required for true understanding. As someone deeply interested in TCS, my outlook might be somewhat skewed, but I think this class should be made harder. Students generally rise to expectations, so expectations should be set high. I didn't find it worth attending lectures as I could explore the material at a far deeper level on my own in the same amount of time. That is more a result of how the course is structured in general though than how Vincent taught it. Vincent did great as always!",
        "Vicent is very good and teaching. His lecture and ppt are super clear.",
        "I cant internalize what Prof st. amour is saying.",
        "Professor was amazing and the material was interesting. Wasn't too hard.",
        "This course taught me a lot, and Prof. St\u2013Amour is a very good lecturer. His slides are very thorough and useful in following and reviewing what we learned, and what we were taught and assigned all made sense. The pace starts out slow, with an assignment every other week, but speeds up to one every week once we hit week 4.",
        "Can't really complain about workload or teaching at all. It's a pretty straightforward CS class that builds on 211 nicely. DSSL2 is a weird language and lectures get boring at times.",
        "Overall this was a really great class! The pace of the class is very manageable, with 2 weeks between many of the assignments. I also appreciated how willing Professor Vincent was to answer questions during lecture. However, taking all those questions occasionally left too little time to do code demos at the end of class, so I hope he can strike a better balance with that.Going into this class, I was a little bit worried about the math, but this class really didn't require much math knowledge besides knowing some basic discrete math symbols.",
        "Really liked this course, homework were challenging but manageable and reinforced the content in lecture.",
        "Love Vincent. He's such a great instructor and almost a friend to us. The only thing is that the grading of the midterm was a bit too subjective.",
        "This class would be great if it wasn't taught in Racket. Racket is the worst, and its syntax is the biggest pain imaginable. Slides were detailed enough that going to class was not necessary. The only thing there is that the lectures usually have to do with the next assignment, rather than the one due that week, which is unfortunate.",
        "This class was harder than I was expecting, especially the midterm, which was pretty difficult. That being said, Vincent is an excellent lecturer, and I really enjoyed the class. He clearly has a deep understanding of the topic and a passion for teaching, and he explains everything very well.",
        "Nice, fun course! Take it with Professor Amour!",
        "Solid data structure/algorithm class. Definitely learned a ton. Homework are basic and tests are fair as well. However, the grading of the exams is really strict. If you make some stupid mistake on exams, you can potentially lose a lot of points and there is no partial credit. Last but not least, always write more test cases for self evaluation.",
        "Not easy, but Vincent is a great professor and taking the course with him was great.",
        "I looooooved this class. It's one of the best classes. The class was insanely interesting. And for the first time I felt am learning computer science. It's not hard if you put some work and go to class. The exams and hw are not that hard (except for the last honework). I hiiighly recommend taking this class with Vincent",
        "214 is easier than 213 and makes you think like 211. I think Vincent is a spectacular professor and I went into this class expecting to a have fun; it didn't disappoint. This class is programming\u2013based. You'll use DSSL2, which is basically python except without all the fancy affordances and, you know, classes. You'll be spending your time creating data structures from class and then using each one in a useful real\u2013world algorithm (think quick searching or sorting algorithms). I found it better not to take notes and to just spend classtime listening to Vincent talk, and then return to the slides (which he always posts on Canvas) for review or for details.",
        "Vincent continues to be one of the best lecturers and teachers that I've had in a long time. The material moves quickly, but office hours are a WONDERFUL resource for this class, be it with Vincent himself or with the various peer mentors/TAs. It's a core class, so you kinda have to take it, but there is a lot to be learned and taken out of it if you put a good, faithful effort into it.",
        "Vincent is a pretty good lecturer. Homeworks aren't too hard and any problems with can be resolved in office hours. First half of the class is kind of deceiving on the workload as assignments are due every other week. Then the last 4 assignments are back to back and it ramps up a bit but is still manageable.",
        "While I could not comment on the instructions of the other professors, Prof. St\u2013Amour, in my opinion, is indeed one of the best.",
        "The professor's lecture is clear in explaining a complex data structure",
        "prof was nice",
        "This course was not too hard for an early curriculum CS course. They assignments could be a little challenging but were doable. The midterm was fine and  Professor St\u2013Amour is nice.",
        "This class was so fun! St. Amour was engaging andd enthusiastic in class, and worked hard to make big ideas digestable. Office hours were accessible. It's a big shift from the intro courses CS, far more conceptual \u2013 it took some getting used to but course staff was very encouraging and supportive as I got the hang of it",
        "Overall, this course was quite wonderful. I learned a lot about ADT's and how to implement them, and now have the knowledge to at least think about how to tackle real life problems involving them. Furthermore, I thought the need for test cases in our coding assignments was really nice, as it's something you need to do in real life. In previously classes you'd at most account for edge cases by saying \"if so and so happens, do this,\" but in 214 you actually had to check that if so and so actually happened your code would do the right thing.",
        "I learned a lot in this class. The hws progressively get harder, and while the last hw is very hard, and took me around 5 full days of coding, I learned a lot from it. I find the lectures to be pretty boring, which I think is due to the lectures taking 80 mins, while the material could be condensed into a 50 min lecture. I felt like Vincent was repeating himself a lot, which made it hard for me to stay focused and pay attention. I think shortening the lectures to be 50 mins would cause a higher attendance in class and enable students to focus and learn more.",
        "50% of grade split between 7 coding projects with no drops. 25% midterm, 25% final. Should go to lecture, a lot more is explained than just in the powerpoint slides, but they are uploaded to canvas. Take with Vincent if possible.",
        "If you\u2019re a CS person like me, this is probably the most important CS course you will take. The breadth of useful and interesting information in huge.",
        "St. Amour is a really good guy. He teaches clearly and moves at a somewhat slow pace but covers everything. The labs weren't too bad as long as you knew what was going on. The midterm was not super difficult."
    ]
}{
    "course_code": "Student Report for EECS_214-0_1",
    "course_name": "Data Structures & Algorithms",
    "instructor": "Vincent St Amour",
    "year": "2019",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.05",
        "count": "55"
    },
    "course_rating": {
        "mean": "4.58",
        "count": "55"
    },
    "comments": [
        "The course is not too difficult. A little bit more so than EECS 211.",
        "Fairly interesting and not overly difficult. Just go to lecture because that's really all you have to study from.",
        "lectures were well paced, students can follow",
        "In theory, this course should be somewhat interesting. but Vincent's tests were MUCH MUCH HARDER THAN THEY NEEDED TO BE. They tested your ability to apply the concepts learned in the class to other types of data structures that we hadn't learned about at all. Essentially the tests were catered towards people who had a wide background in CS, and not people whose only coding experience is in the classroom (of which I'm the latter). As a result, it was difficult to do well on tests even after studying a lot. Vincent is good at explaining concepts but lectures were too long (1.5 hours) and I felt like I got more out of going to office hours than actual class. there are 2 midterms and homework (worth 50% of grade), but homework is not a guaranteed 100% even if your tests pass. it's an okay class, but definitely gave me some stress towards the end of the quarter. if I did it over again, I would take this class with Jesse or Ian",
        "Very good class, all concepts are made very clear and if they are not clear then Vincent is willing to answer questions in class or outside of class.",
        "I personally thought Vincent was a great teacher and person. His tests are difficult, but he really cares about the content he is teaching. I took a lot out the class and added to my CS foundation. So positive experience overall.",
        "Vincent is a great teacher, he is funny and his lectures have lots of pictures and he tries not to go too quickly. He slows down when people are lost. Start the homework early, because they will always take longer than you think! TAs are extremely helpful and it is important not to forget the self evaluations because those are half the hw grade!",
        "This has been my favorite class so far as well as favorite professor (Vincent). His lectures are wonderful, as are the concepts this class teaches. The homeworks are fair and count for a pretty large part of the grade. Good buffer.",
        "Good class, I learned a lot, and the workload wasn't overwhelming. The grading was pretty difficult, with a 65% average on the final. This class can definitely sneak up on you if you aren't reviewing material often.",
        "Don't take this if you don't have to.",
        "Pretty solid data structures class. It provides a cursory glance at data structures, which you can then use in interviews.This is the first time Vincent has taught this course, and I think he has done a pretty good job. You can tell he puts in a significant amount of work outside of class to make things run smoothly during lecture.",
        "I found husband course very interesting especially since the concepts it teaches are so important to Computer Science",
        "Vincent's a great professor that is really good at communicating difficult concepts, but I feel like he made the class harder than it should have been. Projects aren't too difficult if you start early and go to Office Hours, make sure to submit your self\u2013evals on time. First midterm was fine, but second midterm was really hard. Make sure you READ THE DIRECTIONS.",
        "It felt as though there were not enough homeworks to get you to fully understand the material. Not only this, but the homework policy was at times ludicrous. 40% of your homework grade is based off of self\u2013evaluations that are simple yes\u2013no questions about your code, turning in a self\u2013eval late can literally lower your grade half a letter. You can do the homework 100% correctly and still lose almost half the points for it.",
        "Overall, this was an interesting course in that I strongly disliked the class itself, but loved the instructor, so it ended up being a neutral experience. Is too easy in my opinion; does a good job providing a survey of data structures but doesn't do much as far as useful application. Should be an easy A, but if you don't read the questions carefully or spend enough time thinking of test cases for the homework, grade will suffer. This section used DSSL2, which is easy to learn but doesn't provide any useful knowledge. As far as how the course could be improved, I would suggest using a real language and placing more emphasis on understanding than on testing. The second exam didn't go well for most people, which I believe is more the fault of its design than the students'.",
        "Not a terribly difficult course, but certainly not an easy one. There's a lot of information to learn, and toward the end it seemed to rush a little. Homeworks and first midterm aren't too bad, but second midterm is an absolute killer. Vincent is a great guy and explains things well. This was his first time teaching the class, so maybe he'll scale back the difficulty of the second midterm for next time.",
        "This course has two midterms and six homework assignments with 6 self reflections. Personally I thought the self reflections were dumb, they did not accomplish really anything because they were yes or no questions and if you were late or didn't do them were 50% of your grade. Vincent is the same as he is in 213 a good lecturer who gives the necessary information if you're someone who can pay attention in lectures, however he is very flat and kind of boring to listen to.",
        "I really liked 214.  It was interesting and most of the content was very applicable to real life.  Start the programs early!!",
        "Vince is the man",
        "This class is extremely important if you want to do almost anything involving software (both for on the job developing as well as the interview process). Vincent is a great teacher (a very nice person as well) and the TA's were fantastic so there potential to learn a great deal through this course. The only criticism I would have of this course is that the grading is done very poorly because the TA's would take points off for very arbitrary things.",
        "Course feels more like 111 or 211 in terms of homework assignments than 213. Much better than 213 for me! Hits a ton of different data structures. Homework assignments take a while, but are not assigned every week. Would highly recommend office hours for the assignments!",
        "Vincent gave me the big picture of the class really early on \u2013 his style is pretty no\u2013nonsense, and because of my interest in the class and the material, I got a lot out of it and was able to learn a lot, about DS&A, as well as computer science in general. The class was a lot of fun, the assignments require you to go above and beyond to learn, and the exams were not too bad. You learn a lot in this class and is definitely one you should pay attention to if you want to be a better computer scientist.",
        "This course provides some very broad info on data structures and algorithms. Professor St. Amour is a good explainer in general, but he isn't an expert in this field, and sometimes that makes things more difficult.",
        "Wish it was more clear what material would be emphasized during exams, since there's a lot of information we learn",
        "This class covers a lot of information. Lecture can be a bit dry but that\u2019s the nature of the material; Vincent is pretty much as good as they get in my opinion. Tears and assignments are both pretty tough.",
        "I came in thinking I would really enjoy this class, but Vincent made it so that this wasn't possible. His lectures were very hard to pay attention to and I found it more efficient and useful to go over the slides on my own after class. He also was very rude about giving any information about information about the exams and kept us in the dark about any information which means you are blindsided during the exam. I have heard this class is much better with other professors. The homeworks aren't too bad but the exams were very hard.",
        "Simple, easy, fun, and not too much info to overwhelm you, It\u2019s super important for future EECS courses",
        "Vincent is the best. Homeworks were short, not too challenging. Exam 1 was easy, exam 2 pretty hard. No practice exams which was tough. Slides were really organized and helpful.",
        "This course packed in a ton of material and was pretty challenging",
        "This course was good. the homework assignments did take a very long time. We had self evaluations due (that took approx 5 minutes) right after our HW assignments were due, and it was a little unfortunate that if we submitted these self\u2013evals late by even a minute, we were docked a huge proportion of our grade. THe instruction was very clear at lecture but lecture did move fast",
        "Extremely important class. Everything taught is very useful!",
        "I thought Vincent taught the class pretty well. None of the concepts were that challenging, but some of the homeworks were tricky and definitely took me a while to debug. I really found the self\u2013evaluations of each of the homeworks to be pretty useless though, and turning them in late (which is easy to do because they are so simple and Vincent doesn't remind you to do them in class) makes you lose like 20% on the assignment, which is ridiculous when considering that each homework assignment is 10% of your grade and the class isn't curved. The midterm wasn't too bad (and was mostly writing code, which he didn't tell us beforehand).",
        "Vincent is a great lecturer!",
        "This is a fine class, definitely not the worst one you will take in CS. Just watch out with Vincent, the exams require you to think on a level far beyond what he prepares you for",
        "As someone that took EECS 214 with both Ian and Vincent, I think you should definitely choose Vincent. You don't use C#, and the midterms are actually harder. However, because of the fact you use dssl2, you are actually forced to understand how the algorithms work and the geometry behind some structures and representations, which I think is better in the long run. Also, midterm II was brutal (average was about a 65 I think), so he had to change the grading formula."
    ]
}{
    "course_code": "Student Report for COMP_SCI_214-0_20",
    "course_name": "Data Structures & Algorithms",
    "instructor": "Jesse Tov",
    "year": "2021",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.18",
        "count": "103"
    },
    "course_rating": {
        "mean": "5.04",
        "count": "105"
    },
    "comments": [
        "The homework assignments allows you to constantly recall the learned material in a timely fashion. Let's you learn a lot, but you got to put in the time to understand the material.",
        "Nice class, Jesse's lectures weren't actually that hard to understand and they were very helpful.",
        "I love Prof. Tov. This quarter was even better than 211 so if you need to take either class I'd suggest taking this first. Prof. Tov did a really wonderful job with his slides, availability, and homework difficulties. Don't listen to people who complain, they never started their homework on time anyway :)",
        "This course is a really well\u2013taught CS course, and the information is very interesting and important to learn. Professor Tov did a great job.",
        "The content was pretty hard but this is a required class",
        "it was pretty good",
        "This class was not challenging for me, however I did take a data structures course in high school. I knew most the homework problems already and therefore it was not bad. Your grade is purely based on coding projects. I wish the class used an actual coding language rather than a language written by Jesse. With that said, the language is easy to learn, I just wish it was more applicable to the real world.",
        "The professor was very accommodating regarding remote learning and explained the concepts very clearly.",
        "Reviewing this course: I enjoyed taking this course because I think algorithms are cool. I have no idea what this course would be like for somebody who doesn't hear something like \"and so you store this whole tree in a single array and use math to access different elements\" and think like \"wow that's so poggers!!\" As a person who thinks algorithms are cool, I mostly wanted us to be doing more advanced and complex stuff than we were, but I don't necessarily know if that would be a universal desire. I liked the early test runs and forgiving late policies on assignments, because that stuff definitely helps me focus on learning instead of just panicking to get it done on time. DSSL2 is based on Python, meaning the line spacing thing is super annoying, but that's a personal problem. The impersonal problems are: 1) the language lacks complete documentation of several of its own important features, meaning if that if you miss writing down a bit of code in lectures and it works differently than Python, it's hard to figure out what you're supposed to do for some small bits of syntax + naming. 2) DrRacket lacks some nice features that really help with classes and structs and stuff, and I think the profs should seriously consider using VSCode or something as a standard IDE for the class.Advice for students: This is a somewhat mathier CS class, although you won't have to worry about doing too many actual math problems. Just be aware that this is way more conceptual rather than being more about learning a certain language. If you don't have a good grasp on recursion, we didn't really go over it in the lectures, and you need it for multiple assignments, so you'll need to find time to go over that with an instructor or by yourself. It's worth knowing there are versions of these algorithms and data structures available online if you get really stuck on something. Do your homework early so you can get the early test run, which will tell you if you did anything super wrong. Don't worry if your code takes a long time to run unless you hit the 60 second mark, in which case the grader will give you a 0 automatically (it's okay\u2013\u2013 you can resubmit the next day and still get a 95). I started every homework the night before, which was a terrible idea, but I did get an A in the class. You don't need to worry too much about having perfect style or being perfectly efficient, but you do need to write in many varied tests to make sure you cover all the relevant edge cases.",
        "Interesting Class",
        "The lectures talked about the basics of the data structures, but I feel like they don't really teach you how to implement them. I still had to learn some stuff on my own and go to a good amount of office hours. Jesse is amazing and super helpful for his office hours though. He is so nice that it made me feel bad if I don't do the assignments well.",
        "I felt like Professor Tov taught this course great. I had him for CS211 and was initially scared to have him again after surviving that class. I really enjoyed this class and thought it was taught well.",
        "This is better than Jesse's 211! Usually the assignments take less time, but the last 3 are HARD and time consuming. Especially the final project HW7, we had pretty much no guidance. It took people a really long time to do. It's also worth a lot more than the other assignments, which means that no guidance is especially bad. I would have preferred that we have an extra week to work on it; maybe you will in regular length quarters (we only had 9 weeks). My code ended up being 1000 lines long (and I had to come up with it all on my own because it was so open ended that the TA's all had different ideas) 1 week isn't long enough to do a good job on it. I started the day it came out and barely finished. Also the assignment pdf was terrible because it says the input arguments should look like x and y... if you don't have a class interface with the arguments (y, x) in that EXACT ORDER you will fail all the early tests (which use helpers that he never gives you so you cant replicate them). Why make such an open ended prompt if you're going to test so specifically? Failing the early tests is really bad because you only get them for each day that week before the assignment is due. I also spent a ton of time trying to fix some tests that I was failing on his grading site that actually should have been passing. Someone asked about those tests a day later and yeah they were broken and didn't actually do what they say they should do. I honestly preferred how in 211 we had infinite extensions on each assignment, and I am not a procrastinator. I sometimes failed tests that weren't part of the early runs and just felt discouraged from learning what I did wrong. Especially in the early assignments it was hard to tell what the tests actually were, they would just say \"Test 19 Failed!\" and that's literally it. Nothing about what that test was actually running. Now it's your job to fix it. Horribly frustrating. The slides were good and I like complexity, even though I still don't understand log time.",
        "This was a very useful course and one that I know will help me a lot in the future.  There is so much support in this class, and the TAs and instructors know the material and want to help you learn.  There are TA office hours every day and the professor was very available as well.  If you plan your time well and work ahead, this class will reward you and you will learn a lot.",
        "Really loved this class. Jessie is a great teacher, very good at explaining concepts. All the homework was pretty straightforward, just pay attention to the lectures and make sure you write good test cases for your code.",
        "Jesse is an amazing instructor.",
        "Not too tough. Lectures and content are interesting.",
        "This class is very good at teaching about different adt\u2019s and data structures as you get to write the code to create them yourself.",
        "Overall a very good course. Some of the assignments would have been a little unreasonable if I was less comfortable with programming, but if you ask for help Tov will give it to you so you should be fine, and he's also pretty reasonable with extensions. I'd rate this course a 9/10 based off of my experience.",
        "Teachers were super flexible and helpful if necessary",
        "The material is really interesting.",
        "I think Jesse teaches this course better than he teaches 211. It is also just an easier course. Each assignment generally focused on a new kind of data structure and I enjoyed working on a new concept each week because of that.",
        "Prof. Jesse's explanations of the more complicated algorithms and structures were great alongside the diagrams, and every assignment felt achievable with the information we were taught in class.",
        "I liked how the class was set up with only coding assignments each week. The codes def get harder as the quarter goes to the point where you could spend hours on it the night its due. The class material is very hard to understand but the codes are doable.",
        "This class is really interesting and you learn a lot! The class structure is amazing: one assignment a week and no exams. Thats it.",
        "Prof. Tov has developed a really awesome, supportive class structure. There's an abundance of office hours, 24/7 help via CampusWire, slides on Canvas, lecture on Panopto, and a forgiving grading structure. I think at one point Prof. Tov said , \"The only way you fail this class is if you give up.\" And I think that's really true because there are so many resources and prof really wants students to LEARN. Really amazing, wish every class were like this.",
        "It was a lot better than 211.",
        "Good class! Learned a lot. Try to get an early start and make sure you understand concepts as you go because they do build and you have to reapply concepts and functions, especially in the final project. Paying attention to lecture and taking advantage of help in office hours are key!",
        "I wish we had more time to digest the information we were given but the quarter system doesn't really allow that. I learned a lot in this course and the peer mentors were extremely helpful in guiding me through the homework assignments. I do wish office hours were handled better, there were always lots of people and you had to wait a long time to get help. The assignments were fairly easy but the final project was a bit harder because you had to put together everything you had learned in the course. Overall a great course and Professor Tov was a great professor.",
        "Class was good. Material was interesting. Teacher taught well. Assignments were reasonable. I wish the professor had spent more time focusing on how to pass the self evaluations for each assignment. I sometimes I submitted thinking I had tested enough but still missed stuff I didn\u2019t realize he was looking for.",
        "The language was very important to me. DSSL2 is such an increase from ISL in Comp_Sci 111\u20130/",
        "lectures are pretty engaging, homeworks get progressively more challenging so start early",
        "My favorite CS class that I have taken so far and Jesse definitely hits his stride in this class. Homeworks are generally not too bad time\u2013wise, allocate a little more for the final one, but they are all super interesting.",
        "Interesting and important content.Spent some time figuring out the language rather than figuring out the data structure which was annoying, but otherwise fine.",
        "this course is great to get an overall idea of data structures \u2013 definitely helped familiarize me with the different options. however, as other CTECs have mentioned, it is taught in a language that is not transferrable, so it's not super helpful for building the specific application skills. However, it's great for learning the fundamentals and Jesse is quite flexible and accessible as a profesor.",
        "all of this will be important in the future",
        "The course was difficult, but helped me learn. Overall I feel I would've done better with more introduction to the language and available libraries.",
        "The projects were the star of this course. They helped me develop a truly deep understanding of data structures. Professor Tov is also a compassionate, clear, and truly awesome teacher!",
        "Everyone knows this as the \"gateway to jobs and high level classes' class,and its easy to see why. The class, though not particularly challenging, especially in the beginning, introduces a lot of important topics in an extremely easy to understand way. I took the class with prof Tov this quarter and he was excellent. He is among the most engaged and enthusiastic professors I have had at NU. The homework is pretty easy but they really drive home the concepts from class, with the lectures giving us just enough to know what to do, but not enough to spoil how to do it.",
        "I liked the course overall. Jesse is an okay instructor, although I do think he goes off on tangents sometimes during his lectures that aren't related to the course material, and gives you a lot of information that you may not really need to know for the course. But he's really nice and is always open for questions. The course content is really useful and is sometimes a little challenging, but overall good course.",
        "I enjoyed the programming assignments; they are made in a way that presents a good challenge but also with enough guidance when necessary.",
        "The course material was very interesting, and not too time\u2013intensive on the work.",
        "This course is really helpful if you are interested in becoming a better programmer. The lecture goes through a lot of interesting material that helps you learn how to think about making good code with well thought out data structures. The lectures were informative and the homework was especially helpful as it taught you how to implement many concepts taught in lecture.",
        "The course challenged me to think more critically about how data structures work, and how they can make programming challenges easier to deal with.",
        "Jesse is really passionate in teaching and guiding the students to actually learn the material!",
        "This is a solid course. Not too hard not too easy. The homeworks take a reasonable amount of time and with the exception of the final project I never felt rushed.",
        "homeworks gave me weekly panic attacks, but i am also a non major and procrastinated so it depends",
        "214 is a lot of fun & if you plan on going into SWE/anything tech\u2013related post graduation, it's an essential class to take. If you take the class with Professor Tov, you use DSSL2 \u2013 which is Python\u2013esque \u2013 so the assignments are more focused on a high\u2013level conceptual understanding of data structures and not so much the technical syntax of a specific language (a la 211, for instance). Definitely easier than 211 & probably comparable in difficulty to 111.",
        "I loved this course. Every assignment was a different challenge, but there was always a feeling of excitement once I got my code working. I became more aware about complexities and data structures in this course and learned how to use the right data structures to solve the problem that I wanted to solve more effectively.",
        "This class was good. Many homework assignments are long and difficult, but time that's given for them and the late grade policy is generous, and TA office hours are very helpful. Jesse is great at answering any questions you have in class.",
        "Pretty organized, clear lecture from Jesse. Sometimes exceeded class time but only slightly and wasn't a big deal.",
        "Professor Tov does a good job teaching this class. The no\u2013exam setup because of COVID is a big plus. Assignments can be sort of tough conceptually.",
        "I struggled a lot in this class. However, I definitely received a lot of support. I think it s very clear that Jesse wants each of his students to be successful. The peer mentors and TA were great too.",
        "It was a straightforward course.",
        "\u2013Projects: The projects in the class were relatively easy (much easier than 211 in my opinion). Less so application of them and more so just simple implementation.\u2013HW: The only HW in the class are the weekly projects. Would have liked to see PSets that you see at other DSA classes at other universities. \u2013Lectures: Clean, well\u2013structured.\u2013Pacing: Just right. Keep in mind that projects will lag behind lectures a bit. (You learn one topic, then start a project on that specific DS, but lectures will move onto a different topic so make sure to keep up).",
        "Though it's another algorithms and data structures course, those it teaches are ones I haven't encountered in high school, so it is a nice next step after 111. The language, DSSL2, is a bit of a pain to learn syntax\u2013wise.",
        "Jesse was a fantastic professor this quarter and genuinely cares about everyone in the class. I thought he did a great job explaining the course material at a great pace (not too fast, not too slow). As well, he once went 30 minutes over his office hours time slot just to answer a couple of questions that I had about one of the assignment (ie. he cares). He was super understanding and lenient with late submissions (only a 3\u20135% decrease per day, I think) and gave extensions on the final when it was truly necessary.",
        "I thought overall it was a great course",
        "Overall I found this course to be structured and taught well. Jesse did a good job at teaching in the live lectures, although at times it was difficult to tell what information was necessary to learn and what was a tangent or just an 'interesting to know'. The homework ranged in difficulty, but for the most part the homeworks on the abstract data types were easily digestible if you understood the lectures; the last homework however was definitely a jump in difficulty having never done anything like that before.",
        "Very fun course, not very hard. All \"basic\" concepts, but you learn a lot about different algorithms and data types. Very enjoyable course if you enjoy solving puzzles and programming.",
        "This was a very good class. I learned a lot about important data structures and algorithms, and Jesse was a really good and knowledgeable instructor.",
        "7 coding assignments and 1 quiz, no tests which was very nice. TA office hours are extremely helpful and you can submit your homework early to see what grade you get on it and then fix it and resubmit until the deadline to make sure you get a grade you like. Part of your grade is testing for the right conditions so you have to create many test cases. Struggled at first because there wasn't much of a reintroduction to racket you kind of have to figure out syntax yourself",
        "This course is a well\u2013structured course that the contents are interesting and inspiring. But I think, the contents are especially challenging at the end of the quarter, since we have to flexibly apply what we have learned previously about data structure. That transition from theoretical knowledge about data structure to practical application is not smooth enough. I think, we may do more examples on how to apply data structures to solve problem before the final hw. Or, practicing more on our own may help.",
        "Great course to get an intro to data structures. DSSL2 is pretty much a less sophisticated python. Language is not that important anyway as the concepts are explained well.",
        "I thought this class was really easy. They gave all the algorithms for the homework assignments in the lecture slides, so if you're ever stuck on something, you could just look at the lecture slide. None of the homework assignments took a long time at all, and that was all you had to do outside of class."
    ]
}{
    "course_code": "Student Report for COMP_SCI_214-0_1",
    "course_name": "Data Structures & Algorithms",
    "instructor": "Vincent St Amour",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.20",
        "count": "64"
    },
    "course_rating": {
        "mean": "5.00",
        "count": "66"
    },
    "comments": [
        "I learned a lot and appreciated Vincent's teaching style, but I wish that the course was not in DSSL2",
        "This course is was for sure a step up from CS 111 and CS 150, but I enjoyed taking it so much. I feel that I have learned a lot and Vincent is incredible as a professor. Though tough, all the assignments are fair, especially considering the chance to resubmit for full credit. I also liked how the tests were formatted since I truly think that they assessed by understanding instead of pure memorization.",
        "Really good course with a really good teacher who I was lucky to have for such a useful class. On assignments and tests there is a high penalty for making mistakes especially if it carries over, but there is always room to bounce back. I failed my first midterm but got a really good score on the second one, so there's definitely the resources for you to improve in this. For people taking this later, this class is worth studying a lot.",
        "Definitely one of the fundamental courses in CS, all of the material here was super important to know. The course mostly comprised of weekly programming assignments (with a second chance resubmission), self evaluations, exams, and a final project. The programming assignments were pretty straightforward, as were the lectures and slides. Sometimes lectures did feel dry, and our exams were out of 20 points which can really hurt if you get a couple things wrong.",
        "This class wasn't very difficult (though some exam questions were challenging). However, I learned a lot and came out of the class much more confident in my coding abilities.",
        "This is an excellent course. I'm not a CS major, just someone interested in the subject, and found the class to be overall very accessible and fun. Vincent is a clear, enthusiastic, and kind instructor!",
        "Take this class with vincent! Stay on top of the homeworks and this class really isnt that bad",
        "Vince is OK. I attended all the lectures this quarter, but honestly I'd recommend skipping some and watching the recordings on Panopto, since sometimes they really drag on. The programming assignments are very easy. The exams are also easy but unfortunately constructed so as to punish you as much as possible for small mistakes.",
        "Great pacing and important info but Racket.",
        "This was a great course! Professor St\u2013Amour gives great lectures that really help explain the concepts well. The assignments were all very reasonable and helped solidify understanding of the algorithms and concepts.",
        "I LOVED this class! This was probably the best CS course I've taken so far. I was kinda nervous coming in because this was my first ever CS class with real exams, but it was actually such a nice experience. The class was challenging but in the best way \u2013\u2013 I genuinely felt like I learned so much, and it was never overly stressful. You really do come out of it feeling like you have the fundamentals you need to work with different data structures and write real programs! Vincent is super nice and one of the best lecturers I've ever had. I could watch his lectures once and actually understand all of the concepts without needing to review because he explains things in a way that's really intuitive, so everything just clicks the first time you hear it. I would 100% recommend taking this class with him if you can! He's also so enthusiastic about the subject, it really motivates you to want to learn more.If you did well in 211, this will be a step down in difficulty. Grades are based mostly on homework, plus two (very straightforward) midterms and a final project. The assignments and final can be a little tough if you're like me and never have time to start until the day before they're due lol, but they're definitely doable and pretty fun once you get the hang of it. As long as you watch all of the lectures and go to office hours when you need help, you'll definitely be able to succeed in this class! :)",
        "Really good way to learn common CS algorithms and data structures. If you have some previous experience with Python the coding assignments aren\u2019t too bad. The midterms were fair and it\u2019s not difficult to do well if you pay attention in class and study for the midterms",
        "Okay class. Vincent is nice and explains things very well. I kind of stopped going to lecture halfway through so I fell behind which is easy to do, so that's on me. The first half of the quarter was fine and digestible. The coding assignments are doable but not like 111/150 where you could start the day of and wing it. The first midterm was easier than the practice midterm but still a little bit tricky. After that the content in the second half of the quarter just got significantly tougher and so did the coding assignments. The final project was so hard and time consuming but had a good purpose. Not an easy A but the resubmission policy for full credit for the coding assignments is very nice.",
        "This course is quite challenging, so you don't want to fall behind. The professor is good at explaining concepts and passionate about the subject. Try to start assignments early.",
        "This is a great course! Not only is Vincent passionate about what he is teaching but he is motivational, kind, and you can tell that he wants you to succeed. First, I will say that office hours are extremely helpful, and I always went to them when I was couldn't get past a problem on a homework assignment. I typically left with working code. Next, even though in class I felt like I was just writing everything on the slides and nothing was really sinking in, through the coding assignments I gained a solid understanding of the data structures we were learning about, and the difference between ADTs and data structures. Further, the ability to resubmit your code after seeing what tests you failed helped me earn a grade that aligned with my understanding of the homework. I learned to test my code very thoroughly, as that was the most promising way to ensure that my code would pass the advanced tests. The midterm was really easy \u2013 I studied A LOT for it (probably like 10 hours) \u2013 but I could've studied much less and I'm confident I would have gotten a similarly high grade. Even though the material in this class wasn't particularly interesting, it felt good to slowly feel my understanding of data structures & algorithms grow with each homework assignment. Although one thing I will never fully understand is recursion.",
        "This course was extremely informative and I feel helped me to understand many concepts and grow my confidence in programming. It was challenging enough to be engaging, but not so much that it was overwhelming. You also get two tries on every homework, which takes the pressure off of learning things perfectly the first time. My only qualm with the course is that the lectures felt a bit slow and repetitive, which made it hard to pay attention.",
        "I'm glad I took this class\u2013\u2013it was a much more in\u2013depth look at data structures than I'd encountered in the past, and I learned a lot. I also thought the professor and TAs were remarkably helpful.",
        "Vincent is a good lecturer but not a very understanding person. His tests are only out of 20 points and are graded extremely harshly, which reflects poorly of students' understandings of the materials. He wants to trick you.",
        "This class was great. I only took 111 and 150 prior to this class, but was totally prepared. It's a step up from them for sure, but still relatively light work especially compared to what I saw my friends working on in 211. My advice: don't go into this class thinking it's a blow off (I definitely thought this before going in because of the CTECs I saw from other people). It's not a breeze, but it's definitely an easy A\u2013 if you just pay attention in lecture and do the assignments on your own. THIS CLASS IS DIFFERENT FROM THE OTHER 200 LEVELS BECAUSE IT IS MORE CONCEPTUAL SO JOT THAT DOWN, ITS DIFFERENT FROM LEARNING FUNCTIONAL PROGRAMMING LIKE IN THE OTHER CS CLASSES YOU HAVE PROBABLY TAKEN.The content of the class is straightforward and each data structure has an \"evolution\" that Vincent explains really well. In all, Vincent's materials for the course are AMAZING (you can tell he really put the time in to make it as easy and comprehend for this students) and he is also SUCH a good lecturer. Like, fantastic. His exams are also really fair. They're somewhat \"extend your knowledge\" type exams, which can sound intimidating because you're put on the spot, but it's so much better than having to memorize time complexities or small vocabulary (which I saw on only university's exams, don't know how those people survive) and you can succeed if you focus on the material.The only drawback to this class is that, around week 6\u20137, the data structures that you implement in the homework start to lag behind what's being talked about in lecture. This made studying for the final hard, because I had more abstract notions of the data structures and algorithms and didn't necessarily know how to implement everything (and didn't know if this would be on the exam!)Assignments: 5 coding assignments, week to work on, that had you implement a data structure and solve a simple related problem with it. There were also self\u2013evaluations that tested to see if you had good code design (i.e. did you test X case? did you make a helper function so that you didn't have to copy paste code? etc.) You got to resubmit code if it failed any tests so that you could get full credit, but you aren't allowed to redo the self evaluation. There were 2 exams, one in week 5 and one in reading week (kinda was not fun) but they were fair and you have plenty of time to finish them, as discussed earlier. The final project is a really long code component that combines everything we learned in the class (START IT EARLY AND GO TO OFFICE HOURS), and there's also a report along with it where you defend your design choices (but it's like, 4\u20136 sentences for each of them and is not designed to waste your time).Overall, awesome, I don't like exams ever but Vincent made them okay. Vincent as a lecturer is so slay. That is all.",
        "This is an important class. It was a little tricky to study for exams and the exams themselves were a hard adjustment after only having project based classes. The homeworks weren't ridiculously hard and most definitely helped with my understanding of each data structure.",
        "This class is very interesting in terms of the lecture content and homework assignments. However, the grading is very coarse\u2013grained. It is really easy for one small mistake to mess up your entire grade and this is especially noticeable on the midterms, the homework assignments that can not be resubmitted, and the quizzes for each homework assignment.",
        "Good course. Vincent is a really good instructor.",
        "The class is a pretty good introduction to data structures. The only thing to really look out for is that the final project is a bit of a difficulty spike compared to the homework.",
        "This CS course has helped me understand ADTs and how to apply them in real\u2013life scenarios.",
        "The most important class for CS majorsI now have a solid understanding of basic data structures",
        "It's definitely a huge step down in difficulty from 211 which was nice, and felt very applicable to real problems. Homework was generally pretty easy, but I tended to need to finish on the second try because of small errors. Luckily, the second try has no grade reduction which was nice. Lectures can sometimes be dry, but Vincent does a good job of making sure to go over everything clearly and making sure everyone understands. The final project was good, and really felt like the culmination of everything. The exams never felt unfair, but I was glad they weren't worth a huge portion of our grade.",
        "Really great class. Take this class with Prof. St Amour if you can!! His lectures are so good that I barely had to study outside of them to complete the homework, and I felt very prepared before the midterms.",
        "I thought this class was not too difficult; some aspects of the assignments were confusing but we have plenty of time to work on them. The lecture notes are also very helpful to look back on. 214 is definitely MUCH easier than 211.",
        "This class is extremely challenging, but definitely worth the effort!  Data structures are a very rich topic to learn about, and Professor St\u2013Amour does a fantastic job explaining them clearly and concisely.  Make sure to use office hours as much as you can and attend every lecture, since you'll likely need the help.  However, the foundational knowledge this course teaches you about coding and CS problem\u2013solving is worth the struggle, and as long as you can plan your time effectively, it won't be overwhelming to manage.",
        "This is a very good yet straight\u2013forward course. If you put in the time, you will get a lot out of it. Great prof who really cares about the subject",
        "Unfortunately this class was taught in racket which isn\u2019t practical but the theory was well taught and useful. Vincent is a great professor and is very approachable in office hours. Needed him to finish homeworks.",
        "You have to start early on things to get through this course. Don't leave the homeworks until the last minute and get help early in the week.",
        "Overall, I thought that this course was really well\u2013organized. Vincent did a great job explaining topics and clearly really cares about his students learning. The weekly programming assignments (two submissions possible) were very reasonable, and did a good job of reinforcing the previous weeks' material.",
        "This is an easy course because you don't really learn a lot. By the end most of a homework assignment was copying pseudo\u2013code given in lectures.",
        "difficult",
        "This course is jam\u2013packed with information and you'll have to put work into it, but it's 100% worth it. As a beginner programmer, I feel that I have gained so much knowledge over this quarter and improved my skills by a lot. I loved this course.",
        "Very good teacher, and homeworks and exams were very very fair",
        "Vincent was bad to students. I talked to him very little, but when I did one time he lied to me to get me to leave. He would be sarcastic and disrespectful to me.They made up a programming language to use in this course (data structures student language 2). The language was slow and buggy. It was poorly documented and caused issues. The language had no obvious advantage over other commonly used languages.Lectures were slow the material could have been covered in 3 weeks.Tests were poorly written.Homeworks were boring. They mostly consisted of copying pseudo\u2013code that was in a lecture slide.",
        "I thought the lectures and the slides were helpful and detailed. I liked all the visual examples and step\u2013by\u2013step processes. The homework wasn't too hard and I liked that we are given a second chance on it. The exams were also a bit challenging and only out of 20 points but fine. There are a lot of office hours.",
        "For someone who had/s a very limited experience in data structures, this course did a good job of introducing them. Sometimes felt like a lot (for the final project, it was difficult to go back and become familiar with all of them again) but it's doable. Projects are pretty difficult but you are allowed to resubmit once and get full points which was amazing. The grading still felt a bit harsh though since if *one* of the grading tests didn't pass, you would lose a good chunk of your grade. I felt a disconnect between the instructions for the weekly projects vs the actual grading sometimes (I would finish a project and be unsure if I did everything correctly).",
        "This is an important class to learn data structures and algorithms. The tests are pretty fair, but the all\u2013or\u2013nothing grading/the number of points on the exam can make it hard to get a good score even if you understand the material. The grading for assignments is really tough (failing one test could give you a 50%), but you get two tries to perfect your code.",
        "hard but not too hard, go to office hours, just assignment and 2 midterms and a final project",
        "I liked the course. Vincent was a good lecturer, answers questions well and makes sure that people are understanding.",
        "I really enjoyed this class, very interesting topic and fair grading system, hard but in a good way.",
        "Good course with good content but I hated the way that we had exams and the way that the grading for the exams had little to no partial credit even with questions with sequential parts. The homework took a bit of time but his 2 try policy makes it more flexible to fit into a schedule.",
        "This course was very interesting, and the professor does a good job teaching and being engaging during lecture. The content could get slightly difficult at times, but the assignments were not extremely time\u2013consuming, but they did require some help from office hours.",
        "Prof knows his stuff and explains things well. Lot's of self teaching. Easy to fall behind in. HW is out of 4 points so one small mistake will set you back a lot. Allows resubmissions which is nice but doesn't provide test cases so you have to kind of guess if you've fixed your mistake. Office hours are always packed and not enough TA's."
    ]
}{
    "course_code": "Student Report for EECS_214-0_20",
    "course_name": "Data Structures & Algorithms",
    "instructor": "Ian Horswill",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.45",
        "count": "112"
    },
    "course_rating": {
        "mean": "5.31",
        "count": "111"
    },
    "comments": [
        "Highly recommend taking this class with Ian. He's always willing to help and his quizzes are very fair. The assignments can be a bit challenging, but they do a good job at reinforcing the material. The TA's are also very helpful if you get stuck.",
        "Not only is this class maybe the most useful class in the core computer science sequence, it can also be pretty interesting. With Ian, you'll get a great lecturer who does a great job at keeping his classes fun and engaging without sacrificing learning and time devoted to answering questions. He listens closely to students and will then adapt what he's doing or slightly alter the class in order to accommodate for what they need to learn.",
        "Ian is a great professor and a great person, too. Definitely enjoyed taking this course. The homeworks are fair, and the exams are pretty straight forward if you attend lectures and study.",
        "Ian is great!",
        "Ian is great, and take 214 with him if you can.  I found the course content pretty interesting, and not that difficult.",
        "Ian really helps us learn while giving us enough freedom to explore. Please take it with him.",
        "The homework is very easy in the sense that you just have to copy pseudo\u2013code from the lecture slides and implement it in C#. It is very important to attend discussion section because it helps gauge how much you understand the lecture material and provides an opportunity for the TA to help you outside of office hours.",
        "Ian is a great professor, and he will always answer students questions in lecture. 10/10 would recommend taking this class with Ian. The discussion section are good review but felt pointless and like a waste of time sometimes, but they are a good time to directly ask the TAs for help with stuff. It's easy to get bored in lecture, since sometimes the pace is very slow and sometimes its blazing fast. Try to pay attention. Also, always apply for the extension. Test often. Overall, a good and manageable class.",
        "Prof \u2013 Makes class engaging and can make the dryest materials in the course interesting Exams \u2013 if you pay attention in class and do the homework correctly you can get an A.Homework \u2013 They range from holding your hand to giving you creative freedom for everything that you need to implement. Just make sure you account for each possible test case in your algorithm.Peer Mentors \u2013 Do your homework early, The peer mentors are more willing to help you if you do the homework early, and you do not have to deal with our peers.",
        "Ian is amazing; take 214 with him! start hw early please and go to office hours; the TAs rockkkkk",
        "This is maybe the most important computer science course you will take. The class finds a nice balance between abstract theory and practical application that makes you feel like it's the first real computer science course in the sequence. Learn this stuff well as it is important for almost all other classes down the line.",
        "Lectures are solid, quizzes are fair, assignments are interesting and good applications.",
        "Good class. Take it with Ian he's the man.",
        "214 with Ian is very straightforward. There are no tricks in the assignments or exams. If you follow instructions and keep up with the lecture slides, you will definitely succeed in this class.",
        "This course is awesome! if youre thinking of doing anything with CS, take it because you learn a ton of important things!",
        "It is great and not a hard class. Ian is good at explaining all the material in vivid and interesting way.",
        "As far as EECS classes go, this one is not so bad. The assignments are challenging but doable and if you study and pay attention in lecture the quizzes aren't that hard. If you have a lot on your plate in a quarter, maybe don't take this because there are assignments due every week and it is very easy to skip lecture and get behind.",
        "Ian is amazing! If possible, definitely take the class with him, he's interesting and makes class incredibly enjoyable during lectures, and even more so during office hours! The course as a whole is challenging at times, and does require a bit of rote memorization, but overall can be reasoned about and understood almost entirely conceptually. Do NOT wait until the day of to begin assignments!!",
        "Good introduction to algorithm and data structures",
        "This class was pretty easy with Ian\u2013 the assignments weren't too tough, but I did go to office hours almost every day, which definitely helped. It was pretty hard to do well in the class because the quizzes were tough and even though the assignments felt easy, it was easy to make a mistake.",
        "Good course.  Overall pretty easy. Ian is a good lecturer, but sometimes gets too dry and easy to pay attention.  My one pet peeve with this course is that Ian is really hand wavy with the proving algorithm time complexity, but I guess that prevents the course from scaring everyone away from CS. Keep in mind if you are a CS Major/Minor, you should take this course whenever you can, so you can start taking Technical Electives and Breadths.",
        "Pretty solid course. Ian is a good lecturer for a certain demographic that already has knowledge in CS, but he doesn't have the added skill of engaging those who are new to CS or don't have much background. That being said, the assignments are well designed. Wish there was more office hours, more TA help, and more EFFECTIVE TA help (many instances in which the TA's weren't very helpful)",
        "This course acts as the main precursor for those looking to heed internship opportunities. In essence, this course is the most relevant and useful out of the beginning EECS courses.",
        "Ian is incredible! 214 is (usually) the first course where you learn how to design algorithms, instead of just how to write them (as in 111/211). Lectures not always interesting, but always good to go for Ian; slides were very readable afterwards. Assignments were straightforward and built well on each other, although there is a jump up in amount of time spent on them for assignment 6. Visual Studio is absolutely awful but all the TAs and Ian were very forgiving and helpful in trying to get the stupid thing to work. Exams aren't necessarily easy, but they're very straightforward.",
        "Great course overall. I found the homework assignments to be particularly helpful because they often involved coding implementations of data structures, which helped me develop a deeper understanding of them. Also the lectures were very clear, especially the ones that walked through each line of code with diagrams/representations of the data structure to support them.",
        "Great class, great teacher",
        "This course taught me a lot about different data structures and how to implement them. However, I don't think I would be prepared quite yet to apply my knowledge to a real\u2013life coding project as we never went beyond data structure code in the assignments.",
        "Great course with Ian, probably best 214 professor. Assignments are clear on requirements, lectures are very useful, homework is appropriately difficult.",
        "This course covered some cool, useful concepts that I will definitely be using later on.  Ian is a solid professor and while the homeworks can be hard, nothing about this class is too hard. Be careful on the exams, there is more memory involved in some parts of them instead of actual thinking.",
        "This is probably the most practical computer science course within the base requirements. The implementations you learn are really interesting and although the difficulty takes a very noticeable jump towards the end of the quarter.",
        "I took this class concurrently with EECS 211 and it started out being very difficult to understand the syntax and data structures. But after awhile, when I went to office hours and asked the instructor to explain the concepts to me again, I really felt like I was learning new things.",
        "Ian is a great guy as always. Lectures can get boring and the slides often have mistakes from past years, and when he goes through every single iteration of a function call you wonder why you show up to class. BUT there's usually some good information and Ian loves to answer questions, so it's worth it. Homeworks are super easy, quizzes are generally easy as well with high averages.",
        "I really enjoyed taking this class. The way that Ian organizes the material so that it closely aligns with discussion and homework makes the class come out as very well\u2013taught.",
        "The course is one of the lighter cs courses in the requirements. The programming assignments are manageable and the course material is abstract but not horrible once you get the hang of it.",
        "Ian is a great professor and genuinely cares about helping his students to understand the topic. Data structures is a fun topic and class, the assignments are really not bad at all and the quizzes are very fair. Definitely recommend taking with Ian.",
        "This class taught all the essentials for data structures and how they worked. I believe that Ian covered things in great depth and the tests matched well with the content. The programs themselves are not very challenging or difficult",
        "Second exam much harder than the first. Make sure you study a lot for it. Start assignments early and don't forget to submit deadline extension forms like I did twice. OH help a lot with assignments. TAs and Ian are very nice and helpful! Beside the second exam, I really enjoyed the course; you learn a lot! Also, if you're using a Mac, I HIGHLY recommend you invest in parallels so you can go back and forth between windows and mac and not NEARLY as much lagging.",
        "Good class, would definitely recommend taking with Ian. His slides are super thorough which is awesome for homeworks/studying for the quizzes. Weekly homeworks are super manageable, and peer mentors are helpful. Quizzes are reasonable\u2013\u2013there's a lot of material in this course but he doesn't put the super in\u2013depth stuff on the quiz which is nice. Only complaint is VirtualBox, which we used to run Visual Studio for the homeworks if you don't have a PC. It's a complete nightmare and I definitely spent far more time trying to get it to work than actually writing the codes, which was really frustrating. Something to keep in mind if you have a Mac and virtualbox is used again next year. Overall I found this class to be super interesting, I feel like a learned a lot and would recommend!",
        "This was a great course and Ian is the best professor to take it with. C# is a very intuitive language that doesn\u2019t cause any weird complaints about other languages (allows you to focus on the actual data structures and algorithms as opposed to stupid syntax details). The homeworks are very fair overall, although the weight on the tests is a bit excessive. Overall extremely easy A\u2013, slightly less easy A.",
        "A pretty good course. Better than 211 and 111 by far",
        "Good class. Interesting and useful material.",
        "idk this is a good class",
        "It was a great class. Ian is a great professor. Some of the concepts can be tricky.",
        "I found this course to be incredibly interesting, as I am very interested in algorithms. Ian's lectures are well planned out and the assignments really help to ensure that I am learning the materials needed for the exam. There was no emphasis on learning C# for this course part from that it was the language that was going to be used for actually completing the assignments, which I appreciate. This class is very focused on the concept of algorithms and not the tools to implement them.",
        "Ian is an excellent instructor. He really wants you to learn the important things, and caters tests and homeworks to that degree. Tests are very straightforward, and the practice tests are very representative of the actual tests. There\u2019s no trickery, he tells you what you need to study and you study it and you perform well on the test. All in all, I will be taking more classes with Ian.",
        "Ian's class is absolutely fantastic. His lecture slides are extremely helpful, his assignments help reinforce the topics taught (and are not overly difficult), and he makes the course material interesting and enjoyable. This has been one of my favorite classes at Northwestern, and Ian only helped make this class enjoyable. I would highly recommend this class with Ian.",
        "I learned a lot of useful applications of computer science in this course, and feel that I am ready to use what I've learned in the real world. The exams are not super difficult because Ian wants to quiz students on the most important things and ensure that they learn the material. The assignments are long and often difficult, but if you ask each other questions, it is very doable.",
        "Ian is great",
        "Ian is a great teacher, the lectures are clear and thorough. My one complain is that the pace is kind of slow.",
        "Ian is a really nice guy who tries his hardest to make this stuff interesting, although some of it can really dry. It's not particularly hard stuff but the assignments help you understand the material. Note: getting parallels for mac is definitely a good decision if you can afford it.",
        "Very good course. Lectures can be a bit slow and boring, but it's very easy to learn on your own as there are so many resources online.",
        "EECS (which has been split up, so it's now technically CS) 214 was a great class. Jesse, Vincent, and Ian are all great with this class, so I think one will have a good experience regardless of which quarter they take it. If one is a CS major, then I recommend taking it by freshmen year, to be prepared for fall recruiting during sophomore year. This class is not so time consuming that it can't be taken with other hard classes, so I think it's fine to take EECS/CS 213 or 212 with it. 214 has some really interesting things to learn about!",
        "I think that the course was super helpful and all of the information I learned was valuable.",
        "Ian is an awesome professor! His slides are very helpful and homeworks are based off of them. The slides also help a lot with studying for the midterms, which are very fair and doable.",
        "Homework were very helping in learning data structures. Tests were very fair. Overall a very enjoyable class",
        "Ian makes this course great to take, even as a non\u2013eecs major",
        "Solid class. Ian is awesome. Really makes you understand concepts instead of just memorize it.",
        "This is a relatively dry required course but Prof. Horswill makes it intuitive and interesting",
        "This class ramps up the difficulty appropriately depending on the student's needs. A lot of time is spent covering the basics which helps later on when covering more challenging concepts.",
        "Ian is a great professor. His slides are amazing and easy to follow along. The course isn't too difficult, but it's really important to understand the material.",
        "I felt this class was very intuitive and interesting.",
        "I took this class for fun and do think I learned quite a bit",
        "\u2013",
        "This is a really good class to take with Ian. He has really good lecture slides and the assignments are really cool. Really applicable to technical interviews. 3 quizzes that are all doable if you study for them. Very chill discussion section every week but you will do most of the learning from doing the assignments.",
        "The class content was rather useful, connecting to a lot of things that were introduced in past courses and that will definitely be useful in the future. That said, if you plan on taking this class, MAKE SURE YOU GO TO LECTURE! The slides are uploaded, but things are explained really well in lecture, and so long as you do the homework assignments and pay attention in class, the exams will not be bad at all.",
        "Homework isn't really challenging, you have to memorize time complexities for the test. If you've taken 111 with Ian, it's pretty much that but a bit harder.",
        "Ian's great. He really knows his stuff, keeps lectures entertaining and doesn't overcomplicate everything.",
        "The class started off pretty easy but grew more difficult over the course of the quarter.  Still doable.",
        "This class was pretty nice and I actually learned a great deal from it. The homeworks aren't too difficult (looking at you 211) and if you're coming straight from 211, learning C# isn't a problem at all. You might need to google some things, but by the end of 211 you should have gotten used to languages similar to C. On average, the homeworks usually took me 3\u20134 hours, test writing included. All the solutions are included in the slides\u2013 you just need to implement them in C# code. You never have to write your own algorithms in the class, you just learn how famous algorithms and data structures work. You will need to use the debugger, especially because you'll be tested on how to do so (don't worry, the questions are easy if you've ever used the debugger). The earlier homeworks probably don't require the debugger but the later homeworks definitely will. I never went to office hours, Piazza was great help though. I'm sure the TAs are great; Ian definitely is passionate about the subject. Lectures could be a little dry but I have never had a computer science lecture that was 100% engaging, that's just the nature of the subject however.",
        "This course was very fun and low stress.  Professor Horswill was great and enthusiastic, the homework was fun and helpful, the office hours were super useful and plentiful, and the weekly discussion sections were nonstressful and informative.",
        "Definitely take this class with Ian. This class won't kill you but you'll still learn a lot.",
        "This curse does a good job of explaining the different data structures. The homework programs really do help to solidify your understandings of data structures. I did not feel like there was enough emphasis on recursive algorithms. I also do not feel like this course gave me enough precise with writing recursive functions. I took this class with Ian. He is very helpful when explaining concepts, and his slides are GREAT. The only downside to him is how boring his lectures are. His tests are easy, but if you mess up any one question that could be detrimental to getting an A. Good overall course.",
        "What an awesome class! Ian does a fantastic job teaching and sets you up to succeed. Homeworks can be somewhat challenging, but never impossible. The three exams are very fair. If you're willing to put the work in, an A is very manageable. At the same time, you also learn a ton beyond what other versions of the class might, for example, you learn about the A* algorithm, which is often taught in higher level level courses, so that's cool. TAKE 214 WITH IAN!!!",
        "This class is very useful and has actual direct applications to the real life and industry. Professor Horswill was always willing to help whenever necessary and his lectures are easy to follow. I would take it with him again.",
        "This class is pretty memorization\u2013heavy and it's pretty easy to do well in this class if you really study Ian's slides and test all your homeworks before submitting.",
        "Good, easy CS class",
        "It was good. Learned about important stuff like hashsets and graphs"
    ]
}{
    "course_code": "Student Report for COMP_SCI_214-0_20",
    "course_name": "Data Structures & Algorithms",
    "instructor": "Vincent St Amour",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.44",
        "count": "87"
    },
    "course_rating": {
        "mean": "5.14",
        "count": "88"
    },
    "comments": [
        "Great class. Vincent is a clear lecturer and the class has arguably the most valuable subject matter in computer science.",
        "I dont know if id enjoy this course as much as i did if it werent for vincent!! Hes such a good prof and seems genuinely excited about teaching, which makes class a lot more engaging! He also makes a lot of funny quips from time to time and just all around made data structures much more fun & interesting. Also he was super nice and helpful about questions!! I will say that this class isnt too much work and the material doesnt seem super difficult when u learn it but its def not an easy A because the exams are pretty tricky\u2014\u2014u have to have a good understanding of the content. Class content was very well paced though and i feel like that made it a lot easier to understand so i didnt really have to cram anything right before exams!! Learned a lot about data structures too which are super cool. Take this class with vincent for sure",
        "This is a very solid course that helps you learn the fundamentals of data structures. It can definitely have its moments of difficulty but Vincent makes the course very structured and organized to help ensure students can follow along. He makes room both before and after class to talk to anyone who has lingering questions, and throughout the class itself he answers every question that is asked and makes sure students understand what is going on.",
        "Take this course with Professor Vincent! I just had a great experience.",
        "Vincent was by far the best CS professor I've had, his lectures are very well done and I felt capable of completing the assignments after watching lecture.",
        "The homeworks aren't bad and neither are the midterms. It's overall pretty straightforward.",
        "Vincent is wonderful. I much preferred his instruction to Jesse's. The class really isn't terrible if you put in the time and go to Office Hours.",
        "Good class. Vincent is great. Probably the only complaint I have is that, for the self\u2013evaluations, you get graded a lot on your design sense, which is mostly just instinct early on in the course (at least, in my case). It helps you develop good practices though, and you can always ask the instructors about design choices.",
        "You don't have to go to class to do very well on the assignments but going to class definitely helps with exams",
        "I think the homeworks definitely helped you learn how to implement code, but I wish we had spent more time learning how to design before being thrust into it for a final project worth a lot.",
        "You definitely need to allot enough time to do the homework. Great professor who really cares about his students and wants them to learn.",
        "I am really glad I got to take this class with Vincent. He's a really great lecturer. I surprised myself because I felt quite emotional at the end of his last official lecture. He's really inspiring to me because of the energy he brings to this class. He also answers questions very well on Piazza. It all adds up and means a lot. You can tell he really cares about the class and loves to teach!",
        "I thought it was a great and informative course that challenged me and helped me think critically",
        "Overall, I thought this course wasn't too bad. Not too easy, but not too difficult. The lectures could get quite unengaging at times, but that's more of a byproduct of the remote learning experience. My only gripe with this course was that Vincent didn't provide us with any practice materials for exams, which made it really difficult to know what to expect because our only experience applying the concepts were in coding homework rather than exam type questions.",
        "This course is super well taught and extremely interesting and intellectually stimulating, without getting too overbearing with the busywork. Highly recommend.",
        "This class is pretty good at teaching you data structures. But it is definitely much harder than 211. Vincent is a nice professor but he is pretty harsh at grading. It is very frustrating that he takes so many points off on HW assignments and self\u2013evaluation. Although I think if this was in\u2013person it would be much better, I still felt very discouraged taking this class because of the heavy grade weight on each assignment. Personally, I think Jesse is more forgiving grading wise and understands if you are struggling.",
        "Overall not too hard, but the content is really useful if you plan to do any sort of programming in your life.",
        "I thought the course was very helpful, especially the section that connected what we learned in the course to the real\u2013world like showing us how we would be expected to use them in a job, etc. However, for exams, it would be better to have some practice exams or practice problems that could help us better prepare.",
        "The course was very challenging and demanded a lot of attention.",
        "Vincent is the GOAT. Don't wait until the last minute to do the last homework; I spent almost two full days working through it.",
        "Professor Vincent was okay, I didn't find him to be as particularly effective as people told me he was, but I think that's just more of a consequence of remote learning and differing teaching styles. I think remote learning made the class much more difficult than I hoped it would be, because I often found it much more difficult for me to seek help when I needed it. As a result I ended up getting extremely overwhelmed by the assignments towards the latter half of the quarter and didn't do as well there. For most people though, I imagine the class was much more manageable for them so take my opinion with...I guess a heap of salt?",
        "The exams were extremely difficult and did not reflect the material taught in class.  The homeworks were graded brutally, especially because no partial credit is given. Overall, the professor is very knowledgeable but was not very understanding of his students.",
        "As a CS major, this class is pretty important for getting job opportunities, and I definitely learned a lot of useful concepts. Even if some are review, the homeworks involve implementing data structures and algorithms so they really test your knowledge. Also, Vincent is an awesome professor who really enjoys teaching and wants the best for his students! He's super patient and willing to answer any and every question.",
        "I was hoping that CS would get better. But, CS kinda sucks at NU. This class cemented that belief for me. Vincent means well but the way in which he grades is unreasonable and his teaching style is way too slow and useless. Many of the things taught in class could be explained in literally 5 minutes. The 1.5 hour lecture blocks are much too long. Overall really disappointed in this class and my disdain for NU CS continues to grow.",
        "Data structures and algorithms really outlines how you go about solving problems in code. This is an essential tool to every programmer's success.",
        "This is a valuable class, in my opinion. The assignments did increasingly get harder, but weren't unbearable. Vincent is an amazing teacher, and very responsive to students when asking questions and expressing interest in other computer science\u2013related topics. The two exams were fairly difficult but again, not unbearable.",
        "This class is a crucial stepping stone for anyone determined to pursue their studies related to the field of CS. And honestly, Vincent was a both a caring and effective instructor throughout my quarter. He was able to clearly communicate the concepts during lectures, was very responsive on Piazza (the class forum), and made the accommodations for students outside the CST timezone regarding exams, lectures etc. A must\u2013take, not just because it's a core CS class, but also because of the content and way it was taught. Would definitely recommend to take with Vincent.",
        "This course was very useful and well\u2013structured. Vincent teaches the material very well and the homework are very useful and applying the information that is taught, however the midterm was very tricky.",
        "Take this course with Professor Vincent St\u2013Amour. He is great at teaching and cares about his students. This course teaches information that is critical to your CS career, so getting a solid foundation with a good teacher is important.",
        "I'm salty I got a 3/80 on the final project because I misunderstood a small part that ruined my entire code.",
        "Great course! The content is super interesting, and the workload was pretty minimal. 7 programming assignments, a worksheet + 2 exams.",
        "This was a really great course for learning about the basic data structures and how they can be used in computer science. It was really well organized and enjoyable.",
        "This was my favorite course I've taken at Northwestern so far. The content taught in this class is really vital for anyone wanting to pursue a career in computer science. I think all of the data structures covered were really relevant and Vincent is a phenomenal professor. His lecture material was really thorough and well organized and he always answers questions really well. Programming assignments aren't too hard and they really help solidify concepts through implementing them. Take the class with Vincent!",
        "This class is a nice step up from 211 in that it is an extension of much of the knowledge from that class, yet presents a workload that is much more manageable, in my opinion.",
        "Vincente is a really good instructor. 214 was also a tough, but fun course. Vince is very open to criticism and feedback, and there are a plethora of office hours you can go to in order to get help when needed.",
        "This class was decent. It's objectively easier than CS 211 so if you're like me and struggled a bit in 211 this one won't be as bad. The exams were a bit tricky, but the homework wasn't too bad and was manageable. Vincent's enthusiastic and tries to get lots of students to participate, which was nice.",
        "After taking the abomination that is CS 211, this course feels great. The material feels a lot more applicable, and while it's not taught in an industry\u2013standard language, it's close enough to Python that skills are transferable. Homework assignments take moderate amount of time, and exams are in my opinion, fair. DO NOT ASSUME THE LAST HW ASSIGNMENT IS AS SHORT AS THE REST. To be fair, you have several weeks to complete it, but it takes significantly longer than the previous ones.",
        "I enjoyed taking the class.",
        "Good class, professor teaches well and is nice, interesting material and I felt like I learned a lot and applied it to the homework. Tests were challenging since they were hard to study for, you really had to know and understand the content.",
        "This is a super interesting course. Vincent is a really good professor and he walks you through all of the material really clearly and goes over confusing things multiple times. The homework is fairly straightforward, but requires extensive testing, which is something we never really went over.",
        "This course was great. Data structures were covered in depth and in a way that made them easy to digest and understand, and the algorithms we learned about were useful and clearly presented. Dssl2 (the custom language that we did all of our coding in) was frustrating to use, and I'm pretty confused on why we don't just use a normal language that will be useful in the future. Vincent and the TAs were very helpful and understanding, and clearly put a lot of effort into making the class a good experience. I'm personally not a fan of the self\u2013evaluations (worth 20% of every hw grade), because they feel a bit mindread\u2013y in that if you checked something but didnt explicitly write a test for it, you lose a full grade (~3\u20134%), even if your code would have passed said test. It makes sense why they do it that way, but was annoying and detracted from my personal enjoyment/engagement with the class.",
        "Awesome class, take it with Vincent. Super fair, entertaining, and caring instructor. He really wants his students to learn the course content in a way that will prepare them for using it in life",
        "This class is challenging, but I learned a lot. If you can, take it with Vincent! He was an excellent teacher and is incredibly supportive of his students. It made the whole course easier.",
        "Ok course, didn't learn as much as I would've liked but I definitely learned some things. Vincent was nice, pretty good at explaining concepts, seemed very well adjusted to remote\u2013structured classes (never had any issues with zoom lectures, all went smoothly there)",
        "One of the easier CS classes you'll take. Vincent is an awesome teacher. One homework a week which are focused on what you did in lecture the week before and are not too hard.",
        "If you plan on getting a summer internship that has DS&A questions you need to take this course first. Unfortunately, it's in DSSL2 (which is python but not) so that means you still need to learn another language to get a job. I really hope that they switch this course to a mainstream language, but I doubt it. You definitely learn the structures because it's in this language that you can't find anything for on the internet. I took this course before taking 211 and it wasn't too bad. Make sure that you put a lot of test cases in your code because 20 percent of every homework is your testing.",
        "This course was really great for learning about different data structures and their possible implementations, as well as touching on the some useful algorithms that can be used to search and sort them.",
        "This course was fantastic! Take with Vincent if you can. He's the best.",
        "Vincent is awesome. Take the class for him, and listen during lecture because he makes the material interesting.",
        "This course was very good and I learnt a lot. Prof St Amour is amazing and patient and will spend time making sure that every concept is explained clearly. The workload wasn't bad either and all assignments were very doable. Definitely recommend taking this with St Amour",
        "This course is great at providing a strong understanding of common algorithms and data structures. After this course, I feel like my vocabulary has doubled! Vincent is also a very thoughtful professor\u2014a great lecturer but also good at answering questions and tailoring concepts to his students. While this can be a super challenging course, it was so important to my growth.",
        "Amazing professors and peer mentors. Easy and fun to learn",
        "I learned so much in this course and even enjoyed the content \u2013 Vincent is a great lecturer. However, I sometimes felt that he didn't care if students didn't do well and was unnecessarily harsh with grading. If you got one small thing wrong on the homework, it could lead to a terrible grade on it just because of the grading system. In conclusion \u2013 if you take this class with Vincent you will learn a lot but also keep in mind that it's hard to get a good grade.",
        "PLEASE DONT PROCRASTINATE THE LAST HW LIKE ME:). other than that great class, take it with vincent bc he's awesome. really cares about his students and teaching in general, you really can't go wrong. as a sidenote, don't expect this class alone to prepare you for coding interviews. this class will be a great foundation, you should understand data structures really well and this class is great for that. but you will need to do leetcode, its just a fact of life if you wanna be a swe. go ahead and get started w easy probs while taking this class if you haven't, the more time you have to get good at leetcode (it can take a while) the more youll get paid",
        "Vincent was a good professor. I struggled on the HWs at times but going to Office Hours really help me learn the concepts and complete the HWs. The midterms were also pretty difficult.",
        "This was a really interesting course and Vincent did a great job teaching it. The homeworks and exams seemed to be just the right difficulty to be both challenging and rewarding.",
        "St. Amour is a fantastic professor who is enthusiastic and knowledgeable about the course material. Concepts were introduced clearly and effectively, I had no troubles implementing them in the Homework Code each week. Sometimes I felt as if the self\u2013evaluation checks were a little unreasonable, but they are an extremely low proportion of your grade anyways. I found the tests difficult to prepare for (there were no practice tests provided), yet they were reasonable and had no curveballs. Overall, if you come to class and pay attention, you shouldn't have to do much more to get a good grade.",
        "Vincent is a great professor! The exam portion is a little tougher, because he really expects you to know the material well, but if you put the effort in, everything works out."
    ]
}{
    "course_code": "Student Report for COMP_SCI_214-0_1",
    "course_name": "Data Structures & Algorithms",
    "instructor": "Vincent St Amour",
    "year": "2022",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "4.63",
        "count": "84"
    },
    "course_rating": {
        "mean": "4.31",
        "count": "88"
    },
    "comments": [
        "It\u2019s a pretty conceptual course, so the programming isn\u2019t as intensive. We also get two submissions on our homeworks.",
        "This is a very extensive course that covers a lot of ground. It is mandatory for a CS major, so if that's what you're pursuing, you have to take it \u2013 and for good reason, it covers a lot of essential topics. Vincent is a pretty good lecturer, and his lecture slides are nice. However, the class was moving a bit too fast for me, and with so much information jam\u2013packed into 10 weeks, I really don't know how much has stuck with me. The coding assignments were fair, as was the project. The midterms are needlessly stressful, but not too bad. Overall, I think I felt intimidated as this was the first CS course where I really had no prior background, so each class was the first and the last time I was hearing about most of the topics. Thus, I wasn't completely sure of my understanding, and I had to refer to the lecture slides while doing the assignments. This may just be a personal experience though. Piazza was super helpful, be sure to use that!",
        "CS214 ended up, in my opinion, ended up far less stimulating than CS211 which I was taking at the same time. The class didn't seem to have the same energy level overall. Be it because classes were recorded and hence a lower attendance rate or other factors, engagement in the course seemed overall low and class performance a reflection of it. The TAs and PMs helped make the course more manageable but overall somewhat disappointing in comparison to to other CS courses I have taken so far.",
        "Vincent is an excellent professor!! His slides are fantastic and great to look back on, he explains very clearly at a good pace, and he is super open to questions (he even builds time to field questions into the middle of lecture). If you have to take this class, I highly recommend taking it from Vincent! Most of the work is 5 homework assignments. They are very doable, but do require some work. Each takes a good couple hours to code up, and they are all independent. If it lines up with other classes poorly I can imagine it being difficult, but that could be navigated with careful planning. He doesn't try to put you on a time crunch with the assignments\u2014you have more than enough time. All in all, I loved the class, I loved the professor, and it felt like a good balance between enough work to really learn the material while not having an unnecessary or heinous amount of work.",
        "Vincent gives very mean grades, especially in exams. A lot of trick questions to lower the grade.",
        "214 is the first CS course here that I struggled in. It's NOT a lot of work. The weekly assignments aren't particularly difficult. BUT the first midterm average was a 62 because the course material is hard. You don't need to be a good programmer to succeed here, but you do need to be able to a good computer scientist\u2013\u2013which is a lot harder.",
        "It gave me chance to learn more about the data structures.",
        "Lots of content in this course, so it moves very fast. The content itself isn't too bad, though, so just make sure you understand the content when you first  learn it, and start studying a week or so before the exam. If you do that, you'll be fine.",
        "Being able to learn about a new data structure or algorithm and then actually implementing it for an assignment really ensured that students became familiar with the new topic.",
        "The topics were interesting and the homeworks were helpful because they were directly connected to the data structures we were learning. The tests were a bit harder than I expected and I wished they were more application focused because I felt at times that it was more about memorizing the data structures than using them.",
        "Vincent is a great lecturer and the instructional team is phenomenal\u2013\u2013 all of them were invested in student learning and making sure that students actually understood the material. That being said, some tips for succeeding in this class would be to preview the resource beforehand, come to lecture to questions, and ask a lot of questions early on!!",
        "The data structures and algorithms course was fairly interesting, seeing as these were the basic building blocks to other more advanced programming fields.",
        "Very interesting class and very solid. Helps you improving your programming greatly. Challenges you in a good way where you dont feel overwhelmed but you feel stretched a bit. Vincent is AWESOME.. and the TA'S are great too..go to office hours if you need help",
        "Learned a lot from this class! Vincent is very open to answering any question and is really easy to interact with.",
        "I was surprised to see that there was a large dependence on mathematics in the lectures and not a huge focus on programming. The exams were also a bit unconventional as they were a lot more mathematical and conceptually\u2013based. Nonetheless, the class exposes students to a lot of material that they learn one way or the other.",
        "For sure a very helpful class for CS majors.  Learned a lot.  Good structure.",
        "I went into this class assuming that it would just be a class that I had to get done as a major requirement but now I realize that I thoroughly enjoyed the course and learned a lot. This course covers very unique computer science topics that I was not expecting. Very glad that I took this course with Professor St\u2013Amour.",
        "This class is definitely challenging and Vincent is a bad professor. Do not take this class with him. He is unkind towards his students and makes the class so much harder than it needs to be. As a CS major, I did learn and definitely challenged myself but I was constantly disappointed with Vincent.",
        "This class is great. A lot of helpful data structures and just a really fun class. I think Vincent is probably one of the best CS teachers and is great at this subject.",
        "In general, a good class. To me this was easier than 211, so in my opinion you can definitely take this first. My biggest problem with the class was that during the first midterm, we were not allowed to ask questions during the exam, and the average score was apparently much lower than in previous terms. I understand that covid makes it more difficult to give an in\u2013person exam, but I felt it was silly that we were expected to perform on\u2013par with previous terms when the exams were handled differently. Otherwise, though, the class was not too bad.",
        "CS 214 taught by Vincent was a great class. It got me to think critically about aspects of computer science which I previously had not stressed as much. The assignments were all fair, and there is a resubmission system implemented by the course staff which allows for fair evaluation. The tests are quite hard, but don't make up a large portion of the grade.",
        "Learned a decent amount in this class, particularly in the second half of the course. Vincent is very particular with definitions (make sure you don't get ADTs and data structures mixed up!). The first midterm was a bit odd with almost all multiple choice and short answers (no code), and the average was a 65. The second midterm was more standard. Lectures can be a little dry, and I felt that he over\u2013explained things sometimes. Make sure to add lots of test cases and check the assignment handouts very carefully. There are two attempts for each assignment, but self\u2013evals make up 20% of each assignment grade. Self\u2013evals consist of 5 questions, and each miss drops your overall assignment grade by 3%.",
        "This course is a great learning resource to prepare for technical interviews if you are going in the CS field. It only teaches you the different data structures and algorithms there are and how you can use them but not how to apply them to different technical question. Gotta do that on your own.Overall okay course. 1st midterm was not it but other than that assignments are pretty good. You get two chances to submit.",
        "It was more challenging than expected, so do not expect it to be an easy class.",
        "This course was a difficult class on data structures.",
        "This class is a little challenging in terms of the homework programs. But the two submission are nice. Vincent is also really helpful and encourages you to ask question, so he is happy to help.",
        "This course was much more challenging than expected. The content itself was interesting at times and indescribably fundamental  for the computer science major and developing computational thinking, however the exams are kind of tricky and it's easy to get a low score if you miss a couple of points. The assignments are mostly hard since you need to figure out the implementation of the theory by yourself instead of solely practicing a given code implementation on problems and examples. The project was also a lot of difficult, stressful work. The professor is good and if you watch the lecture videos carefully there's a good chance all of your questions about the concepts are going to be answered, however the amount of material and DSs covered in a week is kind of overwhelming and the pace is very fast, so if you fall behind a bit like I did, you're gonna have a hard time.",
        "The midterms are absolutely insane. Never have I been more unprepared for the exams. The content is merely brushed over in an hour\u2013long lecture and you are expected to fully understand the concepts for the exams which may require you to read hundreds of slides worth of material. The homeworks for this class is alright. They take a couple of hours each to complete but aren't too challenging. Overall, you'll probably learn the basics of DS&A, but Professor St\u2013Amour has extremely high and sometimes unrealistic expectations.",
        "This is a great course! Yes, it's challenging, and there is a lot of material. But you walk out of it feeling like you actually understand computer science at a deeper level than before\u2013\u2013beyond coding. I don't know what my grade will be for this course, but I think the grading was fair. Vincent is also very good at answering questions.",
        "The weekly homeworks aren't too bad so long as you go to office hours and spend a couple days trying to figure them out. Make sure to go over the slides, take notes, and go to lectures because the material taught will be fundamental for future CS classes.",
        "Overall I'm satisfied with what I learned in this class, and I definitely feel like I have a much better understanding of how different data structures can be used to solve various problems. However I'm not entirely happy with how the course was handled this quarter; for example, having the first midterm of the class be held without allowing students to ask questions during the exam seemed rather odd (and never before have I seen this done barring national standardized tests). To make up for this, questions left blank would provide 10% of their credit to the student, essentially discouraging students from answering if they were not completely sure of their answer, whether the answer be a complete guess or a 50/50 toss\u2013up answer. Again, never have I encountered a test that discouraged a student from answering, and though I appreciate the 10% score bonus, this did not leave a good impression. This midterm also did not have any sort of practice released for it due to the fact that it was \"a new format of midterm,\" which again seemed strange\u2013\u2013if questions can be conceived for the midterm itself, why can additional questions not be created for practice? The second midterm returned to a normal format while also having a practice released and allowing questions as well, but questions were still strongly discouraged in a manner that felt much stronger than appropriate.",
        "Vincent explains things very clearly, so the content is easy to understand. The weekly assignments are very much aligned with the content taught in class, so they are helpful in getting a tangible implementation of the concepts.",
        "In terms of difficulty, not too bad. The exams were pretty challenging and graded kind of harshly, but we only had two exams and they were only 15% each. The most important thing to do well on are the homeworks (50% of your grade). It is very important that you go to office hours, the PM's are all very helpful. We had 5 homeworks, one each week. In my opinion, homework 1 and 2 were very easy and do\u2013able. Homework 3 was a bit more difficult. Homework 4 and 5 were the most difficult. The final project was very time consuming as well, make sure you start it as soon as the assignment is posted.",
        "This class could be way better if it wasn't taught in a useless language. I understand why it's taught in a language where you have to build your own data structures and not in something like python, but it could easily be taught in C or Java and be much more useful. The first midterm this quarter was full of way too many trick questions, but the second midterm was alright. The homeworks are very doable, and Vincent's second try policy is very helpful because you can go back and learn how to create the data structure properly if you missed it the first time. Language aside, Vincent is a very good professor whose slides are well organized and whose lectures make sense.",
        "Data Structures with Professor St\u2013Amour was great overall, and you'll definitely come out of this class with a lot of important knowledge. I just wish that there were more preparation materials for the midterms, but the final project and homework assignments were very manageable.",
        "This course was organized very well and was very fair.",
        "The instructor for this course was highly engaging!",
        "This course is super useful and great to take. Vincent is a great professor. Keeping up with the material isn't bad at all. Overall, a great intro sequence class.",
        "Definitely take this with Vincent, his explanations are really clear and he is so helpful and nice in office hours. The exams are kind of hard, but the homework assignments aren't bad.",
        "Good class, with good lectures, good content, and good homework policy. If you're a CS major you have to take it anyways, but taking it with Vincent seemed to be a really solid choice. The content is also just very foundational to learn.",
        "Did not enjoy this course as I don't think it was taught in the correct format. The first midterm had insanely unclear questions and even though I felt like the content was easy, the questions were written to either ask about extremely weird details about the language e.g. one question was about aliasing in DSSL 2 and we had never gone over that in class. The other thing I thought was odd was that the way code is evaluated. If you fail even a single test from a category of tests, you lose all of the points for that category. Even if you got 15 tests right in the category and then got one wrong, you fail the entire category. Overall, I did not enjoy the course and am extremely happy it is behind me now. I think the topic is very important, but the way that the course is taught made it miserable. The median on the first exam was a 61% to reflect what I am saying ...",
        "Good class, I learned a lot. The homeworks are very doable but I still feel like I learned a lot from them. The exams were hard, so you need to make sure you study for them.",
        "I think the class is very enjoyable and manageable if you approach it right. The lectures are fast paced but very useful so if you pay attention and keep asking questions to supplement your understanding, it should be enough. The homework assignments are very useful in helping you solidify your understanding of the concepts covered so give them a fair shot on your own and use OHs. The exams aren't that bad if you understand the concepts and their nuances, the few days before an exam, reading and answering questions on Piazza is helpful.",
        "the first exam was stupid it was way too tricky and didn\u2019t actually test our understanding of the material. the course structure and assignments were good through",
        "Professor St\u2013Amour is very strict about coding and provide little lenience when it comes to partial credit. He really pushes you to fully understand the materials and practice the thinking of considering all edge cases as a successful programmer. I have learned so much, and many of the concepts and practices will be beneficial for me for future computer science work. Grading is not easy, but trying and pushing through is an rewarding experience! Also, hands down, professor St\u2013Amour is the best lecturer I have ever had at Northwestern. His lectures are always a joy to be at.",
        "The different data structures were super interesting and applicable",
        "This course was absolutely awful. The lectures were boring and the professor decided to give us all a midterm without giving any practice. We had no idea how to prepare and then he decided to blame us for not doing well. The average was a 60%. I believe that is a reflection of the teaching, not the students. While fast to answer on Piazza, the professor gave irrelevant help to any question and would be so vague that I left more confused than I came in. This is the only class related to software engineering in Northwestern, and it's sad that it is taught so well. 20% of our homework grade is based on a self evalutation where we have to indicate whether we made certain test cases. There was no information on what test cases to use, or how to make effective test cases. So really, 20% of my homework grade was based on luck. The professor is not understanding to any circumstances that you may have, and he simply does not care about you. I am honestly shocked and appalled that a class could be taught so poorly and with lack of empathy.",
        "I think the course had good material to learn. However, the execution of how the material was taught could have been done a lot better. For example, most of time information was given through just reading off of slides and giving generic examples. I think what would solidify those concepts (especially with regards to interview prep) is give us questions that apply those concepts. Additionally, some of the questions we were given were very intriguing to say the least. On an exam we were asked a question about runtime complexity that if we said what the \u201ccorrect\u201d answer was in an interview, I\u2019m pretty sure we would instantly be marked down on the interview (no longer be in contention for that position). Furthermore I think the teaching staff could put a bit more effort in the grading. For example, when grading the self evals, it is very possible to write the wrong line number but still have evidence of having the correct test cases and implementation. The fact the teaching staff said \u201cBecause the class size is too big, it wouldn\u2019t be fair to provide such regrade requests and review the code except for the lines given\u201d seems a tad ridiculous as it doesn\u2019t take too much time (given the grader sufficiently understands the material and concepts) to quickly scan over and see if the answer for the self eval was an accidental wrong like number. Furthermore, it seems like the teaching staff don\u2019t quite understand the material themselves. On piazza, there was a time where for a midterm question AND for a particular homework question, there was quite a disagreement in the answer as the teaching staff gave the wrong answers compared to the professor. Maybe this was just a one time issue, but still nonetheless a bit astonishing to see. Especially with regards to that homework question, I believe over the two weeks where the homework was assigned, people did ask for help on piazza for further clarification but those posts were all deleted. I\u2019m not completely sure if it was the teaching staff but logically if people are asking the same question over and over, it would make sense to provide a clarification post or something. Overall, the class had potential to be really helpful for interview prep as you learn a good amount of data structures and algorithms, but I think the class structure and execution could have been a lot better.",
        "This is a required course, and Vincent does a good job with it.",
        "Great class! Take with Vincent if possible! Super interesting, super do\u2013able, important class for everyone :)",
        "The topics were hard but interesting. The homework programs were a bit difficult, but you get a second try for each one. The exams are okay.",
        "Professor St. Amour is clearly extremely passionate and knowledgeable about the topic. My struggles in this class were due to, I think, a lack of understanding on his half of his students' prior knowledge about more abstract concepts in CS. The lectures focused extremely little on practical applications of the concepts, but most of our homework was actual coding, so it was very difficult to start. I did learn a ton from this class, but at times it felt difficult in an unproductive way, and a way that could have been avoided.",
        "This course teaches you a lot about ADTs, a theoretically important and foundational programming concept, but the way the course is organized didn't \"inspire success\" in me, it simply made me busy and have to teach myself some of the class material. We also did not have any practice exams for our first midterm, which hopefully will be different for future classes but for us really ruined the class average. Some fundamental concepts seemed to go largely misunderstood by the majority of the class, especially in the first half, and it sometimes felt that the students were being blamed when it seemed pretty obvious that it was a fault of the course instruction itself.",
        "Loved this course. Notes are extremely helpful and comprehensive, with useful diagrams and a healthy amount of details. Midterms are hard but not impossible.One negative: this quarter, the prof reworked the exam to make it easier for him to grade on his own. The grade for this midterm was substantially lower than previous midterms for this class. The professor blamed these lower grades on the students, even though the first time grades were lower was when he completely changed the format of the exam.",
        "This class was ok; it only went into basic data structures/algorithms, not nearly as much as I expected. Vincent is a thorough lecturer but it can be quite boring. Homeworks are pretty straightforward from lecture. The format of the midterms suck, sometimes they feel like they're testing you on whether you remember some offhand detail from lecture\u2014especially the first midterm.",
        "The course instruction was very clear and nice, but the exams were badly made because oftentimes they do not test true understanding \u2013\u2013 students who have a poorer understanding than you might get a higher grade than you due to pure chance and different interpretations about the question.",
        "This class was useful, and the projects we did were perfect for learning how to use the ADTs/data structures we learned about in class. The lectures were really boring, though.",
        "this was a difficult class \u2014 definitely harder than 211. Lectures can be a little overwhelming because Vincent goes somewhat fast and covers a lot of material in an hr and 20 min with no break. The homework\u2019s can be a little tough but office hours are really helpful. The week when the final project was due was also the same week of the midterm which made things a little tight so definitely work on the project ahead of time to give yourself enough time to study.",
        "I felt like I learned a lot in the class and enjoyed the content that I learned, however the grading in this class made me like it a lot less. Everything is out of such small points that any error really kills your grade. The homework programs weren't bad with the actual coding part since you got a second try, but the self\u2013evaluations were often very arbitrary and made it nearly impossible to get full credit on any of them. The first test was not a good demonstration of what we learned in the class and was 27 points no partial credit which really made me dislike the course because I felt super confident and interested during class and still got a terrible grade. I think if the grading policy was changed this class could be great because I think the content is super interesting, but I couldn't help but end up disliking it because of how bad my grade was even with feeling like a understood the material.",
        "It was a fine class, but the instruction was not super engaging. I imagine that if you don't find data structures interesting to begin with, you definitely won't after this class.",
        "In CS fashion, you are thrown into coding assignments without much preparation. The course concepts were delivered very understandably.",
        "This was a really hard course intellectually, and I thought I was falling behind half the time, but once I got to the final project I could see how much I have grown. My grades might not reflect that, but I did learn how to be a better programmer and how to think about coding.",
        "The class was really interesting and I enjoyed learning about the different data structures but the midterms were really hard. However, I like how tests are only worth 30% of your grade so even if you do poorly on them, you can still get a decent grade if you complete the homework.",
        "Class is easy if you pay attention in lecture and start the homework early. Also remember to write test cases for your code to not lose points on homeworks.",
        "You need this class for interviews, so please make sure you take this class during a quarter that you know you will put the effort in",
        "It's just a course you gotta take if you're a CS major. Not particularly fun in my opinion, although the workload is not high. Professor is super clear, and TAs/Professors are generally good at responding to Piazza. Office hours are helpful. You get two tries at each HW so no worries about making small mistakes."
    ]
}{
    "course_code": "Student Report for COMP_SCI_214-0_20",
    "course_name": "Data Structures & Algorithms",
    "instructor": "Jesse Tov",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.70",
        "count": "93"
    },
    "course_rating": {
        "mean": "4.61",
        "count": "94"
    },
    "comments": [
        "The homeworks were very helpful for learning how to implement concepts into code. Class lecture was helpful for understanding the different data structures and the general idea of most of the algorithms, but time and space complexity were very poorly taught. Very little time was spent explaining how to go about analyzing algorithms for complexity and the professor threw time complexities for different algorithms around in lecture without giving helpful reasons for them (the professor didn't go through many algorithms slowly to show how complexity analysis is done). Then a big part of the exams was based on time complexity. 7 homework assignments that could be done with a partner and very doable (take advantage of TA office hours), and two \"midterms.\" The second midterm was more like a final because it was cumulative.",
        "This is kind of a boring class. The exams were really tough, and so were a lot of the assignments (which you can have a partner for). I used office hours every week to finish the assignments.",
        "This is a straightforward class in terms of what topics are discussed but the tests I feel like didn't properly examine the students. I think that if you put lots of effort upfront the pay off is good.",
        "Jesse would hold wonderful lectures. I enjoyed the homework, but the test cases always got me... Probably should've spent more time on them, but all of my homeworks were due at the same time every week.",
        "Good course; If I could change one thing it would be to have the course in Java or C++ instead of Jesse's obscure language (DSSL2).",
        "Tov is a great professor to take this class with.  Homeworks weren't especially hard, and lectures covered material thoroughly and in a way that makes sense.",
        "Having survived Professor Tov's 211, I was initially concerned about taking this course. However, I found his instruction in the class to be excellent and clear. Additionally, the homeworks were extremely relevant and helpful in understanding course material. I felt prepared for exams and overall interested in the class.",
        "I definitely learned a lot in this class. Homeworks get progressively harder but the TAs are super helpful in office hours.",
        "A decent class. If reviewing material is important, take notes in class or have someone share with you because online slides sometimes do not make sense without Jesse's narration. The homework is not too challenging and gives a good opportunity to apply some of the principles learned in class.",
        "Jesse is not the best instructor for this course. His lectures were very confusing and they didn't prepare us well for the weekly coding assignment. You pretty much had to learn the content by yourself before starting the project. However, this class is very important, so I would advise you to take it with another professor if you can.",
        "This class was interesting to say the least, both good and bad. Jesse is a good lecturer, but the material during the lecture is so painfully boring, but it's really hard to make computer science interesting... The first exam was very very challenging, I think most people performed lower than expected, which is scary when the grade is 50% homework and 25% for each of the two exams. The TAs were completely necessary, some were a bit more helpful than others. This class seemed very geared towards people who have coded and have a wide background of CS, which does not apply to me and made the class a lot more difficult. That being said, Jesse is very willing to help or talk through homework or concerns about the class, so if I had to recommend a professor for this class, it would be with Jesse.",
        "i really liked this course! I wish i did better on the  final tho",
        "This course is REALLY helpful and you will learn a lot.  With Jesse though, we use the DSSL2 language, which he made up.  So, while you will definitely the theoretical concepts, you don't apply them to a language like C.  DSSL2 is based off of python, but with a lot of its key functionalities and functions missing.",
        "Good and very important course, tons slides needs lectures to make most sense so it is a pretty good idea to go to class",
        "Jesse is a good person and really passionate about what he does. He is also reasonable so if you're having any sort of trouble you should talk to him. That said, the course would be much more valuable and informative if instead of going over buzzwords in class, he took the time to carefully lay out the explanation. Often the material was extremely confusing, and I left the lecture feeling I had learned nothing. I probably learned more through youtube tutorials than anything else. Overall manageable as long as you work smart.",
        "This class is definitely challenging but it is very worth it. You could probably get a slightly higher grade if you took it with someone else, but you won't learn nearly as much. The HW assignments pretty much make you implement data structures from scratch, which really helps you understand what they do. It's not an easy A at all, but there are a ton of OH to help you succeed. I think it's a fair class (except our first midterm was really hard, but that was an anomaly), and the stuff you learn in this class will carry you through every CS interview!",
        "Not much to say; the class was good, I learned a good amount, the professor's good, all is good. But one thing to note is the make sure you have good test cases. Make sure to think of all the possible ways your code can break.",
        "I enjoyed this course. It built really well on what you learn in 211 and 111 and makes you think more about what's actually happening in the programs you write. I didn't think it was too difficult, the homework was doable with a partner and the exams weren't too bad.",
        "This class is hard, especially with Jesse. There are 7 assignments and one can be dropped. I would suggest dropping the last one because no one in the class could figure it out. The exams are also pretty hard. Jesse can be a bit intense at times but you will learn quite a bit.",
        "I really enjoyed the order in which we learned the data structures. Prof also gave us a great last assignment where we had to use many data structures at once, and choose which we wanted to use.",
        "Took this as a non\u2013major having taken 2 CS courses before. A lot of work, but learned a lot. I think most people's opinions about Jesse's teaching style can basically boil down to Jesse being too smart for us. It would've been nice if explanations were dumbed down a bit, but I appreciate Jesse's passion and enthusiasm in answering even simple questions with incredible detail.",
        "Do not take this course with Jessie. Beyond the uselessness of DSSL2, Jessie fails to prepare for lecture and is very condescending towards his students.",
        "This class hurt. The curriculum is some of the most fundamental in computer science, and it sucks that taking it with Jesse Tov meant learning none of it and instead crying over exams and weekly homework assignments. There would be brief, 2\u2013second periods of time during class that I would think I understood something and then Jesse just took it and ran. It's clear he teaches to a very select group of students (the ones who somehow just understand either as a result of being stupidly smart or having years and years of coding experience). I think this is super irresponsible though when the topics in this class are so important in future CS classes. Jesse never fully explains the basic concepts, he just shows a few slides and then starts throwing insanely complicated variations of them at you. The two exams were ridiculous, and they had short answer questions asking you to synthesize crazy concepts in regard to the real world \u2013\u2013 which is pretty impossible to do when I only know what I've been taught and have yet to enter the real world of computer science in any way, shape or form. The icing on the cake of this class was really the last two weeks though when Jesse assigned us the hardest, most complicated homework assignment over Thanksgiving break and made it due two days before our exam. But wait, it gets even better. After not having time to study because I spent countless hours on this assignment we get a notification the night before the final with Jesse's point system for the test. I kid you not I spent so much time trying to decode his POINT SYSTEM for the exam. So then while I take the exam not only am I trying to figure out the answers to his questions, I'm also trying to figure out which I have to answer to increase my chances of getting a good grade based on his riddle of a point system.",
        "I know 214 isn't supposed to be a \"difficult\" course in the CS department here at Northwestern, but I found this class to be pretty challenging. This was the first course I took with Jesse, and I can say for a fact that his teaching style isn't my cup of tea. I think his slides were often sparse, but going back to look over them was often a pain because I often had no idea what they were saying without additional information. He also goes off on weird tangents during lecture or includes topics that are more confusing and not as related to the main lecture topic that day. I found his exams to be quite difficult, especially the first one which was absurdly hard. I do know a couple of people came into this course with prior experience with data structures and algorithms and found this class to be a breeze, so I would suggest anyone taking 214 to learn some of these concepts on their own to make it easier throughout the quarter. It felt no matter how hard I worked, you could still do poorly in this class, and the undergrad TAs were not that helpful, especially for the last homework.",
        "This is a cool class, Jesse is definitely a great teacher. DSSL2, the language the class is taught in, is kinda obtuse but ultimately workable. That being said wouldn\u2019t recommend it to any non majors/minors definitely an intensive class.",
        "I loved the self testing that was introduced by Jesse. Learning to test out my own code was a valuable tool",
        "Midterms are hard",
        "Straightforward homework assignments, but the exams, especially the final, were less about the programming and more about overall concepts",
        "Difficult but interesting class.",
        "Take this course with Jesse. His lectures are super engaging and he gives a lot of real world examples and advice that will be useful far beyond the scope of the class. The lectures are more theory/broad\u2013idea focused while the homework is more application based, but it actually works really well since Jesse explains the topics in a very easy to understand way.",
        "I did not enjoy how Jesse taught this course. The material was easier to learn on YouTube. DSSL2 just doesn't make sense to teach the course in. It made writing code a pain in Dr. Racket, and Python would have been exactly the same, except better in every way.",
        "The work is manageable and helpful to learning. If you do every homework fully with your partner, the exams will be fine.",
        "The course was very reasonable in terms of workload weekly and exams given the amount of important information it contains.",
        "I liked this course, but it was very challenging and at times frustrating. Sometimes Prof. Tov was a little condescending when you didn't understand something. I did however learn a lot and the material covered in this course is very important and useful.",
        "I really enjoyed this course. The language, DSSL2, was written by Jesse, but it's really easy to use and is supposed to be similar to Python. Jesse is a great professor as well.",
        "Many of the concepts mirror 212 if you take that at the same time. Jesse refuses to use any of the usual websites that other profs use (like Canvas) which can sometimes be annoying. If you are a CS major, try to take this as early as possible.",
        "This is an adequately challenging, yet interesting class. Data structures is an important part of computer science and I believe that the planning of this course will leave the majority satisfied. The homework gradually becomes harder, but the pacing is really well executed. Jesse is an amazing professor. He really cares about his students and does everything he can to make the lectures easy and entertaining to follow.",
        "Jesse is an absolute hype beast. He genuinely cares abt his students and wants to see them succeed and provides them with as much opportunity to do well.",
        "Aight, so this class is interesting. I highly advise that you get yourself a partner that you know is willing to put in the effort. The assignments aren't horrible \u2013 they usually took me some time to wrap my head around, but other than the last one, they typically gave you pretty good guidelines. I highly recommend that you take advantage of office hours for the homeworks \u2013 they'll help you a lot. Make sure that you read the PDF for the homework very clearly \u2013 my partner and I definitely lost points a few times because we didn't read it clearly enough and made assumptions about what we thought the code should do in certain scenarios. When it comes to the exams (especially the first exam) \u2013 make sure you understand space and time complexity.",
        "Tov is really dry. Do not take this class with him.",
        "I believe Jesse did everything in his power to make this as painless but challenging as possible, but at the end of the day, you still have to wrap your mind around the concepts, which were difficult. It was also really difficult to keep up in lecture because Jesse speaks in a lot of abstractions.",
        "Being a Computer Science major, this course was crucial for me because it explains the underlying concepts of computer studies. The material was engaging and I enjoyed the challenge the coursework posed.",
        "I need to take time self studying a lot. Jesse",
        "Jesse does a great job teaching this class. He is lenient on the timing of assignments and will help you if you need an extension. The material is fundamental to a CS degree, and he clears up confusion about it. Some of the questions asked on assignments make it hard to get full credit, but if your code works, you will always get a 90 if you try to think of some test cases at least.",
        "I really enjoyed this course! The topics were interesting and super important. Jesse is a great professor and really cares about helping students understand the concepts. The assignments were not easy, but they were definitely manageable with help from the peer mentors/TAs and really helped me understand the concepts. I really appreciated that we could choose whether to have a partner or not for each assignment.",
        "It's definitely worthwhile taking this class to get an understanding of what and how data structures function (plus being a CS major requirement). Jesse does a great job covering this material without spending too much time on superfluous information. Although the language used (DSSL2) was difficult and sometimes frustrating to use at first, it's a fairly forgiving language when it comes to bug testing. I learned a lot in the course, and definitely think Jesse did a great job instructing it.",
        "Jesse made sure to address the material (data structures) he thought the class needed to know in a good amount of detail throughout the first half, or so, of the course. The majority of the homeworks tended to focus on a data structure that had been discussed in the previous week's lectures, so by the end you should know them and how they work very well. These homeworks can take a long time to complete so make sure to start them as soon as possible or at least allocate a good amount of time to them. Jesse's slides sometimes lack detail so taking notes may help, but not necessarily necessary as long as you pay attention to lectures.",
        "really hard tests homeworks good",
        "it was pretty cool, jesse is a character",
        "This class is required if you're a CS major. It's a pretty important class. With that all said, Jesse teaches it well, and he's willing to help you if you go to his office hours.",
        "Professor Tov has decent lectures but the overall structure of the course and its materials is not particularly organized. It was very difficult to understand how different data structures/ algorithms related to each other from lectures. Additionally, the language used (DSSL2) is not great and homework can take very long sometimes because of syntax level stuff. Exams are very difficult and require a lot of personal studying, the professor himself acknowledged that the first midterm was \"brutal.\" Overall, the content was ok but the structure just made everything more difficult and I barely passed.",
        "Definitely be prepared to learn a lot in this class, as it's pretty fast\u2013paced. The coding assignments are mostly fine (other than a choice few), and of course, peer mentor hours are immensely useful. Jesse was a really good professor, and he was always willing to help during his own office hours as well. He was also extremely responsive and attentive (always responding to Campus Wire posts), and provided extensions/wiggle room when the class as a whole really needed it. The course accomplished what it was supposed to in a manner that was not overwhelmingly difficult. However, the most challenging aspect of this course was the exams, which were both pretty difficult. However, given that everyone did not too great, people's grades should obviously be fine.",
        "This course was a rollercoaster. Grading is 50% assignments, 25% midterm 1, and 25% midterm 2. There are 7 assignments: each focusing on one data structure (the last one requires you to implement multiple data structures) Why was this class a rollercoaster? The first midterm was overly difficult and the professor did not release the scores until 30 minutes before the drop deadline. Assignments often were confusing and/or difficult and there would be random extensions and/or unexpected announcements an hour before the due date about having the assignment be droppable. The class is also taught in a random language: DSSL2. While I learned a lot and ended up doing well in the course, I'd suggest NOT taking this class with Jesse. Instead take it with Vincent or Ian who teach the course in C",
        "214 was a decent intro to data structures. This class should be fairly easy for most CS students with programming background. Lectures are a bit boring, Jesse's slides could be better, and I wish we used an industry language like c++, python, or c# instead of dssl2. Other than that, the class is fine.",
        "Unnecessarily difficult",
        "Pretty fair and easy course. Jessie is such a nice guy \u2013\u2013 always gives extensions if you need them and very active on the class discussion page. Tests are not bad at all, though Jessie really does like testing about complexity for some reason.",
        "This course was often frustrating as important material for exams and homeworks were not always covered well. The first exam did not use material covered in class and much of it relied on a topic that majority of the class was still very confused about. The homeworks were not too bad for the most part, but our final assignment was thrown upon us and even the TAs seemed confused about its implementation. Lectures often left me feeling confused about material covered as Jesse tends to go quickly and assume people understand.",
        "Tov's explanations are kind of obtuse and it takes a while to get acclimated to his ways of teaching. The exams are deadly; you definitely need to pay attention in class and go to office hours if you want a chance of passing. The assignments were likewise basically impossible to do without help from the TAs. Leif (graduate TA) is amazing in this regard. Tov likes to pull sneaky stuff like changing the parameters of the assignment or moving due dates around, or testing on stuff we haven't learned in class and making you figure it out on the exams.",
        "This class was a fun coding class! Some parts of the assignments were challenging so use office hours! And study for exams (you'll need to).",
        "Jesse can sometimes me hard to understand because he explains it like we are smarter but its fine, he is also very understanding in terms of like homework and exams, he wants to see his students succeed.",
        "Useful class, Jesse taught it pretty well, straightforward homework for the most part, DSSL2 is useful in the context of the class but not that useful as a general skill",
        "While the lectures could be a bit dry sometimes, the class was pretty good. Tov gets a bad rep for his 211 course but his 214 is actually good. The exercises are reasonable and scale up in difficulty over the course of the quarter. I've only taken a core CS course with Sara (111 and 211) and this was the first time that the exercises had me drag myself to office hours once in a while. This is also the first time I actually bothered to actually make semi\u2013decent unit tests.The only major warnings I'd give is that the course is taught with DSSL2, a Python\u2013based language built on Racket. This means you don't have the convenience of learning data structures in a common language like C# or Java. The language is also mad slow which is a wee annoying. Also the debugger is gone so get comfy with print testing (which is good anyway).",
        "This course was really good. Jesse Tov is a really great teacher for this class. The Homeworks helped me learn what we were doing in class. The topics got confusing so make sure you pay attention to all of the time complexity stuff. Jesse made a really hard last homework assignment that was super stressful but he tried to make the final easy to compensate for it even though I still failed it lolollll. Jesse is a pretty understanding professor though if you have any trouble or conflicts or anything which is super great and he's a great lecturer."
    ]
}{
    "course_code": "Student Report for COMP_SCI_217-0_20",
    "course_name": "Data Mgmt / Info Proc",
    "instructor": "Huiling Hu",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "4.67",
        "count": "45"
    },
    "course_rating": {
        "mean": "4.78",
        "count": "46"
    },
    "comments": [
        "This course was a bit challenging for me. I think it would have been a lot more manageable if I had a higher level of python/coding.",
        "personally, i think lectures could have gone more in depth on he coding exmaples",
        "Prof. Hu is one of the kindest and most dedicated professors I\u2019ve had at Northwestern. She still has room for improvement with regards to making the class more engaging and improving her verbal communication skills, but she provides very clear and detailed explanations on piazza and one\u2013on\u2013one meetings.",
        "I\u2019m not a huge CS fan but I thought the lectures were very informative and the assignments struck a good balance between being challenging and being good practise.",
        "The lecture slides were organized for the most part and the homework assignments were reasonable.",
        "I really liked the course because I liked Sql a lot. However, lectures were really boring and not helpful.",
        "This was a good course",
        "Course was nice. You learn SQL as well as some other database management languages. I personally liked the Pandas and json portions better. The second half of the class uses Python which would be helpful to know in advance. In lectures, she sometimes does live coding examples which were VERY helpful and useful. Prof is nice. She has a little but of difficulty communicating concepts sometimes but it's not that bad. Overall, good class :)",
        "The lectures are great as professor Hu is very good at explaining complicated topics in a beginner sense. And the homework is not too bad because it applies what you learn in lecture.",
        "The homework for this course was very helpful in continuing with learning Python. The SQL skills and lectures were also very valuable, but I think the other lectures sometimes felt a bit directionless.",
        "Loved the professor! Also glossed over how to do sqlite (not mysql) and python",
        "I had prior knowledge about CSV / JSON / Python so this class is easy to me \u2013\u2013 but otherwise, if you don't, this should be a good course to get you into the door, esp. cuz if you are taking this class, you are not a CS major.",
        "Both parts of this course were interesting and relatively easy (I do not have any experience with python). The lectures weren\u2019t super engaging but she tells you everything you need to know and the slides are good for reviewing. Some homework questions could be difficult and there wasn\u2019t much clarity offered at office hours, but comparing with classmates helped a ton.",
        "Great course with Prof Hu. She is a very thorough lecturer. Pace of the course is very manageable, and homeworks are easy. Exams were also low stress and representative of what we had learned in class to overall a good experience.",
        "This class wasn't too difficult. The first half is focused on SQL and the second half covers JSON, Pandas and NoSQL. I think the instruction for the first half was really clear and effective but in the second half I often found myself confused. Overall, if you put in the work to do the homework, you will do fine and have a basic proficiency in all of these topics.",
        "Learned what I expected, but more of a python focus after the first half the class than I expected",
        "I wish the lectures had been more engaging and easier to follow",
        "I really enjoyed this course. Professor Hu is really good.",
        "This is a very easy, enjoyable and practical course. I would highly recommend it.",
        "This is a pretty decent course. If you do well, its Ez A. But I felt like the lectures were really dry at certain point.",
        "Class wasn't too hard. Professor was nice.",
        "Very good class, homework isn't very difficult if you have a little comp sci experience, teaches you a good amount of python packages",
        "She was a pretty nice professor. The class isn't too difficult. If you try, you'll do fine.",
        "7 homework assignments, 2 quizzes, and exercises in class. Prof is very responsive and explains very well on Piazza. TA's hold really helpful OH. Learned a lot and would recommend to any non\u2013CS major. First part of the course is confusing, but once you get into SQL and Python it's manageable.",
        "Informative course, but not a whole lot of material for an entire quarter.",
        "N/A",
        "This class covered a lot of very relevant information and very practical info that is applicable to most work after school"
    ]
}{
    "course_code": "Student Report for COMP_SCI_217-0_1",
    "course_name": "Data Mgmt / Info Proc",
    "instructor": "Huiling Hu",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.35",
        "count": "34"
    },
    "course_rating": {
        "mean": "4.62",
        "count": "34"
    },
    "comments": [
        "For me, sql were the most important. The majority of the course was focused on sql, so I believe this was well designed.",
        "This class is great and useful. I think you just need to know how to google things efficiently and you will do well.",
        "Content was manageable but the instruction was extremely unclear and inadequate",
        "Unlike CS211, this course was less programming\u2013heavy, which I liked. There were at times when the professor struggled to get the right word choice during the lectures. However, the slides were clear enough to complement what was being communicated and it was clear that she was knowledgeable on the subject at hand.For future students considering taking this class: This course is not programming\u2013heavy, so homework will take you less time, which also means that the exams are not that long either.",
        "Easy class, good professor. Good intro class into SQL",
        "I was a big fan about how homework was weighted with respect to the midterm/final: 70/30. I had motivation to keep up with the material by completing the homeworks (office hours were always helpful) and it lowered the stakes heading into the timed exams.",
        "easy a no cap type of course, plus the stuff you learn is pretty useful",
        "I enjoyed the SQL unit a lot, but the class kind of fell off for me after that. I wish the homework lined up with the lectures more. The last homework had me feeling like I was just dropped in the deep end and it was assigned over Thanksgiving break right before the final.",
        "I did not know that much Python before taking this course, and I was fine with the help of a friend. If you don't know Python, it isn't a problem until about week 7, so definitely try to teach yourself before then. Overall, I learned a lot of applicable skills!",
        "This course is a good introductory level course.",
        "This course was adequate to gain an understanding of how to use DBMS technologies to manage data.",
        "I didn't learn nearly as much SQL as I was hoping to (covered lots of topics in not a lot of depth, more of a survey feel than I expected), but it gave me a good starting point to go and learn more by myself.  Lectures were sometimes a little unclear, but the professor is super nice and really cares about her students.  The class was easy to do well in, you have to put in some time on the assignments and material of course but the averages on assignments and tests were always around an A.  The professor was very responsive to emails and piazza questions and never used \"gotcha\" type questions on assignments or exams, everything was pretty straightforward.",
        "Really great and important class to take. SQL is a very up\u2013and\u2013coming language and will be applicable to a lot of jobs. Hu is sometimes difficult to understand, but she is always willing to help and clarify. Overall, class was very manageable and I learned a lot.",
        "One of the most useful CS classes and one of only a couple that teaches SQL. Unfortunately, does not count towards CS major, even though it covers a lot and is very applicable. Homeworks range from pretty easy to surprisingly difficult, be warned.",
        "Easy class, useful for learning different data structures."
    ]
}{
    "course_code": "Student Report for EECS_317-0_20",
    "course_name": "Data Mgmt / Info Proc",
    "instructor": "Stephen Tarzia",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.33",
        "count": "51"
    },
    "course_rating": {
        "mean": "5.06",
        "count": "51"
    },
    "comments": [
        "Overall, good class! All the homework assignments had a good mix of basic and challenging questions but I liked how everything was very doable.  This was one of the easier, more intuitive computer science classes I\u2019ve taken. Would recommend!",
        "Awesome and really applicable course with a cool final project. Wish we would have had the opportunity to learn more about the different SQL functions there are and how to use them.",
        "I felt the exams did not give me enough opportunity to demonstrate my knowledge so I felt like that was a little unfair",
        "This course was interesting at times, but the lectures felt slow: much of the content you have to learn by doing it yourself, so having it presented in a non\u2013interactive lecture format was often not engaging. The exams were very straightforward and only covered a subset of the material; the homework could be tricky but was fair overall.",
        "Pretty simple course. Tarzia was really great and recorded lectures which was super helpful. Tests are completely open note but I think there should be projects instead of midterm and final. Tests were basically code and you had to write the output which was more challenging for me than being asked a question and writing the queries myself.",
        "We focused heavily on learning how to do SQL queries which I believed to be very important as this is an essential tool as a data scientist.",
        "I think the topics covered were chosen well",
        "nice class",
        "good",
        "Very easy course",
        "It teaches me SQL and data scraping",
        "Super practical course in learning SQL.",
        "Super easy course for the most part\u2013\u2013final exam was unlike practice finals so be aware of that, but other than that it's a very manageable course. Weekly homeworks are not too hard and are very good for practicing. Final project was interesting and also not too hard. Would recommend this course, as it provides a lot of interesting information and valuable skills",
        "Great course for anyone looking to understand SQL in depth, and a great primer for something like a databases or distributed systems course",
        "The homeworks were challenging yet doable. All the material learned in this course was pretty practical and useful. The instructor was also always very clear on what you needed to know and takes his course seriously.",
        "Fantastic course. Tarzia is a great professor and the assignments really get you to think about the queries. The exams are both open note which is reassuring and the final project is a great application of what we have learned. Though this is a requirement, it may be one of my favorite classes taken at NU because of how useful the language is.",
        "I did not really enjoy many CS classes at all before this one. SQL made sense to me and Professor Tarzia was an excellent teacher and made it even easier to learn concepts in class.",
        "Good course to put in perspective how important and detailed data management is.",
        "Tarzia is a decently lecturer and reasonably nice. However, he really likes to trick his students on exams. For our final, he said that the exam would be the exact same format as the practice and past Finals, but the actual Final was very different. He also does this in EECS 343 with the midterm and the final. DO NOT BELIEVE WHAT TARZIA SAYS REGARDING EXAMS. HE JUST LIKES TOO MISLEAD HIS STUDENTS AND LAUGH VICIOUSLY AT OUR SHOCKED FACES DURING THE FINAL.",
        "This class rocks. Very practical and Tarzia is a beast at explaining stuff (rarity for anything computer related). It is incredible how virtually every assignment makes you more knowledgable. Def feel like this raises my stock for any job requiring business analytics, etc. Would love for Tarzia to teach other classes that were accessible to those interested in programming/computer skills but not meant necessarily for CS students. Love this man",
        "It covers most of the usage of SQL. Sometimes will cover other knowledge about data structure and big data.",
        "I think this course was interesting, although I would have liked to get more into the details of how databases actually work, rather than just focusing on SQL syntax which anyone can go pick up.",
        "generally easy if you come in knowing SQL",
        "Practical course, learning SQL which is very useful",
        "I am a computer science major who took this course for fun, because I wanted to learn SQL in depth in a more structured environment. The problem sets are pretty straight forward, the exams are pretty easy (especially since they are open\u2013note and you don't want to write SQL on paper; you just have to read SQL commands).",
        "It's pretty great!",
        "This class is really boring. Steve is a nice guy, but lectures are terrible to go to. He also records all of his lectures and puts them on Canvas so there's no need to actually go. The tests are pretty easy. The hws are poorly written and sometimes confusing, but mostly doable"
    ]
}{
    "course_code": "Student Report for COMP_SCI_217-0_20",
    "course_name": "Data Mgmt / Info Proc",
    "instructor": "Huiling Hu",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.09",
        "count": "32"
    },
    "course_rating": {
        "mean": "4.65",
        "count": "31"
    },
    "comments": [
        "If you're looking into going into data science, then this course teaches you a number of important skills, such as SQL and Pandas! The course is a pretty easy A. I would recommend it, particularly if you are not a CS major or you are a CS major who can't take CS 339 for a long time and can fit it in into your schedule!",
        "Taking this class online was very good but also bad. There is more work to be done and you have to stay on top of the material because of the weekly quizess. The exams were fair if you do the homework.",
        "This was a good course that gave a broad overview of data management and delved a good amount into SQL. The lectures were a bit hard to follow at times and the homeworks were very time\u2013consuming, but other than that, it was well designed.",
        "Pretty easy class. Well structured but I wish the Prof took advantage of the online format to deliver course content in a way other than lectures.",
        "A LOT OF WORK! I did learn SQL, which was the point of the course, but I also spent hours upon hours in SQLite and Jupyter Notebook trying to wrap my head around how to solve issues. I'd appreciate a little more hand\u2013holding instead of a \"figure it out\" mentality, at least at the beginning. I also agree with one of the commenters from last quarter \u2013 the latter half of the class takes a shift where if you didn't remember how to do Python, you're SOL.",
        "Taught me the basic of data science",
        "Ic\\ couldn't understand the professor",
        "This course is fine, nothing particularly interesting but also not very difficult. Lectures are pretty boring, just make sure not to forget about a quiz or homework as they comprise a bulk of the grade.",
        "N/A",
        "It gives basic knowledge of SQL and databases",
        "I came into this course with basically no CS background (just CS 110). It made the homeworks a little challenging, especially towards the end when we started doing Python. I took this class with the main intention of learning SQL and I think this class was successful in that. The midterm and final were not very difficult but the homeworks could be challenging and time\u2013consuming. Overall I would say it is an easy A\u2013 for someone with no CS background, but definitely be prepared to spend time in office hours for the homeworks.",
        "Good overview of data in CS",
        "Very very easy and important course for IEs. I cant comment on the professor's instruction but the material was very straightforward.",
        "Homeworks are worth a lot of the grade and are pretty difficult to do well on. Exams are fair if you prepare. limited flexibility in grade changes.",
        "I found this class to be very useful to understand databases and SQL. Workload was normal and I thought it was good overall. I found the slides to be the most useful resource.",
        "Useful class. Enjoyed the material.",
        "The class itself isn't that bad, but for me, Prof Hu is the worst lecturer I've ever seen. She struggles to explain the concepts clearly. The lecture is very hard to understand. That being said, I feel like reading the slides by myself is a lot easier to understand than attending the lectures. The only benefit of the live lecture is occasionally Prof Hu will do some live coding."
    ]
}{
    "course_code": "Student Report for COMP_SCI_217-0_1",
    "course_name": "Data Mgmt / Info Proc",
    "instructor": "Huiling Hu",
    "year": "2022",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "4.00",
        "count": "44"
    },
    "course_rating": {
        "mean": "4.52",
        "count": "44"
    },
    "comments": [
        "Overall an interesting class. Wish we had focused more on SQL",
        "Professor is sometimes hard to understand. Class is very manageable if you're like me and need to go to office hours to understand the harder problems. Second half of class felt rushed with lectures explaining the basics of Pandas, JSON etc. but the HWs were much more complicated. I learned a lot but felt frustrated at times.",
        "Learned a lot of interesting stuff. The proff is bad at teaching end explaining. Basically did this class asynchronous and taught myself everything but it was a good intro to all the content. Do not take if you have no knowledge of Python.",
        "Solid class not hard",
        "Sometimes the class is very dry, but the information in the class is quite valuable. SQL and database creation/management are very valuable skills, and they teach you how to thing about data relations. I think it gives a good amount of depth for those looking to learn about data but not totally fascinated by computer software/hardware.The HW assignments are pretty easy, and the exams are very fair.",
        "Lecture material is clear and homeworks are very reasonable (no trick questions).",
        "Really nice course to take. You learn SQL which is a very helpful language. Homeworks are the only thing that take time in this course.",
        "This is a good course, but often times the topics were presented at a very basic level and it was often necessary to Google things to gain a better understanding of them.",
        "This is a truly great course. HIGHLY recommend. It was very manageable and pretty much an easy A as long as you keep up with the material. The professor is very helpful and works to support her students as best she can. The time commitment for this course is also not very big. However, in order to do well on the second half of the course I recommend taking a Python course before this or concurrently with this.",
        "This is a solid course for databases. The homeworks were not too hard and were useful for implementing what we learned in class. SQL seems like a useful skill and the introduction to Pandas was also nice, but the other content was a bit in the weeds. Hard to follow lectures because of the professor's speaking cadence.",
        "While I did find certain aspects like utilizing SQL a good start for learning the language, the content itself was questionable in coherence as it jumps all over the place in terms of content. However, the course itself is relatively low effort and easy.",
        "Prof. Hu is very organized and responds quickly to questions on piazza. She gets her message across in class but isn't the best lecturer though",
        "Not the most engaging class but assignments and exams are straightforward with help offered.",
        "You learn a lot in this class and it is easy to do well in it but her accent made understanding the class pretty hard",
        "Even though it was a requirement for me, I would say that this class can be helpful for everyone. I have basic coding experience, but still managed to do well in this class. In fact, I would say that the homework assignments were fun to do. Most of the stuff you need for the homework is all in the slides, and the slides are really thorough and organized. The exams were super fair as well, as long as you do the homeworks and are caught up with lectures it should be fine.",
        "If you are someone interested in doing data science post grad, this course is really helpful and will set you up will for the coding part of some of those interviews. It can be a little frustrating at times around the exams because you don't get practice problems but as long as you review lectures and homework it is easy to do well.",
        "Good and easy intro class to SQL, Pandas, and database structures.",
        "The homework\u2019s were really good and we used real world data sets that reflect real life needs/are practical.",
        "The class was not too hard. Weekly HW assignments on class material that were very fair and exams were not too challenging.",
        "Two exams and the rest of the grades are assignments. Exams are fair if you pay attention, mostly interpreting code and understanding the underlying structure behind them. Good class for an intro to Data Science.",
        "I truly enjoyed the class a lot. I found most of the coding to be very intuitive, relatively easy, and yet intellectually stimulating. However, I must say I am a CS major so I guess that is also why I did not find the coding so difficult. This class does a great job at introducing people to a wide range of technologies at an introductory level and puts a higher emphasis on SQL, which I really liked since I had never done any SQL and now I can solve hard SQL problems just because I took this class.",
        "Prof. Hu is not a great lecturer. However, the course itself is not that hard and you will learn a lot.",
        "Homework are very helpful in understanding material."
    ]
}{
    "course_code": "Student Report for COMP_SCI_217-0_20",
    "course_name": "Data Mgmt / Info Proc",
    "instructor": "Huiling Hu",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "3.14",
        "count": "22"
    },
    "course_rating": {
        "mean": "3.33",
        "count": "21"
    },
    "comments": [
        "soft spoken prof, unexpected style of questions on final",
        "The material in this class isn't too bad, and the professor is very sweet, however the lectures are not very good. The professor isn't engaging and speaks very very quietly (almost impossible to hear what she is saying). You can get by fairly well without going to lectures.",
        "Overall, a good class! This course has given me an overview of many fundamental concepts of computer science. Professor Hu is a good teacher and she prepared the lectures very carefully.",
        "if reading blindly from the lecture slide is the only requirement for teaching this class then I am putting my hat in the running to teach it next quarter.",
        "Overall, the course is a very good primer in SQL and database management. It's extremely doable \u2013\u2013 all exams are open\u2013note and very straightforward. The homework assignments and project are pretty fairly graded as well.",
        "The beginning was easy for me as I had experience. The middle was harder but helpful. The last few weeks were pretty useless",
        "Would have liked some small homework assignments for the second half of the class, would have helped my learning to have an excersize to apply some of that information before the final project",
        "It's an easy A... But there's not much work involved in that easy A.",
        "This class is a very easy class and provides a good foundation for SQL. It also provides a good background into relational databases. However, the class does not go into sufficient depth on the usage of SQL. As the class does not use MySQL, the most common language, I am unsure how transferable the SQLite skills are to other SQL languages. Take it with Steve. Please take it with Steve",
        "material itself is pretty useful and easy enough to learn just from the slides. the professor doesn't speak english that well and mumbles through lectures while reading off slides. wouldn't really recommend taking with this prof unless you aren't planning on going to class either way",
        "Practical course",
        "This class is not interesting. SQL is a nice thing to know but other than that the material is pretty useless. The second half of this class shouldn't exist."
    ]
}{
    "course_code": "Student Report for EECS_230-0_20",
    "course_name": "Programming for Engineers",
    "instructor": "Jesse Tov",
    "year": "2019",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.33",
        "count": "12"
    },
    "course_rating": {
        "mean": "5.25",
        "count": "12"
    },
    "comments": [
        "If you put in minimal effort, review practice exams, and email Jesse for help, you can definitely get an A. Jesse can come off poorly to some but I thought he was awesome. He really put in effort to make us get something out of the class, even changing the language to Python for us, and gave everyone very detailed comments. He lost a lot of sleep to improve this course! It would've been nice to have some background materials or a textbook because I was never completely sure what we were learning. It was also difficult to organize this class since people learned at different rates, but I don't know how you could fix that aspect. I enjoyed the class though and think I got something out of it.",
        "It's a weird class, Jesse definitely tried to tailor it to his students, which was really nice!  On the flip side, I never really knew what we were going to learn in lecture, so that was a bit annoying. Also, I think Jesse's just so smart that he operates on another level sometimes and forgets that most people are pretty new to coding, so he'll use different notations or import new things without really telling us what those are and what they do, so that can be really confusing. Overall, I think Jesse's great, but the course should be more structured (idk maybe a guide with all the coding definitions of stuff we're going to learn? Something like that would have been really useful).",
        "Jesse Tov changed the course to teach us Python instead of C++ and it was a great call\u2013 much more applicable language. I think he did a great job of adjusting the course accordingly, just sometimes forgets we are beginners. overall enjoyed the class way more than expected.",
        "Tov is such a great teacher \u2013 he really cares about teaching what his students will use and so, everything we learned in this course (from python basics to unit test techniques) I feel like I will be able to use later on",
        "This class is great. I was taught Python and Jesse went out of his way to make sure everyone was on track and understood the material.  Nice to have left coding on the right foot after that MATLAB atrocity freshmen year.",
        "This course is incredibly unstructured. That being said, because it was quite unpopular, Jesse was able to focus on the needs of the class. We switched our curriculum from C++ to Python. I thought that the homeworks were helpful, but much more challenging than the exam. I felt that I also learned the most when doing practice exams. Labs were wildly unhelpful, but props to the TAs for being there for us. Jesse is very responsive, but sometimes can assume that the class knows a lot more computer science than they actually do.",
        "This class was great, Tov is so accommodating and is a phenomenal instructor and mentor",
        "I didn't like coding after taking EECS 111. But this course and especially Tov helped me start loving programming. If you're not a CS or EECS major, I would recommend you to take this course with Tov. He makes sure that the course is not actually about grades, but about students actually learning the material."
    ]
}{
    "course_code": "Student Report for COMP_SCI_230-0_20",
    "course_name": "Programming for Engineers",
    "instructor": "Huiling Hu",
    "year": "2021",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "4.83",
        "count": "18"
    },
    "course_rating": {
        "mean": "4.68",
        "count": "19"
    },
    "comments": [
        "This class definitely got me interested in Python a lot more. It focuses on the basics and was doable with little past coding experience.",
        "I learned a lot about Python. The last week is spent learning external libraries like BeautifulSoup and Matplotlib, which are really interesting.",
        "I really enjoyed this class. Because I don't have a strong coding background and I struggled with Matlab because it was taught at a very fast pace, I wasn't sure how I would do in this class. But the pace of the class is good and the assignments were reasonable.",
        "This course is doable by just reading the slides and completing the homework, but the professor is a very helpful resource and is willing to answer questions if they are asked. Taking the time to attend lectures can be valuable to the learning experience.",
        "youre gonna spend most of your time on the hw but it really is not a fun class. The first few hws are easy and then youre expected to be a CS major to do the rest.",
        "Great and easy class! Concepts are on the easy side, epsecially if you are confident from EA1, and learning Python was great. Homeworks were super fun to do and the professor put in an effort to ensure that all the topics were interesting to us and fun. I actually looked forward to doing the homeworks and wish I could do them for all my homework. Class was a bit too basic for me, but hey, that could be what you are looking for!",
        "Since I'm already familiar with Python prior to taking this class, I can't comment on how effective the course is at teaching beginners. The part on classes and objects might be a little overwhelming if you're not used to the logic. Towards the end of the course, the difficulty suddenly spikes with a VERY sudden dive into Matplotlib and BeautifulSoup4. The web\u2013scrapping portion with BS4 was quite challenging because I was wholly unfamiliar with the HTML structure and had to bodge things together based on like two examples from lecture.",
        "This course is pretty straightforward, you learn Python and Wei is pretty effective in teaching it. If you understand the fundamentals of programming you probably won't have to attend lectures regularly, but if you don't know programming well, the lectures definitely help. Homeworks take about 1\u20132 hours and that's the extent of the work you'll have to do during the week. There are in\u2013class exercises, but those take 5 minutes max if you do them in class and 15 minutes max outside of class. Exams are very easy (94% avg on first exam) if you do the homework.",
        "This class was a nice breather for my class schedule. If you've taken CS 111 or programmed in Python before, it'll be fairly easy but you'll also learn a lot from reviewing concepts in greater detail. Prof. Hu's passion and dedication to teaching shine through during the lectures, and she was so helpful in understanding homework and class materials. I'm excited to take CS 217 her as well!",
        "Great prof. Great class to learn basic coding",
        "I am very glad I took this and almost wish I took it earlier in college so that I would have a better understanding of computer programming in general. It comes in handy in a lot of engineering courses.",
        "Lectures are not great but they are optional and the exercises and homeworks are a great way to learn Python. I have a really great basic understanding after taking this class. Prof. Hu isn't a great lecturer but is very accommodating and willing to help. Would recommend as an easy but still useful class!",
        "this course was a pretty comprehensive introduction to Python. The workload wasn't too bad but I still felt like I learned a lot.",
        "If you have coding experience it will be easy. The professor was very organized which is appreciated. Great class.",
        "This course is helpful in learning the basics of python which is helpful to engineering applications.",
        "Homework was very doable and deadlines were flexible, super chill experience overall"
    ]
}{
    "course_code": "Student Report for EECS_295-0_1",
    "course_name": "Intermediate Topics in EECS",
    "instructor": "Sara Owsley",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.81",
        "count": "31"
    },
    "course_rating": {
        "mean": "5.55",
        "count": "31"
    },
    "comments": [
        "Taking this class concurrently with 211 was definitely doable, so can't speak to taking this class as a step in between 111 and 211 This class does not require much outside work if you are on task during the classes where you can work on the assignments. Sara is a great professor and knows SO MUCH about artificial intelligence and does a great job teaching Python.",
        "Very easy course.  It counts for me as an elective and it acted like an elective.  No exams.  Can easily be taken as a fifth course.",
        "This class is great (obviously) because Sara is the best teacher at NU. However.... I felt like sometimes I was trying to figure out the answer to the program by trial and error without really understanding what I was doing. overall though 10/10 as always.",
        "It was a great opportunity to see how basic AI concepts work in computing while still being very accessible to new programmers.",
        "This class is fantastic and I'd highly recommend it for anyone interested in CS or AI. I took it as a fifth class alongside EECS 211 and found it totally manageable\u2013\u2013you have time to work on assignments in class (and the peer mentors and Sara are around to help) and there's very little that needs to be done outside of class hours. You'll get a good intro to Python syntax and debugging and then play with some basic AI applications with some comprehensive starter code. Really, it's an easier class designed so that you can get what you want out of it.",
        "Pretty laid back CS class, Sara is a great professor and is always willing to help her students.",
        "A great class to take if you want to learn Python or learn more about coding in a low stakes environment. Class attendance was pretty necessary but the in\u2013class instruction never had me bored. I would easily recommend this course to someone who wants to learn more about computer science but not looking to pursue it as a career.",
        "Taking 295 and 211 worked out to help me understand coding concepts",
        "Relaxing yet learn a lot",
        "Sara is one of the best professors I have seen at Northwestern. She deeply cares about her students and was very engaged to both the class and students. The class was structured in a way that we had one day of lecture and one day of homework with mentors in class. Almost all the homeworks could be completed in class or be done by spending extra 1\u20132 hours outside class. Lectures were designed well but sometimes I felt like it was too much to learn and do in one day.",
        "I liked that it was all weekly projects it made it more focused on actually learning and practical application than assessment. Also lots of office hours made it doable",
        "Coming out of EECS 111, I wanted to see if programming was something I truly liked/a potential second major. Take this class if you're unsure about 211! This course is structured to have no exams, which was great because I was able to get out as much as I put in.",
        "This is an amazing course!! Sood is a fabulous professor and is so enthusiastic about Python and Artificial Intelligence especially. There are no exams in this course \u2013 just weekly assignments. However, she allots ample class time to work on them. I learned a lot about the basics of Artificial Intelligence, so if you're interested in that subject at all, take this course!",
        "Great class. Definitely take it if you want to learn Python. Sara is great, and the material is actually super interesting. Also it's an easy A since it's all assignments so it's a no\u2013brainer if you're undecided on whether to take this class, just take it.",
        "Very fun class and learn a lot. Sara is very helpful and a great instructor.",
        "This course was super interesting.  I feel like I learned a lot that will be helpful to me moving forward, and the process was not stressful.  We focused a lot on understanding and learning for the sake of learning, which was a nice change of pace.",
        "Excellent class, very well taught and not too much work outside of class, but you learn a lot of important CS concepts. Perfect for a non\u2013CS major trying to learn more about Python.",
        "A truly 10/10 class. The assignments are interesting and the lectures pair well. Time is allotted in class to work on assignments. It's really a course where you can decide how much work you want to put in; equivalently that's how much you'll get out of it.",
        "Despite not being a class requirement for EECS students, I learned more from this class than 111 or 211"
    ]
}{
    "course_code": "Student Report for COMP_SCI_295-0_1",
    "course_name": "Special Topics in CS",
    "instructor": "Jesse Tov",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.75",
        "count": "8"
    },
    "course_rating": {
        "mean": "5.00",
        "count": "8"
    },
    "comments": [
        "Most students who attend this course will have to take it since they could not pass the preliminary CS exam. But no matter how bad that sounds, once you go through this course, you'll feel why it was necessary as the \"design recipe\" both the in instructors have come up with will be useful all throughout your career. I used to dread this course in the beginning, but as the course went along, I eventually started enjoying the process of writing code (good ones to be honest) from scratch.",
        "I find this course to be very helpful in understanding how to write efficient code along with how to design an effective and a good design recipe for any problem. This helps in breaking down the problem to easier bits and dealing with them in a more organized way.",
        "You will spend an enormous amount of time in this class. I would definitely recommend starting all homeworks as soon as possible. Also utilizing office hours will always help a lot. The course did teach me a lot as resistant as I was to take it in the beginning."
    ]
}{
    "course_code": "Student Report for COMP_SCI_295-0_1",
    "course_name": "Special Topics in CS",
    "instructor": "Robert Findler",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.25",
        "count": "8"
    },
    "course_rating": {
        "mean": "5.00",
        "count": "8"
    },
    "comments": [
        "Most students who attend this course will have to take it since they could not pass the preliminary CS exam. But no matter how bad that sounds, once you go through this course, you'll feel why it was necessary as the \"design recipe\" both the in instructors have come up with will be useful all throughout your career. I used to dread this course in the beginning, but as the course went along, I eventually started enjoying the process of writing code (good ones to be honest) from scratch.",
        "I find this course to be very helpful in understanding how to write efficient code along with how to design an effective and a good design recipe for any problem. This helps in breaking down the problem to easier bits and dealing with them in a more organized way.",
        "You will spend an enormous amount of time in this class. I would definitely recommend starting all homeworks as soon as possible. Also utilizing office hours will always help a lot. The course did teach me a lot as resistant as I was to take it in the beginning."
    ]
}{
    "course_code": "Student Report for COMP_SCI_295-0_1",
    "course_name": "Special Topics in CS",
    "instructor": "Daniel Linna",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.69",
        "count": "16"
    },
    "course_rating": {
        "mean": "5.63",
        "count": "16"
    },
    "comments": [
        "This was a really interesting course! There is so much going on between technology and the law, a lot of which I had never thought about before. This course assumes no background knowledge in law, which is good because I came in super curious but a little nervous that I was going to be really lost. Overall pretty easy course and interesting topics.",
        "I liked the format of the class. The weekly readings can seem like a lot at first, but they get shorter as the class goes on. I am going to say that I don't like Perusall (the platform where you do the readings). It basically calculates a score for each reading based on your comments, but it's never quite clear on what you lost points on. Everyone in the course pretty much scored around 2.4\u20132.6 out of 3 points for each reading, which is essentially full credit, but when the scores are reported on Canvas, it incorrectly messes up the grade you have so far, so it's hard to know where you are exactly in terms of points. Besides that, awesome class, both professors are incredibly smart and promote a comfortable Zoom atmosphere. We also ended class 40 minutes early every time (it's a 3 hour class that meets once a week).",
        "Great readings (short and you have to annotate so everyone really reads them and has good conversations on Perusall), a great mixture of assignments (debate, presentation, paper), and the actual long seminar once a week flies by because they switch between lecture and small discussion and everyone was generally interested because the class was filled with interesting topics and the profs were so knowledgable and passionate.",
        "Great course! Awesome teachers who are super knowledgable and willing to help you learn. If you are at all interested in technology, take this course! I feel like every CS major should take this course.",
        "This class was incredibly interesting and covered a large range of subject material. I feel like I am leaving the class with a lot of applicable knowledge and a greater understanding of the technology environment that is awaiting me after graduation. I would definitely recommend this class!",
        "gr8 course!",
        "Overall, I had a good time in this class. I learned a lot about how different technology and legal fields clash, and it made me overall a lot more aware of the legal repercussions of my everyday use of technology.",
        "Discussions were thoughtful and the topics were relevant.",
        "A lot of reflection about how the law and tech should interact, some self reflection, and constant discussion over current world events. It's a fun CS class for people who don't want to just look at the technical aspects but the impacts tech and computer science has in the world.",
        "This class was great! There is a lot of expertise diversity within the group of students that took this class, which helped the class discussions flow smoothly and think outside of the box. As a result of this diversity in thought and topics covered in the class, it was a fun and overall refreshing course to take.",
        "The topics were always super interesting"
    ]
}{
    "course_code": "Student Report for COMP_SCI_295-0_1",
    "course_name": "Special Topics in CS",
    "instructor": "John Villasenor",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.69",
        "count": "16"
    },
    "course_rating": {
        "mean": "5.63",
        "count": "16"
    },
    "comments": [
        "This was a really interesting course! There is so much going on between technology and the law, a lot of which I had never thought about before. This course assumes no background knowledge in law, which is good because I came in super curious but a little nervous that I was going to be really lost. Overall pretty easy course and interesting topics.",
        "I liked the format of the class. The weekly readings can seem like a lot at first, but they get shorter as the class goes on. I am going to say that I don't like Perusall (the platform where you do the readings). It basically calculates a score for each reading based on your comments, but it's never quite clear on what you lost points on. Everyone in the course pretty much scored around 2.4\u20132.6 out of 3 points for each reading, which is essentially full credit, but when the scores are reported on Canvas, it incorrectly messes up the grade you have so far, so it's hard to know where you are exactly in terms of points. Besides that, awesome class, both professors are incredibly smart and promote a comfortable Zoom atmosphere. We also ended class 40 minutes early every time (it's a 3 hour class that meets once a week).",
        "Great readings (short and you have to annotate so everyone really reads them and has good conversations on Perusall), a great mixture of assignments (debate, presentation, paper), and the actual long seminar once a week flies by because they switch between lecture and small discussion and everyone was generally interested because the class was filled with interesting topics and the profs were so knowledgable and passionate.",
        "Great course! Awesome teachers who are super knowledgable and willing to help you learn. If you are at all interested in technology, take this course! I feel like every CS major should take this course.",
        "This class was incredibly interesting and covered a large range of subject material. I feel like I am leaving the class with a lot of applicable knowledge and a greater understanding of the technology environment that is awaiting me after graduation. I would definitely recommend this class!",
        "gr8 course!",
        "Overall, I had a good time in this class. I learned a lot about how different technology and legal fields clash, and it made me overall a lot more aware of the legal repercussions of my everyday use of technology.",
        "Discussions were thoughtful and the topics were relevant.",
        "A lot of reflection about how the law and tech should interact, some self reflection, and constant discussion over current world events. It's a fun CS class for people who don't want to just look at the technical aspects but the impacts tech and computer science has in the world.",
        "This class was great! There is a lot of expertise diversity within the group of students that took this class, which helped the class discussions flow smoothly and think outside of the box. As a result of this diversity in thought and topics covered in the class, it was a fun and overall refreshing course to take.",
        "The topics were always super interesting"
    ]
}{
    "course_code": "Student Report for COMP_SCI_295-0_20",
    "course_name": "Special Topics in CS",
    "instructor": "Stevie Chancellor",
    "year": "2020",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.60",
        "count": "10"
    },
    "course_rating": {
        "mean": "5.10",
        "count": "10"
    },
    "comments": [
        "This was the first run of the class so it was a little bit rough at points but Dr. Chancellor is really great with being flexible and receptive to the students and their needs. She is always really well prepared for classes and is great at explaining things and showing us how they're relevant to our own lives. GREAT class for an intro to python in a social science lens!",
        "I did not know anything (anything) about coding and I came out with a semblance of a  new skill ! I love Stevie (take classes with her!!) It was the first course in a while that I felt the passion for learning something completely new that I had in grade school days. Stevie is so patient and understanding but also wicked smart. Considering the course was a pilot session, it was not perfect in the assignments and all that but again, Stevie was understanding and accommodated our class accordingly when we were all stuck on something. Highly recommend taking this course if you want to learn Python and immerse yourself in the tech world with a social science lens.",
        "I learned a lot but it was hard. The projects were insanely time consuming. Still you learn so much in 3 month it's exactly what you need if you have an interest in a class that will actually provide you the basics of programming.",
        "this was the first time offering this class. professor was a super nice person, and i dont blame her at all, but the class was a bit all over the place. i know with time, this class will be amazing for people interested in CS but not wanting to take a class. lectures were on python topics, but also on greater implications on computer science in other fields.",
        "great class! learned a lot about tech in the real world, not just a basic intro coding class. project was quite long and the homeworks are also a little longer than what i would have expected, but Chancellor was very understanding and restructured the class to provide us more time as needed and allowed revisions on homework assignments as well. prof was very enthusiastic to teach, and discussions in class were a refreshing experience considering most other coding classes dont really have that. overall, great class, take it if you can!!",
        "I really enjoyed this course and its blending of social aspects of technology with the actual mechanics of computer programming. The beginning of the class was great, but as we got into more complex topics, I began to get very lost as did many of my peers."
    ]
}{
    "course_code": "Student Report for COMP_SCI_310-0_20",
    "course_name": "Scalable Software Architecture",
    "instructor": "Stephen Tarzia",
    "year": "2021",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.84",
        "count": "88"
    },
    "course_rating": {
        "mean": "5.64",
        "count": "89"
    },
    "comments": [
        "Best CS class I've taken so far.  It was a challenge for me but I learned a lot.  It was difficult in a kind of frustrating way \u2013 you have to solve your problems on your own which mimics a work environment a lot.  I was a bit skeptical about taking an asynchronous class coming in, but the lectures were higher quality than any of my other classes by far.",
        "This is a great class to take, and it leaves you with enough knowledge to start building your own scalable services. The homework feels really well designed for the material you learn, and it's exciting to see your news search working fully in the cloud! I knew nothing about scalable software before this class, but I learned a ton and now feel really confident. Steve is also a great lecturer!",
        "Very nice course. Extremely helpful because it give us a great chance to experience AWS development",
        "If you are looking to work in software development definitely take this course!! It was one of the best cs classes at Northwestern and I wish more like it existed.",
        "This is a great class, probably the best CS class that I have taken besides CS 340 and CS 349. All of the material I feel will be very helpful for me, at least as I start my career. The class was well\u2013taught, well organized, and well managed. I cannot say much more than this class was amazing. THANK YOU!",
        "Tarzia's a great prof; his lectures were always very clear and instructive. This course was pretty interesting, and I learned a lot. It's best to go into this course with at least some knowledge of Java",
        "Tarzia is absolutely fantastic, its unfortunate he's leaving NU after this quarter. Regardless, this class is a very very good class. If you want anything to do with software engineering, this is pretty much a \"must take\" in my opinion. You will learn how to use larger libraries and write complicated programs with little code. You'll also get experience with AWS which is extremely valuable.",
        "I love Tarzia so much. He's the best professor I've had at Northwestern and will be extremely sad to see him go! This class focuses a lot on real\u2013world application of AWS Cloud platforms and also teaches you a wide variety of concepts central to distributed computing and scalability problems.",
        "I loved this course, but the last two assignments took an extremely long time!!",
        "great course and professor tarzia is one of the best CS professors I've had at northwestern.  lectures were really helpful in explaining key topics to know as a software engineer and I am really happy I got to take this course, especially with him as the instructor",
        "Really good class. Learned a lot of things that were applicable to the real word. Can be quite a tough class as there is a lot of information to take in but definitely worth it.",
        "The course includes both some paper work and codeing work to help me understand the scalable architetecture better.",
        "Genuinely one of the most practical and useful courses in the department. This class filled in so many knowledge gaps for me, providing a digestible high\u2013level overview of a bunch of topics (distributed systems, full stack development, databases, networks, OS, etc). The assignments, which included full stack development and architecture design, taught me valuable skills that will come in handy in my future career. I hope some version of this course is taught again in the future!",
        "Good class; very useful for system desgin",
        "This is one of the best CS courses i have taken at Northwestern. I had very little experience with SWE going into it, but I know have a deep understanding of what SWE is and how to do it. I feel ready to tackle any SWE internship or job after taking this course. That being said, I struggled a ton and went to office hours about 6 times a week. The programming assignments (especially the first one) are pretty challenging, especially if you have never used React or made an ETL pipeline.",
        "It was the most real world course i've taken. Sucks that Tarzia is leaving...",
        "Tarzia really know his stuff. This course was very useful to learn about system architectures in general",
        "This was an excellent course \u2013 probably one of the best CS classes I've taken so far. The assignments left me with the ability to assemble a full AWS Search ETL, and also a ton of analysis of real system architectures. The lecture series was awesome \u2013 each one contained more relevant info about systems or some type of CS knowledge (networking, databases, etc). Would highly recommend taking this, assuming the course material stays the same without Steve to teach it. Really prepares you for a CS job and gives you a great feel for how systems / apps are built.",
        "Huge fan of this course! would definitely recommend taking it, Prof Tarzia is fantastic",
        "This course was tough, but extremely necessary in terms of preparing for industry. All of the information is extremely applicable and important for software engineering, and I'm so happy Steve created this course. He is a great prof, and all of the TAs and PMs were great as well. The assignments often took a while, so start early! Everything was graded very fairly, though. If you get stuck, the course staff is extremely helpful and there are plenty of office hours. The last 3 assignments are also completed in pairs, which was nice. Highly recommend this course!",
        "I only took this class because I really like Prof. Tarzia. That wasn't a good enough reason to make me enjoy taking it, since I wasn't super interested in the material, BUT I am glad I took it because I know I learned some applicable industry skills.",
        "interesting course that really shows you how real\u2013world software works and looks like. kind of disorganized though, but an applicable course before going into swe",
        "This course was practical, well\u2013taught, well\u2013suited to remote learning, and should be taken by any aspiring software engineer",
        "First 1/2 of the class is very typical because you essentially build fuck\u2013stack software, but second 1/2 of the class is the most interesting and challenging because you learn about software design which is never taught anywhere else at NU. Too bad Steve is leaving :( Y'all missed out",
        "This was a great class, but will be a little less challenging if you have experience in full\u2013stack development. Tarzia is a good lecturer so you'll develop really strong fundamentals in architecture design.",
        "Prof. Tarzia is experienced and did a great job of logically connecting all aspects of scalable development in this course. Worthy to go through all the materials again and again. But the assignments required you to have a solid foundation of programming, otherwise, you would get stuck in many steps despairingly.",
        "Good class, sadly Tarzia is leaving after this quarter so I am unsure what the class will look like with a new professor.",
        "This course is incredibly useful for anyone interested in software engineering. You learn an incredible amount about large\u2013scale internet services and coordinating many machines responsible for different. The first four assignments build on each other to build a simple system and deploying it to AWS, and the final two are using what you learned throughout the class to design and reason about more complicated systems, like Uber and Zoom. You also get to learn about current tools used by architectures to scale to millions of requests and processes. I really enjoyed this course. Tarzia is an incredible lecturer but it's a shame he wont be here after this quarter.",
        "Really enjoyed this class. It is definitely difficult and time consuming, but everything is super applicable to software engineering careers. Steve is amazing and his lectures are a great resource.",
        "Interesting stuff to learn, interesting to see all the stuff AWS can do",
        "This class is a great overview of software architectures as a whole. The book is actually wrote for startup engineers, not academics, so its really easy to see all of the practical applications of the things we learning in class while also being a little more approachable content wise than a more academic focused course. Definitely don't take this as your first 300 level; there's a pretty high level of independence and free\u2013range in the later assignments, so having some background knowledge and previous experience learning things in a 300 level will be very crucial. In my opinion, Comp_Sci 340 Intro to Networking should probably be a pre\u2013req for this course, so maybe keep that in mind if you're planning on taking this. Also, Prof. Tarzia (who created and has always taught the course) is leaving after this quarter, so all of this might completely change for the next prof who teaches the class.",
        "Over the course of 9\u201310 weeks, you'll use AWS services like Elasticsearch Service, S3, and Elastic Beanstalk, utilize the AWS SDK, design your own frontend interface with React.js, run an API server on AWS Cloud, and combine individual elements to create a working scalable system. It's a class like no other.",
        "Hard class, but mostly straightforward and really interesting material and code. The final architecture assignments were tough because it was hard to know what they were looking for \u2013 if you followed the course and lectures you could do it but it was just still unclear exactly what to do. Remote learning played into that a bit",
        "This is a great class! You'll learn so much practical information about building real web apps and scalable software systems. You'll get out what you put in; not all of the readings are necessary, but you can learn a ton from them if you have the time. Prof. Tarzia is great and it's too bad that he is leaving Northwestern. Don't underestimate the architecture design assignments at the end of the class though. Drawing up those documents takes a serious chunk of time, and you'll need to do it early enough to go to office hours get good feedback from the TAs.",
        "I honestly hope that by the time you're reading this, prof Tarzia is back. This class is definitely and by far the best class I've taken at Northwestern. I know students say this a lot but this class was something else. It was definitely hard and exhausting, but, I learneed a looooot. The topics discovered in this class are very important for all CS majors. The class looks at important parts of software development. THE CLASS IS HARD BUT IT IS VERY VERY VERY VERY VERY REWARDING. Also the TA Yash Patel was very helpful. He would stay after the end of office hours to help students. He also was helping all the students without giving the answers directly but he will make sure that everyone understands.",
        "This is a great class that I think all CS majors should take. It basically teaches you how apps and web services are built from front to back. Also, the class gives you a project where you build your own search engine, which not only teaches you how web services are built but gives you a cool project that you can put on your resume. No exams, just 6 homeworks. 4 coding assignments, 2 architecture design diagrams where you design your own service and show it's different parts. Very manageable amount of work and the class teaches you a lot of important stuff.",
        "Great course. The homework assignments were very useful and practical, and the lectures were also very helpful in getting a good high\u2013level understanding of how to scale systems.",
        "Tarzia was great! Too bad he's leaving.",
        "good class, very real and applicable. homework can feel overwhelming like you have no idea what to do or how to start at first",
        "This is essential for learning how to scale and design full\u2013stack applications. Such a good class, and Tarzia is amazing.",
        "Challenging class but learned a decent amount \u2013 would recommend! The lectures were all recorded (bc of covid) so it was easy to fall behind \u2013 it seems like you don't need to watch them until you get get the last 2 homeworks and then suddenly you have to learn the whole class so don't do that! The first 3 homeworks end up building a news search engine which I thought was really cool! Then the next 3 are more conceptual, like explaining how you would build different app frameworks but without actually implementing them.For the first 3 homeworks, you use Java and Amazon Web Services (AWS). You learn how to access a database, how to store data in your own database, and make a frontend webpage using React. I think those homeworks were really valuable and I learned a lot about how databases, load balancers, servers, etc might all work together. I'd recommend taking this class after 340 (Networking) bc concepts like HTTP, HTML, CDN, etc are used in this class, but it's not necessary to take it before \u2013 just a nice benefit to starting the class.Steve taught it this quarter but he's leaving :( so maybe the structure will be different for you. But this class was interesting and probably will give you more insight as to what software developers actually do \u2013 that's the whole purpose of the class.",
        "Very good class. Help you to understand how you would apply some concepts in each CS class you've learned in real life.",
        "Professor Tarzia is a great teacher and this class is very useful for software roles in industry.",
        "cool class to take. helpful for cs students",
        "Content felt super relevant and actually applicable which was cool. The coding assignments were definitely helpful, but the architecture design was difficult with limited access to TAs. Remote instruction also made this class feel pretty disjoint. Overall interesting, requires a good amount of work though.",
        "I really enjoyed this course! The content was relevant for future software engineers, the lectures were great, and the assignments were constructive. Professor Tarzia was very knowledgeable about the content and was very kind when answering questions. The asynchronous lectures with optional q&a class time was refreshing and productive.",
        "Great course on scalable software architectures and gives the foundation for building real\u2013world applications that can handle many users",
        "Highly recommend this class for any CS major. So many interconnected and important topics are covered here. The homeworks are challenging but not impossible, easily doable with the support offered by the class. I felt like I learned more in this class than in any other class.",
        "If you don't know anything about software architecture, this class will be really tough. However, the instruction is great for this class and you will learn a lot. Sadly, this is Professor Tarzia's last quarter teaching this course so I have no idea what it will be like in the future.",
        "Overall and extremely strong course under Prof. Tarzia. Not sure what it will be like without him. Information was extremely well organized; the book was accessible, useful, and paired well with the slides. Early assignments got hands\u2013on with many interesting and useful technologies. Later assignments would have benefit from more feedback early\u2013on; I'd like to see them begin with a simpler starting point so that students can be eased into the design process.",
        "This is probably one of the  most important CS classes you could take at NU. Gives a great overview of the typical frontend, backend, database software structure, but also teaches you many key scalability functions. TAKE THIS CLASS if you plan on writing software",
        "I would consider this class pretty much required for CS majors, as it goes over a lot of the core concepts you'd need to know for going into a traditional software engineering job that you'd otherwise need to learn on your own. That said, the class itself was pretty disorganized (besides the lectures), with HW code and dates getting changed and fixed frequently. The first 3 assignments are super minimal and aren't really indicative of what writing a full\u2013stack web app looks like in industry. The last 3assignments (deploying and designing architectures) are great.",
        "Best CS course I've taken at Northwestern. Tarzia was an amazing teacher with extremely informative lectures. Very unfortunate that he's leaving after this quarter, Northwestern NEEDS to counter offer the place he's going to and get him BACK.",
        "This class is very practical and helpful if you consider a career in software engineering. Prof Tarzia is extremely knowledgeable and helpful. The work is solid though it does take much time to complete them if you don't have prior experience, but the assignments and lectures do make me learn a lot."
    ]
}{
    "course_code": "Student Report for Design, Technology, & Research(COMP_SCI_315-0_1",
    "course_name": "Design, Technology, & Research)",
    "instructor": "Haoqi Zhang",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.60",
        "count": "5"
    },
    "course_rating": {
        "mean": "5.67",
        "count": "6"
    },
    "comments": [
        "This class will help you grow personally and academically and will give you skills that takes years to build in industry.",
        "This class is a good introduction to doing research and definitely changes your perspective/the way you think of and tackle problems.",
        "Small HCI research class where you will be challenged and improve. If ur interested in the field at all, apply!!",
        "If you are reading this, you are probably considering applying for DTR. It is a challenging class, so do not expect an easy A, but it is very rewarding and you will learn a ton. If you are interested in HCI research definitely apply"
    ]
}{
    "course_code": "Student Report for COMP_SCI_321-0_1",
    "course_name": "Programming Languages",
    "instructor": "Vincent St Amour",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.50",
        "count": "42"
    },
    "course_rating": {
        "mean": "5.17",
        "count": "48"
    },
    "comments": [
        "Vincent is incredible in this class and I'm jealous I couldn't have him as a professor sooner. The grading policy is awesome, the homeworks are fair but get more difficult.",
        "Really fun course, I had a good time. There's one homework assignment per week, which is good for me because then working on this class fit well into a weekly routine. He gives like a difficulty curve of every assignment, which is sort of nice to mentally prepare, but I wouldn't stress too hard over it because I honestly found the two 10/10 difficulty assignments to be not significantly harder than those before. I recommend reading the assignments beforehand and trying to understand what you have to do before you start programming, so you don't sit down to work and then work inefficiently because you don't really know what you're doing",
        "Overall good course",
        "I really liked this class, Vincent is a great professor. Your entire grade for this class comes from 9 homeworks that you get 3 tries each on. If you stay on top of the homeworks and get a perfect score on your first or second try, you'll be fine. I could definitely see the coursework start to pile up if you consistently get behind, though. Only complaint is that some of the lectures went super in\u2013depth into some topics that weren't relevant for the homeworks, which felt like a missed opportunity.",
        "Not my favorite CS course, hard homeworks that I couldn't do without OH.",
        "One of the BEST courses I had taken. Super useful, Vincent did an amazing job with explaining things clearly during lectures. The resubmission system for the homeworks was really great and honestly helped with understanding the HW code over time even if I was still a little confused during the first submission; I wish more CS classes used this model instead of midterm + exam + homeworks with only 1 turn\u2013in attempt. I feel like it helped me understand the different topics significantly better. Is this course tough? Yes. It gets really tough around weeks 7\u20138, so be ready to spend more time on those homeworks, but it's definitely manageable. I'd say it was a little less stressful than, say, CS 213. It was really fun as well! Plus you learn a lot. 100% recommend that you take it with Vincent, and stick through it \u2013\u2013 don't give up! Yes Racket is intimidating at first, but don't give up! Racket (well, PLAI) probably makes the homeworks a lot simpler than if the course were to use something like, say, python. It's a very rewarding course and probably one of the best ones I've taken at NU.",
        "Would highly recommend, Vincent is a great lecturer and communicates course ideas very clearly, the assignments are interesting (at least, as interesting as homework can be), and really allow you to apply the concepts picked up during lecture.",
        "Overall, I enjoyed taking this class. The weekly coding assignments challenged me intellectually yet I always enjoyed doing them as I was able to learn a lot through the process.",
        "Oy, this class is surprisingly hard.  I've never struggled so much in a class.  Homeworks 6, 7, 8 will be a struggle",
        "Course was very instructive and just the right amount of difficulty for me. Lectures are very clear and it was very helpful that they got recorded and posted on Canvas. Don't wait to start homework assignments, they definitely get harder towards the end.",
        "The course is taught through interactive lectures and homework assignments where you create interpreters for simple languages that exemplified features of programming languages. Grading for the assignments is fair and the professors and TAs areally want their students to learn and succeed in the course. I really enjoyed this course and highly recommend for anyone even vaguely interested in how their favorite programming languages work! Vincent is one of the best professors in the CS department and really makes the interactive coding lectures something I look forward to.",
        "Good course, pretty easy. HW difficulty is way overstated. HW7 and 8 are rated as the highest difficulty, but honestly don\u2019t take that much longer than the rest of the HW. Just plan the code out before hand and write test cases before coding. Vincent is a dope lecturer.",
        "despite little interest, I took this class because I've enjoyed taking classes with Vincent in the past. Great decision!! I found the material engaging and I feel that half of that is the professor. sometimes lectures could feel dry, but that was usually when I didn't know what was going on and had stopped trying to figure it out. the class has an interesting submission system with 3 tries for every program\u2013 it's really nice but also can catch up to you really fast and become more of a stressor than a help. but if you take advantage of all of the ways in which this class tries to help you (go to office hours!!! saved my life) this is a super navigable and rewarding course.",
        "Don't cheat. If you're not a fan of racket, either try harder or drop this class earlier. If you pay enough effort, this subject is definitely manageable, but definitely need to keep up with the pace.",
        "I LOVED this course! Vincent is a fantastic professor, keeps everyone engaged, and actively cares about all of his students. The course can be particularly challenging, especially towards the end, but it is designed in a way that allows you to succeed.",
        "Great class, would highly recommend taking. Vince is great at teaching",
        "Good class and an Easy A. You get 3 chances on homeworks and if you get 2/2s on all of them, you get an A. After each try, you get all the failed tests back and can easily fix them. Besides that, the lectures and homework intertwined perfectly and it felt very nice. The homeworks complemented the lectures perfectly. Take it with Vincent",
        "Overall I think this course was a good course. It challenged me, I learned a lot, and the assignments were a great way to build programming skills.",
        "This was an amazing introduction to how programming languages work and what some of the principles behind higher\u2013level programming languages are. The grading scheme was very fair because, although getting an A required everything to pass every test, each assignment was able to be submitted up to three times, and (almost all of) the assignments made use of starter code we generated as a class. Online lectures where I just watched someone code tended to be incredibly boring, but being back in a classroom made the class coding engaging and I took much more away from the course understanding how we arrived at a working solution. Office hours were always super amazing as well, and everyone that helped me out was super knowledgable as to how we could go about fixing my code.",
        "I really enjoyed this course. Vincent is a great instructor who understands this material very well. Some of the assignments definitely take more time than others, especially toward the end, but it is very possible to succeed with the help from all of the staff.",
        "The course was overall very straightforward. The course covers the primary components of general programming languages and for the most part build upon each other. The homework reasonably expanded upon any topics discussed in class and should not be difficult so long as 1) you're methodical and 2) you're not intimidated by racket. Vincent continuously checks to make sure that he wasn't going too fast during each class. I would recommend anybody who has any questions to ask directly in class, as that will be the best time to make sure you understand the material. The only thing I wish this class covered more of was a better perspective of how each topic applies to current\u2013day programming languages.",
        "I think that this is a great class to take with Vincent. He is very clear and engaging in lectures, so I absorbed the content well. The lectures also line up perfectly with the homework assignments and had a very clear connection, so I was never unsure of what my assignments were asking of me. The resubmission policy for homeworks is also really helpful. Overall a great class.",
        "Not really know what programming language is before I take the class. But it turns out to be a great course. Prof. Vincent is a great teacher and gave us a brief understanding about how compiler and interpreter works. Definitely worth to take it.",
        "This class has good content and Vincent teaches it very well but the grading system is extremely frustrating. You either get a 0 50 or 100 (perfect) on each homework, no in\u2013between. You get three resubmits for each homework (one per week), but the homework are extremely hard and time consuming that falling behind is easy. If you fall behind a week its very difficult to get a 100 on the homework. There were multiple homework that I spent 10+ hours working on and got a 50 for failing only one of 100+ test cases.",
        "This course is very good, and Vincent is a very good professor. First on the course: yes, it uses Racket, but that's not actually a bad thing in this case. Racket (PLAI in particular) is a very good choice for this course as it provides numerous tools for creating toy languages. Any other language would likely be more annoying to work with. The course is structured very well overall and I would say most of the homework contributed to my learning. Some of the assignments were needlessly repetitive, but sometimes that's just the life of a programmer. The grading system is actually rather interesting. In some ways having two resubmissions made things much less stressful, however not having the ability to resubmit a third time on the last assignment caused me a small amount of needless anxiety.Vincent is a very good teacher. He brings energy that a lot of professors don't and managed to keep me engaged even when the course material did not. His pacing can be a tad slow at times, but that may also just be my perception after zoom recordings on 2x speed, who knows?The only real problem were all of the technical difficulties with the recordings, but sometimes these things happen.",
        "In this course, you will do 9 assignments. Each one can be resubmitted twice, and you need 100% on all assignments to get an A. Assignment 1 is review, assignments 2\u20137 and 9 are about programming languages, and are easy and not very time consuming. And then, there is assignment 8. This assignment is very very difficult. It takes as long as 2\u20133 normal assignments and is basically just on a different topic then everything else. Set aside a lot of time for this assignment. You also have to remember to put the 8 principles at the top of every assignment otherwise you get a 0 on that attempt.There is rarely any starter code, despite the fact that some lecture code is very clearly the code you should be working from. Someone will post on canvas \"which lecture's code should we use? Is it lecture 4 or 5\" and a professor or TA will respond with something quizzical like \"If you use the version from lecture 5, you may see some... interesting... things. Hint: what was lecture 5 about?\" (this is the word for word response, copied and pasted\". This is really inconvenient, as I have spent up to 20 minutes finding the right starter code for an assignment. One time the TA gave incorrect info on piazza, and I had to redo stuff in my assignment when the professor fixed the mistake the day it was due.While you learn about principles behind programming languages, this is far removed from learning about real programming languages. You do stuff like program a worse version of racket in racket. For example, you write a garbage collector, which instead of using real memory, just works on a pretend heap in racket. Or, you implement state into your language, not by dealing with memory and pointers, but instead by making some data structure which contains every variable's values that you just have to keep passing around every time you return.",
        "The course is well structured to focus on you learning the material without worrying about failing. You get a couple of tries with each assignment and each time you can go back and reevaluate the decisions you made and study the material again. Vincent is also one of the best instructors you can ever have! He takes his time to prepare the material to ensure that its not only understandable but also intellectually stimulating."
    ]
}{
    "course_code": "Student Report for EECS_321-0_1",
    "course_name": "Programming Languages",
    "instructor": "Vincent St Amour",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.55",
        "count": "53"
    },
    "course_rating": {
        "mean": "5.09",
        "count": "53"
    },
    "comments": [
        "this class was great. homeworks were super reasonable if you went to lecture and stayed on top of assignments",
        "Vincent is a very passionate lecturer and he explains things thoroughly but sometimes a little too slowly. The homeworks are very doable will some difficult ones towards the second half of the quarter. The multiple submission policy makes it possible to do well.",
        "This was a tough class, mostly because I felt like an absolute idiot. I went to office hours and worked hard at the beginning, but then as soon as I fell a little behind in the middle of the term, I felt like I was completely lost for the rest of the class. The two week resubmissions are super nice but definitely make sure to at least get one decent submission in by the original deadline because otherwise you\u2019re really only hurting yourself.",
        "Vincent is great! Homeworks get more challenging as the quarter progresses, so make sure you go to office hours.",
        "This course is definitely one everyone should take as the systems requirement. No tests, only 10 assignments and you can always retry them for almost full credit. Vincent is an unbelievable professor who cares so much about his students. HIs lectures are so clear and he is such a great instructor (probably the best I have had at NU). Make sure you go to class though because the coding done in class sets you up for the homework.",
        "I care about learning technical experience and this class definitely is something that has real life applications.",
        "Good class to learn about PL theory. Easy for a junior.",
        "This is a great class and definitely worth taking, if you have room for it. Vincent teaches in a \"mob programming\" style which allows the students to have input on the code as we learn the concepts in class. This makes the transition from class material to homework very smooth. Each assignment feels like it has a good purpose and tests a different concept from the last. Office hours are super helpful if you ever get stuck. This class teaches important programming skills and has a good emphasis on writing a complete testing set.",
        "Take this class, can get hard but you can submit homework up to 3 times to improve your grade",
        "I like how there were no exams and it was really nice being able to see what I did wrong on an assignment and be given the opportunity to fix it",
        "Entirely homework\u2013based, there are lots of office hours each week so definitely take advantage. I found the material pretty interesting, albeit not so applicable if you're looking to move into straight\u2013up development.",
        "I'm very happy there aren't any exams so I could focus on learning the homework as an end in and of itself rather than as material to be rehearsed and memorized for later tests.",
        "So hard, but Vincent is a very good lecturer. Pay attention in class or you'll fail",
        "Pretty good course overall. It starts out nice but after the halfway point the homework assignments start getting realllly hard. Expect to spend a lot of time at office hours if you want to do well.",
        "This class seemed like it was gonna be pretty easy in the first couple of weeks but really picked up after a bit. I think going to lecture is very important, since the details of the assignments can be hard to grasp just going off the slides/assignment descriptions.",
        "I learned so much from this class. Vincent is an excellent lecturer who provides his slides for reference later and he and the TAs were timely and helpful answering piazza posts. But a big part of what made the class great was how the homeworks were set up. They were always clear (if difficult) and gave you a a few of test cases to get you started. You could resubmit weekly, up to two weeks after the initial deadline (for a total of 3 tries including the original one) and this both helped me keep my grade up but really forced me to go back and fully learn and understand the material and not abandon a hard concept I only half understood.",
        "I feel like my recursion skills got better from this course. Also my ability to write test cases. I love how there are no exams. Vincent is super nice and friendly and answers quickly on piazza.",
        "This is a great class, I'd highly recommend it for a CS Breadth. Resubmissions make the homeworks very manageable and office hours are also very helpful. Lectures are interesting especially with hands\u2013on programming during lecture. Class is in Racket but it has more functionality than 111 so it's not too bad.",
        "This class is challenging, but extremely rewarding. Out of all of the CS classes I've taken here, this one has definitely had the biggest impact on my understanding of programming fundamentals, and it has absolutely made me better at solving all kinds of problems. Vincent is easily one of the best professors in the department, and is super knowledgeable on the material and does a great job teaching it. I'd highly recommend this class to anyone pursuing the CS major. It's really great.",
        "Great class. Friendly grading system to motivate learning and allow for lots of flexibility in when you put in the work. Lectures are clear and very well\u2013organized. But due to the lack of verbal explanation (unless you dream in Racket/PLAI) on the slides and limited connection to the book (which seems quite challenging to read...), if you miss class, you'll be spending a lot more time trying to catch up than you really have to if the handouts are better (all that's needed is really a few lines of text here and there...). Some might interpret this as a good motivator for us to go to class, but not everyone can make every class even if one wants to, and there could be schedule conflicts with OH. In any case, very good class overall. Definitely puts some classes in the department to shame.",
        "Vincent is a wonderful, very clear lecturer. If you go to class, he explains all the concepts you need for the homeworks, so the assignments are quite straightforward. Each week you learn about how 1 or 2 language features are implemented and extend them in the homework.",
        "This class was awesome \u2013\u2013 Vincent was great as always. The homeworks were challenging but very doable. Well\u2013organized. Plenty of office hours. Interesting lectures. No exams. Resubmitting homeworks. This class ruled. But make sure you know that the course doesn't count as a systems breadth anymore.",
        "Well this course is in Racket and the homeworks are very difficult. If you're cool with working in Racket and are willing to work hard, it will be fine. If not, you're not gonna have a good time",
        "interesting course, definitely learn a lot about how programming languages are made.",
        "Good class. A fair bit of homework for sure. If you are looking for a CS class to fill ur schedule I think this is a great choice. It is relevant and well put together. Some/many weeks you will probably have to go to office hours to get help though.Brush up on Racket ahead of time.",
        "good class, but I came in not being interested in the material, so naturally I didn't do that well",
        "I really liked this class. As always Vincent is amazing and I love learning from him. Total of 8 homeworks in this class and no exams. This class is in a version of Racket so like if you really don't like Racket I guess just don't take the class, but also if you like Vincent then take it. Garbage collection isn't all that scary and the version we implement is conceptually very easy to grasp. Also Vincent live codes in class and shows you examples of how to implement things so you have a lot to go off when you do the homework.",
        "There are 9 assignments (no projects or tests) and you get second and third tries to resubmit each assignment after it is graded, which I think is a VERY friendly grading system and makes the class not as stressful as other classes. Vincent is a terrific lecturer and cares a lot about his students' understanding of the material. He and the TAs/peer mentors were also very responsive on Piazza. Not sure if the material has a lot of practical applications, but it might for all I know and I found it interesting nonetheless. Highly recommend.",
        "Vincent is a great professor and really cares about his students.  The structure of the class is great and it\u2019s very easy to know where you stand in terms of grades.  The weekly assignments were reasonable, but tricky if you chose to start them the night before.",
        "Definitely a hard class but Vincent makes it so much better! As long as you put in work and go to office hours, the class is very doable. Really one of the best classes of CS I've taken, structured very well and homeworks are hard but very fair. Highly recommend this as a requirement",
        "I think the course was challenging but interesting. If you are interested in taking the class make sure to get the early homeworks done so that you have more time for the more difficult ones. The grading and homework policies are very clear. My only comment to improve the class is to offer recorded lectures online as it was hard to follow the lectures",
        "This course was pretty interesting overall.",
        "office hours are the best way to succeed, the TAs care and honestly the lectures are both interesting and easy to follow.",
        "Another Vincent gem. EECS 321 is a really well organized course, and Vincent's philosophy of learning for the sake of learning, not grades, really comes through in the best way. This means that the assignments are challenging and require a lot of work, but the schedule and resubmission policy means that it's really possible to learn a lot and still get an A/A\u2013 without dying along the way. I feel like so much of the EECS department puts learning at odds with getting good grades, and Vincent has really mastered making these one and the same."
    ]
}{
    "course_code": "Student Report for COMP_SCI_321-0_1",
    "course_name": "Programming Languages",
    "instructor": "Vincent St Amour",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.66",
        "count": "74"
    },
    "course_rating": {
        "mean": "5.18",
        "count": "74"
    },
    "comments": [
        "Yet again, Vincent does a fantastic job at teaching this course, much like Comp_Sci 214. I personally love his style of structuring the class in which your grade is solely comprised of homework, but each homework is spent building programs that follow exactly what you're supposed to be learning in lecture. In Comp_Sci 321, this happens to mainly be parsers, compilers and interpreters. Doing this makes it infinitely easier to both learn and comprehend what is being taught, as opposed to giving students stressful exams that are not nearly as strong indicators of the progress made by students in the class. Love love loved this class. This course is also taught well in the remote format, as lectures essentially don't change over Zoom, and this quarter Vincent implemented office hours in the form of Gather.town, a virtual classroom simultation that you can log onto to interact with other students, and more importantly TAs/PMs at the times of their given office hours. Gather.town was a pretty good alternative to simply doing Zoom office hours, because you could have multiple TA/PMs on at the same time, and it is much easier for them to help students individually, as well as to switch from student to student. TL;DR: WOULD HIGHLY RECOMMEND THIS COURSE AS A COMP_SCI BREADTH. Much love to Vincent and this quarter's team of TAs/PMs <3",
        "I had a very positive experience with the course. The most important things for me were to learn the foundations of programming languages concepts, and I think that's exactly what I did. The time commitment was very manageable, especially when coupled with the re\u2013submission policy. The amount of programming required in the class also made it more enjoyable than sitting through lectures and trying to learn by memorization (rather than by doing).",
        "Important info:\u2013\u2013 only graded on assignments\u2013\u2013 get 3 shots to turn in each assignment, with feedback in between\u2013\u2013 should theoretically be impossible to get below an A\u2013 in the class, if you actually do the resubmissions\u2013\u2013 lectures are classic Vincent: engaging, humorous, and characterized by the fact that he clearly knows this material inside and out (and is willing to explain anything twice)\u2013\u2013 would absolutely recommend to any comp sci major or minor, material is super useful for life",
        "The course was challenging but very rewarding, because each week was a different topic, so I was able to learn about plenty of material. Additionally, the submission policy was very lenient, which helped a lot with the rigorous course material.",
        "Difficult but fair",
        "Awesome class. Vincent is the man, and we had a good set of TAs. Homeworks are very manageable with the 3 try system and lots of OH. Pretty interesting material regardless, and Vincent is a good lecturer who really wants you to succeed.",
        "I thought the class was pretty standard. The second to last homework was difficult solely because it was so different from the rest of them. It\u2019s annoying but also probably quite realistic to write your own tests every time. Being able to submit multiple times was also nice.",
        "Vincent is awesome, take this class with him",
        "The course is challenging but office hours helps a lot. Make sure to stay on top of assignments and have good time management. Vincent as always is a great professor and explains topics clearly and thoroughly.",
        "Course policy was very forgiving (three submissions), but if you fell behind it was absolutely vicious. I did fall behind at one point. Vincent is a good teacher; his live coding was useful and projects reinforced and naturally connected to lecture material. However, I found myself skipping all lectures and only watching the recordings because it's hard to focus during the entirety of a dense 80\u2013minute lecture.",
        "This class is truly awesome. It's the second class I've taken with Vincent and he continues to do an amazing job during remote classes. This is a good intro course for going into the study of PL (email Vincent about PL if you're interested, he's very helpful).The grade entirely depends on homework, which makes it a great application of how well you understand lectures. The lectures, which are mainly coding walkthroughs, are very thorough because Vincent answers all of the questions posed and references higher\u2013level concepts for those who are interested. Vincent shows a difficulty chart for the homeworks at the beginning of the quarter and it's quite accurate \u2013 expect to spend a lot of time on homeworks 7 and 8. There are 2 resubmission attempts for each homework, which give you the chance to get your grade up to 8/9. Take advantage of those to see the test cases you may fail on the first attempt. Some people have said that the homework for this class is more time consuming than expected, but I found it really engaging and an interesting challenge to work on, so time flies by when you're having fun.",
        "I really enjoyed this class. Vincent is also a great instructor.",
        "I was expecting a deeper understanding of the theory behind programming languages. This class does not make a real attempt at teaching the theory side of PL. The class consisted of live coding lectures where Vincent would start an implementation of an interpreter. The student  was expected to modify/augment his interpreters as part of the homework. The homework was actually quite fun. The concept of control was interesting, and I recommend implementing the function approach for the homework that requires an implementation of control! I really liked the homeworks  that required designing and thinking about interpreters iteratively. Tho, not sure if I can take anything I learned in this class and apply it elsewhere. Having three opportunities to submit a homework is something that other professors should consider; this definitely made the class a lot more doable.",
        "Vincent, as ever, is an amazing lecturer and teacher. He always has the lectures planned out completely and was flexible, giving us small breaks during the long class sections. Coding in Racket... isn't fun, but the homeworks at the beginning are pretty easy and they get harder in the middle of the quarter, but Vincent warns you ahead of time.",
        "This is a really great class! The lectures were fascinating, and Professor Vincent kept everyone engaged with poll questions to gauge how well we were absorbing the material. All of the assignments were fair and clearly explained, and they did a great job helping us more deeply understand PL concepts and learn how to implement them. Vincent and the TAs were helpful in office hours and via Piazza when I had questions. I appreciated the resubmission policy, which let students submit assignments up to three times and learn at our own pace.",
        "Homeworks start easy but get much harder, but the class is very lenient with resubmission. Make sure you start things early and go to class because Vincent's demos are great.",
        "Vincent is great as always, and the class is very manageable. Getting an A\u2013 is very doable, but it's relatively more work to get an A. That sounds obvious, but I feel like it especially holds true in this class. Just make sure you don't start the homework too last minute, especially on the two harder assignments he'll warn you about in class.",
        "A well structured, well\u2013paced, engaging course. Make sure you block out your calendar for the weeks dedicated to control flow and garbage collection \u2013 those problem sets are extremely time\u2013consuming. Thorough unit tests are your friends.",
        "Very good class to take, only downside is that you code in Racket. Weekly assignments start out easy but get gradually harder. The best feature about this class is the ability to resubmit assignments twice for a better grade or if you just didn't finish by the first deadline. If you don't finish by the first deadline, it's still a good idea to submit what you have because you might get free test cases from the grading report.",
        "I took this class because it was taught by Vincent and I'd had him before and really liked him. Vincent is an awesome professor, but this is not an easy course! Challenging homework assignments. I would not have made it through this course without going to office hours multiple times a week. The TAs were amazing though!",
        "This course gets really hard at the end, but as long as you start the assignments early you should be okay! There's also a ton of opportunities to redo work and get almost full credit, so if you want an A, if you work hard, you can definitely get an A. All the grades come from weekly assignments. The assignments get harder as the course continues. Use TAs, they're awesome!",
        "It is clear than Vincent cares about this subject.  He talks before and after class about the field and is more than willing to answer any questions.  The homeworks in this course generally build on each other, so make sure to stay on top of things so you don't fall behind.  Vincent also allowed (at least this quarter) up to two resubmissions for each homework with a later deadline where you can earn partial, but nearly full, credit.  Office hours were somewhat busy, even with near constant availability from TA's, so don't be surprised if you need to wait a little for help.",
        "Vincent is a great instructor so I was very excited about this course, but was ultimately let down by it. You have three chances to submit each assignment, which was awesome at first, but let to needed every part of your code perfect to get above a 6/9. If you fail even one test case you get a 6/9. If you are prepared to do the utmost and still not receive a grade you feel you deserve, go for this class. As well, having multiple submissions means that if you have any circumstances preventing an on\u2013time submission or otherwise (like personal struggles, illness, etc) you are not likely to receive another chance.",
        "Vincent is the best. Assignments are very organized and the lectures directly relate to the assignments. This class is a super approachable look at programming language construction and composition including compilers, interpreters, parsers and how they work. Lots of functional programming, which is awesome and teaches you new ways to think. If you are one of the people who liked CS\u2013111 you'll love this. If not, you'll be fine though. Tons of office hours, helpful TAs.",
        "hard breadth class, homework assignments get progressively harder and harder and some of them spending 10\u201320 hours on.",
        "Vincent is awesome, take this class with him for sure. Great instruction. Make sure you watch lectures before starting homeworks. Start HWs early. They take a long time to do, and use the TAs! Time consuming but rewarding. More than PL, you learn a lot about functional programming, which is pretty cool.",
        "This is a good course and Vincent is a great lecturer as always. The assignments are pretty doable, but make sure to start them early as some of these can get time\u2013consuming, especially some of the ones in the second half of the course. Definitely make sure to go to office hours because all the PM's were super helpful. If you're looking for a good way to fill the software breadth and you don't mind programming in Racket, this is a good course to take. I kind of wish we could see the connection between the class's materials and real programming languages better, but overall the class was pretty manageable.",
        "I felt like this course offered no support to students ; the professor felt very cut\u2013throat and seemed to not care or understand the difficulties of learning in a pandemic. I find him to be engaging, but i don't get the sense that he empathizes with students or cares about our difficulties.",
        "Vincent is a good teacher for this class. In terms of grading its really nice since you can resubmit assignments as you learn more.",
        "Hard class but fun if you are interested. Vincent is very nice and understanding.",
        "This is a great course and definitely worth taking. Though the concepts themselves aren't terribly challenging (with a couple exceptions towards the end of the quarter) we covered a lot of different topics in programming languages, and I feel I've gained a much better understanding of what a programming language is and how different features could be implemented. Vincent is also a great, clear, and passionate lecturer.",
        "The entire class is based on 9 coding assignments that vary in difficulty. You can resubmit hw multiple times to get points back which was very helpful especially when it was one little but. However, some of the codes are TERRIBLE to debug so it just isn't worth your time to go find them. But great prof and TAs were all helpful.",
        "Really great class, and Vincent does an excellent job teaching it. The grading policy is very lenient, and encourages actually learning the material at your own pace rather than cranking the entire assignment out right before it is due. The structure and lectures are both great, and its easy to enjoy the class.",
        "This is one of the most challenging CS classes I've taken, but also one of the most rewarding. I feel like we got a really great and in\u2013depth understanding of what goes into designing and implementing a programming language and what makes some different from others. Vincent is one of my favorite professors at NU, and I would recommend taking any class with him if you can! The entire grade is based on 9 homework assignments, which get progressively more and more challenging. Resubmissions are allowed but the grade gets capped after the first submission, so it is TO YOUR ADVANTAGE TO GET THINGS RIGHT ON THE FIRST TRY, ESPECIALLY ON THE EARLY ASSIGNMENTS! If you struggle with the later homeworks (and trust me, you will), it will be hard to make up for those lost points. Test your code 200% thoroughly, and take advantage of the grading feedback on resubmissions which includes the test cases they used to grade. Also, GO TO OFFICE HOURS, THE TAS ARE GREAT AND HELPFUL! You will need their help to get anything done, trust me.",
        "Vincent is kind, empathetic, and a great instructor.",
        "This was a great course! I love Vincent and think he hit it out of the park again. The material is interesting and gives you a deeper appreciation for all of the programming languages you use.",
        "The material helped me understand the different components of languages and appreciate the most basic aspects of programming.",
        "CS 321 covers a lot of interesting and useful material. It is not a massive time commitment, although some assignments are much more difficult than others. During remote learning, there was a very lenient homework resubmission policy that removed a lot of stress. Vincent is a charismatic lecturer and his live coding lectures are really helpful.",
        "This class is very doable if you stay on top of yourself. The way that you receive homework grades isn't the most straightforward but if you take advantage of the multiple submission for each homework you will be more than fine.",
        "liked this class! 9 straightforward programming assignments with two resubmissions each, no exams",
        "I learned different aspects of programming languages.",
        "Great class! Vincent is a fantastic teacher, the lectures were very interactive and extremely well\u2013taught despite being remote. Plus if you pay attention in class, the homework is not super time\u2013intensive.",
        "This was a very well instructed class with lots of TA's and office hours if you needed help. The assignments were not overly difficult but they did challenge you significantly in some cases. Some of the assignments were also pretty fun, though some like the garbage collector are nightmares. Overall, great class.",
        "The first half of the course is a breeze. The later homeworks become quite difficult though, so don't be surprised when the class suddenly becomes quite hard and a time sink. It's a great class, Amour is a fantastic teacher.",
        "This class teaches you how to write a programming language by having you write how to add, subtract, use deferred substitution, functions etc all without using any typical built in functions you'd find in any language (python or c++ or Java for example). It's all in racket and while having to relearn all the syntax and having very few typical built in functions, it makes this class unnecessarily complicated.The way grading works too is if you pass the autograder the first deadline, you get a 9/9. There's also a second and third resubmission but you can only get max 8/9. There's 9 homeworks and if you don't fall behind it's manageable. If you start using too many resubmissions, you'll end up with 3 assignments due one week and it'll be almost impossible to catch up. Overall not too hard to do okay in the class if you dont use the resubmissions as an excuse to push off assignments unlike what I did. Ended up with a B bc of that. But also this class seems unnecessarily uncomplicated. Office hours were super helpful and if you've had Vincent before, his teaching style is still the same. He does some slides and then codes live.Would say it's not the most difficult class but I still spent a looot of time on the assignments. If you're interested in writing a programming language which very few of us will likely end up doing, then take the class. Otherwise wouldn't suggest it unless you know you won't fall behind and don't have strong attachments to typical langs like python, C, or Java.",
        "This course was extremely time consuming and difficult\u2013 I've heard great things about it but without in person office hours I don't think the assignments were fair. We moved too fast to keep up.",
        "Pretty good class; racket wasn't too bad, although some of the homeworks were quite difficult for me.",
        "Vincent is amazing. The lectures covered a lot of relevant material, and the coding demos and questions he asked during the lectures helped us understand them well. The assignments were difficult, but I learned a lot through them, especially since you have three tries for each of them so you can correct your mistakes on one submission during a later submission."
    ]
}{
    "course_code": "Student Report for COMP_SCI_321-0_1",
    "course_name": "Programming Languages",
    "instructor": "Christos Dimoulas",
    "year": "2022",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "4.43",
        "count": "35"
    },
    "course_rating": {
        "mean": "4.31",
        "count": "35"
    },
    "comments": [
        "I learned so much in this course about programming languages and computer science and absolutely became a better coder in the process. The class is great but understand that it is extremely time intensive. That said, if you are diligent and put in the necessary time and effort (which is a lot), you are basically guaranteed to get at least an A\u2013 and most likely an A. The structure of homeworks as the only assessments and the three submissions for the homework make the class less stressful and help you learn a ton. Do not fall behind in the class or skip lectures. Although I ended up getting a great grade in the end, I missed a lot of lectures (watched the recordings afterwards), but it caused a lot more stress than was necessary. If you stay on top of everything, this will be a great, low\u2013stress, and enjoyable class, but make sure you have enough time to dedicate to it. I would recommend the class but just be prepared for a high workload, while understanding that getting an A is easily within reach if you put in the time.",
        "This class is pretty easy in terms of a CS major focused class: the only grades are based on the homework assignments and if you pass all the tests for each homework you will get an A. Christos is very knowledgeable when it comes to this information, so don't be afraid to post questions to Piazza or go to his office hours.",
        "Assignments are not too difficult until around #6, but having three submissions is extremely helpful. Lectures are a bit disjointed from the homeworks (assignments usually cover info from 2\u20133 lectures behind what we are talking about in class), but it eventually catches up.",
        "This class is challenging but not overly stressful (because of the way the course is designed). Start early on assignments and you'll be fine",
        "Very difficult, make sure to use all homework submission deadlines",
        "I enjoyed this course; the lectures were clear. The course was well\u2013organized as well.",
        "This class is pretty easy with the exception of garbage collection which was a massive pain. Each hw has three attempts which was really nice. Professor Dimoulas was good, but most people didn\u2019t  go to lecture at all. Overall a good breadth class",
        "I did not enjoy this class, and if it weren't for the fact that I was pigeonholed into this class, I probably would not taken this class, especially this quarter. The grading structure of this class is needlessly punishing especially to students who have a life outside of classes (which should be almost everyone). Assignments are graded out of 2, and missing just 1 test case out of the roughly 100\u2013200 test cases they run means you get a 1 out of 2, and in order to finish with an A in this class, you need to pass every single test case on every single assignment, otherwise you're capped at an A\u2013. This is supposedly rectified by the fact that there are 3 assignment deadlines, but this really doesn't help as much as the instructors, TAs, and PMs think it does. Assignments don't stop coming weekly, so if you don't perfect the assignment in the very first week, now you have an extra assignment to do for the next week. Every minute you spend trying to fix a previous assignment means you are borrowing time that you could be spending on the most recent one, and if you get to the third submission and pass every case except one? I hope you enjoy your 50%. I am not even close to being the only person in this class who's expressed grievances towards the way this class is graded, and I am horrified that an instructor ever thought this was a good idea. I understand that this grading system was created by Vincent and not Dimoulas, but the same critique extends to Vincent. Additionally, if you want to reach out for help in this class, don't reach out to Dimoulas. You won't get the support you want. I certainly didn't, and I'd argue he only made things worse for me. Take the class with friends and ask them instead.This is not a class I would want to recommend to anyone, especially in the state it's in currently, and I hope anyone who takes this class doesn't suffer from mental health issues, because they're going to have a very rough time trying to keep up.",
        "Pretty tough class. Take if you are prepared to really put in the work and understand the material.",
        "This course is entirely in RACKET, so if you don't like racket make sure to stay very far away. The grading for this class was pretty ridiculous \u2013 you had to complete every assignment perfectly to get an A, and although you get 3 tries it's incredibly stressful when you're on your third try. Racket by nature is quite hard to read in my opinion, which contributed to the difficulty of this course. Dimoulas is very nice and although I didn't find his lectures super easy to understand he's definitely not a bad lecturer.",
        "I appreciated the course structure overall. That said, lectures were useless especially given how comprehensive the slides were and I wish we could have used a language other than racket.",
        "I thought the course was ok overall. However, I don't feel as though I learned a lot. The course was aimed at showing different important aspects of programming language like functions for example and how they are implemented. The assignments were reasonable but I feel got quite repetitive as most of the time you were just writing a different parser to implement some new functionality.",
        "I really didn't enjoy the subject matter of this class. It was very monotonous. Additionally the homework can be pretty tricky. I do really appreciate the 3 submissions policy we had and that there were no exams, but I definitely wouldn't say the class is especially fun or easy.",
        "Course was in racket but I'd say you remember most of the things that are racket specific by the second hw. No exams, just 9 HW's that I'd say are thought provoking and require a good understanding of the lecture material. If you run into any issues along the way there are a lot of office hours from TA's and peer mentors to help you. Some of the later content did get quite challenging I think.",
        "You probably won\u2019t get an A in this class. You have 3 tries for each homework, and if there is even a tiny mistake on any of them, you won\u2019t get credit. The only way to get an A is a perfect sweep, and that\u2019s impossible when HW 8 is nigh impossible to complete.",
        "I really appreciate the ability to submit multiple times because it encouraged me to keep reviewing the material until I was able to successfully complete the assignment. Having the recorded lectures and code from class also helped me review concepts much better than if only the slides were shared.",
        "Really rewarding course. Yes, it is difficult but you will be fine if you actually try. I practically lived in office hours, but the actual content is really interesting, which kind of offset the all nighters.",
        "This course was by far the smoothest run course I have taken at Northwestern. Professor Dimoulas held very straightforward lectures with live coding instruction which complemented the assignments very well. There were 9 homeworks in total of variable difficulty, making up 100% of the grade but, with 3 tries to get full credit for each assignment, grading is very fair.",
        "I enjoyed this class a lot, but the homework in the first half of the class was not a great representation of the overall difficulty. Homework difficulty picked up significantly in the second half of the class, but grading is lenient (3 tries for every homework) and it is interesting to learn."
    ]
}{
    "course_code": "Student Report for COMP_SCI_321-0_1",
    "course_name": "Programming Languages",
    "instructor": "Vincent St Amour",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.69",
        "count": "51"
    },
    "course_rating": {
        "mean": "5.15",
        "count": "53"
    },
    "comments": [
        "HARD! Time consuming!!! Assignments and lectures can be fun and interesting, but they are verrrry time consuming, don't take this unless you can devote majority of your time to it.",
        "Vincent is a fantastic instructor, and the content of the course is interesting. What more could I say?",
        "Vincent does a great job teaching every course he teaches. This course is no different. However, compared to other courses, the topic of this course is a little dry imo.",
        "Pretty decent class overall, but do not take this class unless you can consistently attend lectures. This is a rare class where you will end up completely lost if you start skipping, as Vincent does a lot of live coding and explanations during lectures that you won't fine in any textbook or online.",
        "Vincent is one of the best professors I've had. He's really easy to listen to, and he's passionate about what he's teaching as well as his students.",
        "This class is interesting and definitely takes a minute to do some of the homeworks so start early. There's no exams so making sure you understand the hw is important. I always did these in the middle of the night so I never took advantage of office hours, but Vincent makes sure there are a ton of those. Piazza is also a great resource for this class.",
        "I am new to Racket, but the class is good and the assignment can help you understand the content in class.",
        "Maybe the best computer science class I've taken. Vincent's a great professor, the homework assignments are tough yet reasonable, and the homework resubmission policy does a great job prioritizing students' learning while still rewarding those students who got the homework right on the first try. Just don't take the resubmission policy for granted, because if you do it can become very easy to fall behind in the class.",
        "This class has no exams only 9 homeworks which can be not too difficult if you take the time to pay attention in class and go to office hours. Vincent teaches it well and the class is very fiar. I thought I learned a lot.",
        "I enjoyed this course quite a bit. I was disappointed that the knowledge that we gained was theoretical rather than practical, but that seems to be a running theme with Northwestern courses.",
        "The hardest part of the class is trying to figure out racket.",
        "This is an excellent class; very interesting and well\u2013taught. Not terribly challenging if you put in the work, go to lecture and office hours. Reasonable and lenient grading. Vincent really cares about students and the material.",
        "This class was harder/more work than I expected but Vincent is a super engaging professor and really cares about the material and that students learn it.",
        "Great class! Vincent is the best professor and only graded things are 9 homework assignments, which can be re\u2013submitted",
        "Vincent is a great professor. But if racket isn't your thing, you'll think this class is awful, especially in the final weeks for the quarter. The class is good in terms of the fact that it's assignment based and each assignment you get 2 resubmissions. But if you think that means you can lay back and take it easy, don't be fooled. The first few assignments are relatively easy to keep up with but it cranks up and hits you hard by like assignment 5 or 6. Also, if you're one of those people who don't go to class, you should either go to class or go to a ton of office hours. Because you might have no idea what the hell is going on and then you'll really be screwed. Again, if racket is not your thing, you will start to really hate this class and it will feel like torture and a mistake taking the class.",
        "This course is great because you get to submit homework multiple times, so you aren't really penalised for making one really stupid mistake but otherwise getting it perfect. Vincent is amazing.",
        "Vincent is a great professor for this class! He's great with live coding, the assignments went really well because of his teaching and breaking down difficult concepts into bite sized chunks to tackle every week.",
        "A lot of work, I only learned through office hours so the lectures are basically useless. Having only homework\u2019s to worry about was nice but be prepared to spend 8+ hours in office hours.",
        "Im not too sure what i was meant to get out of this class. I feel like i have a similar understanding of programming languages before and after the course. Writing a weird language in racket felt a little forced. I wish the course were taught in something more relevant like C",
        "One of the better CS courses. Vincent is an amazing teacher and I loved how there were no tests. Assignments were challenging but really satisfying to complete, and I feel I really learned a lot.",
        "This class overall was really interesting and pretty engaging. Vincent did a good job of making the material manageable, while Peer Mentor hours were readily available for help (use them!). A couple of the assignments (like garbage collection for hw8) were definitely a step up from the rest but if you understand what you're doing its really rewarding to finally get those assignments done. The class is really flexible in terms of grades, because all of the homeworks have two resubmission deadlines and you can resubmit for almost full credit up to two weeks after the assignment is due, allowing for you to correct your work and actually go back and understand where you went wrong \u2013\u2013 I hadn't experienced that policy in other classes and I think this really aided my understanding on each topic, since you go back and master it.",
        "The second half of the course was significantly harder than the first, but if you show up to lecture and use resources like office hours, you shouldn't have too much of a hard time. Personally, I don't find programming languages an incredibly interesting topic, but the lectures were very helpful in understanding the material.",
        "Really generous grading scheme. Vincent is the best prof I've ever had tbh.",
        "This was a fantastic course and Vincent is a fantastic professor. Weekly assignments helped me reinforce my knowledge of each subject, and the resubmissions allowed for a chance to fix any mistakes if you did not fully understand material the first time. Vincent's lectures are engaging and he tries to get to know every one of his students. This class is one of the best I have taken at Northwestern, and I highly recommend this class and Vincent.",
        "Good and challenging course",
        "Great course! Vincent is an awesome teacher and is extremely prepared for every lecture. He makes the class very interactive and always makes sure the class is following along and slows down the lecture if they aren't. The class is graded entirely by homework, but students get 3 attempts for each homework assignment. This allows you to fix your mistakes and actually learn the course material! One of my favorite CS classes so far, and I definitely recommend taking it while you're at Northwestern. It's not a cakewalk, but the homework redos make the class very manageable.",
        "Helped, but wasn't quite what I was expecting for this class.",
        "Amazing class, Vincent is a super engaging lecturer and encourages participation. Grading policy is very generous and encourages correcting mistakes and learning from them, which I loved.",
        "I love that there are no tests, it allows students to explore and delve into their homework to develop a deeper understanding",
        "Really great class. You learn a lot in this class and Vincent is always great at teaching material. Also, no exams and you get 3 chances to turn in homeworks."
    ]
}{
    "course_code": "Student Report for COMP_SCI_321-0_20",
    "course_name": "Programming Languages",
    "instructor": "Vincent St Amour",
    "year": "2021",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.51",
        "count": "53"
    },
    "course_rating": {
        "mean": "5.02",
        "count": "53"
    },
    "comments": [
        "Good course, Vincent is incredibly good at explaining things in an understandable way. The content of each week builds on stuff from before and the new content is always digestible.",
        "This course is for those who are interested in learning how a programming language itself works. We covered topics like garbage collection, data types, etc.",
        "Very solid course. A well organized assignment based course that does a great job introducing students to programming languages. If the CS program extended their required courses, this course would be one of the courses I would nominate",
        "This was a super fun course and Vincent is a really good teacher and explains things really well. I learned a lot about programming languages and how they work. The assignments were challenging but also really fun to do. Going to OH is a must.",
        "Clear, well\u2013paced lectures and homework assignments that fit well with the lectures. My advice would be to work on the assignments as they're released, rather than as they're do, because the various language grammars we used got somewhat confusing as we moved through lectures. It's easier to keep them straight if you work on the homework right after the corresponding lecture(s).",
        "Very good class, even online, with engaging lectures that tie directly to programming assignments.",
        "This course is pretty difficult. Also, it's in Racket, which is something to be aware of. Vincent is a great professor, and in order to do well in this class, you'll have to go to office hours. Only take this if you're really interested in the subject matter though, otherwise it might not be worth it.",
        "Vincent is great. Racket is not. I think the Racket IDE is kinda bad also why can't we teach in Haskell. Otherwise great class. Again, Vincent is great.",
        "Vincent is a supportive professor who cares about his students and masterfully answers questions. Take advantage of the many, many office hours that this class provides, and you'll be fine. As the other comments will say, please make sure you don't fall behind on homework \u2013\u2013 while there is a generous resubmission policy, it's in your best interests to make sure you always provide a submission the week it's due, then review the comment the day after and change it, so that by the weekend you'll be able to move onto the next homework.",
        "Great class! If you've taken other courses with Vincent, this one will feel the same. The only thing I disliked was how Piazza didn't feel very inviting \u2013 Vincent often leaves cryptic answers which aren't very helpful. Luckily the TAs are awesome and office hours are aplenty.",
        "Take with Vincent.",
        "This course was certainly not easy, but the challenge made me learn a lot. It was very fast\u2013paced, which I really enjoyed. Professor StAmour is also fantastic. The grading system is also a little weird, but I think it is quite fair and makes up for the fact that the homeworks can be really challenging. The biggest negative in my opinion is the fact that the class uses racket, but its not too bad.",
        "3 tries for every homework , interesting topics that were also well taught",
        "This class is a great introduction to the design and evaluation of modern programming languages. Vincent is a wonderful lecturer, but you probably already knew that. Grading on the homework assignments can be pretty harsh (on one assignment, a single failed test case brought my grade down to a C), but the generous resubmission policy largely evens things out.",
        "This class was challenging for me some weeks and not as much others. He rates the homework on a scale of 1 to 10 but I found that those ratings weren't the most accurate. One thing I really liked was that the class was made up of 8 homework assignments with no other projects or exams, and that the assignments give you a chance for resubmission to get most of the points back. Even with all those perks it still wasn't an easy class. However, Vincent is an amazing teacher so even though it was challenging for me, I didn't hate the class.",
        "I think anyone taking the course should be willing to allocate an appropriate amount of time. If they fall behind it can be easy to catch up at first but as the course progresses it becomes quite hard.",
        "I definitely learned a lot in this class. It was a struggle at times, but Vincent gives you up to three tries to turn in the homework, so there's a lot of room for correction and improvement. There's also no exams which relieved a lot of stress this quarter.",
        "The most important aspect is that there are a lot of hands\u2013on opportunities.",
        "This course is quite interesting and offers some insight into how pl work with a reasonable workload. However, make sure to submit everything by the first deadline!! Getting full credit for third resubmission is quite hard unless you tested your code extensively,",
        "I think this is a very solid class. The homework assignments for the class are very nice\u2013\u2013they basically center around one or two modifications to code written in lectures, and this is nice. If you understand the lecture code you are able to copy it and don't have to do too much to finish the homework. This is the best class in this aspect I've seen: the homework really asks you to do the minimum amount of work necessary to show understanding of the topic. That being said, you should definitely attend class to understand the lecture code. The book covers these topics well too, but understanding the lecture code makes the homework easy.I think this class could have moved a bit faster overall, but overall we learned fun things. I feel that the class was very \"wide\" instead of deep, since there were topics like combinatory logic/Rice's theorem that I would have wanted to go into depth on, but we really didn't cover it. It seemed like the class is *too* much geared towards teaching the material on the homework, and this limits it. In fact, I remember Vincent saying to not worry about understanding the y\u2013combinator, so long as you are able to tweak his code and pass the homework. I didn't really like that attitude. Overall it's a good class and whatever weaknesses are there aren't such a big deal.",
        "I didn't really enjoy this course unfortunately. It's taught in Dr. Racket with the same janky syntax as from CS 111, which is quite rough. The course gets a bit repetitive as well, with most of the homeworks being a variant on the same two functions. Vincent is awesome though and turns a bad class into a less bad class with his charming personality.",
        "Vincent is one of, if not the best, CS professor you can meet in the McCormick CS department. His instructions are clear, precise, and engaging. I did not have much interest in programming language going into this class but Vincent really elevated the attractiveness of the course while also providing cool topics on languages. Homework is fair and you're able to try 3 times for submission so there's always room for improvement. Overall great class",
        "Really good class, interesting and useful material. Vincent's lectures are engaging and relate directly to homeworks.",
        "I really wish this class were taught in any language other than Racket.",
        "Just try to submit as ahead as you can on the assignments. Vincent allows for resubmissions, so you only need 3 perfect scores to get an A in the class (if you have 8/9s in the other scores). Would definitely recommend, super manageable and fun.",
        "If you don't remember how to use Racket I suggest not taking this class.",
        "Enjoyable course. I liked how the grading was based purely on homework assignments, and on each assignment multiple tries were allowed; this allowed for a low\u2013stress environment where we could focus on learning.",
        "This class were the perfect amount of difficulty for me. Other CS courses i felt were too difficult or too easy, but 321 was challenging but never completely overwhelming. Vincent's instruction was top tier and his explanations really helped you understand the content. I never really had much of an interest in PL, but this class was genuinely interesting seeing how languages, compilers, etc are made. You also get 3 retries on HW, so you don't need to sweat too much if you're a little stuck.",
        "Another fantastic course with Vincent! The class was 9 programming assignments, all equally weighted. No exams. Vincent's lectures were mostly live coding and were very clear. Make sure you brush up on Racket early on,",
        "This course was incredible. It ramps up in difficulty, but none of the assignments seem without purpose and it's a topic that I did not expect to find myself as interested in as I ended up being.",
        "I really enjoyed this course, Vincent is incredible at teaching the material in an engaging and digestible way. The course provides an interesting perspective about computer programming.",
        "This was a sick class. Super well taught, which made the material way more interesting than at face value. Which I took this in person. If you work hard homeworks are manageable. You only get what you give with this class. If you want to do well and focus on the hws, you'll be just fine. If you slip behind that'll be quite dangerous."
    ]
}{
    "course_code": "Student Report for COMP_SCI_322-0_20",
    "course_name": "CC",
    "instructor": "Simone Campanoni",
    "year": "2020",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.83",
        "count": "18"
    },
    "course_rating": {
        "mean": "5.61",
        "count": "18"
    },
    "comments": [
        "This course was by far one of the best courses I've taken in my entire life of being a student. I would absolutely recommend anyone who is even remotely interested to take it.The professor: Simone is a rare professor that is good at what he does, and also is genuinely interested in teaching. His lectures are really clear and informative, and he is very approachable after class/in office hours if you have more questions.The content: I thought that the subject was really interesting, despite not really knowing anything about compilers going in. You obviously learn a ton about compilers, but also some low\u2013level machine representation stuff, software development principles, and more. You will become a much better software engineer after taking this class.The work: You've probably heard this course a ton of work. This is true. Particularly, each homework builds off the last one, so make sure you do a good job on the first few otherwise you will have truly insane bugs later on. One nice thing is that Simone spreads out the work so that its easiest at the end when all your other classes are hard. Still, don't take this in a heavy quarter. Also, make sure you're solid on C++ because you'll be writing a ton of it. All that being said, the work is hard but its really interesting, and not many people can say they've built a full compiler from scratch.",
        "The design of this course is very helpful to develop basic coding styles. It helps outside of this course as a programmer in general.",
        "Very hard course, but the difficulty is worth it. You learn a ton throughout the quarter. I recommend taking this class if you have an easy quarter and you want to become a much better C++ programmer.",
        "This course is a lot of coding. A whole lot of coding. The algorithms really arent' hard, and Simone gives you a lot to work with, but you need to be prepared. Also, while I did learn about how compilers work in this class, I think I learned more about designing and constructing software, because each compiler you write you write almost from scratch, so you have to think about the data representations and how you can structure your code to be easily changable and maintainable, but also to enable working with the algorithms for each compiler.",
        "Everything in this course is just perfect. Not for the faint of heart though.",
        "This course was a ton of work, but I learned a lot and am happy I took it. My only complaint would be the few available office hours and their odd times.",
        "This class made me a better coder.",
        "This is a fantastic class. If you are interested in the subject, and are taking an otherwise easy quarter, I highly recommend this course. The numbers are not lying: you will work for on average 20+ hours a week, sometimes less, sometimes way more. But I learned more in this class than any other, not just about compilers but just generally about software engineering. Writing a codebase from scratch across a whole quarter is really rewarding. Both Simone and the TA are fantastic, and Simone's assignment framework is the best I've seen. If you are up for the challenge and want to learn a ton, take this class.Also, the nice thing about this classes is that it ramps up around weeks 3\u20137 and then cools off a ton. When your other classes start ramping up weeks 8\u201311 you will appreciate this. This is also one of those \"do all the work and you will definitely get an A\" classes, with no exams, but the shear amount of work balances that out and makes it a challenge.",
        "The course structured the knowledge of compiler construction in an incremental way that makes it easy to focus on important concepts in individual topics, without the need to grasp the entire subject at once.The concepts are well\u2013explained through the lectures.The homework breaks down compiler back\u2013ends into separate pieces, dramatically reducing the complexity to the degree that building a remarkable portion of back\u2013ends is possible within 5 weeks.The course load is heavy but worth it.",
        "Best course at NU. You learn SO MUCH and create a working compiler by the end but that being said, it's a lot of work. The workload is worth it though, SImone is a great professor and you will learn more in this class than any other CS class at Northwestern."
    ]
}{
    "course_code": "Student Report for EECS_322-0_1",
    "course_name": "Compiler Construction",
    "instructor": "Simone Campanoni",
    "year": "2019",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.45",
        "count": "22"
    },
    "course_rating": {
        "mean": "5.18",
        "count": "22"
    },
    "comments": [
        "This course was weird. It felt like it wanted to be like 321 but failed. During the class, we learned the algorithms used to solve certain problems in compiler construction but the algorithms weren't explained in a clear and detailed manner, explicitly comparing it to the garbage collection class in 321. Then for the homework we were asked to implement the algorithms, but that was also a low quality experience. The framework was buggy all the time and since it could only be run on school servers, we couldn't use an effective IDE to debug and instead had to rely on print statements and \u2013very unfortunately\u2013 gdb. This course needs some serious improvements.",
        "As a graduate student, I cannot spend all my time on classes. This class is particularly more demanding than any other class. The worst part is that I cannot choose the dedication I want to put into this course. I couldn't do that for two reasons; every homework is stack on top of previous homework and professor wants us do pair programming.",
        "This is a very good course to learn how a compiler is formed and how a lot of features in the advanced programming languages you wrote are tackled and realized through building a compiler by yourself. This is a bottom\u2013up introduction and engineering course in compilers, which, is inverse to most of the top\u2013down approach in compiler education I've ever heard of or seen. It's also a good course to train your ability to write code in C++14 using features such as STL. You will be amazed and feeling a sense of achievement when you build up a C\u2013like language compiler in the end. The final competition is full of fun, the best team or student will come to the full of the frame on Professor's personal page. Be prepared to spend a lot of time on this course and prepare even more time on this course if you do more optimization and want to win the competition!",
        "This class is very hard but it gets a little repetitive after the first few weeks.",
        "Great course but this might be one of the most time\u2013consuming courses at NU. Debugging can take hours and often times, bugs are hard to find because of the nature of parsing.",
        "Fun course 10/10.",
        "Simone definitely cares about presenting a great class to students. Unlike many other CS classes, where there are issues with starter code or the autograder isn't working, Simone's framework, which is all the starter code (tests included) he gives at the start of the quarter really lets you focus on the compiler you're creating. If there is an error, he or the TA is quick to fix it and push out a new framework. Content\u2013wise, I was pleased for the most part with what was presented. It definitely was not easy stuff, but it's worth learning for the most part. While it isn't said to be such, this is a class that has a heavy software development flavor to it. If you don't design your compiler well early on, it will come back to bite you hard later. Simone definitely emphasizes good design, and I learned a lot about C++ design as well. My one issue was the fact that we didn't cover a few things I thought would be integral to compilers such as parsing. While we use an open\u2013source parsing library (and it makes sense to do so as creating our own parser from scratch would be super overwhelming with the rest of the assignments given), it would have been nice to learn some parsing theory.",
        "great course, teaches you to code",
        "Is this class my favorite CS class so far: yes. Is this class my hardest CS class so far: also yes. Even though this class will have you spending more time on it than probably any other, the work being done during that time is fulfilling as it challenges you to come up with your own strategies to actual problems. Simone is also an absolute legend of a professor and any class taught by such an understanding, nice, and enlightening person as him is worth it. At the beginning of the quarter, I was questioning if it was worthing taking such a difficult subject, but now with it behind me, I couldn't be more satisfied.",
        "Warning: this class is hard! But I would say worth it. The whole premise is you're making a compiler yourself from the ground up and each homework builds on the last so it's important to stay on top of the assignments. That being said, Simone is really good about explaining the ideas you need to implement and gives you alternatives to the ideas that are harder to implement. Very interesting class and I learned a lot!",
        "Great course focusing on development of real working compilers.",
        "This class was very, very time consuming. Pros were that Simone is an excellent professor, and class focused on code design, not just compilers. The first couple weeks require ~20 hours of week, but work ramps down by the last 3 weeks or so.",
        "A fantastic adventure through the land of complier\u2013topia. Our journey begins in the depths of the Assembly .S(wamp), but once we have passed the navel at the center of the world we ascend to the .b(eautiful) verdant fields of C\u2013like syntax. Did I mention that you write the entire compiler by yourself? This class is a ton of work, but there is a real sense of pride and accomplishment at the end when you can compile and run a program using only* the tools you wrote. Simone has put a lot of effort into making each homework as impactful as possible, so while you will be busy you will also learn a lot along the way.*Terms and conditions apply, linker and assembler void where prohibited.",
        "This is probably my favorite CS class that I've taken at NU so far, and Simone is a fantastic teacher. It is an extremely rewarding and enriching class that I would highly recommend every CS major take before they graduate. You will work a lot, but you will also learn a lot, and you'll be able to end the class feeling really proud of what you accomplished. My one piece of advice is to not take this with any other time intensive classes. Please, please, please take this when you have an otherwise light quarter. The assignments are *very* substantial and also paced rapidly (sometimes you have less than a week). But keep in mind that it's not busy work, and I'd argue that in order for the class to function like it wants to, this amount of work is necessary. You'll learn a lot about compilers but also good software engineering practices. The structure of the class, which has built\u2013in things like in\u2013class code reviews, is built around you growing as an engineer. I promise that if you take this class when you have the ability to dedicate the time, you won't regret a second of it."
    ]
}{
    "course_code": "Student Report for COMP_SCI_322-0_20",
    "course_name": "CC",
    "instructor": "Simone Campanoni",
    "year": "2021",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.88",
        "count": "16"
    },
    "course_rating": {
        "mean": "5.78",
        "count": "18"
    },
    "comments": [
        "CS322 is one of the most demanding yet most rewarding 300\u2013level CS courses. The ideas discussed in class are not extremely challenging, but you'll learn quite a bit since implementing/debugging them in C++ as part of your own compiler forces you to understand them far more deeply than you otherwise would. It also requires a *lot* of time, but it does make you a better software engineer. Simone is an excellent instructor and the material is very well organized and presented.",
        "Great class. Hard, but certainly worth it. I suggest taking it with an easy schedule or else you will submit code that you are not particularly proud of and that you wish you could have spent more time with.",
        "This course was the single most impactful educational experience I've had to date, largely thanks to Simone's commitment to designing it as effectively as possible",
        "Great class. Simone is the best professor I've had the pleasure of learning from at Northwestern. The difficulty of the class peaks in the middle of the quarter, so plan accordingly.",
        "This class is HARD. The first week, you have to create a compiler. The basic principles behind the compiler are given to you, but in terms of the practical application of those concepts? Up to you to figure out how to do that. You'll feel like a god, but you'll also be spending most of your free time on this class, especially in the middle of the quarter. It's great that the class is structured such that the hardest parts of it are in the middle of the quarter, rather than at the end, but that means your weeks 4\u20137 will be quite a mess of working on this class every spare minute that you have. Overall, though, I highly recommend it. I don't know if I've ever learned more in a Northwestern class.",
        "One of the best courses offered at NU. It's not too difficult but perhaps one that consumes a lot of your time. It is nevertheless worth it as you learn a lot not only in terms of compilation but also jsut good SE practices in general",
        "Heavy load but you learn a lot. A lot of work but not you can get an A if you pay the efforts. Simone is a nice guy.",
        "This class is very good. In addition to content differences, I find this class focuses more on implementation/design of compilers than 323. It does a very good job\u2013\u2013it is the first class I've taken that's made me appreciate good design. Try to make sure that you have a good partner\u2013\u2013it does make a huge difference and having a good partner really reduces your stress for this class. I'd recommend that you try to devote a little more time to this class than necessary. If you can spend more time on this class than just the time it takes you to do assignments, you'll get a lot more out of it. But the assignments do take some time.",
        "This course is tough but worth it. You will become a much better software developer through making your own design decisions every week. In addition, it is very satisfying to be able to say you've built a compiler by the end of the course.",
        "I really enjoyed bottom to top approach approach. The idea of increasing homework complexity in the middle of quarter instead of the end is just brilliant",
        "This class is a dictionary example of learning by doing. There is a whole lot of doing, but there is enough learning that comes with it as well. There were some logistics hiccups that could be improved, but otherwise a great class.",
        "This is the best course I've taken at Northwestern. I had a ton of fun optimizing my compiler for the final competition.I highly recommend you take this and Simone's other class CAT.",
        "This class is time consuming, can be quite difficult, but totally worth it. Simone does an awesome job in designing this class for maximum learning in minimum amount of time. You get a build a compiler from scratch, but don't let that be too intimidating, Simone guides you through a new part of the compiler each week in weekly assignments. You also get to learn some new design patterns and good coding practices along the way. Great class, definitely a must\u2013take at NU",
        "The assignments build upon one another which allows to build up a understanding of the area while gaining expertise on individual subject areas."
    ]
}{
    "course_code": "Student Report for COMP_SCI_322-0_1",
    "course_name": "CC",
    "instructor": "Simone Campanoni",
    "year": "2022",
    "quarter": "Winter",
    "instr_rating": {
        "mean": "5.92",
        "count": "13"
    },
    "course_rating": {
        "mean": "5.79",
        "count": "14"
    },
    "comments": [
        "This class is a lot! Every week you build a new compiler with each compiler building on the previous ones (so you have to finish previous compilers to move on). Unlike other CS classes where you probably have the boilerplate code given to you, here, after the first compiler you pretty much make everything from scratch. Though, you can often copy over large parts of the previous compiler's code or make appropriate changes and you get a feel for things after the first few compilers. That isn't to say it gets any easier though. Especially around the middle of the quarter, the complexity really ramps up (and Simone will tell you this). In addition to the compilers, if you finish before the deadline for each compiler, you can be on a panel where you show how your code works. These were always interesting to watch. However, in order to meet the deadline each week, my partner and I pulled several all\u2013nighters often despite having been working on it for several days already. Depending on how fast you work, each compiler can easily take over 20 hours to complete. For us, it took about 2\u20133 full days of work every week. I definitely recommend taking this on a quarter that is otherwise relatively light since this class's workload is basically 2\u20133 classes worth of work on its own.With all that said, if you have an interest in compilers or want to gain programming experience (especially in C++) then I highly recommend it. You'll get pretty familiar with C++ and get to use/implement several data structures and algorithms and get better at problem solving along the way.",
        "This class is amazing and I truly recommend it along with Simone's other course CS323: CAT. Yes, it WILL be time\u2013consuming and will certainly take 20+ hours a week, but those hours are well worth it at the beginning of the quarter to have little work at the end. Having experience with C++ (ie defining classes and using std::map, vector, and set data structures) and GDB for debugging really helps. Also, this class heavily relies on good design and SE practices (such as visitor pattern, simple + understandable + efficient data structures, modularizing your code, etc). You (with a partner) will build a compiler from the bottom up by going from x86\u201364 assembly to increasingly C\u2013like languages. The structure of the assignments is this: 1) Simone presents a new language, which is based on the previous week's language *with additional features*. You must understand the week's language from the perspective of a developer by writing some test programs in that language. 2) there are 1+ lectures on how to implement the compiler for that language by *lowering* the additional features into the target language. Simone's teaching style here is just awesome: he really explains and shows examples for literally every part of the algorithm s.t. there is no ambiguity \u2013 you have the complete information for how to build the compiler (unlike in CAT where you had to be inventive) \u2013 so your task is just to understand that and design your code well.Your grade is based on a combination of panels and homework. When you submit a (correct) homework on time, you have the opportunity to be selected for a panel to either present your code or review others. Other than getting enough panel experiences, you can submit assignments late for full credit, so you can kind of pace yourself in this course. Along with Simone's other policy where you can \"skip\" difficult assignments by implementing trivial code, you be flexible about assignment submissions to get your desired grade and focus on whichever assignments you want to truly understand.If you enjoy systems or programming languages I strongly advise you to take this class, it's amazing!",
        "Extremely helpful course for CS. Helps teach you how to make sustainable and optimized code. However this class is such a huge time commitment, it probably singlehandedly doubled the amount of code I've written in my lifetime. Come into this course with someone you know because chances are, you'll be spending more time with them than without. I loved this course, but I really underestimated the amount of time that it would take (even from looking at the ctecs). If you don't think you'll have time to dedicate every waking hour to this course, I wouldn't recommend taking it. It was probably one of the most rewarding and enriching CS courses I've taken, but it was very difficult to maintain a social life with the deadlines you had to meet.",
        "This is definitely a worthwhile class, but the homeworks took so long. Like, if I could go above \"20 or more\" on the CTEC thing, I absolutely would. The actual concepts aren't too difficult, but it will take up all your free time. The CTECS are not wrong at all. However, it's super worthwhile. I've definitely improved as a programmer and my C++ skills have had a massive boost.Some of the CTECS from before this year are super weird though. You're not gonna feel like a god or anything. It was in some ways fun to put everything together though. Only take this class in a quarter where your other classes are easy. I pretty much used my other 3 as study halls for this one.",
        "I'm surprised that compilers can be broken down in to many mini compilers and each of them focusing on one topic of compiler.",
        "This course will take up A LOT of your time. On the heaviest weeks I probably spent over 40 hours working with my partner. DO NOT take this class while taking any other class that has a large work load or that you care about devoting a lot of time to. Despite the incredibly work load, I found the material pretty interesting. Although my interest in the material did not justify the heinous amount of work the assignments required. If you are an experienced C++ programmer, you'll likely have a better experience than me, whose only experience came from CS 211. I definitely learned a lot though, and this class will hopefully make other CS courses feel easier.",
        "Yes, the course helped me learn! The professor was very patient and ensured he explained everything without assuming background. Also if you are interested in Software Engineering and learning how to manage and extend large systems, this might be a good introduction. The professor gives you guidelines weekly that enable you to go back and restructure your codebase to be better, or even use whatever principles you learn in your next assignment.",
        "The class is an interesting class. Though it require lots of dedication and commitment to the projects, it is really rewarding. You need a competent partner who is willing to spend lots of hours together working on the project. The Instructor (Simone) is super good that all you need to success is explained in the class."
    ]
}{
    "course_code": "Student Report for COMP_SCI_323-0_1",
    "course_name": "CAT",
    "instructor": "Simone Campanoni",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.47",
        "count": "17"
    },
    "course_rating": {
        "mean": "4.94",
        "count": "17"
    },
    "comments": [
        "The content of this course is not what I expected to be but still interesting. However, the weekly assignments style which every assignments depends on previous ones makes no room for you to make mistakes. In order to get full credit each week you need to invest tons of time in this course. Overall, it's a quite challenging course.",
        "This course is extremely valuable and interesting \u2013 but it is challenging and time\u2013consuming. I took this class before CS322 so this was my first exposure to compilers. This course focuses only on the middle\u2013end with CAT but it's really cool to delve into this world of compilers. The 9 homeworks build on each other and become increasingly complex, taking 20+ hours a week, especially if you fall behind. Simone recommends taking time to think through the assignment before implementing anything and that is the most painful part \u2013 to discover a bug in your algorithm and have to start over completely.Simone originally didn't intend to make lecture recordings but he started doing it 2 weeks in after some people weren't able to attend. I think those were a lifesaver because his lectures can go fast and it may be difficult to understand him.Other pros and cons: The grading system is quite forgiving \u2013 basically, you can submit assignments super late, and there is extra credit at the end of the quarter which can raise your grade 10% even if you struggled all the way through. Also, Simone was generous about class\u2013wide extensions. The assignments are designed s.t. you have to independently develop (with a partner) and implement solutions, so the OH aren't much help \u2013 anyways there was only 1 PM so there was a total of only 2 OH/week. Simone was very nice in his office hours though \u2013 he is a great professor really cares that you learn. Also, the responses on Piazza were quite slow and sometimes Simone would disappear without posting or releasing some assignment he promised to do.",
        "This course is very challenging. Only take it if you are super intelligent or highly interested in Compilers. There are ten assignments in this class, and each week an assignment is due, and every one is based on the previous one, so you cannot give up a single one in the middle. The first three to four homework is not too hard, but the rest of them each took me 20 or even 30 hours per week. You can tell the professor is an excellent instructor who excels in compilers, and he is trying to keep improving this course by listening to students' feedback. But I probably wouldn't have chosen this course if I had a second chance, simply because it takes way too many hours.",
        "This is a pretty tough class, but you will learn a ton. The weekly assignments start out not too bad (maybe 4\u20137 hours to complete) but then become extremely difficult and start taking in the ballpark of 10\u201320 hours to complete. Simone is a great professor and was committed to helping everyone with office hours and extra lecture time, but regardless it was pretty difficult. It's also partner\u2013based, so pick someone ahead of time that you can rely on and will put in the work.On the grading side, it was nice that the class is all points\u2013based \u2013 if you have a point total that you are happy with at any point, you don't need to do any additional work. There were 10 total assignments but 110 possible homework points, along with lots of extra credit opportunities in class. Overall, it was one of the most challenging CS classes, but if you're able to buckle down and grind the assignments you will do well.",
        "Simone is a very empathic professor and has a very effective teaching style, but he will also work you like a dog. This is possibly the most time intensive class that I have ever taken. At the same time, I have probably learnt way more in this class than in most of my classes. Compliers and learning how they optimize code is also an interesting and intellectually simulating topic. If you want to do a deep dive of compliers, this class will help you do so, and Simone is able to support students that go above and beyond. The class also has no tests, which is pog.",
        "This course is definitely challenging but still very interesting. Simone is a very thoughtful professor who listens to his students. He also expects a lot out of his students, so be prepared to spend a long time just thinking about what a given homework assignment is even asking for.",
        "Simone is a fantastic professor who's interested in continuously improving his classes. His classes, while somewhat challenging, are 100% worth it. Having a partner in this class is recommended. Don't fall behind.",
        "This course is really, really hard. First few homeworks are straightforward, but then the course really picks up and it becomes pretty exceptionally difficult. The lectures are all high\u2013level theory, so we were pretty lost when trying to actually do the homework that involves actual application of theoretical concepts. We spent at least 10\u201315 hours a week on the later assignments, and that was just to try to pass. The good thing is that there are no tests, and the late policy is pretty forgiving so that you can still get a good number of points even if you turn in HW a week late.",
        "The course is hard, but you also learned a lot while challenged by the assignments and lectures. I would say compiler middle end is a CS system guy's must for long\u2013term development.Professors TA s and partners all really help during this process. Success is not a solo endeavor.",
        "This class is very challenging and requires many hours of debugging per week. Between like 8 hours for the easiest assignment, to over 20 hours for the hardest assignment. The material is fairly interesting. Once you get behind, it is so hard to catch up. There are some opportunities for extra credit, though. Also, do not rely on the professor to give feedback/grades in a decent timeframe. He is very nice, although not reliable when he says he will do something by some date/time. Grading is also very inconsistent between different assignments (he said he doesn't really have a grading schema).",
        "This class is a ton of work, but Simone is great and you\u2019ll definitely learn a lot if you\u2019re willing to put in the time.Assignments are all cumulative which adds a fair bit of stress, and because they are so open\u2013ended as to how you implement your solution, you can quickly have very messy code that\u2019s hard to debug.LLVM is a pretty niche field so google won\u2019t help you as much as it would with a class in python, and lectures are more about concepts than implementation. The online LLVM api is pretty barebones and hard to read (seriously, google doxygen LLVM api and check it out), so use piazza a ton."
    ]
}{
    "course_code": "Student Report for EECS_323-0_1",
    "course_name": "CAT",
    "instructor": "Simone Campanoni",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "5.52",
        "count": "25"
    },
    "course_rating": {
        "mean": "4.85",
        "count": "26"
    },
    "comments": [
        "This class started out great, but by the time reading week rolled around, the TA stopped answering public, general questions on piazza, the assignments got very difficult, and I lost the motivation to continue trying very hard, especially since the professor watched Piazza, but didn't offer any answers himself. Up until week 8 or 9, the concepts were interesting and the homework assignments were fair, though.",
        "Hard course. Learn about optimization\u2013layer of the compiler, which is super interesting. Every week you build on your own code. Professor and TA are not very accessible outside of class, which makes the last few weeks really hard b/c everyone's having bugs by now but there is not enough help.",
        "This class had some pretty difficult homework assignments that take up a lot of time but you gain a lot of knowledge.",
        "Quite possibly the best class I have taken at Northwestern. Simone is a fantastic teacher and this topic directly relates to this research \u2013\u2013 always a winning combination. The class gets a bit heavy in weeks 6\u20138, but it's very fairly paced and gets better every year.",
        "Everything prior to week 5 is very doable, after that it's a different story... You learn a lot though and Simone is amazing.",
        "This course is pretty challenging. The first few homeworks are easy but the last few take a lot more time. The TA office hours were scheduled at a terrible time, usually right before an assignment is due or after it is due, which makes getting help pretty hard.",
        "course is really hard, the code you write is cumulative so if you don't write clean code and just try to pass the hws you'll only hurt yourself later in teh quarter.",
        "This course is extremely time\u2013consuming, but wow does it build character. The professor is a great guy who knows the material well and is willing to help, and the examples he gives on the canvas are quite helpful. However, he is intentionally vague about applying concepts on the slides to the homework, and as a result it can be very easy to get stuck and fall behind. The homeworks build on each other, so if you are late on one, the problems will stack up. Luckily he is aware of this, as the late policy is generous to make up for it.",
        "Cool and interesting course and Simone is great! First few homeworks are trivial, next few are ok, then they get challenging, and then they get really difficult so make sure you understand concepts from the beginning but overall I had a good time and recommend it.",
        "I was very excited going into this course, but I feel like I didn't get as much out of it as expected. The lectures didn't have a clear flow and often jumped around. While the homeworks were very helpful for the topics they did cover, I felt like a lot of things in lecture weren't reinforced. Overall, however, Simone works very hard to improve the class as much as possible for students and takes feedback. I would recommend this class if you are looking to get a taste of the field and be mentally challenged, but the topic isn't for everyone.",
        "This course was cool but definitely time consuming.",
        "The projects were well paced out.",
        "Class starts out very easy, but scales quickly into a very difficult course. Not hard at all to get a B, but getting an A will take a significant amount of work. Simone is very good a explaining concepts during lectures.",
        "This is a HARD class but so worthwhile. I learned more in this class than any other at NU so far. Simone is a great lecturer but do not expect any help on homework assignments. Make sure you have a good partner for this class because that will absolutely make or break you. absolutely take this class but make sure you have a lighter schedule and a good partner",
        "This course is about using LLVM compiler infrastructure to write our own code transformation pass within an industrial compiler \"clang\" for a simple specialized language \"CAT\". The course is full of fun and challenges. You will learn lots of concepts in code analysis, but also you probably cannot gain full points for the homework if you don't take it seriously. Simone is a really great professor at Northwestern and he is extremely passionate about what he is doing in compilers. I'd recommend also take his course CS322 compiler construction for you to gain a whole picture about what an important role compiler itself and code analysis plays in the whole computer system.",
        "The TA is a little unapproachable. Some of the topics I felt were really tricky to understand, so despite spending a lot of time beforehand, I needed a lot of guidance, which was difficult to get from the TA.",
        "Some of the assignments can be challenging, but Simone is really good."
    ]
}{
    "course_code": "Student Report for COMP_SCI_323-0_1",
    "course_name": "CAT",
    "instructor": "Simone Campanoni",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "5.21",
        "count": "14"
    },
    "course_rating": {
        "mean": "4.79",
        "count": "14"
    },
    "comments": [
        "The assignments in the second half of the quarter are extremely challenging, I had to spend more than 20 hours each week on this course(which is expected by the instructor). The tests for the assignments only detect limited bugs and could not really guide you to do the assignment right.In addition, each assignment depends on the previous ones, if you fail to get one right, it would be hard for all your following assignments to achieve the expected optimization level.",
        "This class is excellent. The homeworks are the core of the class and very interesting to figure out. Some lectures go a little fast, so it's possibly helpful to rewatch. The homeworks do take a lot of time\u2013\u2013this was the most time consuming class I've taken at NU. While I enjoyed the homeworks a lot, I didn't really get the sense that they were teaching me a whole lot\u2013\u2013a lot of times I conceptually understood what I was supposed to do, implemented it with a little hassle, but then didn't pass all the tests cases, and spent most of my time trying to get the last few test cases to pass. It was fun for me, but at times a little draining. My advice to students in the class would be not to be biased against ad\u2013hoc solutions. Implementing a few (correct) ad\u2013hoc transformations helps a lot. The professor and the TAs were very helpful. I would recommend taking this class with a friend, or to be ok with doing all the work yourself. A A bad partner will really cause you to suffer. Not just because the workload is large, but because it's really painful to debug everything with nobody to talk to. I spent a lot of time telling my brother about all the bugs in my code even though he doesn't know anything about compilers, and it was pretty helpful. All that being said, it was by far the best course I've taken here, and I'd do it again (with a friend) in a heartbeat.",
        "Lowkey super hard and time consuming. Would definitely recommend having a solid background working with C/C++.",
        "This class was one of the most difficult CS classes I've taken, but Prof. Campanoni is a great professor, and he truly cares that his students learn. I highly recommend this course.",
        "Excellent course, easily the best I've taken at Northwestern. Simone is an amazing instructor and this course is about the same kind of stuff he does research in which makes for a great intellectual environment. Be warned that it is a decently heavy class. There is one HW every week and they each build on the last, so DO NOT fall behind. Thankfully Simone is generous with extra points (I think the maximum possible just from the assignments + 1 extra credit assignment is 130 points) and he makes up for mistakes he makes in the assignment tests or other issues with extra points. Easy to do well in IF you do the work. There is a generous resubmission policy as well. If you have any interest in compiler optimizations and are willing to work a little for the knowledge you'll have a great time.",
        "Overall I thought this was an interesting course, very relevant to my interest, and taught by an instructor who is an excellent teacher."
    ]
}{
    "course_code": "Student Report for COMP_SCI_325-1_1",
    "course_name": "AI Programming",
    "instructor": "Christopher Riesbeck",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.60",
        "count": "25"
    },
    "course_rating": {
        "mean": "4.07",
        "count": "27"
    },
    "comments": [
        "This course is ENTIRELY self driven. There is no scheduled homework, only a set of exercises youre supposed to pick and choose from and be submitting for review over the entire quarter. It is very easy to fall behind and also incredibly difficult to get any sense of how well you are doing. I don't recommend this course to anyone.",
        "This is my least favorite class I've ever taken in my life, but I'll stop the straight up negativity there in the hope that Professor Riesbeck will actually read this evaluation and do something about it. Students that are not already very well\u2013versed in Lisp are at a huge disadvantage, and have to teach themselves, and then immediately begin doing very challenging work in a confusing syntax that has little documentation to be found. The textbook, with its limited scope, was often the only place examples of code could even be found. This would maybe be fine if there was any way to get help: office hours, TAs, TA office hours, peer mentors, groups to do homework in, but these do not exist or aren't allowed. Instead, your only option, if you have a specific question about your code, is to email the professor directly. You can post on Campuswire for a broader question, but chances are you'll just get an equally vague reply to your post from the professor as well. If your grade wasn't based on literally just the professor's opinion of how good you are at coding, it'd be a whole lot easier to email him questions. I found myself going down the rabbit hole on terrible code rather than risk emailing a stupid question (not an issue if we could just talk to TAs or if there were already established office hours). Finally, since lecture had almost nothing to do with homework, I basically took a different class than the kids who completed more code and did a bunch of different exercises than I did. That shouldn't be possible for someone who consistently attended lecture and submitted exercises. tldr, there's a reason why other courses have TAs, and office hours, and weekly homework assignments. Take those courses !! Please !! Wait for the other class to get your AI breadth requirement !!",
        "Very hard course, especially if you aren't a CS major. But the challenge is rewarding. Good feedback on assignments, fun lectures.",
        "This class wasn't what I expected. While we did learn about AI programming, all of the grading in this class was based around writing as efficient code as we possibly could. The assignments were based around AI concepts, but the goal wasn't to learn the concepts and complete the code, it was to write as perfect code as we could manage. I found this helpful in improving my code, but it wasn't what I had thought the class would be like. The grading policy was also confusing. We were told to do as many assignments as we thought we needed to, at as high a difficulty as we thought we should, with no further guidance, which made me very unsure about how I was doing in the class. That being said, Professor Riesbeck was very helpful whenever I had questions about homework.",
        "Amazing course. You need to finish 3 assignments a week and approximately 30 overall. Prof. Riesbeck gives detailed feedback for each submission so this is one of the best courses according to me since it helped me become a better programmer/software engineer. This course has more to do with Lisp than AI but it is still a wonderful course",
        "Overall a solid class, but I would much prefer to take it as an intro class than some type of higher level class. You do many pretty standard (intro\u2013level) programming exercises, then the professor critiques your code, and you resubmit until a solution is accepted. In my experience, if the initial solution is rejected, the professor basically tells you exactly what you need to do for a resubmission. So that's pretty straightforward, although I felt that many times I was just critiqued for not having a solution the exact same as the professor's intended solution. On balance, though, most critiques were valid and helpful. If I was a bit earlier in my CS studies, I think this class would have really helped me become a better programmer, but at this point I don't think so. It was still nice to go a little deep into Lisp as well as some AI topics that weren't covered in 348.",
        "I learned a lot by doing the exercises and getting a detailed feedback on my answers.",
        "This course can be frustrating. As someone who is not the strongest programmer, the assignments are very challenging and there is a steep learning curve. It is very easy to fall behind in this class and get completely lost as to what is going on during lectures. This class is nearly impossible without referencing the textbook so that you learn Lisp. Being asked to resubmit an assignment over five times can be hard on your ego, but I found that sticking with the course was worthwhile. The feedback from Prof. Riesbeck really forces you to reexamine your code and logic while solving problems. By the end of the course, I have become a better programmer and can recognize good and bad code when I see it. I now have an idea of AI topics and how problems may be approached.",
        "I had a hard time at first getting used to the format of the class, because it wasn't like one I've been in before, but I came to really enjoy it and I think I learned a lot.",
        "This class is a fair amount of work. Be prepared to basically learn Common Lisp on your own with the help of the textbook and a few class notes.",
        "This course is basically self\u2013paced. There is a set of various exercises which you can choose from, and you are expected to keep up with everyone else in terms of how many exercises you turn in per week. The only teaching staff is the professor, so getting help is not always easy. Also, the professor tends to be very rude when giving feedback, which has definitely prevented me from asking questions, at times. The lecture material is pretty dull, and seems to be random topics that the professor is interested in, rather than having a set of lectures that go well with each other",
        "Don't take this course if you tend to worry about your GPA. The professor subjectively determines your grade at the end of the quarter and there isn't any way to know for sure how you're doing. Assignments are not graded, only marked as \"done.\" There are no due dates and you choose which and how many assignments to work on.In this course, most assignments are done in Common Lisp. There are a few JavaScript assignments, but that's not the focus of the course. I thought that I would enjoy programming in Lisp since it is similar to Racket, but I was wrong. To write Lisp, you need to use either Allegro CL or LispWorks, which are both ancient, inscrutable and user\u2013hostile pieces of software. And in the name of efficiency, the professor often requires writing iterative code, but does not allow using Lisp packages that could make iteration more convenient. You can look forward to rewriting a lot of code to \"avoid unnecessary conses.\" And in general, you're going to be rewriting the same simple code over and over again until it conforms to the professor's ideas of good Lisp style, whether you agree with those ideas or not.Another thing to understand about this course is that its material is more focused on AI concepts from 20 years ago than modern AI. Most of what you learn isn't going to have a whole lot of practical use, in my opinion.",
        "This class is entirely self\u2013paced, meaning there are no deadlines and you can submit as many or as few of the assignments that you want. I found this to be a great design, but it also means you never know what your grade in the class is as you go through. I found the assignments to be fun and interesting, but you will need to read the textbook, it is a great textbook though it's more of a user manual than a textbook. I rarely ever went to lecture and enjoyed the class, but make sure if you take it to keep up with assignment submissions, don't leave them all to the end of the quarter!",
        "Riesbeck makes you into a great programmer. I wish it wasn't LISP though, bc now I'm just filthy in a language I probably will never have to use again. Also there are so many assignments with no structure, so that's pretty scary.",
        "For this class, I focused on becoming a better coder by leveraging the feedback that the professor continues to provide on my submissions. Some of the problems were more difficult than others, as expected, but it was at time strenuous to feel like you were keeping pace. I did feel like banging my head a couple of times on several problems, so it's certainly possible to get frustrated with this class. Some of the feedback were also notably cryptic, so it was difficult to figure out where to go next. That being said, the professor was always good at providing responses in a timely manner, so I highly recommend asking questions where possible. The class discussed representation of knowledge and how to program for it. It certainly interesting when it connected to discussing how humans think. However, I felt there were times we could go into further detail into a few topics for AI in general, as my primary takeaway from this class was better coding practices and styles. The class was definitely an interesting balance of easy and hard and worth a look at if you want a different style of class."
    ]
}{
    "course_code": "Student Report for COMP_SCI_325-1_20",
    "course_name": "AI Programming",
    "instructor": "Christopher Riesbeck",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.78",
        "count": "27"
    },
    "course_rating": {
        "mean": "4.22",
        "count": "27"
    },
    "comments": [
        "This class takes a lot of discipline\u2013 having to stay on top of submissions can be difficult. That being said, the feedback that you get from Prof. Riesbeck is so great for helping you become a better programmer. You also get to learn Lisp which actually has some awesome language features that can be applied to languages that you see in industry. Don't take this class if you aren't ready to put in consistent work, but overall a great class for software engineering and for learning some classical AI techniques and history.",
        "This class will teach you Lisp, but not AI.",
        "To follow the course content, you have to finish at least 3 new exercise each week. It is not very hard if you actively ask general questions on Piazza and ask specific questions by email.The textbook is very helpful to get the basic idea of Lisp, but you should try to finish the textbook (only 6\u20138 main chapters required to read) with in the first 4 weeks. If you cannot keep this schedule, you might be to far behind to catch up.You have to write your own code, so you should ask questions only when you get stuck on a exercise for 2\u20133 hours. If you work more, you learn more.",
        "Lisp is cool, and being able to do \"homework assignments\" at your own pace is really nice",
        "This class is a very interesting look at how you can do serious AI without many lines of code. I found it very interesting, but it also requires a lot of ability to self\u2013schedule.",
        "I really disliked this course, solely because I hate coding in Lisp. The lectures are fine, and the course structure was okay, but I still had a bad experience.",
        "Just look at what the other people said...",
        "This class was my first upper\u2013level CS class. I had only completed the prerequisite classes 110 (AP Comp Sci) and 111 (no other CS classes) and had no prior knowledge of Common Lisp or basic AI methods. ****DO NOT TAKE THIS CLASS IF THIS IS YOU (read on).****The prerequisites for this class do NOT accurately convey the programming experience needed to do well in this class. This class requires a lot of time as is, but even more so if you're a relatively beginner programmer. Even with all the extra time I put in (dozens of more hours than was expected), my grade will still be quite low because I didn't get through nearly enough exercises (you're supposed to do 30 by end of quarter; each exercise probably took me maybe 4 or 5 hours on average, not including the time to apply edits and resubmit iteratively). And 95% of your grade is based on the amount and difficulty of exercises you do. I didn't even try the \"challenge\" exercises, which you're supposed to do.This is a really well\u2013run, interesting course, but I would have been able to absorb, learn, master, and engage with the material much more had I not been struggling with relatively basic things (e.g., the basics of Common Lisp programming, data structures). Prof. Riesbeck is willing to help you wherever you're at. However, you're being graded against experienced and prolific programmers. On the other hand, maybe this is just me. Just another deeply stressful McCormick experience :').",
        "This course is extremely poorly run in my opinion. There is no deadline for an exercise, you are just 'expected' (not enforced) to submit 3 exercises every week. I understand that we as students should be proactive about this, but not having ANY deadlines for any assignments is pretty ridiculous. It is so easy to just forget to do your assignments some weeks and be so behind. The exercises also take SO much time to complete. I highly do not recommend taking this course.",
        "Do you want 10 weeks of intensive code review from a master of Common Lisp and AI? If so, sign up. I loved everything about this course; it's exactly what you'd expect from the webpage describing it. You will get better at programming.",
        "This is not an easy course, but I learned a lot. I'd say it requires 10+ hours a week to do well. The grading system can be a little stressful \u2013\u2013 I thought it was hard to know where I was in terms of letter grades for most of the quarter. I didn't have a lot of experience going in, so I felt a little behind all quarter. I would recommend searching for and looking at the course website before taking the class. Professor Riesbeck is very very knowledgeable, and you will learn a lot regardless of grades. If you are very interested in AI/logic or have some experience it is a great intro!",
        "This class is exactly what you make it. No tests, just a pool of assignments that you can choose from throughout the quarter. It's your job to make sure you stay on schedule. Take this if you have good time management and want to work on your own schedule.",
        "There are no set deadlines, so it's difficult to plan a schedule and stay on track with how many exercises to do.",
        "This class was surprisingly hard.You make your own deadlines and are graded on effort/progress, with a lot of help from the professor along the way.It started out fairly easy with simple exercises. But after around 3\u20134 weeks, I ran out of simple exercises and spent a lot of time figuring out even one exercise. Sometimes, I would work on one for 10 hours and often did not figure out a solution. I think this is because lectures focus on AI and not how to implement things in Lisp.I would not take this class unless you really want Lisp experience or have prior experience. In my opinion, it just gets too hard at a certain point.",
        "While unusual, I thought that the \"choose your own adventure\" structure of this course was effective, especially in that it allowed students to explore the space of problems and increase difficulty level on their own when ready.",
        "Learn by demonstration (lecture) and practice (code critique submissions).",
        "I feel like this class provides a lot of flexibility at the cost of learning effectively. At the start of the quarter you're given the full list of all assignments you can do throughout the quarter. You can choose freely from them and do any of them at any point (for the most part); you just have to make sure you get enough done by the end of the quarter to get a good grade (~30 this quarter). This provides a ton of flexibility for you to learn stuff at your own pace. For the first half of the quarter, pretty much all of the assignments you do will be based on information you have to teach yourself from the provided textbook/readings. This creates a large disconnect between what you're learning in lecture and what you're actually doing in programming for most of the quarter. It's also very difficult to do most of these early assignments if you're not familiar with Lisp, since the book isn't the best and there are VERY few online resources for getting help with Lisp. In the latter half of the quarter the lecture and assignments start to correspond more closely, but even then there are still a lot of assignments you'll end up doing that are barely covered at all in lecture. Also, contrary to the title of this course, this is not an AI class; if you want a class all about AI concepts and theory, take Comp_Sci 348. While the programming techniques and efficiency you learn in this class is applicable to AI, the only real AI concept you discuss in this class is knowledge bases and inference engines, which is discussed in more detail in Comp_Sci 348 anyways."
    ]
}{
    "course_code": "Student Report for COMP_SCI_325-1_20",
    "course_name": "AI Programming",
    "instructor": "Christopher Riesbeck",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.25",
        "count": "28"
    },
    "course_rating": {
        "mean": "3.89",
        "count": "28"
    },
    "comments": [
        "Definitely made me more considerate of certain things while programming, including readability and efficiency, but I don't think the structure of the class was the best way to go about this. Take this class only if you really have to, especially because it is very hard to keep up and keep on track with the exercises.",
        "This course is more like a clean coding course. I don't think I learned very much AI even though it was a lot of work.",
        "if you are not familiar with lisp, it's not a good choice to take this course.if you are familiar with lisp, you may take it.",
        "I think in the beginning of the quarter the instructor should  have done more Lisp introduction in class. By doing that you can easier gain experience in Lisp and so faster move on to more AI related exercises which the course should be about.",
        "you're here because you want to know if you should take this class. the short answer is no. the long answer is no, you will not like it.",
        "The structure of the course is wild. It is so easy to fall behind. This course didn't seem very useful to me because many of the professor's comments felt unnecessary or were at the expense of clarity/code\u2013readability. It felt like we all had to conform to one correct way of writing code, and the benefit of that was unclear. The class felt time\u2013consuming with little benefit, I didn't learn much about programming or AI.",
        "The course is fun, I like the code critique. Please start do the exercises asap, or you may need to spend much time in your mid term or final.",
        "There seemed to be multiple goals in this course: learn a variety of symbolic AI concepts, learn functional programming, and learn to program in an extensible and clean way. However, due to the way the course was structured, the vast majority of time was spent trying to learn to code in Lisp, and not on any of the three main goals. While the AI programming concepts we discussed were relatively straightforward (after reading/thinking about them on my own), the actual implementation and in\u2013class discussions were obfuscated by this archaic and difficult to read programming language. A solid 95% of my time was spent debugging incredibly simple programs that would have taken about 5 minutes to write in any modern programming language. As a result, the primary outcome of this course was me learning how to poorly code in a language nobody uses anymore.",
        "I dont think this course helped me learn AI programming. It was a good course for Lisp programming and functional programming, but lacked in AI.",
        "There is not very much structure in the class, so while you can learn a lot in the class, I think there's also big potential to fall behind because there aren't as many benchmarks to know you hit.",
        "Professor Riesbeck is willing to help you. Put in the hours and get help from the professor. Then you will gain a lot from this course.",
        "if you want to learn coding style and lisp, join this course.",
        "I really enjoyed the course and learned a lot, but it took a lot of discipline on my end to figure out how to make the most of it.",
        "This is a self\u2013paced course, which has its pros and cons. For me, I wish there was more guidance available for the assignments because looking at all of them and being given no direction made me overwhelmed by which ones I should be working on when. I think that the assignments and classes could be more aligned (even just providing a list of assignments that relate to what\u2019s going on in each class as a guideline). It was frustrating to only learn about trace in class towards the end of the term when it could have been used in the beginning.",
        "This class is actually really cool. You've probably heard already, it's not so much \"AI\" as it is \"Programming\". You will get constant feedback on code you write, and learn how to write small pieces of code that are not only efficient but also readable and modular. This class is taught in LISP. If you refuse to take it because of that reason, you're a fool. It's actually a pretty cool language and you'll wish you had many of its features in your programming language of choice. You will learn how to write better Python and JavaScript by learning how to do stuff in LISP."
    ]
}{
    "course_code": "Student Report for COMP_SCI_330-0_20",
    "course_name": "Human Computer Interaction",
    "instructor": "Haoqi Zhang",
    "year": "2021",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.61",
        "count": "72"
    },
    "course_rating": {
        "mean": "4.09",
        "count": "78"
    },
    "comments": [
        "Interesting course, to say the least. It has a unique structure, where you basically make a mock\u2013up and do user testing with your team each week in design sprints. Grading is based on a final presentation and a self\u2013assessment, so it can be hard to figure out how you're doing. I like the idea of the course's very flexible structure and focus on team initiative, but in practice it seemed like things were too unstructured at times, and our team wasn't quite sure how much work was expected of us. All in all, decently easy course, but make sure to keep your team on top of things.",
        "Not a lot of work. Just test and improve prototype every week after doing interviews on users.",
        "This class is so weird. Basically, the class revolves around designing some prototype for a user problem you find with your team. However, there are no deadlines in the process, in order to make the class seem like \"real\u2013life\", where people wont give you deadlines. The difference between this class and \"real life\" is that (1) \"real life\" people (hopefully) get paid, so theres a monetary incentive to getting the work done. (2) We are all students with different classes are substantially harder than this, so this class immediately becomes everyone's last priority. As a result, there is no accountability week to week, and it generally makes people feel uneasy. Also, a huge inhibitor to the productivity of this class is the horrific use of google drive + slack to run the class. All the slides that are slightly different week to week but have different tasks makes everyone sick and devalues all work. Overall, for a design class, this class is extremely poorly designed.",
        "I dreaded taking this course because previous years I heard it was just making a website. Luckily the class got restructured for you to learn and think about design. You think about systems, make quick prototypes, and then takes note about what did and didn't work. I personally liked the class. Also it's very you get as much as you put in. While you can do the bear minimum it's better to try so you can learn more about design and how you think as an engineer.",
        "This course didn't have a canvas page and used a Slack channel instead. It was a little difficult to get used to at first, but Haoqi and the TAs were super helpful during studio and Mysore.",
        "This class is deeply flawed. While I understand the intent of encouraging self\u2013motivated learning, I can genuinely not tell you what efforts on the side of the instructors went into making this class run. At times I felt that the organization of this class was an excuse for little in the way of responsibility on the instructors' side. If I'm wrong, I have no evidence of it because of how little feedback and meaningful direction I got throughout the quarter. Students are expected to have an endless supply of users to evaluate their designs with, but no support is provided for finding this. Additionally, it's expected that these real people will continue giving their time and energy to the project, even through there's no expectation to actually see it through to completion. Finally, this course is marketed as an HCI course, but there is no instruction in the coding side of interfaces. There is no indication in the course description that this would be the case, and this felt like a major letdown and case of misdirection. If you want to copy and paste into over 30 different google slide decks, this course is for you. Otherwise, I believe that to achieve the goals the instructors set for themselves, major revisions to the structure of the course need to occur.",
        "This course needs work before it really is something educational and useful for design. This follows the DTC trend of looking to do way too much and fall short of the TAs and teachers capacity to give sufficiently detailed instruction to all student groups.",
        "This is similar to DTC, where students identify a population with a problem and work in groups to create prototypes. Overall, the pacing was a bit off in this course. We were doing assignments and templates every week, but it's hard to know our progress. The class is what you make of it.",
        "If you take this course, DO THE READINGS AND BE A RESPONSIVE TEAMMATE. There are quite a bit of reading but the quality of these curated readings is pretty good and really gives you a nice breadth of understanding when you finish it. The application of those skills from reading, however, will depend on the quality of your teammates (assigned based on your first name alphabetical neighbors in your discussion section). The studio sessions and discussion/mysore sections were mostly guided application of these design skills/sensibilities.",
        "It's really easy, but I didn't do or learn anything.",
        "really good course, it was actually super interesting and no work at all",
        "the course was completely changed this quarter. I went in wanting to learn some HTML and CSS but there was no coding in this course. It was about the design process and was similar to DTC. We had teams, thought of a problem that people face, interviewed people who have the problem, thought up designs to fix the problem, made prototypes and tested with users (mostly paper prototypes of an app or website interface), then prepared a final presentation. The course didn't use Canvas and instead used a google drive that was hard to navigate. In the google drive was a google sheet with the weekly tasks everyone was supposed to complete but there were no hard due dates so not everyone was always on the same page. You'll have to meet with your team once or twice a week outside of class time to make any progress but other than that it wasn't a huge time commitment, since nothing is ever due. I didn't particularly enjoy the class but if you're into this kind of stuff and you get placed on a reliable team then perhaps you'll have a better experience.",
        "This course was one of the most poorly organized classes I've taken at Northwestern, but I think that was on purpose? In theory, the new 330 sounds great \u2013 a 10\u2013week group design project focused on empathetic needfinding, rapid prototyping, and user\u2013centered design. In practice, the lack of firm deadlines made class confusing, as for the first few weeks, when Haoqi did progress check\u2013ins during class, I never knew what I was supposed to have done already until that moment. The organization definitely got better as we got into the groove, though, as our weekly sprints soon became timed around Mysore discussion sections, giving my team the structure that we needed to make effective progress. Mysore was really where this class shined for me, as the individual attention and feedback we got there was super helpful, and I thoroughly enjoyed talking through our design challenges with my team, TA, and section. Studio, however, felt really impersonal, especially because people were really hesitant to speak up a lot of the time because it was so big. I also think that a lot of the studio activities that required volunteers should have been explained better, especially the emotionally draining ones. Most of the readings we did, especially in the latter half of the course, felt totally unrelated to the rest of the content we were learning. I liked going through design cycles as well, but the sheer amount of slides we had to do every week made it difficult to find the motivation to work on them, even with a 5\u2013person team. I think that the bones of a great class are here, but it definitely needs to be tweaked to be run more effectively.",
        "wish we coded with react / js and actually made something",
        "Not a bad class by any means, but you should go in knowing that it is one quarter\u2013long group project where you find a problem some user group has and design a solution (probably an \u201capp\u201d) and solve it. You don\u2019t do any coding (not a bad thing in the context of the class) and in my case I never even used one of those app prototyping tools. The class is very heady, it\u2019s a lot about thinking about your own process and your own growth, almost to the point of absurdity. Go into it with that frame of mind and you\u2019ll be fine.",
        "Literally so weird. So we basically have \"studio\" time which is in Tech LR2 so it's a giant class that had attendance PLUMMET as the quarter went on because it was basically just people like having a class discussion and the prof sometimes talking about a soft skill that was being highlighted that week, you can definitely make something cool if you want to but it all comes down to what you make of your project and what your team is like.",
        "I would definitely recommend this course to satisfy a breadth requirement. This course felt very \"weird\" for the first few weeks, but looking back, I can definitely say that I have a really good idea about what HCI is about. The workload is light but I still learned a lot. I really appreciate that Haoqi respects students' time and doesn't assign unnecessary work. I also appreciate that all of the course staff are incredibly responsive. Shout\u2013out to Leesha for being a phenomenal TA!",
        "Unsure.",
        "Very different from the old HCI; this was closer to Haoqi's HCI Studio. No coding, just design: user interviewing/testing and prototyping",
        "Class overall asked us to do far too much outside of class.",
        "The organization of the student Google Drive was a little bit convoluted and hard to keep track of.",
        "The class was completely changed this year, so don't necessarily listen to earlier CTECs. It's an easy A, but it's one long group project and the content is so boring ): Haoqi is really enthusiastic and tries so hard, but his lessons were sometimes not thought out to the point that too students had breakdowns due to his \"examples\" where he called them up and asked really personal questions. They volunteered but it felt insensitive at points\u2013 but that's their story to tell so not going to speak on behalf of them.",
        "Class is a bit disorganized at times but the fact that he wants us to focus on learning and not worry about the great made me a lot less stressed. I liked the relaxedness of the class even though there were a lot of google slides to fill out.",
        "He is a great professor. He is very passionate to talk about it and really engages his students. However, the student google drive format was a bit difficult to work around with. possible iteration of design and user feedback is necessary.",
        "TLDR: different from previous 330 classes (no coding involved), no structure \u2013> need to be self\u2013motivated, but easy A. If you are in McCormick, CS 330 is now like DTC but you find your own project problem to solve, and the project is in CS design. If you are genuinely interested in design and testing with users and you're very self\u2013motivated and good with spontaneity and an unstructured project, then this class is for you. It also matters whether you work well with your assigned group and whether you are interested in your project space. Going into this class, I thought it would be basic HTML, JavaScript, and CSS, which it is not anymore, so I personally wasn't motivated to put effort into this class, also partially because it was exactly like CS 397 HCI Studio which I took a quarter before. The class was also pretty disorganized \u2013\u2013 there's no Canvas, all your assignment descriptions and reading links are in a super long, hard\u2013to\u2013navigate Google Sheets, there's no deadlines, and the prof/TAs don't check in to make sure you're doing the many readings as you go, so it was always a mess figuring out what we were supposed to be doing for a given week. But, because of that, it's an easy A as long as you do the readings by the end of the quarter, make some progress on your project, and are reflective in your final presentation and self\u2013assessment.",
        "I would not recommend taking this course. I think it used to be about HTML and CSS and learning the basics of design through web development (that's what I was hoping to learn with this class) but Prof. Zhang flipped this class around into something completely different. Even though the class was my lowest time commitment this quarter, I dreaded it the most. Everything is on a google drive folder (no Canvas) and it is so hard to navigate through the million folders and files. They have you fill in the same templates every single week for your project and write notes about the readings \u2013 super repetitive and annoying. I honestly felt like the structure of this course was so terrible that it made the class so much harder to engage in. On the bright side \u2013 there are no exams and it's very chill in terms of homework. Also, the TAs are great and super helpful, I really enjoyed discussion sections.",
        "Wasn't really what I expected from a CS class (I don't think I wrote a single line of code) but it was really cool. It was similar to DTC but better in my opinion because there was less writing, more freedom, and just better taught the design process.",
        "This class was infuriatingly frustrating. It felt like a waste of time for most of the quarter. The structure and instruction of the class was poor and I was disappointed at the beginning of the quarter, after having read prior CTECs, when Professor Zhang said not to expect the same experience. I believe this was the first time this new syllabus was introduced under CS330 but there was little to no indication beforehand that the class had changed structure. This class is heavily team\u2013based and teams (of 5) are chosen for you \u2013 unfortunately the team I was in was highly unmotivated to get work done and I struggled to keep up with the work that needed to get done. Most of the learning in the class came from many readings (each for which you had to complete a summary and reflection) done outside of class and the lectures were saved for, often random and not helpful, activities. All of the work for the project occurs on Google Drive in folders accessible to the entire class (including, what really should be, confidential self\u2013reflections), which became very difficult to navigate after the creation of hundreds of pages of identical\u2013looking templates within many documents. This class felt excessively stressful, although expectations were vague \u2013 there were no real deliverables besides a mid\u2013quarter and final self\u2013reflection (where you essentially grade yourself based on how you think you grew as a designer). That being said, if you are able to get through the class, get the work done, complete the readings, and basically not slack off, you will make your teammates happy and you can most likely expect a good final grade.",
        "This class is very unorthodox, so be prepared for that.  Grades and deadlines are not as set in stone as most other classes, and there is a much stronger emphasis on your own personal growth as a designer and as a person.  You get to work on a design project with a team for the entire quarter, which is a good way to learn in a hands\u2013on context, but it will only be effective if you are willing to make the most of it.  Try to understand what the class is truly trying to achieve, and you'll have a good experience!",
        "this class was great. loved the approach of grades not being based on a test but on effort and what you learned from the effort you put into the process.",
        "You get out of the class what you put in. Pretty straightforward.",
        "Very unorganized, and often feels like a bunch of busy work. It is often hard to know what you should do next, even with the information you are given. If you were interested in design, I would recommend this class, as it will give you a chance to apply design principles. However, if you don't and you are just trying to get through the CS major, I don't recommend this class.",
        "Not too heavy of a workload and seems like everyone can get a great grade if you put in effort. Lessons become a bit repetitive and most of the work is done in groups. No coding necessary.",
        "This class was similar to DTC in its structure. If you meet with your group and fill out templates, that's the main bulk of the work each week. I think most of the work we did was busywork. It took time, but it was not hard.",
        "This class is... weird. It's pretty easy, and you learn and do some pretty cool things with the whole design process. However, it feels like a ton of busy work with all of the templates each week, and the physical file layout (google drive) was just difficult and unnecessary. Overall, this was a cool class, but sometimes just really weird and difficult to get around, and often filled with quite a lot of busy work. If you want an easy and interesting CS class though, I'd recommend this.",
        "This course did not turn out to be what I signed up for. Was looking for some experience with web development in a project setting, but it turns out this class has no coding at all. It's set up in a series of sprints, first with research sprints where you and your group try to figure out a project to work on. Then there are design sprints where you make prototypes and do 'user testing' with them, but the prototypes are supposed to be super low fidelity and have no coding. The problem is there is no time to work on the project as a team. All class time in both lecture and discussion (where we could be working in groups like for DTC) is completely wasted with stuff that could be taught asynchronously. Then it's expected that we meet as a group twice a week outside of class which just isn't feasible with juniors and seniors in a 5 person group. Discussion was especially bad because we spent the first 35 minutes (out of 50) every time talking about 'how it's going' which was a huge slap in the face when we had team items we were planning to get done that day. Also, the class is \"organized\" on Google Drive rather than Canvas which is absolutely awful because the folders are not set up intuitively at all and my team lost things we had done very often. Overall, the expectations for this class just aren't conveyed very well at all and my team always felt like we didn't know what we were supposed to be doing and the scale of the project was often confusing and it was difficult to get feedback on the work we did since there are no graded assignments except for a single self evaluation at the end of the quarter. Very frustrating being in this class in general.",
        "This class was like an hci studio class, and was entirely group project based. I wished we could have learned to code or do actual design assignments, instead of focusing on a single project the whole quarter. If you got assigned to a team who didn't care or who had different styles, you had to work on something you weren't excited about the entire class. The class was helpful as a general design class, but I wish it was more computer/interface based",
        "Not totally sure what to make of this course. It's a quarter\u2013long group project with randomly assigned groups. There's not really any accountability to make sure all group members are contributing. When this concern was brought to prof, he said to just focus on our individual work... but its a group project, so....I suppose I learned a lot about design. Lectures seemed not super enriching. I would have loved for Mysore to be in ford center were we have tools to prototype. Otherwise, we're expected to do this all on our own.",
        "This class is pretty great. I was lucky to get matched with a fantastic team, and since you're working with the same team the entire quarter, I had a good time. The class itself does not have good organization. There's no canvas page, and you have to page through hundreds of different Google Slides template for the class, so make sure you're prepared for that. Overall a fun class though!",
        "Overall, this is a really chill class \u2013 it leads you to become a better designer. However, I spent most of my time filling up self\u2013assessment questions that hardly has anything to do with the course. I spent more time writing reflections than doing actual work for the project. This class definitely requires to be more structured so that we know what to do in the quarter.",
        "Different from what I expected. I wanted to practice html/css but we ended up doing a simplified version of DTC. This class is what you put into it.",
        "This course was bad. The google drive used to provided course material was very hard to navigate, and it was very confusing as to when assignments were due. The professor gave us lessons on \"empathy\" in design, but applied it very broadly to all aspects of life, and seemed to lack empathy for his students. This professor gave a student a panic attack in one of our lectures during an empathy exercise were he unloaded about things in his life that really are not for a student to be dealing with. We are neither his peers, nor confidants. This class had a very distinct feel that the material had been originally developed for a small group where everyone including the professor knew each other well, and was just scaled up to a 150 students course without changing anything. Any time people brought issues up to the professor he generally brushed them off and would get very defensive of his methods without ever taking a moment to hear the criticism people had for him. This was really frustrating as he would talk about the importance not being overly proud, and being willing to accept criticism on our designs, but was not willing to accept any feedback on this course. I did not learn much new as this class felt a lot like DTC but with CS focus, both the groups and amount of busy work all felt akin to DTC.",
        "Taking the course with someone you can trust as teammates or the team project can be difficult",
        "spreadsheets hell.",
        "This course is really what you make of it. You'll learn some interesting things about teamwork, user research, and design sprints. If you have a passionate group, the quarter will be great.",
        "HCI was converted to studio, did not learn any HTML or CSS, instead it was like a design class, but the big class size prevented us from doing design class\u2013like activities. The project was good but the lack of structure/accountability/technical learning was unfortunate.",
        "Haoqi is a great professor, but you really want to know what you are getting into with this class. You will not write any code in this class. The class is entirely focused on interviewing users and building simple prototypes. If you are interested in broad design principles, tons of freedom in what you work on, and getting experience working with a team, then this is a good class with a lot of interesting stuff to learn. There are definitely some rough edges, and the expectations for the class are often confusing and very free\u2013form, but Haoqi and the TAs are all super caring and will help you make it work if you are honestly trying to learn.",
        "Pretty interesting course. If you liked DTC, or are interested in PM roles, this is relevant.",
        "This class is a lot of busy work and not a lot of CS or web\u2013design. More of a sociology type class",
        "The way in which this course is taught is unlike most other computer science courses. It emphasizes learning (not grades) as the main goal. The professor connect with students via discussion with students. Each week a new design sensibility is experienced through a quarter\u2013long group project and studio exercises/discussion.",
        "This class is great about showing the ideas and process of building a CS project with HCI in mind, the class doesn't involve coding at all but rather is about prototyping and user testing, Haoqi is a great professor!"
    ]
}{
    "course_code": "Student Report for EECS_330-0_1",
    "course_name": "Human Computer Interaction",
    "instructor": "Michael Horn",
    "year": "2019",
    "quarter": "Spring",
    "instr_rating": {
        "mean": "4.96",
        "count": "57"
    },
    "course_rating": {
        "mean": "4.80",
        "count": "60"
    },
    "comments": [
        "This is a good course to take for the interfaces requirement for CS.",
        "Useless lectures, pointless project, grades take forever. But its an easy class with not a lot of work so take it if you need an easy class",
        "Prof Horn is one of the best instructors in CS, understandably. This is a great place to refine any of your front\u2013end skills and apply it to a cool project of your choice! Make sure you like your group, and just know that this class is only as much as you put into it.",
        "Great class overall",
        "I would have preferred if we didnt have to work with jacvascript in this course but understand why it was needed to create a user interface.",
        "This class is 100% what you make out of it. If you have little experience or don't put a lot of time into your project, this class can just be a small blip on your radar for a quarter; if you want to go hard, you can make a really incredible product. Might be hard if you don't have a lot of Javascript experience. Assignments that aren't project\u2013related are a little tedious, but they end halfway through the quarter. Horn cares a lot about HCI, but very obviously doesn't like the class (which honestly makes it more entertaining sometimes).",
        "Definitely introduced me to the formal side of a field I've been in for awhile",
        "The course was pretty laid back and definitely helps to have a good group. Micheal Horn very much has a dad at a bbq vibe and overall was a pretty good teacher.",
        "Pretty basic webdesign class that mainly focuses on your ability to learn and use HTML, CSS, and Javascript. Easy as far as other 300\u2013levels go, really ramps up in the last 2 weeks.",
        "I think this class has the potential to be really useful in terms of teaching tangible skills about front\u2013end development and UI optimization. The way the class is currently structured, however, doesn't lend itself well to too much actual learning. I think there should have been more emphasis on actually learning the languages used for the class (JS, HTML, and CSS), as opposed to teaching us about design principles and related strategies. While the principles and strategies are useful, I think the most useful skills that students could take beyond this class are the technical front\u2013end web dev skills that come with learning the syntax and logic behind how to implement various features in Javascript. Instead of having the chance to learn these languages in the classroom, I had to use online tutorials to pick up the basics. In terms of difficulty, this class is not that hard, and you will be able to get by with a good grade if you put in some effort on the assignments.",
        "It's an okay class. Not very useful, especially if you know HTML/CSS/JS at all, but if you don't you might learn something. The class is not really good at facilitating learning, but you can take a project and make it something nice.",
        "The class had useful info and was well administered.",
        "This class is fun but it is basically building a website so pick something that is interesting to you",
        "Good, chill EECS class. 4 pretty simple HW's plus a final 4\u2013person group project. HW's were graded pretty easily and were very fair. Only problem is we haven't received much grading feedback on our project iterations yet, but I assume shouldn't be graded too hard. Beginning of class is good intro to web dev, then talk more about design principles and it gets more wishy washy, but I definitely value beginning and overall very chill class.",
        "Fine.",
        "Liked this class! Find a good group so that it is more fun.",
        "The lessons and lectures are simple enough but the project assignment will be pretty much teaching yourself how to do most of it.",
        "Good course as an introduction to UI/UX. Hope NU offers more courses to expand more deeply on this field.",
        "This course is a great introduction to both web development and user\u2013centered technology design. I came into it with absolutely no HTML, CSS, or JavaScript experience, but was able to develop something I'm proud of by the end of the course, and now feel really empowered by these skills. In addition, human computer interaction and user\u2013centered design is extremely interesting \u2013 while some of it seems like common sense, other concepts are the exact opposite of what you'd guess, and it's so interesting to both discuss and apply. The homeworks in the beginning aren't too bad, just take a few hours tops depending on your previous experience with HTML/CSS/JavaScript \u2013 they spend a solid chunk of the course, maybe about a third, helping introduce you to the basics of each. How much effort you put into the team project, which is the cumulation of the course, is more up to you, but will be more time consuming than the homeworks.",
        "Overall it is not a hard class. You can learn a basic idea about what human iteraction is. The grade is based on the quality of your project mainly.",
        "It\u2019s an easygoing course and you get what you put out of it. It also depends on your TA and group. Overall, I didn\u2019t learn a whole lot but it pushed me to work on my HTML/CSS coding. It\u2019s a lot more DIY than classroom learning.",
        "The class gave me an introduction to HTML, CSS, and JavaScript, as well as some principles of web development and design, and Human\u2013Computer Interaction. Because the class was so broad, it didn't go too deep into any one topic. Still a good class, though, with a very manageable workload.",
        "great class, not too hard, interesting stuff",
        "I didn't realize that this is more of a design class than a CS class. Few technical skills are taught, and nearly all class time is spent on design principles instead of how to implement them in web. Think of this as DTC for CS, not as a technical course.",
        "Very fun and challenging class",
        "This course is great if you have a good team. Lectures are fun if you are into HCI",
        "good 300 level eecs course",
        "This course is an easy course for me but not definitions in HCI. This course can help us to establish a basic knowledge about HCI and aesthetic about HCI, which is really helpful in the future work.",
        "\u2013",
        "I loved this course! Professor Horn is amazing and the assignments are fun and interesting. I feel like I learned a lot of really important things in this class, and it made me super interested in HCI. The project itself is also straightforward and easy\u2013 just make sure to get a good group. Overall, I would definitely recommend this class as an easy and interesting CS course",
        "cool class where i learned about UI and expectations were fair and project was fun",
        "Prof Horn's lectures were very interesting from a UI/UX perspective and are probably the biggest value you get out of class. The project is cool but not very time consuming",
        "This class if fine. It's better if you have a group in mind. It is a good way to motivate yourself to actually do web dev even though it doesn't really teach you it. It's not that hard to pick up and that's kind of what they expect.",
        "A good class that is actually somewhat useful for understanding the way people use technology. Lectures could be a little boring, but the content was useful and if you care about your project the sections can be enjoyable.",
        "Horn is a good professor, but the content in this class is kind of useless/boring. Easy level 300 CS class to take",
        "Interesting, though rather simplistic lectures, that for the most part are not important to attend. Grading is done slowly and obliquely, so you will not know your progress in the course. In general, this class is entirely dependent on your group for the project.",
        "To get a good grade in this course, you need to know or teach yourself HTML/CSS/JS. Most of the lecture time is spend explaining HCI principles rather than coding. For this reason, the lectures aren't really necessary to succeed since the slides are posted. You'll get out of this class what you put into it.",
        "I learned how to write HTML, CSS, and JavaScript. These are languages that are essential for design.",
        "This is like the DTC for computer science without all the boring stuff. You get to design your own project and most of the things you learn you will have to learn on your own, but expect to be sufficient in HTML, CSS, and JS by the end of the quarter. Little disorganized though."
    ]
}{
    "course_code": "Student Report for COMP_SCI_330-0_20",
    "course_name": "Human Computer Interaction",
    "instructor": "Marcelo Worsley",
    "year": "2020",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.10",
        "count": "82"
    },
    "course_rating": {
        "mean": "4.10",
        "count": "84"
    },
    "comments": [
        "Marcelo cared laughably little about this class. Often our lectures were only 10 or 15min. One time he posted a 30min \"coding walkthrough\" video but he recorded the wrong screen so we couldn't see any of his coding. Instead of rerecording it, he told us to just LISTEN to him coding and follow along??? It took me an hour just to figure out what he was doing. Assignments were often left locked on Canvas until the day they were due, or important links just didn't work. The grading was so, so slow (none of the projects were graded until like week 8) and the head TA was not helpful in office hours. Any time I asked a question, he told me to look it up online. We never even saw Marcelo's face ONCE the entire quarter. It was an easy A but this class consistently frustrated me.",
        "As someone who is very interested in the HCI field, I feel like this class was a huge let down. I really hope this is only because of the pandemic, so to whoever is reading this, please take this review with a grain of salt. The lectures are completely asynchronous, but because of this, the overall class feels very cold and the professor seems very unapproachable. I also felt that some of the TAs/PMs were very disinterested and unprepared. Many of the questions that were asked were answered with \"I don't know\" and \"sure\" but were surprised and frustrated when people stopped asking questions. The grading is also very inconsistent for the class. Often times, points were taken off for things that were specified in the rubric. I also wish the homework better reflected the topics discussed in lecture. Instead, this felt like a basic introduction to HTML/CSS/Javascript. Unfortunately, I felt that I often times learned more from watching YouTube videos than from this class. At the end of this class, I think I was left even more confused about the whole idea of human\u2013computer interaction.",
        "This class is very low effort, and the instructor/TAs treat it that way too. Most of the lectures are about accessible web development, which was actually a meaning reflection on accessibility. Only 3 of 6 projects involve coding with HTML/CSS/Javascript. As a person who's not interested in web development, the only useful part of the course was the final project to make/publish your own website. The \"studio sessions,\" which are really office hours, were poorly communicated in the beginning of the quarter and mostly useless. Course staff left many questions unanswered on Piazza and took forever to grade assignments (including completion credit). Generally, take this class if you don't care about web development but need breadth requirement credit.",
        "The professor's explanations are very unclear. Teaching staffs barely take a look at homeworks before they come. Especially the graduate TA, I'm wondering how come he is getting funded with it. He was very irresponsible so I stopped going to his office hours. Also, responses are very slow on Piazza.",
        "Comp_Sci 330 is a pretty easygoing course that is relatively effective at introducing you to HTML, CSS and JS. This quarter the course seemed a little messy as far as execution in the virtual format.",
        "most of the learning was done independently.",
        "Easy class that does a good job of teaching relevant and useful information \u2013 would recommend",
        "I am glad I took this class. I did have to learn a lot of concepts on my own / in office hours though, since I never had experience with HTML/CSS. During hard weeks, OH is really busy and I think some people didn't get helped. But I really did learn a lot from this class. I also think prior ctecs about worsley being unorganized is kind of unwarranted. I think he made a few mistakes in perhaps links not working/syllabus being outdated, but many other professors have made similar errors.",
        "I was very pleased that we got to learn web development and practice it on actual projects",
        "The coursework was evenly spread out and the TA's had a wide range of office hours for help. I recommend this course to anyone who is looking for a JavaScript/HTMl/CSS course mixed with WCAG.",
        "I was very disappointed with this class. Every week there were three assignments: do a summary of this online tutorial, copy this video assignment exactly, then build a website. It felt like three very different levels of difficulty and I never felt prepared for the end of week assignment. I spent most of every friday (the long assignments were due on fridays) searching online for explanations of CSS terms to complete the assigments.",
        "This class was kinda a mess. I didn't really see a whole lot of direction with this course. Some class materials would be uploaded late and there was an arbitrary submit time of 8:00PM CST, which I would be normally fine with, but some discussions opened the day they were due so you'd have a very limited time window to make a submission, especially with classes throughout the day. If you're looking for an easy course this is it, but I don't think I got much value out of it.",
        "This is a really great course! The way it was structured made it really easy to keep up and the assignments were all very straightforward and indicative of what we were learning.",
        "Super easy class, good to take as a 5th. If you know any HTML/CS/JS, it's not worth taking this class\u2013\u2013you'll learn almost nothing. This class could be a great web dev class, but it falls way short. At least I got a personal portfolio website out of it.",
        "I hated web\u2013design but this is a light class so it was kinda fun.",
        "This was a great CS elective because it was relatively easy and you come out of it knowing HTML and CSS, and learning about accessibility in HCI.",
        "I did get some more practice in the basic web development design principles but the asynchronous nature of the course made things feel a bit hectic and less communicated.",
        "The weekly coding assignments probably took me between 2\u20134 hours (which I would usually start on Friday, when they were due). I enjoyed just sitting and working on these assignments because I think web dev is fun. The other assignment on Mondays and Wednesdays were pretty straightforward Cavnas responses. Overall great CS breadth class.",
        "As someone who had no web development experience prior to this class, it was nice to be able get some practice with html, css, and javascript. It would've been nice to do more coding.",
        "I wish this course had focused more on javascript and PHP.",
        "This course is basically just a nice CS course to take. I'm pretty sure it covers the interfaces one for the major so yeah just take this course. Marcelo is a good guy and you aren't overwhelmed with work at all. You have a very short discussion post every week and a weekly assignment that isn't crazy. I already knew basically every single piece of front end code that we learned so I didn't learn much there, however, this class is 90% about WCAG (Web Content Accessibility Guidelines). So in that aspect I actually learned quite a bit and it really opened my eyes to parts of design that I was missing out on previously. Marcelo is great because he doesn't overwhelm you and just gives you nice weekly assignments to do. From someone who already knew a lot of front end dev, you don't learn much HTML & CSS at all, but the final project requires a pretty substantial knowledge of it, so try and learn some on your own. Also sometimes grading wasn't very clear, but other than that take this course its great",
        "This was my first experience with HTML, CSS and JavaScript and I thought it was a great introduction; however, at times, I felt disconnected from the class. I appreciated how the class was asynchronous and was able to learn the material on my own time, but that also made this class feel a bit surreal.",
        "I felt pretty cheated with this class. All lectures were pre recorded and even when there were errors in the recordings, the professor seemed to waste one trying to fix them instead of just re recording without the mistakes. He also asked us to take notes on different websites with HTML tutorials rather than just teaching is the content himself. I was looking forward to this class but I feel the professor did not put much effort into it and the response rate on piazza for questions was very slow. For example, office hours were canceled for the first two weeks and no one knew and people were asking on piazza and getting no response.",
        "This course has the potential to be really fun and intellectually challenging. However, the online format left it very dry and boring. Most of the course was just listening to pre\u2013recorded lectures which turned out to be very hard to learn from. Maybe think about taking the course again only when it's offered in person.",
        "It's definitely one of those really applicable CS classes that's super relatable to the work that you will do (if you want to become a web developer). Honestly, I think we can reduce the discussions, and give more projects, show more features in HTML / CSS / JS.",
        "Personally, I really enjoyed this class. Since the class was asynchronous, it was almost like there wasn't really a professor present, but since the class wasn't difficult this wasn't a problem. As someone interested in web dev, I enjoyed the weekly projects and assignments. I also really enjoyed the emphasis on web accessibility, since it wasn't something I had considered a lot but definitely something everyone should think about.",
        "I think I can learn some principle and then put them into practice will creating my website.",
        "Take this class while its remote if you want an easy A. Barely had to do anything for this class and was very simple. The assignments range from doing some basic HTML/CSS which I found was useful if you do not already know it. If you know some, it is unlikely you'll get much out of this class. In past CTECs I saw there would be a quarter long project with a group, but we didn't do this for the remote quarter, which was really disappointing. Overall, this class felt somewhat like a waste of time.",
        "This course is incredible, it's not too hard but you learn so much about web design and development.",
        "I quite liked this class. Assignments were cool. Time difference sucks though.",
        "This class is focused on design and web accessibility. While this class was not very technical\u2013I thought html/css/java was easy to learn on my own\u2013 it opened my eyes to how webpages are designed, designing for accessibility, etc.",
        "The discussion is fun.",
        "This course felt easy, even as I was learning a lot \u2013\u2013 this speaks to the quality of the assignments and Worsley's video lectures. Peer mentor OH were also very useful for this class.",
        "learned html and css. Class was very manageable and fair.",
        "Probably one of the easiest 300\u2013level CS courses you can take. Some of the content about web accessibility in relation to user capabilities was interesting, and it definitely got me thinking about interfaces in a new way. But ultimately I felt like the HTML/CSS portion almost took away from that, as I spent so much time trying to figure out how to do everything in CSS that the accessibility guideline stuff kinda got lost in the shuffle. Would have been interesting to do more with the heuristic evaluation of web interfaces and actually discuss those aspects in more detail as opposed to slogging through more CSS attributes. Clicking through an online tutorial isn't the same as going through together and seeing those attributes in action. Also didn't like how the lectures were usually posted just a day before the discussion response was due (or sometimes the day after).",
        "This course was alright. It wasn't too difficult or time\u2013consuming, as there wasn't any live lecture. We just had small assignments due Monday and Wednesday by 8pm and one bigger assignment due Friday by 8pm. There's not a lot of communication in this class between the Marcelo and the students besides a few prerecorded lectures, so it feels like you're self\u2013teaching. The studio sessions are helpful, though, as you can ask TAs questions if you need help with the hw. Overall it's not too bad and as long as you turn everything in you should get a decent grade.",
        "This class is good if you have no knowledge of HTML/CSS. I would say you learn the most by doing the assignments. I felt a little disconnected because of the lectures all being pre\u2013recorded, but that may just be me.",
        "I enjoyed taking this class.",
        "Good class. Not too hard, basically helps you learn HTML, CSS, JavaScript, and how to make websites accessible. I had fun, and would recommend.",
        "This course didn't help me learn anything in HCI filed. To be honest, reading the materials on w3school is more effective than this course. The discuss prompt for each topic is fine, but the project sometimes is really meaningless and there are many homework on website analysis based on some design rules. But there are really not much of them mentioned in class. All the course video is per\u2013recorded and is very short. Sometimes the record fails and I can only see a whiteboard during the whole video, and the professor didn't re\u2013do the short video, and only provided some structure code. This could only got worse during the covid\u201319, I don't recommend this course at all if it's online\u2013mode. I really didn't learning anything from this class. For some topics the professor will record his coding process and call it a day. I think following some tutorial online will be more effective than this course.",
        "Taking this class online was a bad decision. The course was pretty dry and didn't really interest me much other than the fact that I personally wanted to learn web dev. You were basically just given bunch of tasks online and asked to complete them by the deadline. I emailed the professor a few times but he never responded lol.",
        "super easy.",
        "CS330 is a chill class. Professor is not well prepared and messes up a lot of class organizations. The class is mainly organized by TAs, so at the start of the quarter, everything seems disorganized and unprepared. We have learnt HTML, CSS, and a little JavaScript. Most class materials need to be self\u2013learnt and there is not much exposure to advanced concepts.",
        "This class should be two. Plain and simple. HCI and html/css are both very interesting subjects, but cramming together an intro to web design class with weirdly high level concepts about HCI meant that this class just covered both subjects badly, instead of either very well. Lectures were extremely unhelpful, the weekly coding exercises were often just \"copy this video of Marcello coding,\" and the weekly discussion questions felt like they came out of nowhere and didn't really connect to a central theme other than 'web design,' which is deeply unhelpful. Additionally, there was very little opportunity for growth because even though we had 6 projects (5 normal and 1 final), by the time I was _turning in_ my 5th project, I still hadn't gotten a grade for even project 1! That meant that I had virtually no idea of how I was doing in the class until ~week 8, at which point there was very little time to fix anything other than doing well on the final project, but even then we only had grades for 2\u20133 of the projects. Overall, this class felt all over the place in a way that made me feel helpless and apathetic. I do not recommend this class.",
        "After taking this class I have a great understanding of HTML, CSS, and basic Javascript. However, the teaching (at least remotely) is extremely cold and distant. I never even saw the professor's face.",
        "If you have used HTML before, this is an easy A class. I am pretty sure that they are revamping the class soon because that is true. It's not a coding class it's about understanding the design process of HCI.  For the online course you have three assignments a week: discussion post, mini HTML / CSS lesson, and a small project. Very manageable, takes about two hours or less a week. At the end you have to make a website. Unfortunately, the TAs for this class graded everything the week before the end so the only way to make your grade better was to do tons of extra credit on the website.",
        "This course is necessary for anyone going out into the field for a practical career in technology. While, yes, you cover HTML & Javascript, I felt the more important aspect was covering accessibility, and how to build sites and interfaces with all abilities in mind. Virtually, this course did feel disconnected at times, and communication was not always prompt. However, I learned a ton, and it was a solid course overall.",
        "The best part about the class is the final assignment \u2013 your portfolio. HTML and CSS taught pretty well, JavaScript not so much. For that you should learn on your own. Most assignment like discussion points are not very helpful and seem little repetitive but the coding assignments were useful. I started the class not knowing any of web dev and ended up with knowledge of how to build a fairly good website, so overall, a good class. The professor is very nice and responds to every question on Piazza almost immediately.",
        "The course was alright, I think that things could have been organized better and I think that the requirement to attend 5 office hours was unnecessary (and it was later removed anyways). There seemed to be a lot of technical difficulties with posting assignments or videos.",
        "I took this class bc I was interested in web development, and to an extent I did get a good grasp of html, but there was maybe 5 weeks of actual learning. Javascript was a joke because it was only used for one assignment and Worsley forgot to screen record the lecture, so he essentially gave us a javascript \"podcast\" which is quite frankly unacceptable (I just did the assignment with a friend who knows javascript). I understand the value of accessibility, but the sheer amount of time devoted to it was a waste in my opinion as we didn't learn more than surface level information. HTML is easy, take this class if its a requirement or if you want a relatively chill tech elective. Otherwise its not really worth it imo",
        "This class was entirely trivial, and I loved it for that reason.  I have zero interest in HCI and despise modern web design but am required to take this class, so was extremely happy that I had to put in no work, learned nothing, and the class was disorganized enough that some assignments were canceled.  It was asynchronous, which was nice for the same reasons.  If you actually want to learn about the subject, this class might be good or might not be, but this was an excellent way to get the interface breadth out of the way.",
        "ok class. some assignments are really boring and the grading is dependent on which TA grades it.",
        "Would highly recommend this course to anyone looking to pick up some 300 level courses for computer science requirements. Not the hardest class coding wise, but I still felt like I learned a lot. Good intro to HTML and CSS. Would probably be better in person though, it was sometimes confusing what the assignments or requirements were for each week.",
        "This was the worst course I took at Northwestern. Please, please, it should just stop existing. Professors and TAs didn't care about the course at all \u2013 I guess they just knew that this course is just not worth their attention. I haven't watched a single lecture \u2013 and yet managed to complete homeworks. Even if you want easy A......... DONT .... TAKE.... THIS.... COURSE......."
    ]
}{
    "course_code": "Student Report for COMP_SCI_330-0_1",
    "course_name": "Human Computer Interaction",
    "instructor": "Marcelo Worsley",
    "year": "2019",
    "quarter": "Fall",
    "instr_rating": {
        "mean": "4.43",
        "count": "92"
    },
    "course_rating": {
        "mean": "4.22",
        "count": "91"
    },
    "comments": [
        "This class has about two coding assignments and the rest are evaluations of website design. This class is similar to DTC, but for Comp Sci students.",
        "The professor is very nice and passionate",
        "This course is a lot of fun. I really enjoyed learning how to build and design my own website for the final project. I think it's really enjoyable if you like design and coding, because this class is kind of the intersection of the two.",
        "The section time of this class is much more interesting, you can communicate with different people there.",
        "The course title is quite misleading. This class should be renamed to accessible web development, because that's what you learn. It's pretty self guided, and easy to do. Depends on how much effort you put into it. The classroom sessions are quite useless, with daily quizzes so that people attend, which is just a testament to how boring the sessions are so as to blackmail students to attend them. An easy A",
        "The class is great if you can take it with 3 reliable friends as the majority of the class is based around a 4 person group project. There were in\u2013class quizzes to encourage students to attend lecture and do the readings, but the quizzes made up such a small percentage of the grade that most people just stopped attending lecture after a few weeks. Grading for assignments is very transparent and generous as you are always provided the rubric used to grade the assignment.",
        "This class was interesting, and I feel that I've learned a lot about designing software. However, I was expecting it to be a lot more technical, whereas in reality the hardest thing you'll have to code is intro\u2013level js (ignoring whatever you do in your project). This isn't necessarily bad, its just not what I expected going in. Marcelo seemed passionate about the topic, which made the lectures much more interesting.",
        "The professor is a pretty good lecturer. He attempts to be fairly personable during lecture, which I imagine is hard in a large lecture hall, but this class is designed so poorly that I honestly cannot recommend it. My truthful opinion is that this is the worst class I have taken at Northwestern, and I hope that I never come across anything worse. I also want to make it clear that I don't think my bad experience was because of the professor, unless he had a hand in designing the class (a different professor teaches it every quarter, so I'm unsure about this). My interactions with the professor and the TA were maybe the best part of this class for me.If you're thinking about taking this class to fulfill your Interfaces breadth requirement, don't. Just. Don't. Unless they redesign this course, I don't think it should exist. I think this class's existence is unfair. This is coming from somebody who was extremely excited for this course before I took it and realized what it actually was like.Right from the start, this class felt disorganized. Nobody was assigned a studio section until a week or two into the course. Peer mentors' office hours weren't scheduled until two weeks into the course, and even though I only went to office hours twice, one of those times, the peer mentor didn't show up. I get that life happens and sometimes you can't run your office hours, but it's not that hard to quickly notify students of an OH cancellation via an online announcement, especially when peer mentors get paid for what they do. I don't think the professor and the TA held office hours either. If they did, the times at which they were held was not distributed in the syllabus or anywhere online that I could find. One time my studio section was notified of a presentation our groups had to give only three hours before the class. To be fair, this presentation was very informal, and the TA to whom I presented seemed to be very understanding of the situation.I also felt that this class tries to be too many things at once. It is only one quarter Human\u2013Computer Interaction. The rest is one quarter front\u2013end development, one quarter user\u2013centered design, and one quarter user accessibility (I think this part was the professor's own addition to the course in an attempt to make the class more his own and more engaging and interesting, which I honestly appreciate), but the course only achieves a half\u2013baked version of any of these. We were told we would learn how to code in HTML and CSS during our studio section. What this consisted of was one class where we were shown an HTML file and corresponding CSS file, and it was explained to us that the HTML file linked the incorrect CSS file, so it was wrong. That was it. We didn't spend ANY in\u2013class time on JavaScript. All we were given was some suggested links to navigate to for online documentation. So not very helpful or informative at all. I learned very little about front\u2013end development.In lecture, we would learn about things that we would not ever use for any of our assignments (different types of testing that we would never use to test our project, for example), so lectures felt like they didn't matter.I'm really sad that I am this happy that this class is over.",
        "Lectures are mostly about design theory. Discussion is mostly time to regroup/plan with your team. Lots of learning about front end development/version control will happen outside of the classroom",
        "YOu mostly learn by doing in this class. Lectures could have been skipped but he gives reading quizzes that you have to be there for. You learn a lot but its mostly on your own.",
        "This class is great if you want an easy CS class, and if you have absolutely no design or HTML/CSS/JavaScript experience, you'll probably learn something. If you have any experience at all in those things I doubt you'll learn anything new.",
        "This course seemed to not have too much organization involved, but the class was still very enjoyable by having interesting lectures and a fun project. Professor Worsley is a great professor, and the TA I had for my section was helpful in making sure that development of our prototype was going smoothly through offering useful suggestions and feedback. Overall, I enjoyed the experience I had with this course.",
        "I was really interested in user interface design so this class was great. I will say that you don't learn anything mind blowing, but it definitely introduced core concepts of what aspects of a UI makes it easier for a user. We learned some HTML, CSS, and Javascript, but only through doing the homeworks. There no real instruction in how to code in those languages, just references to tutorials, which, to be fair, were effective in teaching the languages to let us do the assignments. But, I don't feel comfortable saying that coming out the class I am super comfortable coding in those languages outside of the course, where we were given skeleton code. The quarter long project was fun and not too time consuming. Overall, would still recommend this class for people interested in UI.",
        "This class is okay.  Marcello is really nice and often brought snacks to lectures.  Lectures were unhelpful and lots of students stopped showing up.  I wish the lectures were replaced with group work time instead.",
        "If you go to class and do the homework you will be fine. Most people end up with an A. There are no exams just in class quizzes that count towards your participation grade. The final project is not bad and the TAs are very chill. I would recommend this class as an easy class. Also, Marcelo brings donuts for the class every once in a while!",
        "The criterion of the grade of class participation is awful. I went to all lectures. But I just got 20% percent of the class participation. Some knowledges introduced in the course are old. It does not help me design a good webpage.",
        "I accidentally took 394 before this. Was funny.",
        "worst class I have taken in NU, this class is so unorganized and random. professor did NOT teach a single thing about HTML/CSS/Javascript and expected you to build a complete website in three weeks. grades are arbitrary, some reading quiz suddenly worths 3x as much than others because the professor felt like there were less people coming to class.",
        "I was very excited for this course because of the hype around HCI, especially in the biomedical field. This class is very learning\u2013technology based (not a bad thing, just a product of the professor's research interests), so I feel that it wasn't the most helpful for my specific interests. I also did not realize the extent of the coding assignments. It was fun to learn html/css/js but I don't think I'll ever need it. I got really lucky with my group for the project, but either take this class with friends or be prepared to do a lot of work towards the end of te semester.",
        "Super fun course to take if you have a group of friends. You get to design and build a computer prototype to tackle a unique problem! You also learn basic HTML, CSS, and JavaScript.",
        "Easy class if you already know HTML/CSS and Javascript.",
        "Professor is good. Course structure is good. But it's more like a design course instead of CS course. It's a pretty easy course to take.",
        "Marcelo doesn't  do anything in the class besides show up for lecture. It's up to you to teach yourself HTML5/CSS and JavaScript, and I believe he doesn't hold many office hours. In fact, I believe he states on his syllabus to not show up to his office unannounced. Besides that, he's pretty cool (he brought snacks a couple of times to class). It's also important to note that are no exams in this class, just easy reading quizzes. If you're a CS major, take this class. It's extremely valuable and important for internships because a lot of companies look for the skills you learn and implement with the projects and assignments you do here.",
        "Definitely a manageable class. If you put necessary effort into the assignments you will do fine.",
        "This course is an easy A. It's not interesting or challenging by any means but is really really easy.",
        "It was very cool to learn by creating our own project.",
        "Didn't like this course, many things seemed pointless and was somewhat applicable.",
        "Overall very easy class if you get a good group. Lectures are pretty pointless but you need to come in order to get the reading quiz code. Don't need to read either, can control F through the quiz. Prof Worsely is super kind and sometimes brings food to class.",
        "This class is an easy\u2013A. I did not learn about interface design at all. I think that the lectures could have been much more interesting; I know so many students who would love to learn more about interface design. The main project is to design an interface to solve a problem like being financially aware or making environmentally aware purchasing decisions. It is a good idea on paper, but because the lectures do not focus on teaching HTML/CSS and Javascript at all, the final product does not satisfy the majority of the students. On the other hand, the homework is very easy; the class is an easy A and a might be a good 5th.",
        "I heard the class has a light workload, but in reality it needs more work than I thought. The professor never talked about anything technical regarding html, javascript, or css, and he only talked about design process, which is covered in DTC for engineers. The attendance and reading quizzes are really strict and annoying. I attended almost every single class but didn't get a very high grade. Out of the 100\u2013200 people class only those who answer questions would get full mark, but a lot of lectures are not really useful. Overall fun since I got to work on a project with my friend, but not so friendly to someone new to html.",
        "It's good for doing front\u2013end development work.",
        "The class lecturers were insightful, the team project was fun to work on, and the readings were interesting.",
        "EASY COURSE.  Don't expect to learn any HTML/CSS/JS in class (you will have to learn it yourself), lectures are focused on user testing/design process.  Also, the course is kinda a mess because so many different professors teach it.",
        "Many trivial tasks, boring lecture, weird grade standard.",
        "This is an interesting class with a light work load. I would reccommend it but only if you know how to code websites or know someone else who does and will take the class with you. I had to teach myself css in this class which probably was the most beneficial thing to come from it.",
        "You have to teach yourself HTML, CSS, and Javascript",
        "Super easy class however iif you know anything about web dev dont take it. Lectures are USELESS and don't teach anything and whats worse is attendance is mandatory due to in class quizzes.",
        "The course assignment deadlines are very sporadically spread over and is very exhausting to keep up with them. Also there is no attendance in the class and the class participation marks are randomly distributed to the extent that it may seam unfair. Most students take this class because it is easy but I would suggest you to take some other easy class if you want an A. A\u2013 can be managed in this class if you keep up with the assignments regularly. For A it may be a bit random and you may feel helpless that you didn't achieve it even if you did everything correct.",
        "The organization of the course definitely needs work, but the valuable takeaway of the course was learning how to develop a website. I really enjoyed it and definitely will use this skill in the future.",
        "It is 100% project based, which is nice. It is similar to DTC as it basically is a design class. There is a good amount of work, but it is not overly difficult. I learned a lot because there is less coding instruction than design instruction.",
        "Pretty easy class. Lectures are kind of useless. It was fun working on the project with your team.",
        "This class culminates in the completion of one project due at the end of the quarter. The project is interesting and you use/ learn a lot about interface design and implementation along the way. However, lectures were useless. Every lecture relates to accessibility, which would be fine, but the professor only discusses principles and never gets to implementation/ we never talk about code in class. A lot of people in the class are new to HTML, JS, and CSS so implementing accessibility while learning the languages is really difficult. Class time is essentially wasted every week and there's a reading quiz every time to ensure some degree of attendance. The readings are often redundant and add very little value. Additionally, the professor is not well organized so deadlines and assignment expectations are often unclear.",
        "I like this course. It won't take too much time and you can learn some fundamental knowledge about HTML, JS, CSS.",
        "The workload is not heavy and most of the homework is not technical. You only need to do some coding on HTML/CSS and JavaScript. Of course you need to do more coding doing the final project but totally it's not hard.",
        "This course was very similar to DTC in my opinion. You work on a project with your group and submit papers that go along with it. This course doesn't teach you anything about backend, so none of the prototypes in my section actually worked. Most of the frontend coding is also self\u2013learned, the lectures don't actually teach you how to code. Attendance also counts as there is a quiz every class that counts towards your grade.",
        "This course was good overall. Not great. I wish we had more time to work on our project at the beginning of the course instead of having 2\u20133 weeks before we begin our project.",
        "The lectures are a pretty bad but nevertheless the project can be really interesting. If you put in the work it\u2019s easier to get an A.",
        "Design and accessibility were key focuses of the class that I thought was important and emphasized.",
        "I liked this course a lot because the lectures were interesting and engaging and the homework\u2019s/projects will all help me in my career. You have to teach yourself basic html, CSS, and JavaScript. There are 4 individual homework\u2019s (two are coding) and then a final web application group project that you turn in checkpoints for along the way. Sometimes it\u2019s a lot of work but sometimes there is no work, so it\u2019s just a balance. There were reading quizzes in class too for participation and discussion participation was mandatory. I would recommend this course because prof. Worley is very passionate and it\u2019s fun to learn from him in lecture",
        "Project groups are 4 people, so take this class with 3 other people that you know you work well with. If your group works well together, then I think it will be a great experience. Lectures don't teach you much but they are mandatory and pretty interesting. There were definitely times when I felt like there was too much asked of us, or that we didn't get enough time to complete each prototype, so I spent a lot more time on this class than I thought I would.",
        "This course was taught very differently than it was in the past. The professor put more of an emphasis on accessibility which was great. The first 3 individual homeworks were a pain and felt like busy work. The project could have been really fun, but it felt forced with all the weekly report and writeups.",
        "noice",
        "This class has no meaning for engineering or computer science students, unless the other courses in the same quarter have too much burden. For homework, they just show you some websites for html/javascript tutorials, and you would find every group only made simple pages as their final designs. After finishing the class, you will find everything you did cannot help you in future jobs. The professor hopes you to read a lot and do quizzes as class attendance, but the only important thing were just two systems of design principles. It means knowing about the other contents is just waste of your time.What I cannot tolerate most is that the professor likes to modify requirements right before deadlines. Most deadlines were at 6 p.m.. There was one time I found he needed us to add one more page to a report, and it was 2 hours from the due.",
        "I loved this class, but you get out of it what you put into it. Its easy but I personally learned a lot and you get the freedom of choosing a project you like. Marcelo is also the sweetest person and brings snacks to class and is very passionate about the subject",
        "I liked how this course placed equal importance on usability as it did functionality.",
        "I liked doing user testing in section time slots",
        "Felt like a lot of busywork at times, but it's okay as a basic intro to front\u2013end stuff."
    ]
}