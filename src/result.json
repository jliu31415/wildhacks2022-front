{
    "ctecs": [
        {
            "course_code": "COMP_SCI_101-0_20",
            "course_name": "Computer Science Concepts",
            "instructor": "Lawrence Birnbaum",
            "year": "2019",
            "quarter": "Fall",
            "instr_rating": {
                "mean": "3.09",
                "count": "76"
            },
            "course_rating": {
                "mean": "2.46",
                "count": "79"
            },
            "comments": [
                "this course is really useful if you are interested in computer science, but not sure which part of it. you get to hear about every aspect of the field and different applications of CS through guest lecturers. most of the lecturers were pretty interesting, and I discovered a field I was interested in that I never would have considered before. the weekly mini\u2013essays are sometimes annoying, but fine. it's interesting to read other people's though the peer grading system. if you just do the work, you'll be fine.",
                "Easy, mini\u2013essay every week. Interesting if you have no background in CS, but kinda boring otherwise. You don't really learn a lot unless you're completely unfamiliar with CS, and as a senior CS major taking this course it was all very redundant. Not sure why it's still a requirement for the major if it's not a prereq for any class.... A lot of seniors just have to take it. Bright side, its an easy A.",
                "101 is a good way to get introduced to what kind of research occurs in NU's CS department. It helped me to learn that I am interested in learning more about systems, and so I plan on taking a higher level systems class this spring. The class doesn't require too much work for each week, and you can have fun with the essays, so that you learn something new and interesting each week. This class may have a lot of negative reviews, but honestly it's not a bad class. I would take this class to offset some difficult classes in a quarter. Of course, as a CS major you can replace this class with a 300 level, but if you're interested about grad school and CS, then I think this class can provide a good overview, and even give you a chance to introduce yourself to professors you might want to do research with.",
                "This course was extremely disorganized and the professor would not answer any emails.",
                "Interesting learning the different parts of computer science.",
                "This course is extremely unorganized. There is an essay due every single week, along with two projects that are also essays. Basically, the class is a lot of busywork. It is not really what you would expect a computer science course to be: there is no coding at all and barely any technical content. I would only take this course if you are a CS major and it is required. Furthermore, the grading is extremely unintuitive on the essays. Some of your grade is based on how accurate your peer reviews are in comparison to a TA's.",
                "I found this to be an absolutely terrible course. For starters, the grading system was beyond messed up and created anxiety amongst students off the bat. I truly did not understand the rational for offering peer grading: at one point, one of the professors said that they used peer grading to avoid the TAs being inundated with grading, but that's how every other class on campus works! Reducing (necessary) work for TAs is no excuse for messing up our grades. Also, the peer grading system was totally unclear, and often students did not take it seriously. In terms of content, I found the class very hard to follow because we had a different instructor every week. Also, the content tended to be quite boring.",
                "It was a very easy course with little time commitment, but don't expect to learn anything.",
                "the course was very poorly organized. Half of the assignments weren't graded until after the final",
                "Worst part of the class: Disorganization exacerbated by the seemingly \"I don't care at all\" attitude of Professor Birnbaum. I am sure that others have detailed his lack of communication and inconsistencies throughout the class materials. In my opinion, this is unacceptable, even for a 101 class. It's not fair to all the people who signed up for the class and expect a basic level of clarity in terms of learning expectations and goals. It felt extremely disappointing when I realized that I was expected to submit every single essay to be graded at a high standard and absolutely not a minute late (or 0 credit), when the class staff were constantly late with everything, literally canceling a project at the last minute or constantly asking us to submit peer reviews the evening before they were due the next morning. When I started working on my final project, I had literally not received staff feedback on any of the 8 essays I had submitted throughout the quarter. The professor refused to do basic things like sending out emails and updating the Canvas page, and had a snarky attitude when students expressed frustration on Piazza. So much work therefore fell to the TAs. It was clear that this class was not the priority of the TAs, which is fair. However, they put in a good effort and improved throughout the quarter. While the disorganization and lack of effort from the professor was absolutely terrible, this class can be worthwhile if take it upon yourself to make it so. The guest lecturers deliver interesting ideas in their respective areas of expertise. Some were very good. I learned a bit about many disparate areas of computer science in lectures and skimming the weekly readings.",
                "The class isn't too difficult but the course administration can be frustrating. Expectations/guidelines aren't always made clear. The class is \"led\" by Larry Birnbaum but a lot of the actual work is done by two head TAs. Due to this understaffing, grades can often be delayed and some announcements occur with little notice.",
                "Take this class once you have some experience with Comp Sci. The class is currently being restructured and might change but we had to write a single\u2013spaced paper every week over what we learned and sometimes if you don't have a background in CS then it can be difficult to back up what you are saying. We also peer\u2013reviewed other people's essays (on average four a week) for a grade. We had two big essays this year. I recommend this class if you have at least a little bit of background and have time to write the essays (which does become easier) because it does have a curve in the end so you will not receive a bad grade.",
                "The lectures are very enjoyable. It is very fun to hear from many different professors about their experiences in CS. However, the busy work for this class makes it very unenjoyable overall. With a mini\u2013essay due every week which is peer graded, it makes the class a lot more stressful than it needs to be.",
                "This class is very heavy on the readings. It's supposed to be for freshman who are interested in CS to explore the different fields within it, but some of the readings are very technical and are not meant for beginners.This class is also very disorganized. Requirements for projects were unclear and due dates were changed pretty late (although the changes themselves were favorable).",
                "no learning at all.  just a ton of essays.  get caught up on the material, come up with an opinion, and say it.  very very very useless class.  some time needed, but not \"hard\"",
                "Larry was a really hilarious professor, and I wish I could have seen more of his lectures, but we mostly learned from new guest lecturers every week. Occasionally the lecturers had interesting things to say, but coming from a background of no computer science experience, I was frequently lost and often confused about the content. It was mainly an inability to understand the technical details of the information I was being taught by guest lecturers. The weekly essays are tedious and felt just like a way for me to waste time \"researching\" a topic I wasn't going to learn much about anyways. Overall, it's an easy class, but it feels useless.",
                "This course was very poorly organized and most of the time students just complained. The weekly essays were a waste of time and didn't actually result in any learning. The TA's were bad, too. I would not recommend taking it unless you really have to.",
                "Larry is the best, great guy. The class itself is not necessary to attend, and the work was super minimal. However, it was very disorganized and the TA's didn't communicate with the instructor and were always on different pages. I didn't mind taking the class because it's an easy A, but be prepared not to get much out of it.",
                "Do not take this class. The readings are long and boring, the lectures are not engaging, and we learn too many topics at such a shallow level that we end up not learning anything. Plus, the course is the most disorganized I have ever taken. The only good thing was that it's an easy A. Take 110 or 111 instead, you do not need to take this course.",
                "Is it an easy A? Probably. Is it an interesting course? Not really? Is it well run? Most definitely not. This is not a Comp Sci class, it's a writing class. If you are fine with writing about topics you barely know, go ahead and take this class and get the easy A. If you actually want to learn CS, stay away.",
                "Communication and organization were definitely lacking. The course has a lot of room to grow. Piazza was a bit of a mess. The mini\u2013essays were a good way to share our learning, although their frequency came at a great cost to quality.",
                "Was a little disorganized, but it's a 101 class, it's nothing outrageous. Just go with the flow, check canvas regularly and keep up with assignments and you'll come out with an A no problem.",
                "This course was not well planned out. It felt as if the professor in charge didn't spend time on organizing the course, and as a result everything felt up in the air all the time. We were told to write essays on topics that were introduced during lectures, but there were little to no guidelines on writing those essays, we didn't receive feedback on them so we didn't know how to improve our work, instructions on peer\u2013grading weren't clear, and TAs were giving different instructions... When I approached Prof. Birnbaum about these issues his only advice was for me to relax. I think the intentions were good and this course is great for introducing different topics in CS but the way it is built was very confusing and in the end I don't think we got out of it what we could have.",
                "The class was very disorganized and the professors coming in did a good job of explaining their focus, but the essay that was required seems pointless if we have to find out more about the topics ourselves",
                "I liked getting to hear about different computer science topics from a bunch of teachers in the department. That definitely helped me decide which topics and teachers to take classes with or avoid in the future.However, don't let the 101 number fool you. This class does not have a light workload for being an intro level class. It definitely feels more like an English or writing heavy class with a focus on computer science topics instead of a computer science class. Be prepared to write at least one essay a week.",
                "The method of peer reviews is unreliable and ineffective. The quality of the lecture entirely depends on the teacher, ranging from highly engaging to stimulating very little interest. The topics you write and learn about are very interesting.",
                "I am pretty confident that this is far by the most useless course at Northwestern. The idea behind why it was introduced as a CS major requirement in the first place seems reasonable: it invites a number of professors who are experts in their fields to speak about a variety of important topics in computer science. This is intended to give students a general introduction to CS and get them excited about the subject, although sadly, the opposite probably occurred. The execution and management of the class was extremely poor. The entire class is based around writing short weekly essays about different CS topics with a couple longer essays sprinkled in between. Conceptually, this isn't a terrible idea and is rather common among introductory courses, but was completely mishandled. About 75% of the grades for the class were returned the weekend before grades were due. A well organized class would never have a six week delay between when an assignment is due and when the grade is released, especially when students are expected to integrate feedback to improve subsequent assignments. The peer review system implemented to lighten the grading work for TAs was also comically unhelpful. An essay you spent 20 minutes on will likely receive the same comments and grades from peer reviewers as an essay you spent 3 hours on. Readings for topics instructors were going to speak about were not always assigned, and there was absolutely no incentive to attend class or discussion sections outside of the participation grade. I recommend taking any CS elective in place of this course unless you really need a joke class to balance a difficult schedule.",
                "This was probably the worst class I've taken at this school so far. Not even because it's hard, it's actually really easy. The one\u2013page essays each week aren't hard, and you can write them just based off a couple of the readings each week so there's no incentive to go to lecture. The projects, which are just essays, are also not difficult if you just do some of the readings and a little outside research surfing the internet. Easy A. What I didn't like about the class is how disorganized it was. The TA's and professor don't answer emails, deadlines constantly changed, especially close to when an assignment would be due, and the communication between the TAs and the professor was not where it needed to be. Prof. Birnbaum didn't even know the requirements of our finally essay after the TAs had changed them. The class was frustrating because of stuff like that, and feels more like busywork and than actual learning because it's so disorganized, but its an easy A for a distro or CS majors.",
                "The planning and execution of this class substantially below Northwestern standards. Every week, we are asked to write a single\u2013page essay, and once in a while, a 3\u20135 page long essay. It's currently December 7th, and the last grade I received for a homework was for one that was due October 30th. I wrote two 3\u20135 page essays (which are considered to be projects and determine 40% of your final grade). I submitted the first one on October 23rd, and still did not receive any feedback on it. I am expected to submit the second project on December 8th, but without knowledge of what the graders criteria is like, I have no clue how I can improve my writing for it. The weekly essays are graded by four other students who are taking the class; I have no idea what the graders are doing while we are being required to go through our peer's essays. I have no clue why McCormick makes this a mandatory class for CS majors. It might be a good introduction to different areas of the disipline for non\u2013CS students, but that's all it can be.On the flip side, it's an easy\u2013A.",
                "The structure of the course was a little boring. There definitely could have been more interactive classes. The miniessays were fairly easy but sometimes challenging based on the topic.",
                "This course beat my expectations for it. While I viewed it as a potentially easy CS class to take alongside a couple notoriously difficult classes, it wound up being pretty interesting. I wish I had taken this class as a freshman, because I think it actually did a great job providing a quick survey not only of CS in general, but of NU's offerings. A surprisingly enjoyable class that is easy while offering a nice opportunity to learn more about CS from a high level.",
                "Wow this class is low key a mess. I personally loved it because lectures were really interesting. We had really smart people from each subject within CS come in and give little lectures which was really cool for me as someone who knew nothing about CS and wanted to know more. But no one else went to lecture. Lectures were pretty much empty. And the assignments were so weird. We wrote mini essays and had weird peer reviews that were on a totally messed up grading scale. Also sections were a waste of time. People were really freaked out about grading but there was no reason to worry. This class is just a cool way to get to know a little about CS, especially if you don't freak out about the assignments and realize it's a 101 course. Also Larry is hilarious.",
                "This was my least favorite class by far. I didn't realize that we would have to write an essay every week. The grading in this class is awful, and I don't know what grade I'm going to get because there are assignments from months ago that haven't been graded. Nobody ever explained what the essays are supposed to look like, and for some reason your (anonymous) peer reviewers seem to hate you specifically. The entire class was so disorganized, and overall I was not a fan. By the end of the quarter, only like 10\u201315 people of 80 would even show up. Additionally, the professor never responded to one of my emails, which was annoying.",
                "Very unorganized. It was a hot mess of a class. Piazza posts were never answered promptly, probably because this course was way understaffed. There were a lot of miscommunication mishaps with the TAs, and deadlines were often times unclear. The details of the course weren't really hashed out, and there was a lot of last\u2013minute changes.",
                "Writing almost open ended essays was exciting for me, as I could literally make huge jumps in the direction of my writing. The course also involved different instructors giving lecture about their fields and specialization and this was engaging.",
                "The class Is just very disorganized. It is a relatively easy class; but the whole thing is unclear. There is a different lecturer every single week; each assignment is written; there is no actual coding. Some of the lecturers are interesting, while others are not. The main this is just the organization of the class. The first draft of the final paper is due today and I am yet to receive a grade for project one; the second biggest assignment of the quarter that was due before the midterm. I am skeptical that I am not going to get feedback on the first draft of my final before the final draft is due...",
                "I really liked that we got to hear from different professors each week. It helped me decide what CS classes I would like to take in the future and what areas of study are interesting to me. The structure of the class was not good. There was no syllabus until the second week of class. I didn't think that the mini\u2013essays or peer reviews reinforced what I learned in lecture. I wish that the weekly assignments had been something different \u2013\u2013 I don't think I am a better writer or better at peer reviewing now. There was not a lot of feedback on any of the essays or peer reviews, so it's hard to know what I could have improved.Because there was limited communication from the professor, it was hard to know how to do well in the course. The peer grading system seemed impersonal \u2013\u2013 I felt like my grade depended on my classmates instead of on someone qualified giving me feedback.   Although I appreciated that we did not have to buy clickers, I definitely think that there should be a way to account for people who go to the classes \u2013\u2013 most people didn't go. I did not appreciate that the people who did attend were singled out and asked to discuss the readings and then embarrassed if they couldn't answer questions by a few of the professors. It was really hard to understand how we were supposed to discuss the readings in a lecture setting \u2013\u2013 it detracted from the information about computer science that the lecturers could have given us and didn't make a lot of sense. I think the course needs to be restructured, and I do not understand how it can be so hard to put together a functioning class. I wish I had taken the additional breadth course instead of this class. It would have been much more useful and probably less stressful. I would not recommend the class.",
                "This course was extremely disorganized.  Instructors never were prepared, we had to write an essay every week with no feedback given, and section was very boring and the TA was illprepared.",
                "This was a nonsense course. The fact that it is required as a CS requirement speaks to how poorly thought out NU\u2019s CS program is. It\u2019s an easy A, but ultimately should be scrapped as it\u2019s a major waste of time and tuition money. Easy A though so if you want a GPA boost definitely take it.",
                "workload can be ridiculous but i'll take it over some 300\u2013level Comp Sci classes",
                "This course was not what i expected at all. It was a lot of busy work which was challenging simply because I came into the class with no knowledge of computer science (as it is a 101 level class). The weekly readings and mini\u2013essays were often hard as they required lots of outside research on my behalf to even understand the content being discussed. The class is an odd mix of freshman with no experience and seniors who either had to take this class or another 300\u2013level class and are therefore far more knowledgable about CS than myself and many of my peers. This class was quite a hassle for no reason, because I hardly learned a thing. Love Larry though, even though he wasn't there for most of the guest lectures (which are every week). Overall, poor communication and organization, especially about projects, work takes forever to be graded (I have no idea what grade I have in the class right now, during reading week), and about 10% of the class shows up to lecture every class. Just take 110 or 111, skip this class.",
                "It's cool to have a new guest lecturer every week, though overall I felt like the lectures were too high\u2013level/vague/general for me to constructively take something away from them. With that being said, the overall setup of the class in surveying a number of topics in the field of CS at a high\u2013level is something I liked. We read a lot of cool and interesting articles and homework assignments (weekly mini\u2013essays) compelled us to think critically about each of the topics covered in the class. Not too hard, in terms of difficulty, if you do all of the work.",
                "This class was very disorganized. We didn't have a Canvas for the first week and a half and lectures felt like a waste of time. Assignments were hardly graded on time and overall, this felt like a very useless class.",
                "I don't think this course is a good intro to computer science for new students",
                "The way in which this class was run clearly induced significant frustration among the students. I personally didn't really mind since I'm a senior and don't mind an easy class, but the assignments and expectations out of this course need to be refined significantly if this is going to serve as a good 101 course for the CS major. For example, there was significant confusion over the latter two projects, what their deadlines were, and whether they would allow partners or not. The statements made by the TAs often conflicted with what the syllabus said on Canvas. I understand that this is a ported\u2013over class and slapped together quickly since you couldn't find anyone else to teach 101 this quarter, but for the future I really would just sit down for a couple of hours and clarify what time each weekly assignment will be due and when the three projects are due, and finalize that in writing on the syllabus. The peer grading + TA system is confusing at best and adversarial at worst \u2013 why would you incentivize students to give lower grades to their peers in hopes of 'matching' TA grades more accurately and raising their own scores?",
                "Disorganized course",
                "This class was a mess. We didn't get our syllabus until the second or third week of school, and we were not given any of our project grades before the drop deadline, so I was not sure how I was doing, and honestly still not sure as I still haven't gotten my project grade back yet. The fact that you are graded on your peer grading skills is crazy because you are graded pretty harshly on them. There is an essay due every week with 2 (or 3) projects which are 2\u20135 pages of writing single spaced.",
                "This course really needs to be reevaluated. This course is not constructive for CS majors, and I really have a hard time believing this course makes ANYONE from another major want to switch to CS. I think the entire course needs to be updated for future students.",
                "I had low expectations for this class because my friends told me it was an easy A. My expectations were shattered. it wasnt an easy A, it was an easy A+ but with a lot of stress and a professor that did not care at all. The peer review system is trash and the TA's are so useless. But you know lol its an easy A but take it at your own discretion (unless your a cs major then you have to take it)",
                "Terrible course \u2013 should be taken out of the major.",
                "I did not like this class because of the way it was conducted. Our professor did his best and it wasn't his fault",
                "I enrolled in this class under the assumption that it was going to provide a beginner\u2013friendly overview of Computer Science. It does not. Honestly, the lectures though (sometimes) interesting were not beginner\u2013friendly at all which would have been okay if we had background information or time to digest the material. We did not. Instead, this class demands heavy readings and 1 single\u2013spaced paper every week of material that honestly few students understood from the lecture. Now, the grading system for this class is not only obscure but subjective. The professor does not grade you. The TAs do not entirely grade you. There is an algorithm created by Jason Hartline (Northwestern CS Professor) that uses student feedback to grade other students and as an \"incentive\" for you to grade accurately, when grading other students you are penalized if you do not grade the exact way the TA grades. What all this means is that your grades are being determined by other students and when peer grading you are not trying to give helpful constructive feedback, instead you are forced to begin guessing the way the TA would feel about the essay. Further, when students tried to ask for clarification with their grades, the TAs were unhelpful as was the professor. My TA though a lovely person had no idea what was going on with the grading and because it is so subjective, students have no way to advocate for themselves if their TA  gave them a grade they did not feel they deserved. DO NOT TAKE THIS CLASS. PLEASE DO NOT TAKE IT. PLEASE.",
                "This class was not well organized, but that meant due dates getting pushed back and a few assignments just getting canceled. You can do the weekly essays in a couple of hours. If it was run the same way, I'd take it again.",
                "This course has the huge potential to teach interesting aspects of computer science to those new to the field or who haven't had the opportunity to explore much of the department at Northwestern, but it is structured so poorly. The grading system shouldn't set an 80% as equivalent of doing everything you're supposed to do well. The course was also generally pretty disorganized and due dates and expectations for assignments and projects were often communicated poorly.",
                "The course is really disorganized. The syllabus wasn't prepared and there wasn't even a Canvas page set up until later. While Canvas is not the best website, this course's was especially messy since it just linked back to previous years' pages which meant that dates were off and the name of the professors coming in to lecture wasn't updated. The assignment scheduling wasn't all that consistent either but at least Larry and the TAs were flexible about it. It's shame that the class attendance dwindled though since I felt that the latter half of quarter had some of the better presentations: Hartline on algorithms, Pardo on AI/ML, Cossairt on computer vision, Rogers on databases, etc. I don't really recommend the course too much. If you don't mind open\u2013ended weekly essays (1 page), I'd say it'd make for an ok 5th course on your schedule.",
                "The class is a total mess; assignments take forever to get graded, the workload is insane for a 101\u2013level class, and communication is terrible",
                "Possibly the worst course I have taken so far in Northwestern. This is not due to the quality of instruction or course material. The professor was fantastic and genial, the TAs were helpful, the guest lecturers were all great. It's pretty much just that I happened to take this course in a tumultuous time, when (to my understanding) a new instructor was being dragged into teaching the course without too much forewarning or time to prepare. Grading was hugely delayed\u2013 I started receiving the grades for assignments around the middle of the quarter. The Canvas site was also quite disorganized and assignment/lecture descriptions didn't match up. Things started coming together around the last four weeks (that's including reading and finals week), but that was a little too late for my grade. Hopefully this course will be better organized and prepared for the next body of students, but my recommendation is to stay away for at least a year until course organization and heading stabilizes.",
                "It was a good beginning course to take especially if you haven\u2019t taken any CS related classes in the past. However, the course wasn\u2019t organized in terms of the schedule and grading was somewhat inaccurate by peers.",
                "At the cost of being extremely exasperated, take this class for a kind of easy A.",
                "This course is kinda wack despite being interesting. Hopefully this will improve with time, but the course structure is completely disorganized. Until 2 days before final grades were due a large majority of my grades in the class hadn\u2019t been completed. That being said if these issues didn\u2019t exist I could definitely recommend this class as the topics covered are quite interesting and expose you to a lot of areas of computer science.",
                "The lectures for this class were really interesting and I enjoyed going to them. However, the assignments were quite obnoxious and the feedback on them was not very good. Overall an easy course though.",
                "This class is poorly managed, and the lectures can be very boring. The discussion section was always interesting. It was nice to hear a the perspective of a grad student who has done research in CS and has a solid understanding of the CS industry. Take this class if you wanna know about the contemporary developments in the CS industry or the history of CS, but not if you want to know what field of CS you'd be interested in or if you want to code. It's too broad of a class, and we really only read from articles that are published by journalists.",
                "Took this class for CS major requirement and I thought it would be interesting; the class was horribly organized, no TAs really seemed to know what was ever going on as the professor himself was virtually uncontactable. Multiple times they provided erroneous information on the deadline of an upcoming project. Different parts of the syllabus also sometimes said conflicting things about project details. It was pretty nerve\u2013wracking because sometimes something would go wrong i.e. there was one week where CANVAS messed up and I wasn't assigned peer reviews and I had no idea if this would end up hurting my grade. Overall, class materials may have been pretty interesting but the way everything was organized just made it a horrible class to take. However I will say that it was quite an easy class to do well in because there aren't any midterms or finals and grading is pretty lax. If you don't mind writing an essay a week then you'll be fine.",
                "I have never seen such a disorganized and useless class. Everything about this class was a disaster. The only silver lining is that it was blow\u2013off class.",
                "Very disorganized class. Never really knew what was happening. Interesting speakers, gives a good look into whats happening in computer science, but also never knew when assignments were due."
            ]
        },
        {
            "course_code": "COMP_SCI_110-0_20",
            "course_name": "Intro to Computer Programming",
            "instructor": "Sarah Van Wart",
            "year": "2020",
            "quarter": "Fall",
            "instr_rating": {
                "mean": "5.76",
                "count": "165"
            },
            "course_rating": {
                "mean": "5.51",
                "count": "166"
            },
            "comments": [
                "It was good. It started slow so I thought I didn't need to pay attention at first but everything builds on the previous class so its important to really follow along and then things won't get too confusing.",
                "I really liked it, it was super fun. I liked that we didn't just do math programs but we worked with visualizations and things that we use daily to make the coding more fun and more relatable to real life.",
                "Learned what I wanted to, could've done a bit more with data analysis though",
                "Work is time consuming, and for me, it was difficult. Sara is a great professor and will help you if you ask for it though. Pay attention and follow lecture, it will save you.",
                "This course was very straightforward; the quizzes very directly reflected the content we were learning in class. There was so much support from Sarah and the TAs. I felt comfortable to make mistakes and ask questions.",
                "This class was very doable. I wouldn't say I really enjoyed it though. If there's one thing this class taught me it's that programming is not my thing. Besides that, great professor, great TA's, lectures were helpful, homework and quizzes were always doable.",
                "I really enjoyed this course. It is not too challenging. Sarah is a fantastic professor, and there are a lot of resources available to help such as the tutorial sections and office hours. Definitely recommend for a major requirement or Area II distro!",
                "LOVED this course!! Office hours are crucial for the projects and they help so much.",
                "This was a really great course. Sarah is a fantastic teacher and the workload was really manageable. There are also a lot of opportunities to get help if you need it.",
                "This course is really great if you want to get an introduction to programming! You really only need to get the basics of each unit down in order to succeed, but the course definitely gives you so many opportunities to explore and get creative.",
                "I had no prior experience with programming and Sarah is the absolute best. She made what we were learning feel applicable to things outside of this course, and she was so kind, thoughtful, and made the course concepts feel doable when I thought they would be daunting. Absolutely take this course with her if you're just interested in programming and want some sort of experience with it before you graduate.",
                "The instruction was really effective and the homeworks and projects pushed my coding knowledge farther.",
                "The professor is wonderful and understanding. She wants everyone to succeed and do well...rather than just creating a curve/grade distribution.",
                "This class is great!",
                "Sarah is one of the sweetest professors! She tries to make class as stimulating and enjoyable as possible, while also going through all the necessary materials. There were 2 weekly assignments, 2 projects, and 3 quizzes. The assignments were relatively straight forward and followed lectures closely. Many of them were in preparation for the projects and so they were helpful. The class also has a lot of peer mentors, and so you are constantly surrounded by resources and people to ask help for if you are stuck. This is a good intro class to Python if you are new to coding and just want to learn Python. Overall, I would recommend!",
                "SARAH IS THE BEST literally makes it so accessible even if you have no comp sci experience. sweetest professor and teaches so well",
                "Sarah is the best! I came into this class with 0 coding experience, and it was very manageable with the way the course was structured. Make sure to go to office hours if you are struggling because the projects are worth a decent bit of your grade.",
                "The class is really interesting and Sarah is an amazing professor. There is leniency built into the course to help you get the best grade possible. It is completely possible to get a good grade and learn a lot from this class if you take advantage of office hours.",
                "I walked into the course not really interested in CS and walked out with wanting to pursue CS way more than I thought I would. It is an easy class if you put the work into it (which isn\u2019t that much) but it also gives you confidence in your coding skills.",
                "I really liked the content but it was too much lecturing. In addition to the 3 50 minute classes a week, there was also a 50 minute tutorial (like a discussion) that was not advised on Canvas. More annoying than that, before most lectures, she would upload old lectures that take about 1 hour each. So instead of the class being 150 minutes, a week liked advertised on Canvas, it's much closer to 320 minutes. Overall good class and Van Wart is very nice and smart.",
                "As a student studying political science, history, and philosophy, I was a bit worried about exploring a subject outside my humanities comfort zone, but the course was designed for students with no prior coding experience, and though it was at times quite challenging, Professor Van Wart and the Peer Mentors did an amazing job explaining the course concepts clearly and logically. If you are taking this course, I would recommend going to office hours and the exam review sessions because they were extremely helpful. Everyone was very kind and willing to meet me where I was at based on my lack of coding experience, and I gained some very useful Python skills! I would recommend this course for anyone who it interested in starting to code!",
                "This course is very non\u2013CS\u2013major\u2013friendly!!! Do not be intimidated by this class even if you are not a CS person! I was not expecting to love this course but I actually had a great time! Sarah is a GREAT professor. She is an engaging lecturer and super knowledgeable. Definitely take this class if you're considering it",
                "Perfect teacher for the job. Very fun class! Would recommend!",
                "Professor Van Wart is so, so sweet and helpful. She always took time out of class to answer anyone's questions, and stayed long after class time was over to continue doing so. She was great at explaining CS concepts in easily understandable ways, and her enthusiasm helped a lot too. You're also guaranteed to get a 100+ on most assignments as long as you follow the parameters.",
                "This is a great introduction to programming and Python.",
                "This was by far my favorite course of the quarter. There wasn\u2019t any busy work. Sarah is extremely understanding and is actually interested in what she teaches I would definitely recommend",
                "The content was very well organized and easy to follow as a beginner in programming. Lectures were mostly engaging and tutorials were very helpful!",
                "Professor was spectacular. I had no business taking a CS class, but was very pleased with my time in this class. Not hard at all and the TAs are very helpful.",
                "this course is a great intro course! you get out of it what you put in. The prof was very understanding and the TAs were always available when you needed help!",
                "Sarah Van Wart is such an amazing professor. Because in a CS class you use your own computer, there are a lot of times individual issues with different students. She (and her team of TAs) is so helpful when it comes to solving problems, all you have to do is ask. My only gripe with the course is that you spend a lot of time working with simulations, shapes, etc. which doesn't have a lot to do with the data\u2013processing aspect of python \u2013 where my primary interest lay. I understand that these preliminary units are in place to teach you techniques in python, but I feel like there may be a more applicable way to do this.",
                "I took this class without any previous knowledge. I was afraid that things will be hard for me, but I learned everything from the scratch. The TAs and teachers were available to offer help with debugging our codes.",
                "I really enjoyed this course. I did spent a LOT of time on it, but that was 100% by choice... the course load is entirely manageable. When doing homework I felt as though I really was learning and not just completing things to get a grade. I spent so much time on the class because I really enjoyed it and so pursued random stuff in my own time. I had never coded prior to this class and now feel much more knowledgable about the subject.",
                "I really enjoyed this course. Sarah is an awesome teacher, and explains things in a way that students can understand, no matter their prior understanding of comp sci. I knew nothing about comp sci coming into this course, but the topics that were covered and the way we had to apply them through projects and homework really helped me understand the basics of Python. I highly recommend this course to anyone.",
                "Again, I learned so much in this class. I really loved it. It was nicely structured for flexibility\u2013I never attended lectures, I just watched them back whenever I had free time. It wasn't hard to get an A in this class if you work to understand the concepts. Some weeks had more work than others, but I really enjoyed the cool projects we did, so it wasn't too boring for me. Prof. Van Wart was great as well\u2014her lectures were very understandable and concise. I never really used my Peer Mentor, but I heard others had good experiences with them.",
                "This course has inspired me to pursue CS as a minor/major\u2013\u2013that's how dope it is! As long as you try just a little bit, it's very easy to be successful in CS\u2013110. The assignments are often creative and fun in addition to obviously being educational.",
                "I am glad I learned the fundamentals of coding. Now I feel I can go out and learn new languages.",
                "The professor was really motivating and super helpful in terms of choosing class content and keeping the class applicable to all students regardless of previous experience",
                "This class was amazing. Considering this was online, the professor did an amazing job of explaining the content while being open to answer questions after class. Lectures are recorded so you don't have to attend every class. The TAs in this class were amazing and always open to answering questions. If you're taking this course, make sure you utilized both the professor and TAs to the max, especially with the homework and projects.",
                "I think this class is great for everyone, even if you aren't interested in coding.",
                "Let me just say. I knew absolutely nothing about computers before this class. Literally nothing. Sarah is such an amazing professor and I feel like I learned SO MUCH. Even thought this was taught over Zoom, lectures were fun??? I thought she was super organized, professional, helpful, and I really can tell how much she loves what she does. Take this class it was honestly so much fun.",
                "A great intro to programming course. I came in which no knowledge of programming and it was very doable. If you have any experience with CS at all the course will be very easy for you. The second project involved generating spotify playlists and was fun and interesting. Prof Van Wart is super nice and energetic.",
                "This was a really good class\u2013\u2013although I thought it might be hard to follow a CS class in a remote setting, Professor Van Wart made it easy to follow and also was very approachable to get help from after class and in office hours.",
                "I loved this class. It was a perfect intro to coding with no prior experience and was very manageable",
                "Great course, Sarah is the best!",
                "This course was beyond amazing despite remote instruction. Sarah was extremely accommodating and seemed to be my only professor who recognized the pandemic. This course offers tons of help from weekly tutorials, to tons of office hours, etc. Lecture was worth attending and the workload was very manageable.",
                "Sarah and the TA are both very nice and clarify everything well!",
                "This class was amazing! Prof. Van Wart clearly cares about computer programming and her enthusiasm is infectious. I had no experience with or even interest in computer science, but this class has made me want to take more COMP SCI classes at Northwestern! If you are at all intrigued by computer science, take this course!",
                "Sarah is insanely organized and it's great, also a really fun professor",
                "Loved this class. I had heard great reviews about CS110, and they were all true\u2013\u2013I came to love coding in Python through this class. As an engineering student I highly recommend this class as an intro to programming, especially because Matlab coding is taught so poorly in EA1. Sarah is an amazing teacher who always makes class enjoyable and cares a lot about the students.",
                "Sara and the TAs were super helpful. Pretty easy and straightforward class.",
                "Sarah was super friendly and helpful and I really liked her class. Comp sci is very much out of my comfort zone, but she made it very accessible and I feel like I've learned a ton thanks to her. Also the TAs were great!!",
                "This was a great intro course and taught me how to use Python. I learned how to write code and other practical applications of Python. This was a super fun class! We wrote our own computer programs to make animations and recommendation apps!",
                "This course (a previously self\u2013proclaimed 'humanities person') made me want to double major/minor in CS! I really enjoyed learning Python, and Professor Van Wart is so engaging and helpful. Seeing our projects come to life was very rewarding.",
                "Sarah is the best professor I have had in my time so far at NU. This class is challenging but also has many opportunities for getting help. Highly recommend if you have any interest.",
                "Great course. Weekly homeworks, two quizzes, and two projects. Drops 1 homework and 1 quiz so don't need to do those if you do well on everything else. Overall, great class. Just show up to lecture and tutorial and homeworks should be a breeze.",
                "This class was good for a fourth class without too much work where you can be certain of doing well if you do the work. I didn't watch any of the recorded lectures or go to all the live ones, but the tutorial sections taught everything we needed to know for homework",
                "I LOVED this class and priofessor. I took it with an interest in pursuing Computer Science as my major and it was definitely a great introduction!!!",
                "This class was very helpful in getting me started learning Python. I thought that the pace was pretty good, and not too fast. There were tutorials and homework each week, 3 exams but only 2 of them counted, and 2 projects. I thought the projects were pretty interesting, the first was an interactive animation and the second was a recommendation app working with data from Yelp and Spotify.",
                "This is an awesome intro to coding. Sarah and the TAs are excellent, and your grade reflects the work you put in.",
                "I was able to learn a great deal, but the assignments were very difficult and required a lot of time and effort for a first\u2013time coder.",
                "Sarah was wonderful at teaching to nonmajors because she herself learned how to code after college. Office hours are held really often, and all the TAs are super patient and knowledgable.",
                "This class was very easy to be honest. It was also very fun and I looked forward to doing all the assignments and going to the class. Sarah also did a great job teaching the course and made it very enjoyable.",
                "This course was amazing and Sarah is awesome! I was really worried about this class because I had no previous computer science experience, but all of my worries were for not. I loved this course and learned so much from it! 10 out of 10",
                "This was a super chill and cool class. I learned a ton about the building blocks of python code and how to program/troubleshoot in python. Also, Professor Van Wart is awesome and she does a great job of making sure the class moves at a pace that is comfortable for everybody. She is super accommodating with office hours and so are all of the peer mentors/TAs. The quizzes in the class aren't bad at all and the homework assignments are generally pretty simple and easy except for the last few but they're doable.",
                "This was a great distro and pretty easy! I had no prior experience with coding whatsoever, but Professor Van Wart helped my understanding by going pretty slowly at first. The overall grades were determined by weekly submissions of tutorials (can drop 2), homework assignments (can drop 1), 2 out of 3 exams, and 2 large projects. I highly suggest going to office hours for help on any assignments and your tutorials because the peer leaders were very helpful. Overall, good experience with this class, but probably won't continue in any comp sci classes. Easy distro",
                "SARAH IS THE BEST \u2013 TAKE THIS CLASS WITH HER IF YOU CAN AND WANT TO LEARN PYTHON BUT HAVE LIKE 0 EXPERIENCE WITH CODING!!! I learned a lot in this class even though it was via Zoom. Lectures were synchronous and recorded too. There's tutorial but they're actually helpful for learning the program and how to work through a lot of the hw. There are tons of office hours during the week and the peer mentors/ta have always been super helpful. Our grades consisted of tutorial assignments, hw, 2 projects (i.e. mideterm + final), and 3 quizzes (you can drop the lowest quiz grade though). Overall, everything was straightforward, didn't require too much time outside of class. If you just work hard and pay attention in the beginning to get a really firm grasp on everything, the latter end of the class shouldn't be difficult. Don't work on things last minute!! Always put in time for assignments so that if something goes wrong, you can pop into office hours to figure it out. But whatever the case, I think you'll have a lot of fun in this class with Sarah and feeling super cool when your codes runs and the programs that YOU WRITE actually work!",
                "I really enjoyed doing the projects because it uses what we learned and make amazing, unique code.",
                "If you have any significant computer programming experience then you should probably consider other cs classes. This class was great, but having done part of an MIT OpenCourseWare python course (as well as a programming class in freshman year of high school), I found most of the first half of this course redundant and all but the projects and the last few homework assignments felt like busywork. That being said, if you have little or no experience with programming this course will probably be great for you.",
                "I cannot say enough good things about Professor Sara. She is the most considerate, passionate, smart, and kind professor. I did not know much about computer science/coding other than taking a short course over the summer. I think Sara is very excited about the topic and made me want to learn more. She is understanding of students and has a very straight\u2013forward grading/teaching method. I am very glad I took this course.Regarding her remote teaching, it was the best of all the classes I took. She had a very active tutorial/discussion section style that allowed for students working together. She also had a synchronous/asynchronous lecture style, so that those who work better with synchronous classes could attend and those with time zone conflicts could watch the lecture later.I would say\u2013 I took this course to assess my interest in computer science and the possibility of majoring in it, but I do not think this class gives anything toward the comp sci major which was disappointing to learn towards the end of the course. It is simply an introduction and I think it also covers a distribution. I believe comp sci 111 is much more useful for the major, but this is a great intro for sure.",
                "I loved this class. Originally took it because I figured I should learn how to program (had zero prior knowledge) and discovered a new serious interest. Thinking about pursuing.",
                "The class is ridiculously time consuming, with pre\u2013lecture videos, weekly tutorials, homework, exams, and projects. But Sarah and the TAs are super accessible and helpful through it all. I really did learn a lot and I'm glad I took this class to fill a distro. Learned a valuable skill that I wouldn't have had the resources to learn otherwise.",
                "Everything is easy understand if you watch the pre recorded videos and attend lecture. You can get by with not showing up to lecture if you find the applications not that complicated. Sarah does a really good job of going over how each part of a program works. Working on the homework can be a little frustrating because you may not know where your errors are coming from, but going to office hours is always a good solution. The quizzes were very easy and do not cover the overly complicated stuff. Overall, not as bad as I thought is was going to be.",
                "I feel like there was an assignment/activity for everyone in this class. I personally enjoyed both of the bigger projects, but they were very different\u2013\u2013the first was an animation and the second was a web crawler.",
                "I'm really glad I took this! A really great intro to computer programming, Sarah is super easy to talk to and not intimidating.",
                "This class was fantastic! Professor Van Wart is truly incredible. She cares about her students as much as she cares about CS (which is a lot), and her passion for the subject made me excited to learn each new topic. I only took this class because it was a requirement for my Linguistics major, but I'm planning on taking more CS classes in the future because of how much I enjoyed it.",
                "Even though I had no interest in computer programming before, the class was pretty engaging. It was hard to learn sometimes because the structure of lectures seemed a bit unorganized.",
                "I loved this course. It seemed as though it's easier to take this course remotely than in\u2013person. There are so many opportunities for office hours. Sarah has the best intentions for her students and clearly wants you to walk away with a stronger understanding of programming.",
                "Extremely easy class, with many chances to improve if you make a mistake. Van Wart is easily one of the best professors at NU.",
                "I learned a lot about CS having no prior experience, but it's important to attend lecture to stay on track of new concepts that will be covered in homework and projects",
                "This course is amazing. Sarah is an awesome professor and such a kind human being. I have learned a lot about coding and discovered an interest in this area.",
                "I had almost no experience in computer programing prior to this course and was unaware for how many errors can occur and how to successfully troubleshoot said error. This course did a good job of taking this into account and there was help available almost all day for help on assignments. Instead of teaching on set way of accomplished task, we were encouraged to creatively apply concepts we learned and create unique solutions which immensely helped in developing an even better understanding of how to use everything learned in class.",
                "Sarah is the absolute best! She makes computer science so accessible and the projects you get to work on while seeming intimidating when you hear about them in the start are easy because of her instruction. The projects are a lot of fun to work on\u2013 an animation and a music/food recommendation app. Both of which have real life applications. It's very satisfying to see the results of your programming in a final product. Totally doable for beginners.",
                "I loved this class! Prof. Van Wart is one of the coolest professors I've had so far. She was very kind and understanding, and her lectures never felt like a chore. The TAs were also great, and tutorial time was a good opportunity to practice what was given in lecture, as well as get a head start on homework sometimes.Assignments were very light: A homework almost weekly that took maximum of an hour to finish (usually a lot less than that), tutorials weekly where you do the work during the tutorial session with your TA (where you can ask anything, as well as get instruction), and you can just submit it then and there, and 2 projects that might seem intimidating at first, but are actually not that hard/time\u2013consuming. The 3 quizzes were simple and to the point (and you can skip/drop one of them).All in all, this class was a great introduction to programming and computer science in general, so I definitely would recommend it to anyone not sure about CS.",
                "Sarah is a very kind person and professor and it is easy to do well in this class, just go to office hours. Not all of the lectures are super helpful, but they are all recorded so you can go back and watch just the parts you need.",
                "Tutorials were useful.",
                "I think the best part of this course was the practical assignments/applications that we had to do. Our second project tasked us with designing a recommendation app and it provided us a way to test our skills with a real life applications.",
                "I took this course because I wanted some knowledge of programming and not because of any requirement. I went into it with little experience, and the course was well paced. Definitely not a class you want to slack on, but if you keep up with the material, it's very doable to do well.",
                "I love this class. Even though I spent quite a few hours on the project, I still enjoyed the outcome.",
                "There are two major projects in this class and 3 quizzes. Sarah is so nice and her office hours are always helpful especially if there's a project coming up. TA office hours are a bit crowded especially on Thursdays and Fridays when assignments are due. Overall you will learn the basic logic of Python, a great start to CS.",
                "this class is so hard only take it if u have to. but the ta's and professor are absolutely fantastic. i just hate computer science",
                "This course was definitely interesting, I'm a fan of project\u2013based work, and I loved that we were always working toward a larger end goal. Overall, I found the course to be pretty easy \u2013 it shouldn't be too hard to get an A \u2013 but I still felt like I learned the content well.",
                "This class is fun if you have a friend in the class with you. You learn a lot and sarah is the greatest professor ever.",
                "I loved the tutorial sessions every week. Not only did it give us easy points as long as we attended, but it also gave us a chance to ask questions one on one with our TA since our class size was so large. I also loved that there were almost always office hours going on. Because there were so many TAs, every day there were at least 3 of 4 office hours we could attend and ask questions at.",
                "This is the class you need to take if you're interested in computer programming! It provides a fantastic launchpad and teaches you an actually useful programming language\u2013\u2013python. Plus Sarah is an icon and her dog, Seamus, is an angel uwu",
                "Very informational and understand teaching style. I learned a lot and this class didn't stress me out. I would recommend.",
                "IT WAS ACTUALLY A GOOD CLASS!!!!!!! Sarah is so nice and understanding!!! Students come to office hours at all points of their projects. Sarah has no judgment. THE CLASS IS BUILT SO YOU CAN SUCCEED. Lectures help with tutorials, tutorials help with homework, homework helps with your projects. Homework may take some time if you get stuck, but you can get help during office hours, which occur several times a day!!! There were 3 quizzes and you get to drop 1 (or you can replace your quiz 1 score with your quiz 2 score, or both for your quiz 3 score). You can drop 1 homework. You can drop 2 tutorials. Tutorials are easy points and help you learn!! There are extra credit opportunities. As long as you don't get behind and do what's expected, you can be relatively stress\u2013free about this class.Computer science seemed really scary to me at first, but this class is anything but scary!",
                "This class is one of those classes where you get what you give. If you put in enough work, you will get the grade you want. There's also a lot of opportunities for extra credit in homeworks or projects. The quizzes are also really relaxed, short, and not challenging. They just test your knowledge on things covered in lecture, and they don't have trick questions to stump you.",
                "coming in to the course without knowing one line of code. The course is informative and not overwhelmed for beginners. I end up with knowing how to write some simple (complex yo me) programs. It's a good start with cs. The professor is so nice, she wants you to learn the materials and not to worry too much about grades.",
                "This was a great course and Sarah is an amazing professor. Highly recommend! I did have some experience in java coming in but I think that someone who doesn't know anything about coding would be completely fine.",
                "Great intro class. Not too much work and keeps you interested in the subject.",
                "Great course, the professor was super nice and engaging and taught at a very reasonable pace. Quizzes/homework were extremely fair and you will learn a lot from this class.",
                "I thought this class was going to be very hard because I had no other computer programming experience but I absolutely loved this class. Sarah is amazing and makes learning comp sci fun. The projects are actually really enjoyable. This is probably one of my favorite classes I've take at NU.",
                "great",
                "I LOBE SARAH. She is so accommodating for deadlines and other students' needs. You get to drop at least one tutorial and he and there are SO MANY OH that it is so easy to meet with the professor or a TA. Some projects were a bit challenging but you can definitely do it on your own or easily get help if you need it.",
                "This is a great intro class for computer science. The projects are very fun and show multiple aspects of computer programming and Python. If you already have some background in computer programming, this class will likely be pretty slow and easy. Professor Van Wart is super helpful and really cares about the students, and works well with the TAs. The class was a little disorganized as lectures were supposed to be watched before class but were posted at random times.",
                "The Professor was amazing and Office Hours were always available. Projects were enjoyable and deadline were always stated well in advanced. Very well organized class."
            ]
        },
        {
            "course_code": "COMP_SCI_110-0_1",
            "course_name": "Intro to Computer Programming",
            "instructor": "Connor Bain",
            "year": "2022",
            "quarter": "Winter",
            "instr_rating": {
                "mean": "5.57",
                "count": "141"
            },
            "course_rating": {
                "mean": "5.04",
                "count": "140"
            },
            "comments": [
                "Professor Bain is a great professor! He is knowledgeable and truly cares about the success of his students. Highly recommend taking a class with him!",
                "It was a fun course to start learning to code through python. Exams are pretty good if you go through most of the lecture quizzes and practice tests.",
                "very good intro class, prof Bain is Nice and lots of extra credit opps",
                "Great professor, manageable workload, interesting projects, not a hard A",
                "I thought this course was a really good class for beginners. It has a lot of TAs, so there are always office hours to go to. Also, the professor explains things in depth and is receptive to students, so getting help shouldn't be a problem. Personally, I think the class is an easy A but it depends on the student as always. Not a big time commitment though.",
                "The professor is great, he's interactive and understanding. There are two assignments a week, 2 projects and 3 quizzes, one of each can be dropped. Lots of work, but that's understandable considering you are learning a new language. I had absolutely no prior compsci experience, and I still did pretty well in this class.",
                "I was truly able to get a grasp on the basics of computer science, which is exactly what I wanted out of this course.",
                "There isn't a lot of pressure while taking this course, and there's a LOT of leniency. Work thoroughly on projects and take advantage of extra credit opportunities in the projects. Quizzes don't matter as much but are still helpful.",
                "I really enjoyed this course. It was very straightforward and helped give me a strong understanding of programming basics and Python 101. It was pretty easy and sometimes lectures moved a bit slower than I would I have liked (I feel like we could have covered more material if we went a bit faster) but overall I feel like this class was interesting and valuable as a non\u2013CS major. Plus Prof. Bain is a great instructor!",
                "This is a good intro to the world of coding. It can be difficult to understand at first if you have no prior knowledge, but Professor Bain did a really good job explaining concepts if you looked for more help. I had fun with the projects and the grading system is fair for people who have never tried coding.",
                "The HWs and projects were way more challenging than anything discussed in lectures. I wish the lectures would've been more comprehensive and gone further into more difficult material so that we could be prepared for the complexity of the homeworks and projects.",
                "Professor Bain was extremely helpful, clear and succinct in his explanation of course materials and instructing of logistics. It's not too hard of a class if you go to your tutorial section and office hours.",
                "It was an easy class and interesting because the professor was so good at explaining things in engaging ways",
                "I really enjoyed this class and learned the logic needed for computer programming. I thought all assignments were very fair and expectations were effectively communicated. The instructor and TAs were very available and helpful.",
                "This class taught A LOT. It's super flexible so super easy to get an A in. I had no prior experience to programming before this class, so it was quite difficult for me at times but the professor and peer mentors were all super helpful! Expect to put work in \u2013 I was in office hours almost every day to get help on assignments.",
                "Highly recommend taking this course!!!! Definitely don't be intimidated if you have no experience because I didn't. This class moves pretty slowly, but you can always put more effort into the projects and home works if you want more of a challenge. There is also a lot of support! I really enjoyed it.",
                "I really liked this course! As someone who doesn't have much interest or experience with computer science, Prof Bain made the class really interesting and easy to follow!",
                "Professor Bain is amazing!! He makes the class easy to manage, and makes sure to take his time so that you can grasp the concepts. There is not a lot of work in the class, no midterms or final. Three quizzes, 1 of which you can drop. 2 projects, and weekly homeworks and tutorials, but you can drop one of those each as well. Overall, a really good intro to CS class, and the activities we do are fun and interesting as well.",
                "good intro course for non\u2013stem people. not hard to do well if you spend time on the assignments & studying throughout the week instead of cramming",
                "As someone with no computer science background, I think the course did a great job explaining the basics but moving at a good enough pace that by the end of the course, we're able to create full programs.",
                "This was a great class to take, if you do the work, go to office hours + tutorial you will get a good grade in the class. Not only that, but the projects are fun and if you ever feel stuck there is always someone who can help.",
                "This course provided a smooth transition into learning more about computer science. This is something that I did not have previous exposure to and this class provided a battering ram for charging through a wall of doubts surrounding comp sci.",
                "The class was very interesting and a great first class. Sometimes the assignments were difficult and unrelated from the specifics of what we are learning.",
                "super easy intro to comp sci, minimal work. professor Bain is the nicest and all the ta\u2019s are also SO helpful. Office hours are key!!!",
                "Good class but teacher moved slow at moments and too fast at moments which could make the material confusing.",
                "nice class. easy A if you just do the work.",
                "This class wasn't unmanageable work or content wise. But, it was sometimes hard to connect lecture content to actual coding. I got lucky and had a good peer mentor who connected those ideas for me but other friends of mine did not get helpful peer mentor and were some times lost on the assignments.",
                "The tutorial sessions were definitely the spaces where I learned the most!",
                "Definitely challenging and presented some difficult\u2013to\u2013grasp concepts at times, but the class was ultimately very rewarding.",
                "Great course! Super organized. Intellectually challenging, but not frustrating. Very well constructed course.",
                "The professor was great, however, the curriculum/tutorials/homework was not. Not only did the lectures not prepare us for tutorials/homework, they were extremely difficult for an intro class. Also, I think that there are other ways of teaching intro to python that don't spend the majority of the course learning how to animate shapes and make \"creatures\" in Tkinter. It wasn't until the last couple of days did we finally start learning how to read files and stuff like that, which actually has more practical use than animating creatures.",
                "I did not think that I would be interested in CS before taking this class, and now I'm possibly considering it for a minor. The work was very fun and rewarding and Professor Bain was very helpful and approachable.",
                "This course was sold as a coding class for kids who never coded before, and the lectures certainly felt like that, but the assignments did not. He would go into the very basic definitions and uses during the lectures and then the tutorials and homeworks were like waaaaaaaaaay beyond anything he explained. The bulk of the time I spent working outside of class was me scratching my head about how any of our assignments related to what we were talking about. If you have former comp sci experience, then this is a nice class. If you do not, you will be teaching yourself python and going to multiple office hour sessions a week just to have the most basic level of understanding. I would not take this again.",
                "This course was a good distribution requirement. It was REALLY hard though, but luckily the professor is very understanding and gives a TON of extra credit. He is very lenient with the grading: He drops your lowest 2 tutorial assignments and your lowest homework and your lowest quiz. I will admit that this course is not easy though. I had to work so hard. We have class 3x a week and then you also have a weekly tutorial assignment and you also have a weekly homework assignment that requires you to teach yourself some material. If you are going to take this class, be sure to have a friend or acquaintance that you can meet up with to do the work together. Although I will finish with a decent grade (even though I received 2 Fs on the midterm quizzes... his extra credit rocks!), this course was exhausting at times. You must attend every single lecture if you want any chance of finishing with an A or B. Bain is a great professor though and has a lot of enthusiasm which makes the course worthwhile.",
                "This was a super great course! Very easy to do well if you put in the work. You can drop one quiz/hw/2 tutorials which is super nice. You can also get hw extensions and the office hours are very helpful. Great introduction to compsci and python!",
                "I was completely new to the field, and this course was excellent in introducing me to Python's basic ideas and skills. Professor Bain is a fantastic professor, and I would highly recommend taking the course with him. He keeps us entertained even at 9 am and is super helpful on Campuswire and easy to reach over email. Professor Bain is also flexible in grading and cares about every student's improvement. Also, he tells the best jokes!",
                "Overall positive experience. 3 midterm quizzes (30pts each), 6 homework (8 pts each)(drop 1), 9 tutorials (3 pts each)(drop 2), and two projects (40pts each). Overall decent class. Not too difficult to get an A given that there is a total of 16 possible extra credit points for the semester given on projects. You also get to drop one midterm quiz. If you do good on the first two you do not have to take the final midterm. Start projects early, the deadline always comes quicker than expected.",
                "Professor Bain is an amazing professor. I thought his explanations were very clear and easy to follow. I had no experience working with Python or coding in general and was worried that everyone else would already have an understanding. However, this class is definitely for people with little to no experience. I will say that as long as you put in the work, such as doing every tutorial and homework assignment and the project you will definitely get an A in the class. The biggest thing is to go to the office hours to ask for help because I definitely would not have been able to go through this class without the office hours of the peer mentors. There are two major projects which are also not bad and if you can get extra credit points, it definitely helps your grade. This class is very manageable overall.",
                "Prof. Bain is such an incredible teacher. He is so kind and helpful and you can tell that he really cares about his students, especially with how attentive he is on campuswire and how willing he is to stay after class to answer questions. I couldn't recommend a better professor for this class. 10/10 teacher! The class was challenging at times, especially for someone with no comp sci background, but Prof. Bain really tries his best to make it engaging and interactive with the projects and examples. There are also lots of extra credit opportunities which are really helpful, especially if you aren't the best test\u2013taker. Even though it was hard at times, I had a great time in this class and I can definitely see why people would pursue a major in computer science.",
                "As an introductory course, I thought it was very interesting although I'm not sure how applicable it can be in other aspects. It was very fun learning python and as long as you do the assignments and pay attention to the details it goes by fast.",
                "Professor Bain was amazing \u2013\u2013 his teaching is great. There are lots of resources available, along with a plethora of office hours to attend. That said, you get what you put in, and if you don't pay attention or ask for help, you're going to struggle. There's built in lee\u2013way in the class so if you mess up on something, the lowest gets dropped (2 lowest tutorials out of 9, 1 lowest homework out of 6, 1 lowest test out of 3).",
                "Though it may seem scary at first, programming is not so bad. I went into the course scared that I was going to do badly, but this course may have been my highest grade this quarter. I learned about many important fundamentals of coding and had a fun time doing such. The key to this class though is ASKING FOR HELP. If you do not understand something, do not waste your time trying to figure it out on your own out of pride. You will be much better off having a TA help you, and this will improve your class experience. Also the professor was amazing and you can really tell that he cares about students doing well in the class. The class is also so forgiving in that you can drop a homework, a quiz, and a couple tutorials. I don't know any other class this forgiving. If you ever get the chance, go to professor office hours and just have a conversation with him. If you are looking for a class to fulfill a distro or are just interested in coding but not sure you want to pursue a major/minor, this is a good course for you.",
                "The class is not super easy but doable, there are a lot of homework assignments (2 per week), so it is a little time consuming. I recommend going to office hours a lot to ask help on homework assignments, I found it very useful. Professor Bain is very enthusiastic and is very understanding.",
                "The lectures have almost no relation to the homework and it\u2019s extremely frustrating. Why do I have to go to office hours constantly just for material that could be stated in class? Also some TAs are mean. You have to find the ones you like, which is fine I guess because there are so many TAs in the course to fit your schedule. Prof Bain is nice and understanding but this course was not for me.",
                "This course taught me so much about CS. I had never taken a CS course before, and while the pacing was a bit slow at times, I learned a lot and I think I have come out of this course with a lot of new tangible skills. All of the assignments were really helpful to my learning and I also found them enjoyable.",
                "This course had weekly lectures where you learned about Python and then you would have a homework and tutorial each week and the tutorial is supposed to help you with the homework. Overall, I enjoyed the class.",
                "I really liked how organized the course website is. Every resource I needed was super easy to access. Personally, I didn't go to in\u2013person lectures but still managed to get a really good grade for this course.",
                "This is a really great course that I highly recommend taking especially if you have no experience with coding. Professor Bain is one of the kindest professors I've encountered. He makes a big effort to make everyone feel welcome and appreciated both in class and at office hours. He makes the content of lectures very clear and the homework assignments and projects are challenging enough to be interesting without feeling overwhelming. This course has made me want to pursue computer science further which is not something I thought I would say.",
                "Prof Bain is very good in lecture, course is structured for you to do well as long as you put in effort, very easy to get help if you need it",
                "I knew nothing about coding going into this and I took it for IMC. Professor Bain is really nice and helpful in office hours, however, his lectures do not help you learn to code. They are very theoretical and less application based. You really only learn in tutorial sessions and office hours. OLIVIER WAS THE BEST TA. I was not in his session, but I went to his office hours and he was great. My TA, Cindy, was awful. She did not teach me a single thing and her zoom links were constantly not working. Her tutorial session was absolutely useless. GO TO YOUR TUTORIAL AND OFFICE HOURS AND YOU WILL GET THROUGH THE COURSE",
                "This course helped me learn how to do basic coding, while making the content digestible and manageable.",
                "The way the course was structured was really appealing. The flexibility in being able to drop your lowest quiz, project, tutorial, and hw grades were really useful.",
                "A fun and easy course to get a basic understanding of programming.",
                "Great intro course, would highly recommend over CS\u2013110 if you are a complete beginner. Definitely can follow along with the class if you attend/watch lectures and go to office hours if you need. There were office hours basically any time of the week, which was really helpful. Super interesting class that actually even made me consider doing something in CS.",
                "This was really great at supporting beginner students and i always felt like I could get help.",
                "I liked this course the professor was very helpful and and made learning about new topic that previously intimidated me much more manageable",
                "This class is great! Challenging, but doable with time and efforts. Professor Bain is so cool, and the TAs are so helpful. The lectures are easy to digest and give great examples for required skills in the course work.",
                "Though challenging, this course was definitely worth taking. Not an easy A, but a lot of extra credit is offered on projects. A lot of my and my classmates experiences were dependent on which PM you are assigned to, but it is easy to attend the tutorials/office hours of alternate PMs. Overall, I feel that this class has taught me skills that I will use in the future and I am glad to have taken it.",
                "Not bad if you don't have a very heavy workload already. Make sure you have a good tutorial person though (you can change if you need to, it's not a big deal).",
                "loved it",
                "I really enjoyed this course. I'm not much of a STEM fanatic, but Prof Bain really helped people who were completely knew to the subject leave feeling like they can code. The projects were also super fun and the end result was always so interesting. Prof Bain is also just a really nice guy and an amazing prof.",
                "This is a great course for someone who doesn't have any experience in a coding language. The assignments can be frustrating at times but that's simply because you're trying to learn something new and there are a lot of unknowns. If you put in enough effort and go to tutorials and office hours (I can't stress enough how important it is to go to these!!!!) you will learn a lot from this class. Prof. Bain is a great instructor, his lectures are fun and engaging and he is always ready to answer all questions and help.",
                "i loved learning intro to comp sci",
                "This course is primarily catered towards people who have little to no experience in coding. It is extremely beginner friendly and can be taken to see if you have interest in computer science. Homework is very easy and tutorials help a lot, quizzes are not stressful and are graded very leniently. Highly reccomend",
                "Prof Bain is a great prof! I think the overall structure/grading of the class allows you to get an A as long as you put in some effort and ask for help.. i have some thoughts about assessments in CS classes to test knowledge of code, but that does not affect my overall view of the prof or things I have learned!",
                "This class is great! Connor is an amazing teacher. I was really intimidated to take this because I\u2019ve never done comp sci, but that was not a problem. There is a good amount of work, but it pays off and is interesting! Its like learning a language. I didn\u2019t love the last week or two of lectures because it got really complicated for no reason and the second project was way more complex than the first.",
                "This class was a great introduction to coding in Python! I found that the workload was just the right amount of challenging, as someone who isn't particularly STEM.",
                "This was honestly was super incredible challenging. The lecture itself did not exactly line up with the assignments nor HW so it is a lot of self studying and going to OH. There are a lot of leniency built in however.",
                "This course offered a great intro into computer science and coding. We focused a lot on animating drawings and manipulating data.",
                "i really liked that the professor was very accessible. the course materials included a website, which laid out every assignment, linked to the class recording, and resources that would be helpful. the prof was incredibly good about communication, and making sure everything we need is in one place. super organized, which made me learn in a very smooth process",
                "I was very nervous going into this course because I have no coding experience and everything at Northwestern is difficult. Although this class way confusing at times, I'm so glad I took it. It's definitely doable given the resources available to us though, especially the countless office hours. Professor Bain is so amazing too! Very energetic at 9 in the morning, cracking jokes, and handing out candy on the last day. I didn't attend class in person on most days... I did rewatch the lectures though and enjoyed watching Professor Bain teach.",
                "I went into this course so nervous \u2013 it was a prerequisite, and I am not a STEM student. I was pleasantly surprised. The course is laid out so well, with countless TA office hours and a website to submit questions. Prof. Bain answered questions late at night before projs/homeworks were due. He is very accommodating and fair. He made the content accessible to non\u2013STEM students. I enjoyed this class a lot. It was one of my favorite classes so far at NU, and I'm planning to take more computer science to fulfill my science requirements. GREAT CLASS!",
                "I loved this course! It was such a good introductory course and offered a ton of resources for absolute beginners to programming in python. It is very manageable as I took this course with bio and orgo plus labs. It was honestly a breather from my other classes.",
                "Absolutely fascinating class\u2013 I LOVED it. I came into it with absolutely no programming experience whatsoever and had no idea what to expect, but I found it really interesting and enjoyable! It made me want to take more CS classes even though I don't need to for my major. I liked how straightforward it was, either your code works or it doesn't, so you pretty much always know if you're gonna get 100%. With the exception of the 3 quizzes (lowest gets dropped), there's really no reason to not get 100% on every assignment as long as you give yourself enough time to complete it and go to Office Hours if something isn't working right. Prof. Bain and the TAs and Peer Mentors are super helpful in Office Hours and will always be able to fix your errors if your code is messed up. Prof. Bain is one of my favorite instructors I've had at NU so far. He's funny and uses really fair and accommodating policies in his class. He lets you drop your lowest or 2 lowest scores for each type of assignment and will almost always grant extensions whenever you need them for any or no reason. Lectures are a good mix of notes and examples so they're not boring, and they're all recorded so you can always skip class and watch them later (I did this frequently for my 9am section lol). Anyway overall amazing class. I honestly think everyone should take it even if it has nothing to do with your major. It's super easy and honestly really enjoyable. Being able to figure out how to code something correctly when you've never coded anything before is just a really rewarding feeling, and it\u2019s definitely a GPA booster even if you do the absolute bare minimum. They grade really easily and there are a lot of extra credit opportunities on the projects. I\u2019m ending with above 100% and I had never coded before this class.",
                "This course is a good intro to learning Python. Make sure you go to office hours/tutorial section otherwise this course becomes very difficult (coming from someone who didn't have any previous programming experience). Prof Bain is a very enthusiastic and fair professor.",
                "The course was great. It was a great introduction to coding.",
                "GREAT DISTRO! lectures were always recorded so didn't have to worry about attending lectures. Professor is great and super nice, he makes lectures bearable and super simple to understand. Theres like s discussion section but its only mandatory the first week, the rest u can just submit the tutorial for (usually super simple and the discussion section is meant to go through it completely so I suggest always attending) theres always Office hours which is super nice of them because all the TAs are happy to help. homework assignments are also simple and easy to navigate through. best 2/3 quizzes so I recommend rocking the first 2 (super easy if u understand the topics and are keeping up to date) 2 40 point projects but are very similar to homework. Def recommend!",
                "This is a really good intro class and made me discover an interest in comp sci.",
                "This is a very good introductory course to computer science. They help you out a lot in this class and there are lots of resources to learn.",
                "This course can be very frustrating and time consuming at times but it is problem\u2013solving. If you like trial and error, debugging, and feeling proud of your creations it is the class for you.",
                "This class will be fun if and only if you connect with the teacher, your TAs and your classmates. DO NOT do what I did and try coding on an island away from everyone else; Something will go wrong, and Python is ruthless in its specificity.",
                "Prof. Bain is an amazing teacher and the class is an easy A if you put in the work for the quizzes and projects!",
                "This class made me switch to CS. I came in uninterested in CS, but Bain makes it so interesting that I've taken a liking to it.The projects are fun, but start them early and take advantage of the insane amount of office hours they offer. You'll learn more in five minutes there than two hours that two hours trying to figure stuff out on your own.",
                "It\u2019s an excellent introduction to coding and it\u2019s very well structured.",
                "People say this course is easy but it was not for me, as a beginner in programming.",
                "I really enjoyed this course! The projects and homeworks, although they definitely took time and effort to complete, were always rewarding. There are a bunch of different office hours, so you can always get the help you need. If you're thinking about CS as a major/minor, I think this course lays a great foundation for the type of work you'll be doing in the future since the class focuses on math, logic, quizzes, and projects.",
                "It's an okay class. Not too difficult to get an A as long as you do all the work (Hw, Tutorials, Projects, quizzes). The quizzes weren't too bad if you looked at the reviews/practice quizzes. It is fairly easy to get full credit for Hw and tutorials. Projects give a lot of extra credit.",
                "This was a pretty solid intro to CS! If you're on the fence about CS and haven't done any programming before, you should definitely take this class. It's super chill and really eases you into working with Python. I really didn't know that much about coding before, but I didn't think this course was terribly difficult at all.",
                "would not recommend for a distro! I spent 10\u201315 hours a week on this class alone.",
                "I loved this course, it was a 9 am class though. But I loved it. The professor is so sweet and organized. He was always prepared and the way everything was organized for students is something I loved about the course. There are a lot of office hours too which is so nice.",
                "It\u2019s relatively easy to get a good grade in this class because of extra credit, but I really struggled to understand a lot of the key concepts and found this class very hard.  Professor Bain is great, but the class overall is tough.  Homework every week is difficult",
                "I thought Professor Bain did a great job with this course. I think everything was taught in a very easy\u2013to\u2013understand way and he provided enough office hours, examples, practice exams, etc. that I think with a little bit of effort anyone can get an A and walk away more interested in CS than before.",
                "I loved this class bc of the professor. I think it could be improved by covering some of the tutorial work in class bc the tutorials are optional. Some TAs could be more helpful too. Generally an outstanding class altogether. Prof Connor is the best!",
                "This is a great course for people who have never coded or done anything programming related before. There are a lot of weekly assignments which can be a bit time consuming, but the Professor builds a lot of flexibility into the course schedule. If you stay caught up with the lectures and assignments an A is super attainable. Professor Bain is a great professor and whatever you learn in this course will definitely stay with you."
            ]
        },
        {
            "course_code": "COMP_SCI_110-0_20",
            "course_name": "Intro to Computer Programming",
            "instructor": "Willie Wilson",
            "year": "2019",
            "quarter": "Fall",
            "instr_rating": {
                "mean": "4.41",
                "count": "44"
            },
            "course_rating": {
                "mean": "4.30",
                "count": "44"
            },
            "comments": [
                "weekly quizzes in class had way too much weight in the grade (each point being a percent), but the homework assignments were usually interesting and helped learn python",
                "Although I really was never all that interested in coding (just took this as a requirement), this class was great for building a foundational understanding of concepts that felt super abstract before. It's pretty chill overall and the workload isn't too bad.  Willie was absolutely great and you can tell that he really cares about both the course content and the students.  Even though it was a big class, he knew a lot of students by name and even went out of his way to ask me if I needed help after I did poorly on a quiz.  Going to office hours helps so so much for the assignments and all the TAs were great. Recommend!",
                "I was expecting this class to be challenging (since its like learning a new language). I was expecting to learn more in class than I did.",
                "an intro course to python and learned the basics. Willie is great one on one but didn't always get a lot out of his lectures. Lot of work and learning on your own time.",
                "A true intro to coding in that Willie (Prof. Wilson) treats students as if we don't have any coding experience and walks us through concepts in class. However, the assignments and 2 massive projects were much more difficult than the material presented in class. Most students were very not prepared for the level of coding needed for all the homeworks and both projects. You WILL NEED TO GO TO OFFICE HOURS to get help with the work, I think it would have been impossible to do any of it alone. Willie is very helpful and enthusiastic about helping students understand and get engaged, however the class should be better organized so class content is more matched with the homeworks. We also had weekly quizzes (sometimes 2) usually on Canvas that weren't too bad. Overall, just make sure you MAKE TIME for this class's workload.",
                "I enjoyed this class. Disorganized at times, but overall it was refreshing in comparison to other McCormick classes in terms of the pace and time commitment outside of class. The prof and TAs were very warm and inclusive.",
                "Literally the entire time that I was in the class I was just waiting for it to be over. Will never use anything from this class ever again in my life",
                "Assignments get a little tedious, but very doable if the time is put in.",
                "class completes its purpose, relatively easy and still teaches you useful skills",
                "IF YOU HAVE NO COMPUTER SCIENCE BACKGROUND THIS CLASS IS VERY DIFFICULT! I learned nothing in this class. The only way I did well was by going to TAs for every assignment, I failed every quiz but got 100 on every assignment and I feel like that is pretty telling on how approachable this class is for someone with no comp sci experience. I had no idea what was going on every lecture. I could not do a single thing or write a single piece of code without a TA's help, which is super super time consuming, so not worth it for a distro. The lectures are so hard to follow, you can't take notes, and then they just expect you to be able to code on your own. It is like sitting in a Swahili language class where they just start speaking Swahili at you with no notes and then expect you to write an essay on it. AGAIN, I LEARNED NOTHING IN THIS CLASS BECAUSE IT IS SO HARD TO FOLLOW.",
                "I took this class just for fun and I really learned a lot! I think it was a great introductory class to learn python. I had no experience going into the class and did not feel like I was at a disadvantage at all. I learned all the basic fundamentals and now feel really comfortable coding in Python. Willie is a great instructor who wants everyone to learn. The course has no tests, just 3 point quizzes every week and weekly homework assignments. There are also two projects, one as a final project. Nothing is too bad and office hours really help.",
                "This course was horrible. I learned nothing. It was far more stressful and time consuming than it was worth for a distribution credit. It was almost as if you were expected to have some background in coding before taking this class. This was largely due to the professor. Do not take this class with this professor.",
                "This course is amazing. I had never coded before and was terrified of coming in. Willie makes sure everyone is comfortable regardless of their coding background and teaches content in a very approachable way. The Homeworks are time\u2013consuming and the products were somewhat hard. However, go to office hours because the TAs are amazing. It's good if you know people who can code that are willing to help you. Overall great course, learned a lot and enjoyed the process",
                "This class is hard, and has a pretty significant difficulty curve if you come in with no programming experience other than HTML5/CSS, but the end results of seeing your programs work the way they are supposed to is very rewarding. You'll have to put in a LOT of hours to do well, though (like 10\u201315 a week on average when adding up time spent on homework and the two projects). There are unannounced in\u2013class quizzes (so you have to show up), but most lectures felt like a waste of time. It's an exercise in getting started on something and then Wille moving on to the solution three minutes later when you've only got the first two lines written. By the time we really got going with the sample code for the day's lesson, the class was over. I honestly felt that I started doing better when I began ignoring the lectures/in class practice work in favor of looking at the provided answers to the in\u2013class sample code and applying that knowledge to projects and homework assignments instead, it felt like a better use of class time. Also, woe will be upon you if you can't come to office hours because of other classes or work (they're only offered 9\u20135, Monday through Friday). The TA's and professor are theoretically always accessible via Piazza (an online question\u2013answer forum) but in practice Piazza was pretty garbage... I think seeing questions and responses there was only helpful like once or twice? I mostly ended up relying on a combination of the in\u2013class sample code/googling/and asking my friend who knows Python to explain concepts, but that's not a viable solution for everyone.",
                "Willie is an energetic professor, but sometimes the energy can be a bit much at 10 am in the morning when I'm still waking up. But overall, he did a great job teaching the course and I liked the fact there were small quizzes instead of midterms and finals.",
                "It was a good intro to coding but it didn't always feel like we were on the same page as the course material",
                "Class was engaging with Willie (Prof. Wilson). However, concepts learned in class did not help with weekly homework completion...lecture material was way too easy, and thus in order to complete the homework you HAD TO go to office hours (otherwise you were completely lost). Quizzes were fair (based on lecture material) although some of the quizzes were really difficult. Expect 1 or 2 really difficult quizzes out of the 10 (you don't get to drop any, sadly). Be sure to make time in the week to go to office hours...expect each homework assignment to soak up at least 4 hours of your time outside of class each week.",
                "underwhelmed, I felt like I learned some python but class was not engaging for me at all (I only went when we had quizzes). the quizzes felt super random and without purpose, plus the grading was all over the place.",
                "Homework takes a long time. Not what I expected for an intro course. Learned a lot tho.",
                "This course was super helpful in teaching me python which pretty helpful for some personal projects I am working on. If you want to do that this is the course for you. Otherwise I wouldn't recommend it.",
                "The professor was great, the pace of the class was great, lots of opportunities to get help if you needed it. Weekly quizzes, 2 projects, no midterms or finals.",
                "Definitely take this with Willie! He's awesome and really easy to approach with questions. He is open to feedback and wants to make sure everyone is doing well and understands the material. Class goes by quickly with all the examples and demonstrations we do and the quizzes aren't too bad. If you're confused, definitely go to office hours because the TAs are SUPER helpful at answering questions and helping with homework and projects. There are 6 homeworks and 2 projects, no finals. The projects are actually really cool and make the coding part fun.",
                "Fine class. prof was kind of disorganized. Graded on in\u2013class quizzes, homework, and projects. Go to office hours!! It's super helpful.",
                "I really liked this class. I thought it was pretty fun and interesting. Willie was a pretty fun teacher and he was able to get his point across pretty well. I wish he would upload files he worked on in class more so we could see what he did. Otherwise I think this class was pretty perfect and I liked that it was just based on homeworks, projects, and quizzes instead of midterms and finals. I also feel like they were pretty fair about how they graded things.",
                "This course was difficult, but the TAs are super helpful so be sure to go to office hours!",
                "This course was a great introductory course to coding. The projects help you realize that there are many different ways for you to do what you want, and it's cool to see your programs run with the code that you wrote yourself.",
                "I was super nervous to take this course, but it pleasantly surprised me, and actually ended up being one of my favorite courses at northwestern. Even though they are tricky and require hard work, the homeworks and projects are interesting, fun, and rewarding to complete. Willie is absolutely the most kind, helpful, and approachable professor I've ever had. He makes a very strong effort to know us individually, even though it's a relatively big lecture class. Even though he's obviously incredibly knowledgable, he does a better job than any other professor at never making a student feel dumb for asking a question or being confused. I like that he balances teaching/lecturing with free time during class for us to work out problems on our own. The TAs are also super super helpful during office hours\u2013\u2013 I couldn't have survived the class without them!",
                "Nice and simple course. Take it if you don't want to do CS, and you'll learn an actually worthwhile language. Not much work and no exams.",
                "Just go to office hours and you'll be fine"
            ]
        },
        {
            "course_code": "COMP_SCI_110-0_20",
            "course_name": "Intro to Computer Programming",
            "instructor": "Sarah Van Wart",
            "year": "2021",
            "quarter": "Fall",
            "instr_rating": {
                "mean": "5.63",
                "count": "144"
            },
            "course_rating": {
                "mean": "5.29",
                "count": "144"
            },
            "comments": [
                "Great course and instructor but again, I feel tutorials could have been better in some areas (more demonstrative, like a guide us through it then we try to do it ourselves structure).",
                "Great class and great teacher!",
                "It is very easy to fall behind in this class. Go to the tutorials, ask questions, and DON'T start homework or projects the day before the deadline. If you do all of those, the class is manageable and extensive learning will occur.",
                "This was such a great class, honestly not that hard and you learn so much \u2013 it's a great intro class and the professor is super nice.",
                "Take this class! Even if you are not planning on pursuing a major/minor in C.S. I would highly recommend taking this course; Professor Sarah is an amazing teacher who makes the lectures engaging. It is fairly easy to secure an A but you need to make sure you keep up with lectures/homework if you do not have any prior C.S. experience. There are also no midterms/finals which is awesome. If you have taken C.S. courses in the past or are already comfortable with Python then this class may seem a bit boring.",
                "This course takes a lot of work, but you get out of it what you put. Python is a good program to know.",
                "If you actually want to learn applicable computer science skills, I would recommend taking the CS 111 section. CS 110 teaches how to use different functions of Python, but all of the assignments seem near pointless. Half the class seems to be based around making a fun animation using python, when in reality, python would never be used to make an animation. Moreso, the side program Tkinter is rarely used, so it was a little upsetting that the whole class required mastery of this particular program.",
                "Van Wart is a super nice professor and is willing to go over any problems or answers with the greatest desire to teach. The course content is definitely not terrible, and I've never done any cs prior to this. If you're looking to see how cs works in python I highly recommend this course.",
                "Very interesting, recorded lectures, animation heavy, really set up for you to succeed",
                "this class is great if you have never taken any CS before in your life. Sarah is amazing and always available to help and a very good lecturer. Projects and homework are actually kind of fun too.",
                "This is a great introductory CS course. There is a lot of help available if you need it through office hours (definitely recommend going for help on homework and projects). Overall, this was a great class that I would recommend to someone interested in learning more about CS/to someone who needs it as a major/minor requirement. Sarah is also a great professor and cares a lot about the success of her students.",
                "Love how Sarah taught the class. Was very informative & practical at the same time! Projects, homework, and tutorials are fun and great opportunities to practice.",
                "Sarah is so good and the course is very manageable. Lectures are all recorded, quizzes are drop lowest, and there is a lot of extra credit.",
                "This course was very interesting and engaging. It moves at a fast pace, but it was definitely doable for someone who had never had any prior computer science or coding experience. Sarah cares a lot about her students and is very helpful and passionate about the subject area. She also builds leniency into the course and is very fair with grading. The weekly tutorial sessions were also helpful, if you had the right TA, and office hours were constantly held by TAs. The weeks where there was a tutorial and a homework due were slightly overwhelming, and the projects were definitely challenging, but there were plenty of opportunities for additional help and extra credit. The quizzes were also very fair and not too difficult. Some of the lectures were very interesting and engaging, others not as much, but it was nice that you never necessarily had to attend the lectures in person as they were always recorded and posted online. That being said, I found it helpful to actually attend the lectures to stay on top of the workload and material. Overall, this was a very manageable course and definitely a good introduction to coding with Python.",
                "Sarah is a great professor and the class was not too bad. The only thing I disliked was the flipped classroom where we had to watch lectures before the actual class.",
                "This is a good class to take when you have a lot of more difficult classes. It makes computer science fun and is a great beginner course!",
                "She's a great professor! So nice, good structure, too much tkinter stuff though very annoying to draw so much and it's not very accessible.",
                "Such a good class!!!! Prof Van Wart is the best!! She explains concepts really well, makes class very engaging and is always willing to give help. I did not have a background in python at all, and so was a little bit worried, but everything was explained really clearly and with TAs and peer mentors there was a ton of support. While this class did take time and there were a lot of assignments, it was really easy to do well if you put in some effort. Would definitely recommend!",
                "I enjoyed the homework. The problems were sometimes pretty fun. Tutorials were sometimes a pain to attend, but they do help you with the homework. Leniency was also built into the class and the professor was always so supportive. Overall, pretty good class.",
                "Professor Van Wart is fantastic! She did a great job keeping the course organized as well as being understanding given the current pandemic. Hope to take more programming courses in the future.",
                "This course is a really great option if you're interested in programming but aren't actually sure if it's what you want to do or if you have no background experience. Sarah makes the content super accessible to people with no clue what they're getting themselves into but still keeps the class engaging for people who might have a foundation in CS. That said if you've done any coding I would recommend just starting with CS 111.",
                "This course challenged me a lot. But the professor and TAs are very helpful and really helped me understand the material. They are here for you and are always wanting you to understand the material outside the scope of what we have learned.",
                "The class was the perfect level of challenge for me. It was not extremely easy to absorb everything about programming, but it was not hard to turn everything in and get a good grade either. I was extremely interested in the material because we got to create a lot of fun programs, and problem\u2013solving with code was quite fun. I was also easily able to skip lecture when I wasn't feeling good and watch the recording later.",
                "This course is great as a distribution requirement. As a person who is interested in the field of Computer Science but had no previous experience, I think this course is a great introduction. It balances the fun aspects like animations with the more practical aspects like data analytics. Even though I had no prior knowledge I was able to keep up with the material because help both in\u2013person and online was so readily available. It's also great that you can drop the lowest score of Quizzes/ Tutorials/ Homeworks so even if you have a rough start, it's very possible to bounce back. Prof Sarah is also incredibly sweet and helpful.",
                "SARAH IS THE BEST. I was nervous about taking a CS class, as I had basically no coding experience. Also, I felt like the only identity I saw represented in coding in my high school and in the world immediately around me was cis men. As someone who is not a cis man, that made me more nervous to take a coding class. Sarah was amazing. She was so approachable and knowledgable and friendly. Above all, Sarah is the best ~teacher~ I have ever had at Northwestern. The way she broke down coding concepts and made them building blocks to help understand the whole course was invaluable. TAs are also all a great resource, I would just go to whatever office hours fit into my schedule and all were easygoing and willing to help.",
                "Loved the class. Sarah is a great professor. She makes sure that everyone is on the same page and attend office hours if you can. Overall course is a great introductory python class.",
                "the class is a lecture but there's ample opportunity after class, during tutorial sessions and office hours to get help. The TA's and other classroom assistants are really useful and good at what they do, and professor Van Wart is a very good lecturer and one\u2013on\u2013one teacher. this class can be completed remotely, which is what i did for the last couple weeks, and i had no issues for the most part, as there were virtual options to participate in tutorial sessions and office hours.",
                "The pre\u2013lecture recordings are a bit too much, and sometimes the lectures are not as challenging.",
                "This course helped me learn so much about computer science since I hadn't done any previously. The combination of projects, homeworks, and tutorials helped me learn so much!",
                "engaging teacher",
                "It's a cool class and Sarah is a really cool person. It's easy for non\u2013majors to take and by the end you'll know quite a bit about coding.",
                "This course is pretty manageable at first and it starts getting quite difficult in the last few weeks in terms of the complexity of the content. The structure of the course made it really easy to just not show up to class since it's a flipped classroom and everything is recorded. The whole course is really well organized and there are tons of TAs to help when you're confused. Overall pretty easy A and if you have friends in the course you'll be fine.",
                "There was just so much done in this course that I really loved. The projects are amazing and Sarah gives enough time for students to work on projects that are actually cool. Sarah is super flexible with the tutorials, homework, and quizzes. This course also just teaches students valuable skills in problem\u2013solving and in just creating something that's someone's own work. I thoroughly enjoyed this course!",
                "Sarah is an amazing professor and truly understands how much of the class has zero background in coding or python. I had never even thought of coding before in my life and was able to handily manage the course and thought it was a great break from loads of essays.",
                "Just go ahead and attend this class. It is fantastic and not difficult at all.",
                "I took 111 and had to drop it because it was so hard and fast paced, but 110 was actually fun and WAY easier so I did really well. Would definitely recommend over 111 if you are Neuro/cog sci.",
                "This was pretty interesting especially as a non cs major (and doable), but there is a lot of info that you need to learn on your own outside of live lectures (through lecture videos). There's a ton of leniency built into the course which I appreciated, and Sarah + the TA team are super open and helpful for students and questions. DEFINITELY utilize office hours and go to tutorials if you are new to computer science. Overall, while I'm unsure if I'll continue doing cs after this, this was a good introduction and I learned a lot of useful skills, and the staff running this class are very helpful.",
                "CS110 is hard for someone without any coding experience. It is one of those subjects that you get or don't. However, if you need the distribution credit, Sarah and the TA team are extremely helpful and offer you a lot of one\u2013on\u2013one support. Even if you fail the quizzes, there is a lot of chance for redemption through extra credit, and you essentially can get an A if you work for it. Sarah is the best!",
                "This class was much easier with a better language compared to CS111. Homeworks, tutorials, and projects were not too difficult.",
                "I was SO excited to take this course when I registered for it. The CTECs were great and I've always been interested in coding. However, this class was really hard as someone who has no coding experience. Let me start here: Sarah, our professor, was so nice and provided so many opportunities to get help. There are like 15 peer helpers/TAs who all have office hours, so there are office hours for multiple hours every day of the week and they will all help you with your homework and projects. Grading is really fair as well (we are allowed to drop one quiz, one homework, and two tutorials). There are no finals/midterms (there are three quizzes) but there are two really long and difficult projects. The problem with the class is that it is a whole new language, and sometimes it was hard to go from what we learned in class to the homework/projects. Also, we do have to meet four times a week instead of the MWF that is advertised on the webstie. That is because we have a weekly tutorial that we have to sign up for at the beginning of the class. Overall, the class is VERY hard but doable if you are putting in a ton of work and taking advantage of the help available. Not an easy A at all though.",
                "I really enjoyed this course. I had never taken a prior computer science class and this class was meant for my very low skill level. Office hours were definitely helpful. Sarah is an amazing professor and is clearly very passionate about her work.",
                "This course is very beginner friendly. The biggest tip is to take advantage of office hours they are so helpful and will be a lifesaver. It is a great course if you have lots of time in your schedule.",
                "Love this class! Sarah is an amazing professor. She only teaches what you need to know and is very helpful and active on email and Campuswire. I would highly suggest taking this class if it's just a major/minor requirement for you and you aren't pursuing Computer Science. Quizzes aren't difficult and for HW assignments and projects, there are many many times for office hours where HAs can help.",
                "Sarah is a really nice professor who is fair with grading and gives many opportunities to get an A. That's definitely a plus to taking this course, but I did feel as though the lectures were much easier than the homework and project assignments. I felt like I had to teach myself a lot of things through the internet or by going to office hours while the lectures were spent completing pretty simple tasks and problems. I would be able to do the in\u2013class lecture problems pretty easily but I would be stuck on the homework and tutorials for hours before reaching out to the TAs. I will say that the TAs and Sarah are easy to reach and ask for help, so that's a plus.",
                "i was told this class was super easy. it is if you study for exams and do well on projects, which can be difficult. i knew nothing about comp sci before taking this course and will never take a comp sci course again. sarah is great in that she wants you to succeed and is there to help, but the lectures were fast, boring, and the projects were difficult, especially the last one",
                "Not the easiest class, but definitely manageable. I enjoyed the projects that we did but it was hard to keep up with material at times.",
                "Prof Van Wart is very kind and helpful.  There are also many TAs to help you.  The biggest issue is that there is too much content and confusing assignments, especially towards the end of the course.  I ended up having a good grade, since they are thankfully very lenient in grading, so that is why my review of the course isn't too bad.  However, although your grade will most likely remain fine after this course, you will struggle a lot and want to cry sometimes.  I'm conflicted on how I feel about the course.  Would I recommend it?  Yes, since Prof Van Wart is a good starting teacher for this and you will most likely need computer programming skills in many jobs in the future.  However, if you really don't think you like comp sci, I wouldn't recommend taking this then.",
                "As someone who had never programmed before, this class was an amazing introduction into the possibilities and how to accomplish different things. \u2028Professor Van Wars was amazing and really invested in students\u2019 learning, and I would recommend this class to anyone wanting to explore computer programming. This was a great distribution for science.",
                "This class is great as an intro to CS, there are lots of opportunities to get help if you're lost, and the homework is a good tool to help you learn.",
                "I came in not thinking I would love coding and this course completely changed my mind about it! Great course, stimulates interest, Prof. Van Wart is a great teacher and it felt like a 10 person class even though it was a large lecture hall. The homework did not feel like work and I learned a lot from the class as a whole.",
                "This class was a pretty easy formal studies distro for someone with no computer science experience. You can also drop quiz grades and assignment grades which is an easy grade booster. Would recommend",
                "Amazing class and amazing professor! As long as you put in the work you'll do very well.",
                "Really good intro python class, professor was great, learned a lot of basic skills",
                "Sarah is super nice and funny! she is super clear with her instruction and watching the videos posted definitely helps cement what youre learning before you even get into class. Sometimes she moves pretty quickly so there might be some kinks to work out with your computer and pathways, but these hiccups will happen at the start of the quarter and get solved as they come. Eventually you should be able to keep up with live coding in class if you pay attention and can type quickly. She is super nice and approachable and tutorials with Cooper is he is an option is the best. Highly recommend taking this course with Sarah. attend tutorials! they help you with homework too. projects are really fun too!",
                "I definitely learned the most during the tutorials. If you don't understand a concept, you really have to ask questions about it, which I felt was difficult during the lectures & diminished their usefulness. The projects were challenging for me as someone who had absolutely no prior coding experience, but there are so many office hours available that I felt like I could always get help.",
                "Easy course that is very interesting.  Sarah is a phenomenal professor and provides so many resources for students.",
                "An amazing course for someone with 0 prior coding experience. All the lectures are super helpful in learning the content, and Sarah is an incredible lecturer and helps answer questions so well. The tutorials and homework assignments are nit hard and the quizzes are straightforward. The projects take more time but are also not bad at all. Really take advantage of office hours because you learn so much and are a life saver.",
                "The first half of the class is very drawing focuses, which made me a bit annoyed to be fair. It get better cause the latter one is more centered on data mining. The tests are not hard and graded leniently. An easy A.",
                "I really enjoyed this class!!! Sarah is a great professor and she really tries to give students lots of support (TAs, office hours, etc). I wanted to brush up on python and this class helped me. It\u2019s not a stressful coding class and it\u2019s definitely designed to encourage not weed people out",
                "This class was easy;  highly recommend taking it with Sarah. There is a leniency in grading (dropping lowest quiz/hw/tutorial) and many opportunities for office hours so passing the class was a breeze. Sarah also posts asynch lectures and online lectures (of her doing demos) that basically outline how to do assignments. There was 2 projects, 3 quizzes, 6 weekly homework, and 9 weekly tutorials (only the projects + quiz is high stake). I learned so much and it motivated me to go beyond what is assigned (opportunities for extra credit). Wish I had taken it earlier because it has motivated me to pursue other CS classes (as a non\u2013CS major).",
                "Prof. Van Wart is super nice and wants to help you success! And all the TAs are extremely helpful, I felt like there was always somewhere to turn if i needed help with anything",
                "I came into this class absolutely terrified of computer science and needed to take it as a prerequisite for another program. I was really nervous since I had no prior exposure to CS, but it ended up being my favorite class this quarter. Sarah is an amazing professor, the TAs are incredibly helpful, and the assignments are intellectually challenging in the best way possible. I cannot say enough good things about this course, and I want to reiterate that I was not interested in CS at all before taking it. It made CS feel way less intimidating, and I'm strongly considering taking more classes in the CS department. If you're thinking of taking this course and don't have any CS experience (specifically python), I strongly encourage you to go  to office hours / tutorial sessions. There is OH, either run by a TA or Sarah, almost everyday, and oftentimes multiple sessions per day, so take advantage of them!",
                "This course was much easier than expected when attending office hours to receive extra help.",
                "This was a great class. It\u2019s decently easy with a homework assignment and tutorial every week that do not take very long. There are also three quizzes (you can drop one) and two projects. Although this seems like a decent amount of work, none of it takes very long and there are a plethora of opportunities to get help if you are struggling. Take this class if you\u2019re even slightly interested in CS.",
                "This course was so well designed!  Lectures were very helpful and the various homeworks helped build the next (tutorials truly helped with the homework, the homework truly helped with the projects).  Sarah is a wonderful professor: she's very knowledgeable and skilled at explaining concepts \u2013 or leading students to discover them for themselves, and while often reminding students that doing the bare minimum is absolutely enough, she often encourages them to go beyond and learn more for themselves.  This really shows her genuine interest in the subject and desire to foster that same interest in others.",
                "Great intro to python. I learned a lot in this course. Tutorial is optional but a game changer for understanding the material. Homeworks aren't bad if you go to tutorial. Projects take a while but aren't bad if you go to class/office hours. Overall a great class. I learned a lot.",
                "definitely recommend taking this with Sarah!!!!! if you're a neuroscience major and need a compsci class,, take this class with her!! you learn a lot and it took time to do homework/tutorials/projects but Sarah and the ta's are all super helpful and answer questions well. quizzes aren't too bad and distribution of grades is very fair. also no math in this class which is great!",
                "This is a great course if you're looking to learn more about the basics of coding and Python! By nature of the material, there is quite a bit of material that you have to cover each week, especially in the middle of the course, but it's pretty manageable. Sarah is a great lecturer and instructor and is so knowledgeable about the course content. The thing that I really enjoyed about the class was the amount of resources and people that we available to help at all times during the week. There are multiple office hours slots each week, tutorial instructors, and an online forum to get help whenever. I think you really get out of the course what you put in. If you're really into the coding, there are plenty of opportunities to go above and beyond. But if this is just a distro, you can do the bare minimum and still get a good grade and learn some useful tools. Overall highly recommend; I think everyone is set up to succeed and get an A in this course based on the way it's designed.",
                "I went into this class with zero coding experience but left feeling like I had a solid foundation. The course was enjoyable, not too much work, but would also challenge you intellectually at times.",
                "This course is actually pretty easy if you follow along. No cap, I didn't lmao so I got lost. But for real trust me when I say this is prolly the most manageable formal study ever. Professor Van Wart is so nice, like too nice, and makes the concepts so easy to understand. Literally just pay attention and you'll pass with flying colors. She lets you drop lowest quizzes and homework and all that. I know the title is scary but you got it for real trust me.",
                "This course was a great intro class. I learned a lot about the basics of comp sci, and now I\u2019m pursuing a minor in it. The teacher is super nice and understanding too. I really enjoyed it!",
                "This class is definitely worth it. It is very much a beginner\u2019s course. If you have Sara Van Wart, her and the TAs are super amazing and helpful. They are so kind and will solidify you through. The material isn\u2019t super challenging and the class doesn\u2019t move too fast.",
                "The course presented the right amount of challenge with the homeworks and projects. The course material was helpful with assignments and the peer mentors and TAs were extremely helpful as well. The professor makes it easy to understand the subject matter and is also extremely helpful in office hours. There is no worries in taking this course if you have never coded a da in your life.",
                "I struggled in this course a bit, but not nearly as much as I thought I would as a complete beginner to computer science. The professor was amazing, and although there are a couple of really difficult concepts, I was pleasantly surprised with the number of resources offered in this course. It might just be that I don't have a standard for beginner\u2013level comp sci classes, but this one is pretty solid, I'd say.",
                "I did a little Python in high school and taking this class now explains things a lot better and I feel a lot more confident in my command of Python. The professor was really good at explaining things and it was pretty easy to get help when I needed it.",
                "Good class. Not difficult, not that much work.",
                "I really liked the use of projects, which allowed us to apply our knowledge.",
                "Amazing class! Came in with 0 CS knowledge and left wanting to take more CS classes. Sarah is so nice and does a great job of explaining concepts. The tutorial sections were helpful as well. Not a challenging class, but one where you can get a lot out of it if you're willing to put in the time/have fun.",
                "I thought this course was not only really fun, but also pretty intellectually challenging. I learned a lot of useful concepts that are applicable to many different fields. Great class!",
                "The professor is just incredible!",
                "The class is a very well structured introduction to Python. It is very easy to learn in this class, even for people who have detested coding or never done coding in their lives before. It demystifies the subject and makes it easier to understand.",
                "Enjoyable class, Sarah is super nice and helpful! A very doable CS class if you have no CS experience.",
                "TAKE THIS COURSE!!! I went into this class knowing nothing about Comp sci and now have a much better understanding of python. The work can be overwhelming and it can be easy to fall behind but there are plenty of resources available online if need be. I love Comp sci now and will continue to take more classes",
                "Structured and organized course. A good introduction course if you have no previous knowledge about coding at all, but otherwise a little slow \u2013\u2013 did not cover as much as I hoped.",
                "This class was relatively straightforward and easy to do well as long as you complete the assignments with some effort. Sarah was a great and very understanding professor; I would highly recommend taking this class with her. I had never taken computer science before this class, but it was pretty easy to pick up python. Sarah recorded lectures, which was really nice, but it did mean that most people never showed up to class. The quizzes were pretty easy, the tutorials were relatively short, and the projects were interesting, although a little time\u2013consuming. The grading in the class is very lenient, as you can drop your lowest quiz grade, skip a homework, and drop two tutorials, and with extra credit on the projects, you have a lot of room to make up for poor grades on other assignments. I also really appreciated having peer mentors run the tutorials and office hours, as I attended many office hour sessions to get help with homework and projects. Would overall recommend this class to anyone.",
                "Sarah is the best of the best. I knew absolutely nothing about coding, and really struggled, but she was understanding, and so were many of the mentors for office hours. This made it much more easier. There's also a lot of leniency built in the class, so if you pay attention, watch the lectures, and do the assignments/tutorials \u2013\u2013 you should be good!",
                "Professor Sarah is amazing and this course is a great intro to coding in Python. The assignments and projects aren't too difficult, especially if you go to all the lectures.",
                "This class is really great for beginners and even though it moves quickly, as long as you stay on top of the work it is very manageable (even fun).",
                "Even if you have no experience, this class is super manageable and the grading structure is very forgiving. As long as you stay on top of assignments and go to office hours when you need to the content is very easy to navigate. Sarah is a really good lecturer as well.",
                "Best class, best prof. Prof. Van Wart is amazing and all the TAs are super helpful. All intro classes should be like this one. Some students will realize they enjoy coding, some will realize they don't but everyone will leave the class knowing all the basics of python. Personally, this class was a lot of fun. I'm normally a big procrastinator but I did all the homework and projects days before because I was excited to try them out. You should 100% take this class if you think you may be interested in the subject but have ZERO experience.",
                "I was challenged but the class also provide support to help me through those challenges.",
                "Very useful and easy class.",
                "This class is alright \u2013 Fine for a science/formal studies distro requirement but you definitely have to pay attention and do a decent amount of work on your own. Sarah is super great and understanding \u2013 I never felt like I had a dumb question. It's definitely possible to get a good grade without going to class, but you have to do well on the projects and quizzes. I liked this class overall, but it's not very technical \u2013\u2013 it's very intro level and you do a lot of drawing/programming with things you probably won't use in the future.",
                "A really great first\u2013time programming class. On a weekly basis the work is very manageable but the two projects are difficult if you've never coded before and will probably require a lot of time in office hours.",
                "Came into it thinking it\u2019d be a fun introduction to comp sci. This class killed me, was pretty easy at the beginning but turned into very stressful weeks at the end trying to figure out the homework and projects with minimal help from the peer mentors. Maybe it was just me I don\u2019t know",
                "This was a good intro to Python and the projects were helpful in checking my knowledge.",
                "As someone who had no coding experience before this course, I really enjoyed this class and learned a lot from it with little stress. The class had a flipped structure, with pre\u2013recorded lectures and optional in\u2013class exercises. I actually had never been interested in CS and thought I wouldn't like it, but I actually really enjoyed learning Python with Sarah! It was cool to problem\u2013solve, and the applications we learned\u2014such as the animation project\u2014allowed us to be fun and creative. Additionally, Sarah was extremely helpful, and so were all of the TAs and Peer Mentors.",
                "Actually amazing class. You really learn a great foundation of coding, and it makes you want to take more cs classes. I wish i went to office hours more, not because i needed help, just because prof Van Wart was so nice to talk to. She was so encouraging, likely the more encouraging professor I have had",
                "I 100% recommend taking this class with Sarah. By far the most organized class I have taken at NU so far and pretty easy to get an A. I was pretty nervous to take a CS class here at first but Sarah gives plenty of resources to get help if you need it. Homework assignments are enjoyable as well, and there is a lot of leniency built into the course which is very helpful (drop a quiz grade, skip 2 of the 9 weekly tutorials, and drop a homework assignment).",
                "I enjoyed taking this course as it provided a strong foundation into the world of computer programming. Completing the assignments while also focusing during lecture videos was sufficient enough to understand the material.",
                "No prior experience in coding is required although I'm not sure how applicable the course content actually is in real life; there's quite a heavy emphasis on Tkinter. The quizzes are really easy and straightforward, no need to overthink it. The course grading is made up of weekly tutorials+homeworks, 3 quizzes and 2 take\u2013home projects; you get to drop your lowest quiz/homework/tutorial grades. Easy A and probably a good distro to balance out a humanities\u2013heavy quarter.",
                "As someone who had no previous experience in computer science, I found the first few weeks pretty tough, as there was so much information to grasp so quickly. Despite being a beginner's class, it felt as though some coding experience was expected. However, once I'd learned the basics of coding the class was pretty manageable and I found myself getting really into some of the homework tasks.",
                "Best intro class. Definitely go take it.",
                "The course focused on different aspects of python and gave me a broad coding experience which included things ranging from making animations to making tic tac toe games.",
                "10/10",
                "If you put the work in, you will get an A. The grading system is very generous\u2013 all homeworks are graded based on whether you gave it a solid effort, and you can drop your lowest of three quizzes. I have no prior coding experience and I had absolutely no trouble succeeding in this course. Be willing to utilize office hours because a TA can spot an error in your code after looking for 10 seconds whereas it may take you hours to find your mistake.",
                "Very good, straightforward course\u2013\u00a0the projects were a bit hard though so be wary of that. Make the most of office hours because they help a ton (especially with getting extra credit)",
                "Professor Van Wars is amazing. The assignments are actually fun to do. I thought I would literally hate this class, but I ended up loving it, thinking it was fun, and am now looking into taking more compsci classes. I thought everything was like a puzzle you were trying to solve. I loved logic puzzles growing up, and still do, so this was not work for me. On top of that, Professor Van Wars is one of the nicest human beings I've ever met."
            ]
        },
        {
            "course_code": "EECS_110-0_20",
            "course_name": "Intro to Computer Programming",
            "instructor": "Sarah Van Wart",
            "year": "2019",
            "quarter": "Winter",
            "instr_rating": {
                "mean": "5.26",
                "count": "50"
            },
            "course_rating": {
                "mean": "4.76",
                "count": "51"
            },
            "comments": [
                "I really enjoyed the course, and a large part was because of Professor Van Wart, who is one of the best professors I have had. She is incredibly dedicated to her students, which shows in the amount of resources she makes available to us. Also, she really understands the pedagogical trappings that many beginner CS students fall into and is incredibly patient in helping us work through problems in her many office hours. I've taken EECS 111 before, and I was able to find a lot of value in this course, so you should definitely consider!",
                "Gave me a good background in python. I wanted to know how to do some programming and this course provided the knowledge.",
                "This course is not bad at all if you have no computer science background. Most of the lectures were actually interesting and there were many opportunities to get help on homework or projects.",
                "This course, while difficult to get a hang of at first, turned out to be a rather enjoyable addition to my curriculum.  Professor Wart is a very enthusiastic and helpful professor who made learning about Python enjoyable, and her availability and willingness to answer questions also contributed to my enjoyment of the course.  It is worth noting that, while the lecture slides and files are uploaded to the course website, allowing you to learn at your own pace, I would still highly recommend going to lectures, as the slides are not nearly as helpful by themselves as a full lecture, and you will likely miss out on a lot of important information.  Beyond that, as long as you manage your time wisely with regards to the homework and study even a little bit for the exams, you should have no problem getting a decent grade in this class.",
                "The course was definitely a big change of pace for me, a liberal arts major, and I found that its coursework was stimulating, challenging, and digestible.",
                "Challenging and can be difficult if you don't put in the effort to learn the material.  Going to office hours will really help!",
                "Very good class! Sarah is great. She is really, really patient and explains the concepts pretty clearly. Occasionally, the class is a little confusing due to technical issues, but generally you learn a lot about basic programming. Assignments might be kind of hard, but they are really interesting and you really learn more through completing the homework and projects.Overall great class.",
                "I started the course with zero programming knowledge, and now can consider myself 0.75/1. Overall, the class is very challenging, took  a long time to study in general and complete its homeworks, assignments and projects. Professor Sarah is one of the best professors I have ever met, and she did her best to help us with the subject both in person and electronic communications. The only thing is that the class is challenging, there is little time to stop and ponder about what we learn and how to apply it in the field. We had to switch to a different topic every week, and I feel like we know a little about everything, we are not fully knowledgeable on one topic.",
                "Sarah Van Wart is a very nice person and clearly cares about her students, but wasn't the best lecturer. In fact, I found that the tutorial sessions were much more useful than actual class lectures. She did offer lots of Extra Credit which made it easier and less stressful, so THANK YOU!",
                "If you have any amount of coding experience, this class will not be too bad at all.",
                "Overall, I think that this course was pretty challenging. However, it was not that difficult to get a bad grade. Just attend office hours frequently. Sarah is absolutely amazing\u2013\u2013 by far one of the best professors I've had here. She truly wants you to succeed, which is why she exceeds the time allotted for her office hours. The class also has TAs, who are very helpful.",
                "I really enjoyed the professor, she is amazing and made the class fun and enjoyable for me.",
                "Solid overview of applying Python to solve real\u2013world problems, but tutorials a bit redundant",
                "This course is great in introducing a basic level of computer programming, it just takes a lotta effort and persistence to ge what you want out of this course",
                "Have never done programming before but I think this class was a great introduction into python programming. Even at introductory level, I feel like I'm leaving the class with a cool new skill set and mindset (think like a computer). The tests are a little tricky but doing the practice problems from lectures and tutorials are a big help. Also there's ample amount of office hours to ask questions. Projects are long and can be confusing so GO TO OFFICE HOURS!",
                "I really liked the course and thought it was well outlined. I wish we could have dropped a homework instead of the EC because there was definitely a week where we could kinda get a freebie but other than that it was a good course.",
                "I took this class out of pure curiosity and its been the hardest class ive taken since ive been here. I came in knowing nothing about CS and it kinda smacked me in the face. Only way i was going to get through it without failing was to go to OH which i did and that helped a bunch. I will say for those who seemed like they've had experience programming, they seemed like they loved it. there were 2 projects, 2 exams, and 6 homework assignments. Hard Class.",
                "Loved this course. Hard at times since we were the first class, but the teacher is attentive and more than willing to provide feedback and help on the homework. Class was challenging at times but really rewarding. It was nice to take a class for non\u2013majors that taught applicable coding. Great class if you want to see if computer science is for you, or if you just want to learn one language with official instruction.",
                "This is a great course. I went in with NO experience at all and still did great. A lot of the work is homework/tutorials/projects so you are able to go to the TAs whenever and have them help you with the work. 2 tests \u2013 both written \u2013 and they're pretty easy. Sarah is a great teacher also!",
                "I knew nothing about programming or computers so I was terrified about taking this course. But she taught this at an extremely learnable pace and used helpful examples. I learned so much and actually gained an interest in programming.",
                "Sarah is awesome! Extremely approachable and a super kind and knowledgeable professor. Even though it was her first time teaching the class, she really shows that she cares about students' time and technical growth, and she really goes out of her way to make sure you're doing well. The class did have elements of learning coding that were at times difficult to get by, but Sarah definitely makes the class fun and let's you do your own thing, when it comes to figuring out the code and creatively expressing yourself on the graphics homework and projects. All in all, an awesome class if your interested in the fundamentals of Python!",
                "Sarah is probably the nicest professor I have ever come across. She will go the extra mile to help students if they need it. She gives plenty of opportunities to get extra credit and improve your grade if that is what you are looking for. I am planning to take more computer sciences classes just to have Sarah as a professor again. I had no experience with coding before this class. I learned soooo much. That being said, it is a lot of work. You have a homework or project due every week which takes hours to complete. My only pet peeve about this course was that this class was meant for students with no coding experience. However, more than half the class knew the language and would not show up to class while creating an unnecessary standard for the rest of us. The expectations are set so much higher for students who have no experience and are learning it for the first time.",
                "I get why this class would be hard if you have never coded before. If you have, however, it's a great way to learn python and a bit of data analysis.",
                "Honestly was a bit difficult for a beginner course in CS, but office hours and tutorials are helpful for completing assignments. Exams are much easier than assignments.",
                "This course is great! So cool that at the end of the course I was able to understand parts of the python language and able to code my own functions, programs etc. The course was a little more intense than I had expected for a non major and very basic computer science class. We covered too much material and not enough time to really delve in and practice each concept before moving on. There was also a lot of work and time required to do well in this class. The professor often underestimates the amount of time and effort needed for someone who has no experience with coding to complete each assignment. Thus, I was pretty stressed out and felt frustrated a lot of the times. The TAs were great though as they were very understanding of student's struggle and were willing to explain things step by step and were advocating for us.",
                "The homework takes hours, tutorial sections are not helpful, but exams are reasonable. It's an easy A mostly because homework and tutorials are graded on completion but it takes a lot of work to be able to actually complete the homework. Office hours are what got me through this course.",
                "SARAH IS THE BEST!!! I have never felt more connected to a professor in my life and it literally made learning feel so effortless. Even though it was her first time teaching the class she literally knocked it out the park.",
                "I really felt like I gained the ability to do some cool things with Python. I started to look forward to the challenge of each homework, seeing if I could solve the puzzles.",
                "EECS110 with Professor Sara Van Wart is an amazing course. You learn a lot about programming with a broad range of topics. These topics include graphics with tkinter, audio, web APIs and web scraping, data analytics, and even SQL",
                "Sarah and the TAs were all really great and helpful! They were super responsive even outside of office hours, and very cognizant of the fact that basically no one was a CS major and thus held us all to an appropriate standard.",
                "As I had never had any experience in coding, I didn't really know what aspects of it were important. However, this course definitely gave me a good foundation of knowledge of basic Python utilization",
                "The workload might be heavy and the homework somehow is very hard to complete. However, the professor is SUPER GREAT and very tolerant to give extension on project and homework. If the homework is too hard, do tell the TAs. Professor will cancel the extremely hard homework and giving more time on project. Exams are not hard and on Final there will be extra credit. Remember to complete all practice questions for exam then you will be fine. Not necessary to go to class and not necessary to learn at all. The only thing you need to pay attention is to go to tutorial session. Exams are easy to practice for.",
                "Good course if you only want to take this course and no other EECS courses. It doesn't help you be eligible to take other EECS courses since the prerequisites in that department are very strict. That said, I learned a good amount and its enough to do some programming for jobs, etc.",
                "Sarah is amazing! She is so caring and puts the students first. She also offers extra credit and is willing to help each student individually during office hours. Honestly, she is one of the greatest professors I have had at Northwestern",
                "This course is not very difficult and it provides a solid basis of understanding Python. I feel like I could teach myself a lot of Python code after taking this course because I was given a great understanding of the fundamentals. This class is great.",
                "I loved the intersection of theory and practice. The projects really helped apply CS in a front\u2013end, real\u2013world context and served to reinforce all the learning. Sarah was always available for us and I understand exactly how much time she had to devote to OH/additional OH. She really wanted everyone to succeed in the course and come out of it with a better skillset."
            ]
        },
        {
            "course_code": "COMP_SCI_110-0_20",
            "course_name": "Intro to Computer Programming",
            "instructor": "Sarah Van Wart",
            "year": "2021",
            "quarter": "Winter",
            "instr_rating": {
                "mean": "5.69",
                "count": "150"
            },
            "course_rating": {
                "mean": "5.42",
                "count": "152"
            },
            "comments": [
                "Great foundation for learning the Python language at a great pace with some challenging elements",
                "This class is super easy. Highly recommend!",
                "Sarah is a wonderful human. She is a great introductory comp sci professor and the class is balanced really well in terms of learning information and assignments.",
                "This course is so fun and you learn so much! Definitely one of those things where you get out of it what you put into it, but there\u2019s so much support (literally like office hours are available for hours every day) that it is doable!",
                "I was terrified going into this class because I had zero CS experience, but I ended up loving it. Sarah is such a great professor, and made the course very beginner\u2013friendly. I feel like I have a very solid foundation of CS skills now. The assignments are reasonable and can be interesting if you are engaged in them. All of the TAs are also super helpful \u2013 go to office hours with any questions and they'll help you fix your code/answer any questions. I would highly recommend this class for anyone who needs a distro, or just wants to learn about CS.",
                "This is one of the best classes I've ever taken\u2013\u2013and I couldn't be more surprised given its content. I was so nervous coming into the class having never programmed before. I not only left the class with a solid intro to python, but an actual desire to continue learning about computer science and possibly even taking more classes. Sarah and the peer mentors actually made the learning fun and it always felt extremely rewarding. If you put in the effort, it's not hard at all to do well in the class. But more than that, if you put in the effort, you'll leave the class a better programmer, student, and (honestly) person.",
                "The tutorials and office hours were very helpful, and there was a wide variety of office hour times. The instruction was very effective and everyone wanted to make sure you understood anything you were confused about.",
                "it was cool",
                "Ideal for programming beginners! Sarah is really nice, nothing super challenging unless you personally want to go the extra mile, so many opportunities for bonus points that it seems like you're basically guaranteed an A.",
                "I appreciated the flexibility of the course attendance and grading system. I liked that help was readily available throughout the quarter.",
                "For an intro class, 110 will give you all the tools you need in order to begin fully learning coding. You gain a solid grasp of python.",
                "My goal in taking this course was to simply grow in my knowledge and abilities. I had some background in coding prior to this class, and with this course's focus on gradual learning and implementation using fun and engaging exercises, I was able to develop my skills and reach this important goal, while being challenged intellectually!",
                "I had to take this course for my Linguistics major, and I wasn't super happy about it because I am not a STEM person. But Sarah was truly amazing. She is so enthusiastic and ready to help everyone. I just recommend taking advantage of office hours and the helpful TAs. This is a challenging class if you've never done programming before, but it's possible if you keep up with the pre\u2013recorded lectures and tutorials!",
                "Fun intro comp sci course, and you will learn a lot about beginning with Python. Lots of office hour times available so there were always people to help if you got stuck with your code.",
                "this course was so much better than i anticipated, especially since i had no prior coding experience. you get what you put into it, but sarah is so passionate she really makes you want to try. i really enjoyed this course and it very much is possible to get an A in this class as long as you stay on top of lectures and hw assignments/tutorials.",
                "This class is really nice. Prof van Wart is really awesome and the class is set up to maximize student's learning and success. The only \"negative\" is that it can sometimes seem a little too slow\u2013moving, but that's just because its the most intro class into computer science",
                "I knew nothing about coding going in, but Sarah and her team really break everything down for you and help every step of the way. Lots of available office hours and opportunities for help. Weekly homeworks, tutorials (in\u2013class work), a few quizzes, and two projects. If you keep up with the work, it's totally manageable.",
                "An A is definitely attainable in this course even if you have 0 coding/tech experience. There are just a lot of assignments that you\u2019ll need to keep track of. But Sarah is an amazing professor who really cares about her students learning.",
                "Professor and TAs were super accessible at all times, assignments were tough but not unfair, and hard work was rewarded.",
                "meh",
                "Before this course, I did not have any experience with computer programming. However, the way this class was set up made it very easy to learn basic coding in python. I really enjoyed the homework assignments and projects because each one allowed us to put our own creative spin to it. Additionally, the tutorials were very helpful for understanding the concepts each week. The professor is very enthusiastic and willing to answer any questions or help with confusing aspects of the course. Overall, I highly recommend this class if it is your first time taking computer science.",
                "fun and easy intro to Python, Prof Van Wart is clear and super positive and there are tons of opportunities to do more and lots of office hours times, the projects and homeworks are easy and fun. It's a class that won't take up too much of your time and can still learn a lot in!",
                "This was a really great class! I was nervous at first because I was coming in with no programming background, but this class helped me get a great start. And Sarah is so sweet and a great professor!",
                "I'm a big fan of this course. As someone who wanted to learn python for social science research, this course taught me the basics and I feel like I have a good grasp of python because of it. While not an easy A in the sense that you'll have to work, if you put in the work you will get an A, with how much tutorials/hw/projects are worth there's little opportunity to choke on exams and hurt your grade.",
                "solid.",
                "I really enjoyed this course! I mostly study humanities subjects so this was a nice change of pace. Sarah was super informative and the lectures were helpful, but tutorial and the homework/project exercises really helped me learn. And office hours were super accessible and the TAs were really helpful with any coding bugs or issues!",
                "The concepts in this course were interesting and fun once you understood them. However, the homework and tutorials were ahead of the actual lessons, which made this course challenging. Sarah was an okay professor, but she felt a little unprepared a lot of the time. I learned a lot in tutorial (which I didn't know about prior to signing up for this class). The coursework felt manageable, but the additional lectures beyond live lectures was a lot of time and it felt excessive.",
                "This course is great! I honestly enjoyed how dynamic it is because it makes you keep up with all the content. After you get over the learning curve, it feels awesome to make things work yourself! There are weekly tutorial tasks due (and you can drop 2 out of 7) and the tutorial is led by undergrad TAs that are surprisingly SUPER helpful. Weekly homework assignments and the last one was optional. 2 projects and 3 quizzes (first two mandatory; third is optional) that are pretty much midterms in terms of the format BUT they weigh a little when it comes to the overall grade. Also plenty of office hours, so you can work through anything that's confusing to you. Sarah is super nice and always answers any questions in class, so the lecture is also quite engaging (even though the lecture would often run behind what we do in tutorials and what the homework is on). It's also very useful to have that basic knowledge in a coding language because you get how a lot of things are done virtually. I took it as a Neuro requirement but would recommend it even as a class to take for fun!",
                "The professor is so nice and helpful and understanding. she made the material so fun to learn and was so attentive to my questions and concerns. I learned so much in a fun and hands on way.",
                "Great class \u2013 Professor van Wart teaches the basics of Python really well.",
                "This course was super fast\u2013paced, but I feel like I have a good grasp of the basics of Python. Sarah was such a kind professor and the whole tutorial/peer mentor system supplemented what we did in class. Some downsides are that the projects are pretty time\u2013consuming and stressful, and the homework is often much more challenging than what we do in class. Other than that, good class and good professor!",
                "This class is so hard if this subject doesn't come easily but you will be okay if you either a) have time to go to office hours every week or b) take it with a friend/friends. Collaboration will save you in this class. There are a lot of office hours you can go to, but you have to be realistic with yourself about whether or not you have the time/energy to go.",
                "This class is so great for people that are new to coding. Sarah moves slowly enough for everyone to understand, but I never felt like topics were dragging on. In this class, you learn a lot by doing, and there are so many opportunities to practice what is introduced in lectures. Everyone\u2014Sarah and the peer mentors\u2014are so patient, kind, and always willing to help.",
                "I had a lot of fun. There's very clear guidelines on assignments which makes it easy to complete assignments, but there's also a lot of room to customize and get creative with the code you wrote. I will say that how much time I would have to spend on a given assignment was really all over the place because if you know how to do it right away it can go really quickly but if you don't know it, or your code isn't working for some reason you can't discern, you can end up banging your head against the wall for hours trying to figure it out. But I guess that's just the nature of coding.",
                "This course is a really wonderful and gentle introduction to computer science. I will admit I found out pretty quickly that I'm not a person who enjoys coding so I didn't put in as much as other people and therefore learned less than perhaps I could've, but even so it's so reasonable and well\u2013paced I'd still recommend it to anyone curious about coding but intimidated by the other CS courses. Far better than CS 111 for beginners and so many opportunities for extra credit and a fair amount of leniency (can drop 1/3 quizzes, 1 homework, 2 tutorials) so if you put in some work you should be able to achieve an A. Prof is wonderfully supportive and stresses how approachable coding can be/that the course is for beginners.",
                "Great introduction to python in an easy, low\u2013pressure class environment. Highly recommend for an easy formal studies distro or just to take for fun, like I did!",
                "This class is a great introductory class. I had no background coming in, but still managed to do well in this class.",
                "This class was fun and pretty easy. Professor van wart is the sweetest person ever and is very forgiving in grading. There are plenty of assignments so unless you fall behind getting a good grade wont be too hard.",
                "If you were intimidated by CS before, TAKE THIS COURSE!! Sarah and all the TAs were so helpful and they always make sure we understand the content. The perfect introductory course.",
                "I liked this course as my first exposure to computer science, the pacing was good/not too fast and explanations were thorough.",
                "This course was great and a lot of fun, speaking as someone who never had an interest in programming and had 0 experience going into this class. You learn a lot of the basics and get a sense of the key ideas in programming and overall it's just really a great, straightforward class.",
                "This class is awesome! Take it",
                "I really liked this class. It was a great introduction to computer science, and it definitely has sparked my interest in taking more computer science courses in the future. The workload is pretty light and if you pay attention to lectures for the first two quizzes, you're basically guaranteed an A as they drop your lowest quiz score, tutorial, and homework grade.",
                "This course was so great. I knew nothing about coding before taking this course and now feel confident with basic python skills. Sarah is also an awesome professor. She is so clear in her lectures and is super forgiving with homework, exams, etc. allowing many extra credit opportunities. There's also office hours everyday which is super helpful. I would highly recommend this course with Sarah if you're new to coding because she was such a great prof, and I love coding because of this course and her.",
                "Friendly to students to CS, challenging, lots of help available, I will likely need it in the future",
                "This class is good! I think it teaches some basic, really valuable skills just so you kind of understand how very basic coding works. I am really not a stem person at ALL but Sarah made this class a whole lot easier and I think the TA's saved me for real. You will end with an A.",
                "This course is excellent. Sarah Obviously cares a lot about students and is very understanding. Grading is very generous too which I appreciate given the difficult subject matter",
                "Phenomenal class, didn't even take for any credit just for learning and it was perfect",
                "Teacher was very enthusiastic and clear and consice.",
                "This is an awesome introductory course to computer programming. As someone who has no prior programming experience, I thought the course was perfect for my lack of programming background with its pace and its focus on a very versatile/useful language (Python). What I loved most was this course's focus on actually teaching you the material rather than trying to make the class as hard as possible \u2013\u2013 that being said, while it wasn't super difficult, I would still definitely recommend going to office hours. Quizzes were fair and the projects are worth a lot of your grade but they are fun and you can get extra credit on them which can help your grade a lot.",
                "This course was well structured, well taught, and well organized. However, I came into this course having had prior Python knowledge, and since I am not pursuing a CS major I did not want to take CS 150. Thus, it was a tad too easy for me and I found myself wanting more. For those looking to get into CS however, this is a great intro course.",
                "I was really surprised at how much I liked this course. Not only was it fun to learn, there was also so much help provided to the class from Sarah and the TAs.",
                "Sarah is a great teacher. I had no interest in computer science before this class, but I was pleasantly surprised.",
                "Loved Dr. Van Wart's lectures. Loved this course. Loved doing homeworks. Very stress\u2013free, and Dr. Van Wart is an excellent Python teacher.",
                "This course helped me learn so many things that I wasn't aware of prior to taking the class. I learned so many concepts and hope to take another CS course sometime in the future!",
                "I love working with computers, so this course helped me learn how a computer processes things. There were so many things that I learned that I did not expect to. The workload wasn't as bad as I thought it would be and it was just enough so that I was able to enjoy it to its full extent.",
                "This is an excellent class! Workload is very manageable and everything is made really easy to understand. Assignments are fun, but prepare to do a lot of work on projects!",
                "the content was still relatively easy to understand despite being a first time coder; professor is very very nice and makes you want to learn",
                "This was my first CS class and I found it a perfect class for a complete beginner, I learned so much, the instructor is so kind and really made the class accessible especially during a time of remote learning so that if you worked hard it was very easy to get an A! Made coding super fun, challenging but extremely doable if you keep up with lectures.",
                "We learned python in this class which is very useful. It was a fun class and Sarah was a great professor. As long as you listened in lecture, you should be able to understand stuff. The peer mentors helps a lot too.",
                "Wonderful teacher. She is open to all questions and is so kind and cares about all her students. Class material can be fast at times so going to OH can be really helpful if you needed more time to comprehend the ideas that week.",
                "The easiest class I've ever taken. So many opportunities for extra credit and the only place you can really get points off is in the quizzes, which aren't even that bad. There's also a lot of leeway with dropping low scores, at least for this quarter. All the course staff for this are always super helpful and ready to provide any guidance you may need. I learned a lot in this course and was also never stressed out by any assignments so definitely a win\u2013win situation.",
                "This course teaches the basics of python, which I found useful. The TAs were especially helpful in answering questions. Sometimes the professor spent a lot of time explaining a basic concept like variables (anyone who's taken algebra knows what a variable is) and less time explaining something more complicated, but for the most part the instruction was clear and helpful. The one thing that annoyed me was the required tutorials because it wasn't clear from the course description that I would have to attend an extra hour of class per week.",
                "the combination of weekly homework AND tutorial assignments and the two projects near the end and quizzes throughout the quarter were far too much work. each thing requires hours of work. would never take this class if i didnt have to",
                "This course surprised me because I genuinely enjoyed it! The assignments were honestly fun, and they let me be creative. The assignments were also definitely manageable!",
                "I enjoyed this course because the assignments were like puzzles. As long as you watch the uploaded videos from the class website and attend tutorial sessions, the assignments are pretty straightforward. It is very easy to find help through office hours and the Piazza discussion boards.",
                "Loved the net\u2013services stuff, but really just dives into python grammar not much too complicated stuff",
                "the prerecorded lectures were short and easy to follow along, as well as the actual 3\u2013day a week lectures. there is flexibility built into the course with the dropping of a quiz and the course website is so beautifully organized it's very easy to know  what you need to do to complete it.",
                "I gained a new interest in computer science",
                "I had very little programming experience when I signed up for the class, but the class does a very good job of easing you into Python. The homework is sometimes challenging, but it's not infuriating to work out. The projects were also a lot of fun and satisfying to make.",
                "The class was pretty easy even for someone like me who had never seen a line of code before. Sarah is an awesome professor and really easy to ask for help",
                "This is a great course! I came in knowing nothing about computer programming (aside from middle school Scratch coding) and I did fine. Professor Van Wart is an excellent instructor who genuinely wishes for the success of her students, and both she and the TAs are often available for help outside of class. As long as you pay attention in lecture and get your work done, you will be fine\u2013\u2013besides, a lot of the work is really fun!",
                "This was a great class as an introduction to cs. It was as interesting and engaging as an online class can be, taught me a ton about computer science, and Sarah is absolutely amazing. Super super great teacher and very nice.",
                "This course is a challenge, but Sarah made CS really engaging and interesting to learn. Regularly attending tutorial sessions and office hours really helped me succeed in the course. I knew nothing about CS when I started, but now recommend this course to anyone that is interested in CS but is not sure if it's something that they want to pursue as a major/minor. This course has encouraged me to continue learning CS.",
                "If you think you might be interested in CS, even a little bit and not even as a minor/major, take this class. Prof. Van Wart is great at explaining class principles in a way that is easy to pick up, and the homeworks and projects were interesting and fun to complete. There's a ton of opportunities to get help with stuff you don't understand, and the grading is flexible. This class also gives you a lot of knowledge in Python and web APIs, which I think would be super helpful for a lot of careers that aren't in CS. Great course overall and highly recommended.",
                "I liked how we learned from pre\u2013recorded lectures. The practice quizzes were super helpful for the actual quizzes, which were very straightforward. 2 projects, which weren't too bad either. Overall, an easy distro.",
                "It opened up computing and coding to me in ways I wasn't necessarily expecting, and supplied the resources to get help and better understand the material when I needed it.",
                "I feel like this is one of the few classes you can take that benefitted from remote learning.",
                "I loved this course. I learned so much and I really enjoyed how the professor taught the class.",
                "Sarah is an amazing teacher who seems really invested in making sure students learn; this was especially invaluable during remote classes. This course strikes a great balance between ensuring students know key concepts and sparking their interest and creativity through projects. I didn't think I would take any other computer science after this but ended up liking it so much that I'm taking 111 and considering a minor, I highly recommend taking this even if you don't know anything about comp sci or think it won't be up your alley.",
                "As someone who knew nothing about CS coming in, this course was very useful to give me a general idea of what it's about.  The course can be very challenging at times, but it all pays off when you finish your projects and hard work that makes you feel good.",
                "There's a lot of opportunity for help. Take advantage of office hours.",
                "The class was structured so that I did not have to attend most lectures and I could still do well in the class. There were a lot of extra opportunities for you to get a good grade. However, the basics that are covered in this class are extremely good to learn especially for learning how to code efficiently.",
                "Fun class! Very flexible in terms of grading and not too hard to do well in if you go to office hours. At least one of each assignment is dropped except the projects. Lots of extra cred opportunities.",
                "Great class! Recommend.",
                "Having no background in computer science, I was nervous for this course. However, Sarah and the peer mentors are amazing people who genuinely care for each student and their learning. They were always available and willing to work with me if I needed help or didn't understand something. I learned a ton and felt supported throughout the course. Highly recommend.",
                "Take this class with Sarah Van Wart! She is an incredible professor. I took comp sci in high school and absolutely hated the course, so when I found out I had to take it again at a college level I was super nervous. Sarah made this class not only enjoyable and bareable, but if presented the opportunity I would happily take more courses in the future. The class is such a fair amount of work and she really emphasizes demonstrating your knowledge through homeworks and projects. The quizzes are not a big deal and the endless office hours makes getting help very accessible!",
                "Great class for computer science beginners! The projects are a little difficult though so make sure to start them early.",
                "This class was challenging but always interesting.",
                "This course is a stellar introduction course to comp sci. The course is super manageable, very interesting, and will teach you a lot about coding. If you know that you are going to major in computer science and have some background, take 111. But if you're not sure or have all the credits in the world, take 110 because it might just convince you to major in CS. This class also functions as a fantastic distro.",
                "This course is amazing! I came in with no cs knowledge and will very easily get an A. low\u2013stress environment focused completely on learning. This course is a must take and it really inspired me to take future cs classes for non\u2013majors!",
                "This was my first cs class, and it made me realize that I don't really like programming. The class material can be challenging for beginners, and you should be prepared to spend a lot of time on it. Sarah really wanted every to succeed, and she won't let you fail as long as you don't give up yourself. However, I still don't think that I really learned many things that I could apply to my daily life. But it's really a good course to take if you want to find out whether you like programming or not.",
                "As someone with no experience in computer science Sarah and the peer mentors made the class so fun and accessible! There are weekly tutorials and homework due but the grading rubric is lenient because the purpose is to learn. There are 2 projects (1 landscape animation + recommendation app). If you want any support there are many student peer mentors who can help! Sarah is an amazing prof and super helpful in office hours. Take this class if you need it for a major/minor requirement!",
                "The most important aspect of this course to me was the availability of the professor and the Peer Mentors throughout the quarter. There were a lot of times when I was stuck with a homework or a project and going to office hours for a few minutes cleared up everything.",
                "It is a very interesting course that is not too much work, but I still felt like I learned a lot.",
                "This class gave me such a positive introduction to coding and has led me to consider a computer science major. The pace was comfortable and allowed us to really solidify our knowledge of Python basics while also giving extra (and enjoyable) challenges to those who could master the topics more quickly. The tasks we worked on were also interesting and enjoyable and made me more enthusiastic/interested in learning computer programming.",
                "Great class that served as a foundation in teaching the basics of a highly sought after skill.",
                "Loved this class. As a non\u2013CS person, I didn't know anything going into the course, but the professor is very patient and the grading scale is set up to support learning through hw, quizzes, and projects. Not stressful at all.",
                "I really enjoyed this class. It was very relaxed but still presented important coding concepts through fun homework and projects.",
                "Really enjoyed this class. The lectures did a good job explaining things, and the tutorials and homework were helpful in practicing the programming skills.",
                "AMAZING CLASS! Sarah is INCREDIBLE \u2013\u2013 best prof ive had \u2013\u2013 and is so so amazing to work with! The TAs have like 4 or 5 office hours per day so they make it SUPER accessible to get help and the class is really easy to follow! take this class!!!!",
                "Great course \u2013 Prof. Van Wart helps explain everything very well and I never felt like I couldn't go to her for help.",
                "This course was great! I went into the class with zero interest in computer science and am now thinking about taking more classes in it! Sarah was a great lecturer and if you do not understand something from class, there are so many office hour slots you can attend with the TAs. It's a great way to fulfill a distro if you are not super into STEM.",
                "It was cool to learn the basics of python and coding.",
                "The class was very interesting and was easy to follow. One thing I noticed is that I needed to put time into the class but overall this class is great.",
                "Great course. Sarah is a great teacher and very approachable. Often times the homework will be extensions of what is covered in class, so going to office hours is a must. It would also help to start homework early as it will often take a couple of hours to complete. I am a non major but this class peaked my interest in programming so I will definitely use these skills in the future. Highly recommend for those who are interested in dipping their toes into CS!",
                "It's a pretty basic intro to Python. There are essentially unlimited extra credit points. If you have prior coding experience, take another computer science course. Projects are pretty fun.",
                "I loved this course! Professor Van Wart is one of the kindest, most approachable professors I've had at this school. The format of the course was really conducive to success and the material you learn is so useful. The workload is manageable as long as you attend lectures and tutorials. Highly recommend.",
                "This class was amazing overall, and I would highly recommend as a distro or just to start the CS track. It's a very light work\u2013load, interesting content, and plenty of opportunities for extra\u2013credit."
            ]
        },
        {
            "course_code": "COMP_SCI_110-0_20",
            "course_name": "Intro to Computer Programming",
            "instructor": "Aleksandar Kuzmanovic",
            "year": "2021",
            "quarter": "Spring",
            "instr_rating": {
                "mean": "4.82",
                "count": "71"
            },
            "course_rating": {
                "mean": "4.89",
                "count": "72"
            },
            "comments": [
                "very organized course. The prof is super cute!",
                "This class was not nearly as bad as I thought. If you pay attention in class, you'll probably understand the information. Going to the tutorial sessions is also really useful if you have the time. Coming from an arts major, you do not have to have any computer background or stem based thinking to succeed in this class.",
                "This is a good introductory course. Most of the students in it are taking it as a rec for something and the professor knows that. He does a nice job introducing coding to people who have never coded before.",
                "Look, I was reading the CTEC's from last quarter, and people criticized Professor Kuzmanovic.  However, he is a great professor and provides so many avenues to learn such as pre\u2013recorded lectures, live lectures, and numerous extra practice problems.  Further, there is so much opportunity for extra credit that you really can control your own destiny (grade wise).  Altogether, I would recommend 110 with Professor Kuzmmanovic.",
                "This course was an excellent introduction to computer science for non\u2013majors. The projects were tough, but incredibly rewarding. This class offered me real practical skills, and I'm now considering a CS double major.",
                "It was difficult to try to learn CS from lectures but the tutorials and TAs were very helpful and explanatory and the assignments definitely help you figure out the material on your own",
                "I liked how the homeworks, quizzes, and projects followed what we discussed in class.",
                "If you are taking it with this professor (regardless of coding experience, trust me I have none) do not worry about your grade. Easy A. BUT if you're expecting to get a good background on python as a beginner maybe don't take this class. I heard there's a better professor for that...I think Sarah? The structure of the class is very confusing and unorganized. Be prepared for that.",
                "Somewhat, the material can be somewhat confusing",
                "loved this class. Office hours were SO helpful, i went to them literally all the time and it made the class a lot easier. interesting to learn python, i think it will be a good skill to have in the future. i liked the projects. kuzmanovic was funny",
                "This course was fairly standard in terms of intro Comp sci, and the most helpful part of the course was the large number of office hours throughout the week, so regardless of when you need help, there's always a time that a TA is available.",
                "I enjoyed this course. It was an effective introduction to Python that taught me useful skills without being too stressful. I enjoyed figuring out writing code for the classwork.",
                "okay this course is great, im someone w no experience in python, and this course made me want to continue learning about cs and go into tech",
                "The projects were super interesting and stimulating.",
                "odds are youre taking this for a requirement, its pretty easy, just go to class and you'll be fine, anybody can understand the topics, its very basic",
                "very easy python course for beginners. easy A, minimal hour commitment",
                "This is a fantastic class. Would highly recommend. Not too difficult or demanding, and TAs help. Virtual format deems to make more sense than in person, being honest.",
                "i would recommend this course, as it was not too hard.",
                "I didn't know how to code very much before taking this class, and now I can say I understand the basic concepts of it pretty well. The hands\u2013on application of the code that we learn in class really helps. Make sure to start the projects early or else you'll end up like me spending 7 hours on the day before dying trying to fix a bug that is eluding you.",
                "I was amazed by how well the schedule for the quarter was set up. All the materials were straight forward and easy to look over with little confusion on understanding what to do.",
                "The course is definitely worthwhile for people who have had no background in programming.",
                "This class really focuses on your learning and not your grade \u2013 there is a fair amount of grading leniency which is nice if you're super type A as you can not focus on the grade and instead focus on learning. I would not say it is a particularly hard course, but coding is a big time eater, so just keep that in mind. Would definitely recommend though. This class was typically not one of my stressors.",
                "This was a pretty good course. I didn't always know what was going on in the end but OH are super helpful. Most people did not attend live lectures but the professor was readily available for questions if you did which was super nice. Overall, if you want to learn some basics on python I would recommend.",
                "Not a bad class \u2013 remember to go to tutorials, attend classes, complete assignments, and review before quizzes. The grading is really reasonable, at least in my mentor group. Would recommend this class to any python beginners.",
                "My reaction to this course was mixed \u2013\u2013 at first I thought it was going to be good to learn how to code, but after this class, I realized it was no worth the stress",
                "I've never taken a Comp Sci course before and this course made me absolutely fall in love with it. Dr K is amazing!",
                "great first intro to python. helps to know some people in the class. its fun to do things together. aleks is a great teacher and very funny and enthusiastic, even over zoom. I'm sure he'll be great in person.",
                "Easy course, good for beginners. A good amount of extra credit available on projects.",
                "It was a straightforward class, I didnt attend lectures and still managed to get an A. The homework's are really straightforward and in the given case you can't complete them, the TA's are happy to help. There is also leniency and a lot of extra credit in the class so theres no reason not to get an A. The quizzes were a little difficult, but you get to drop one. I dont have anything to say about the professor, but the class overall was very easy.",
                "This class is structured a little poorly. For instance, a lot of us had our tutorial before lecture, and our TA would be trying to teach us that content in only an hour so we could do the tutorial. I personally struggled to engage with the lectures, but that's also a Zoom issue. However, as someone who had never coded before, I definitely came away with some important Python skills.",
                "Good class that gives a great foundation for coding and the possibilities in python. Class was very structured and help was always available.",
                "I really enjoyed the topics that the two projects focused on, which were both very interesting and fulfilling to complete.",
                "I never had coded before, and they facilitated learning very well. I thoroughly enjoyed this class and recommend it to anyone with little to no coding experience.",
                "They were good on covering some of the basics.",
                "Lectures were not very helpful, but definitely a doable A with some extra effort.",
                "This class is very easy for those who have Python experience, but it is quite helpful for those with no experience. The lectures are long, but they are helpful. The structure of assignments in this class are quite helpful in improving your programming skills, and there are a lot of opportunities for extra credit in projects.",
                "Definitely take this if you want an intro to CS and you\u2019ve never coded before. It\u2019s not overly challenging and doesn\u2019t take up too much of your time. Definitely doable but make sure you go to office hours when your code isn\u2019t working, etc",
                "This class is really interesting and easy to follow. If you do the tutorials and homework it is really easy to understand what is going on.",
                "Very interesting course, learned a lot.",
                "I learned basics in coding which will hopefully help me in the future",
                "This class was difficult for me, because I think it takes a different type of thinking to do well in CS. Regardless, the prof and TAs really go out of their way to help. There is a decent amount of work for this class (with tutorials and HW and projects).",
                "The class was pretty demanding in terms of tutorials, homework, quizzes, and projects, yet if you keep up with it you will definitely do fine in the class. I really enjoyed a glimpses into comp sci.",
                "This class was pretty straightforward as long as you do the work assigned. The grading was extremely forgiving due to the pandemic, which I appreciated, because it felt like I was still learning, I could just not stress about if I could not get an assignment done once or twice. Overall, this course gave me a solid introduction to Python, and I would recommend the class to anyone vaguely interested in coding.",
                "I loved being able to learn a new programming language. I loved how available to TAs were when I had questions and concerns. If you keep up with the lectures and do the problems outside of class, it really helps you understand",
                "As a junior, I can say that this is easily the worst course I have taken in my time at NU. Professor Kuzmanovic does not care about his students. He insulates himself from understanding the poor design of this course by always deferring to the TAs to try guiding students through his extremely extensive tutorial and homework assignments that we are very ill\u2013prepared to handle based on what he teaches in lectures and pre\u2013lecture videos. His lectures were filled with instances of him randomly introducing new Python functions with very little explanation. If the professor would hold his own office hours to help students, I believe he would begin to understand the many problems plaguing this class, but instead his office hours were nonexistent. I could not find anything on the syllabus or course schedule mentioning the professor's office hours, so it seems that he always hides behind his TAs. That would not be as much of an issue if the TA\u2013to\u2013student ratio were reasonable, but it was not. This course had over one hundred students and not enough TAs to go around. I would often arrive two minutes after office hours began just to wait in a queue for ninety minutes in order to speak with a TA for ten minutes. With a tutorial due on every Wednesday and homework due on every Friday, this is unacceptable. My tutorial section was also completely useless because my peer mentor would often just rush through a couple steps of the assignment while hardly explaining and tell us to try the rest on our own, that is, if he showed us anything at all. Often he would just say something like \"This stuff is pretty easy, so just do it on your own and let me know if you have questions.\" This was extremely alienating to struggling students like me who had trouble getting started on our own.This class was designed for those with previous programming experience, and if you were a beginner, you clearly were not welcome. I took this class because I had a bit of interest in programming and needed a formal studies distro credit, but I sorely regret it now. Although I must admit that I did learn some programming knowledge and even had enough interest to do a creative final project in another course as a program, it was simply not worth everything that I had to put up with those ten weeks.",
                "This is a fun and easy course for anyone who's interested in learning some basic programming. The assignments aren't super difficult, and completing them actually helps you practice the concepts and work on problem\u2013solving. Nothing in this course is too difficult, and there are plenty of extra\u2013credit opportunities to take advantage of. Honestly, as a non\u2013STEM major, I had a great time learning how to code and I'd take this course again in a heartbeat!",
                "Grading was fair and assignment expectations were clear.",
                "This course was fun and had a lot of cool programming techniques that I learned.",
                "I liked the tutorials because they allowed you to ask questions and learn the material"
            ]
        },
        {
            "course_code": "EECS_110-0_20",
            "course_name": "Intro to Computer Programming",
            "instructor": "Sarah Van Wart",
            "year": "2019",
            "quarter": "Spring",
            "instr_rating": {
                "mean": "5.55",
                "count": "65"
            },
            "course_rating": {
                "mean": "5.27",
                "count": "66"
            },
            "comments": [
                "professor is amazing. very nice and helpful. there is lots of extra credit opportunities and lots of office hours (which are not helpful).",
                "very easy and manageable when taken with Sarah",
                "Relatively simple course, can be taken by non\u2013majors and you will not suffer. Office hours are definitely a must though.",
                "Not too challenging. A great course for programming beginners!",
                "Came into the course never seeing a line of code in my life. The class is really generous to beginners and they want you to learn without the academic pressure that comes with a lot of STEM classes. Only 2 exams, 6 homework assignments and 2 projects. If you did well on 1 exam you could replace the other score with that. Homework and projects really didn't take too much time either. Sarah is really great\u2013\u2013 she's different from a lot of other computer science professors. Way more down\u2013to\u2013earth and understands how to teach beginners. Now that I'm done I feel confident knowing how to program. It's a cool feeling. Really good formal studies or science distro, highly recommend the class.",
                "It was a really great time, I learned a lot about programming",
                "Sarah is like a fuzzy pair of lotion\u2013infused socks. Before taking this class I was so very scared of \"Technology' and she so Gently taught me how to code I didn't even realize when the information entered me.",
                "This class was pretty hard, but Sarah really cares about your success and gives you multiple opportunities for extra credit. The office hours are helpful, but they need more because they are often super packed.",
                "Good class. Moves at faster pace than I expected, but the problem sets help with understanding the key concepts",
                "The lectures were very engaging and Sarah is a very supportive and enthusiastic professor. I was always interested in the homework assignments and projects we did, and always felt encouraged and challenged while coding in office hours.",
                "Lots of materials to learn a new language. Office hours really helped flush out difficult ideas. The TAs and professor Sarah were extremely kind, patient and helpful to students. Homework every week. 2 exams. 2 projects (the first project which is about graphics or sound were not that practical, but the second project about using Yelp or Spotify's api to create your own restaurant recommendations or playlist was extremely useful).",
                "This course was a lot of fun and I really enjoyed it. I knew nothing about computer science before this class but Sarah was incredibly helpful.",
                "This course is a great way to get some exposure to programming if you are a beginner. That said, it requires a lot of self\u2013teaching and trial\u2013and\u2013error, which can be frustrating at times. The instruction isn't that helpful in class, but Sarah is really nice in office hours.",
                "Sarah is so nice and interesting. This course is really good for beginners and for people who like puzzles and problem solving.",
                "I previously had experience with Java and MATLAB so I already had plenty of knowledge of the basics so the whole class was a breeze. But what separates this class with any other programming class is that you get to do COOL, USEFUL projects unlike the dumb and boring linear algebraic EA projects.... you get to do make an animation or MAKE YOUR OWN EDM SONG BY CODING. AND AT THE END OF THE YEAR PROJECT YOU GET TO MAKE A WHOLE PROJECT ON SPOTIFY SONG RECOMMENDATIONS. with all my years of coding ive never done something so easy, cool, and fun. SARAH IS THE BEST AND THE COOLEST TEACHER. she went to yale but you would never have guessed because of how easy going, fun, and humble she is.",
                "I learned a lot about the basics of computer programming but don't feel I gained a mastery of these topics because we had to move between topics so quickly. Sarah is a great professor and wants all of her students to succeed!",
                "Sarah is such a wonderful human and professor!! she's so helpful and kind and understanding and did I say helpful? I was so scared to take this class (I knew nothing about anything related to programming), but I genuinely learned so much and even had fun?? Assignments are very closely related to what's being covered in lecture, and going to office hours (which across all the TAs they times throughout everyday of the week) is always VERY helpful. everyone really just wants you to succeed, and its super possible to get an A. even the exams are fair and pretty easy. I had such a good time that I want to learn more about programming because it was just kinda cool and fun! there's also no required textbooks or anything to buy, so that's always nice.",
                "I went in with having 0 idea what coding was but learned a lot. Need to go to office hours tho. Like seriously. Go. And also take it with Sarah. She really pulled thru",
                "It\u2019s hard but fulfilling when you crack the code",
                "Difficult if you've never tried coding. But yo9u feel very accomplished when you start getting the hang of it. Good formal studies distro",
                "There are at least 20% of the students in this class who have already known how to program so that they will pull up the average grade of the exams but luckily this class doesn't have a curve so all you need to do is be prepared for the homework and projects.",
                "Overall, the class was pretty good!!  If you have to take this class for any requirement and don't have any coding background, TAKE IT WITH SARAH!!  She was so helpful, kind and patient, and overall she definitely made this experience more positive.  Otherwise, I felt the material was a bit too hard for those without any coding background like myself.  Also, this course has quite a bit of work especially if you're not majoring in this field, so make sure you have enough time to do the projects (which are super long!) and homework assignments.  But Sarah was so sweet; she gave SO much extra credit that definitely boosted my grade!!",
                "Overall the class is not too bad just like the title suggests. The spring quarter is taught by Van Wart who specializes in Python and didn't even get her bachelor's degree in CS so she is very understanding towards those who have never programmed before in their life. The class basically consists of 6 hw assignments, 2 projects, and 2\u2013ish exams. HW is pretty straightforward but highly recommended that you go to class so that you have enough of an idea to finish it without having to scour the internet. Projects however definitely require plenty of time to get right depending on how much experience you have. There are 2 schedule exams however we were given the option to skip the second one if we were satisfied with the first exam score. It isn't that hard to do very well but if you make small mistakes, it may hurt you as well so make sure to do well so that you can avoid taking the 2nd exam.",
                "This was a wonderful class. I am not a computer science person but needed an EECS class for Neuro. Sarah is a great professor who's very understanding of her students and is willing to put in the time in energy to make sure we all succeed. For example, in just two days during finals week she committed to over 6 office hours to help us with our final projects. She also offers a lot of extra credit so you can worry about learning python without shortcuts rather than stressing over your final grade. I went from no coding experience to feeling generally proficient in python in just one quarter.",
                "This course was very straightforward and Sarah is super lax! If you are even slightly familiar with code this class will probably feel extremely easy. The projects are pretty satisfying and office hours are super helpful, so you can definitely get what you want out of the class based on how much time you want to put in.",
                "Professor VanWart is great, python is a super useful language, and I learned a lot without a lot of stress.",
                "If you're looking to just try programming, this is a solid introduction. FUN PROJECTS like I made a song and other people animated a fish. Also, Sarah is amazing. Generous with her time and with grading.",
                "Great intro course to Python, made me realize how much I enjoyed CS.",
                "Great course, learned new skills.",
                "Easy class: 2 midterms, 6 Hw assignments, 2 projects. All doable even if you don't know python. Great TA resources if you ever need help and you really learn a lot of python for an intro course.",
                "Sarah is amazing \u2013 she's extremely patient and really wants you to succeed. This course is useful for anyone and I think everyone should take this class to have a basic understanding of programming.",
                "Sarah is amazing, must take this with her. Coding is really hard but if you take advantage of office hours this class is doable (coming from a non\u2013CS person).  Undoubtably really time consuming though between homeworks, projects and exams.",
                "Easy A if you go to office hours and are on top of deadlines",
                "An amazing class covering the basics of Python as well as Pandas and API packages. Sarah is great and deeply cares about the class!",
                "I love how the course is really \"introductory\" since I have no previous experience with coding whatsoever. The material is digestible, the professor and TAs are more than approachable and we have lots of assistance with homeworks.",
                "This a pretty easy class. Prof Van Wart is very helpful and nice when helping student debug their code. I thought half of the homework assignments were not very useful in helping me to learn, but the final project is fun and useful in helping me to gain proficiency in Python.",
                "I came into this course with some programming experience, and found it very easy. That said, I think it's a really great introduction to computer programming concepts for people with no experience, and Sarah is a really friendly and down\u2013to\u2013earth professor. If you don't have programming experience, the homework and projects might be tough, but overall I think it's very manageable.",
                "Great intro class for Python especially if this is your first time programming! Be sure to go to office hours to get any help you need for hw and projects",
                "Sarah is the best. Course was friendly to people who have never taken a comp sci class but want to learn. Go to OH, even if you don\u2019t go to class. That is where you learn.",
                "It was great. Perfect for an intro to programming class. The right amount of work and just challenging enough."
            ]
        },
        {
            "course_code": "COMP_SCI_111-0_20",
            "course_name": "Fund Comp Prog",
            "instructor": "Sara Owsley",
            "year": "2021",
            "quarter": "Spring",
            "instr_rating": {
                "mean": "5.70",
                "count": "134"
            },
            "course_rating": {
                "mean": "5.25",
                "count": "134"
            },
            "comments": [
                "good class",
                "I greatly enjoyed this course and having access to so many different peer mentors was incredibly useful throughout this time.",
                "Sarah is an amazing teacher and was super accommodating to students. They definitely make sure that you have access to lots of help resources through peer mentor hours, small groups in class, Campuswire, etc. As long as you take advantage of those you will be fine.",
                "Great intro to computer science class, and Sara Hernandez is an amazing teacher!!",
                "Having taken this class after 211, I was doubting whether it was worth my time or if I should have waited and placed out. The answer: yes! It was worth it! I had never programmed using functional style programming before so this class was great at teaching me how to use lambdas and the functional paradigm. It was also a great way to boost my recursion skills going forward for 214. Also Sara Sood is a true gem and talk to her whenever you can about whatever.",
                "Professor Sood is an excellent and very understanding professor.  She is always there to help, and even met with us one on one to talk about our plans for CS in the future.",
                "Sara is amazing, CS 111 is great and kind of inspiring and I liked Racket",
                "This class is an ideal CS intro class, because it lays the foundation for principles. However, the only downside is that this class is taught in Racket, which is not highly applicable language in real\u2013life software engineering settings.",
                "Good class overall, but Racket is annoying haha",
                "Very easy course! Class time was time to work on assignments or you can submit it for participation points after. No tests or projects either which made the class very laid back. I didn't ask for much help during the quarter but I could tell that there was a lot of help offered to finish homework! Great intro class!",
                "This class was super manageable and fun. Sara is an excellent teacher who will go to great lengths to ensure her students succeed. The peer mentors are great and will always help you with the homework assignments.",
                "Tough language but professor made it a manageable class.",
                "I learned and retained a lot more in this class than I did in 110. Sood is very good at breaking down concepts and explaining the homework assignments constructively",
                "this class wa a good! i think it gives a very good basis of how to think about coding and languages, LOVE the prof.",
                "Top tier class. Interesting material, good structure, and more resources for help than you know what to do with.",
                "Like everyone else will say: Sarah is amazing. She is what every professor should be. To the point, polite, personal, able to understand how the class is going and adapting accordingly. The course was just superbly designed, even if it was in a language no one uses \u2013 reality is languages keep on changing and the goal is to be able to learn how to learn, and I feel I did.",
                "This course was a great introduction to comp sci, as the topics were relatively simple to understand yet are very useful. The PA and professor were also very helpful with everything",
                "We had weekly modules with quizzes that were basically pre\u2013recorded lectures. We had weekly homework assignments and tutorials that we would work on in class with a TA that would help us. It was a nice way to do stuff during class and not have to worry about doing work outside of class.",
                "This was my first computer science class, and I really enjoyed it. The course is well\u2013organized and the material is not too difficult; there is a bit of learning curve at first, but once it clicks the difficulty evens out.",
                "Sara is a fantastic professor and it's a really solid intro course. Backwards class structure (watched the lectures/did all the learning outside of class and \"class time\" was devoted to working on the assignments with our teams), so take what you want from that.",
                "take this course with sara! she is an excellent teacher and super nice. she actually wants you to do well and learn, so definitely go to office hours and ask for help. this course isn't too hard, and the weekly assignments are pretty doable if you don't procrastinate too hard",
                "It was a very good course because there were many resources and office hours throughout the day and Sara is very accommodating.",
                "The class is taught in racket, which I'm not sure is helpful when transferring cs fundamentals over to a more useful language. Otherwise, the assignments are engaging and the content is well developed and taught in an engaging manner",
                "The course is taught in racket, which puts every student on the same page as it is a language that essentially none of us are familiar with. This was a great introductory course that you can definitely take without cs experience (which I did!).",
                "This class was a great intro to computer science concepts. I have never learned anything about computer science before, and I think it was a good survey of topics and I feel ready to dive deeper if need be.",
                "This course was a great introduction to Racket and basic programming. Professor Sara Sood is fantastic, and despite the class having almost 200 students, she went out of her way to make sure that each student felt supported. The course is taught in a flipped classroom style, where class time is dedicated to asking questions.",
                "I really enjoyed this course. I came in with no experience of programming, so I didn't know what to expect. Professor Sood  is fantastic and her lectures (which she recorded and posted asynchronously this quarter) were engaging. She was so helpful, and I feel like I now have a significant amount of programming knowledge. I will definitely continue to take computer science classes because this really exceeded my expectations. Also, it isn't too hard to do well, as half of your grade is composed of participation and daily(ish) quizzes, which are farily straightforward. The other half is weekly assignments, which were usually challenging and engaging.",
                "Good instructions and professor was understanding",
                "The course is great and the professor is great. If you had any prior computer science experience in any language, I'm pretty sure you'll be fine and the course won't be too challenging, otherwise the language and the concepts might seem intimidating.",
                "This class was pretty easy, but the professors were very helpful. If you watch the asynchronous lectures, this class will be very straight forward.",
                "It was good to get some computer science experience. I really liked the professors. They were very nice and relaxed.",
                "Professor was great, but the language was not fun to code in",
                "This class was great. I needed a distro to fulfill math/science requirements and this was the perfect one. It was stimulating and interesting, and Sara and the peer mentors were so helpful and understanding. It's clear they really want you to succeed.",
                "I really liked this class. Good regardless of how much experience (if any) you have with comp sci. No exams in this class at least for the virtual format of it which I liked",
                "Sara is great and super nice. Use the TAs for help they are nice and willing to help.",
                "The course was great with a lot of content but manageable coursework",
                "The course was a very good introduction if you have no prior coding experience. It also teaches you the basics of everything. Professor Sara is very good at explaining the material. In addition, she is very helpful when it comes to assignments. The assignments aren't long and the peer mentors will definitely help you if you are stuck. We didn't have any exams; only a simple quiz on each module.",
                "This class is really good! It's a great introduction to computer science and especially to the best approaches for learning a new computer language. I don't have much prior coding experience at all, but I have still definitely been able to complete the assignments well and to understand the concepts discussed in class. I also like that the class setup allows for discussion and collaboration on the assignments.",
                "I wish this class was conducted in a different language other than racket.But, it is a good introductory course overall.",
                "Professor Sood is the best! Great class!",
                "Perfect introduction to CS. Not too hard as to be daunting but really makes you think. Prof. Sood is an amazing communicator and introduces concepts very intuitively, and is very generous with deadlines/understanding of students' schedules. Weekly exercises can be long, but there are over 20 hrs/week of office hours from student helpers so help is always accessible. No final or midterm, all lectures are asynchronous. Highly recommended!",
                "Before this, I took Comp Sci 110\u20130 and it was about Python. This class is focused on Dr Racket and I have to say that they are very different. It was a bit more tough for me. But the course offers many officer hours which helped out greatly.",
                "Good class",
                "Nice class, my fav part was the groups we had since we were able to work on the assignments together and help each other out, as well as having our own TA there that we got to know and that helped us whenever we were stuck. Very smooth and stimulating intro class to comp sci, although Racket is not my favorite language. Not too hard, just make sure to watch lectures and understand how to do the HWs. Very easy quizzes as well.",
                "This class is great. I had some previous experience with programming, which definitely helped me grasp recursion a lot faster than some of my peers, but having background isn't a requirement to do well in this class. The only issue I have is that I don't feel like I could manage on my own with Racket. I think we had a very cursory introduction, so it feels as though there's something missing from my grasp of the language. Also, Racket is objectively one of the worst languages to code in. Other than that, Sara is awesome and really great at explaining things. If you're questioning whether you should major or minor in CS, she is a great resource. Easy A.",
                "As a intro course, it helps me gain interests in CS. But I feel the course could do a better job introducing us to the interesting world of CS rather than directly jumping into programming and syntaxes.",
                "Professor Sood is great. An excellent communicator, as shown by her lectures. Always willing to answer any questions. Peer mentors were also very helpful.",
                "THIS CLASS WAS SO FUN! I am a humanities major who, prior to taking this class, was pretty uninterested in (and scared of tbh) computer science. I genuinely believed that I would be terrible at it because of my inaptitude in math and science courses. And yet, Sara proved me wrong. The video lectures are super accessible and understandable, even to someone (like me) who had no prior background in CS. Also, each class session is just a long work period for you to work on assignments with the peer mentors and Sara there to offer any support, if needed. This class structure really helped me learn AND stay on top of my assignments AND learn to enjoy CS. So, if you're looking for a fun distribution requirement that also helps you learn, I highly recommend taking this class!!!!",
                "This course was great for me as a beginner coder and has me very excited for any programming in the future.",
                "Great course! The prof and peer mentors were super helpful and there was always space to ask questions. I will warn students that the content gets a little confusing towards the end of the quarter, but again, there is always room to get help it just might take more time/work towards the end.",
                "Super chill class with weekly homeworks that aren't too hard at all. There wasn't a test for this class which made it much less stress. The homeworks are engaging with Racket and get more interesting as time goes on. They really helped with the concepts used that week. Professor Owsley is really great at answering questions and not only helping with course materials but also friendly and willing to help with guidance about future CS courses and routes.",
                "I think this class would be helpful for someone with no comp sci experience. It is odd they use racket because you will never use it again",
                "If all the CS courses in the dept were taught by Sara, I would be a CS major",
                "I thought it was able to provide a lot of interesting content, with us building actual graphical programs by the end.",
                "I really enjoyed the programming practice I got from this course, and look forward to taking my knowledge/the process of programming to future courses. The way we could structure our work schedules independently, getting as much help as we did or didn't need, was very effective.",
                "Overall I think this is a great introductory course for comp sci, speaking as someone with next to no coding experience prior to taking the class. Prof. Sood is great at explaining the more difficult concepts and is always very helpful. Make sure to ask for help when you need it or are confused and you should be fine. Office hours helped a lot.",
                "Not too hard, quizzes around 3 times a week and exercises make up the vast majority of your grade. Class time is just spent in breakout rooms working.",
                "If you've never programmed before, this class could be pretty difficult, but even with that it is still doable. I highly recommend asking for help from either the Peer Mentors, TAs, or Professor.",
                "Assignments help enforce the concepts learned in the videos",
                "It was a fun, easy, stimulating introduction to coding",
                "Sara is an absolute angel",
                "I really enjoyed this course, it was super well structured and really well taught. The peer groups were very useful and the exercises were perfectly challenging.",
                "Good course. Covers fundamentals. Not very difficult.",
                "If you not interested in this dont take it",
                "TAKE THIS CLASS WITH SARA SOOD SHE IS THE LITERAL BEST. She is so understanding and really tries to help you out. This class is pretty easy, and if you are struggling just go to TA OH and you will be fine.",
                "This course is a good introduction into the syntax and feel of coding, even if the language itself doesn't exist outside of Northwestern. I would say that even though Racket isn't an applicable language I still got a lot out of the class both academically and otherwise...",
                "Sara Sood is an absolute goat; she ACTUALLY ACTUALLY tries to make life easier for her students. The way she structures the class is amazing, and she really takes an individual interest in each student. The language, Dr.Racket, isn't my fav, but she made it more than tolerable."
            ]
        },
        {
            "course_code": "COMP_SCI_111-0_20",
            "course_name": "Fund Comp Prog",
            "instructor": "Sara Owsley",
            "year": "2020",
            "quarter": "Winter",
            "instr_rating": {
                "mean": "5.74",
                "count": "241"
            },
            "course_rating": {
                "mean": "5.18",
                "count": "243"
            },
            "comments": [
                "It is a good class with Sara, but I'm not sure if you should take this class if you know you're not going into CS. CS110 is a better choice to just learn basic coding from what I've heard.",
                "Professor Sood is a really good teacher and the peer mentor hours are very helpful for completing assignments. The tests were difficult, but you'll do fine overall as long as you put in the hours for the assignments.",
                "This class starts off easy and progressively gets very difficult. The weekly assignments were hard but doable, especially with the help of peer mentors. While the class is hard, it's very doable and Sara makes the coursework manageable and attainable.",
                "I walked into this class saying to my father that has worked in Computer Science my whole life and said \"Dad, I'm ready to completely and thoroughly disappoint you\"I had no experience in this field. I had no DESIRE to have experience in this field. And yet, I did not disappoint him, and like magic, I learned a lot. Focus in the beginning of the class, REALLY understand what she says, and you'll be fine.",
                "The instructor was terrific and there were lots of resources to help us succeed in this course",
                "This course was great. The instruction was very helpful and the assignments were challenging but rewarding.",
                "Take this course with Sara!! It might get annoying at times, and tutorials aren't always that helpful depending on your peer mentor, but I enjoyed having assignments every week. It forced me to keep up with the concepts and helped me confront and practice anything I was struggling with. It might seem like a lot of work, but it's definitely worth it!!",
                "SARA IS THE BEST. This course teaches you ab racket. Even though you may not be using it in the future, you learn more about how to learn a new language and apply it.",
                "TAKE IT! It's a great intro class and Sara is the best! Not too difficult but great way to start learning CS",
                "Sara is such a sweet professor and really goes out her way to make sure her students understand the course content. This class made me like programming a lot more.",
                "The professor was excellent and highly committed to making sure all students were capable of understanding and synthesizing the information presented.",
                "This class was harder than I expected but Sara was an amazing professor and was always there to help if you needed.",
                "Pretty good class. The exercises are hard but Professor Sood is a great lecturer.",
                "This class requires a ton of work and an incredible amount of extra hours but is rewarding sometimes.  Professor Sood is a great teacher.",
                "Sara makes this course super easy to digest and is able to provide further depth for those who already have coding experience.",
                "Good class. Sara is a great professor and the teaching assistants are helpful, especially during discussion section.",
                "It helped me learn coding basics for someone who had not coded before.",
                "Great class to take if you have an interest in computer science and are unsure.  Exams are straightforward and fair; weekly assignments are explained thoroughly and aren't terribly strenuous.  Could be a 5th class if your other 4 aren't extremely heavy.  Sara is one of the best professors I've had at Northwestern.",
                "Sara is a great lecturer, but I found lectures pretty unengaging anyways \u2013 I think that's generally the nature of a computer programming (not computer science) class.  The homework's were pretty intellectually challenging, which I liked.",
                "Bless Sara Sood. She\u2019s amazing, and if you take this course, take it with her!",
                "While the course itself is not the greatest, it definitely does help you understand the fundamentals of computer programming. Racket is somewhat useless in the real world, but in the course, it helps you understand the underlying concepts that other languages use. If you can, take this course with Sara.",
                "I did not find CS111 to be as easy as previous CTECs made it seem to be. The first few weeks were pretty manageable, but I found recursion to be very difficult. A lot of the programming assignments also take a lot of time, and although the tests are not too difficult if you understand the code in the lectures, a few small mistakes can lower your score significantly. The exams and the homework are weighted equally, though, so it is possible to make up for mistakes on tests. Also, Racket is a confusing and nonintuitive language, and there were many times when I was stuck trying to figure out how to write a line of code that I could have easily written in another language.",
                "The course covers all the key aspects of computer programming, and Sara is a great professor.  If you really want to learn you should attend office hours, but you can get by without.",
                "Sara is a really good professor and the live coding she does in front of the class is extremely helpful. Using DrRacket was a big adjustment at first, but it was nice because everyone had to start out from scratch and learn together.",
                "I definitely would've had to drop this class if Sara wasn't teaching it. She's one of the best professors I've had so far because she cares so much about her students. In general, computer science is a frustrating topic, and even though I won't be taking any more CS classes, this course taught me a lot about perseverance. It takes up a lot of your time as a beginner programmer",
                "ehhhhhhhhh i mean you gotta take course for CS. kinda useless tho...",
                "TAKE THIS CLASS WITH SARA! Sara is an amazing lecturer and explains topics very clearly. As someone with no prior programming experience, I felt that this class was fairly easy and I was able to learn a lot from it. There are two short noncummulative exams, weekly programming assignments, and a final programming assignment. Highly recommend",
                "Sara is amazing!!! This is a pretty standard intro programming class, not too challenging. If you have programming experience you'll find Racket a bit odd but it's not too difficult to get the hang of. For new programmers, I don't think this class is too difficult as Sara is an amazing professor. She takes the time to feel out how how difficult the material is for students (if she's going too fast, too slow, or at a good pace) and is very kind and helpful in office hours.",
                "Sara is amazing. Don't take CS111 with another professor. She is so willing to help you and so so approachable. 10/10 would recommend to a friend.",
                "Sara is a great professor, really cares for the students. Great lecturer. Although studying in ryan aud is always hard to concentrate, Sara's lecture is very engaging. There are quite a lot of homework, as is any CS class. Easy tests. Take it if you want to learn about cs.",
                "Sara is such an amazing professor! The lectures are large, but she will anonymously ask how is the pace of which she's teaching at, which is good. I really didn't like working with Racket, but the course is a good one to have for learning the basics of programming and how code works. Use the peer mentor hours to help with the assignments; they can be pretty helpful (but also a bit difficult at times).",
                "Don't be scared to take the class if you don't have programming experience, racket isn't too difficult to pick up and the course makes sure everyone is on an equal playing field, so you can certainly do well.",
                "Racket is stupid but Sarah is great if she teaches this class so procede with caution. If you have previous programming experience, you will rage hard because of how stupid and dumb the syntax for Racket is. It is inefficient and a pain.",
                "This class was taught very well. Professor Sood does a really good job at explaining the concepts to both newer programmers and experienced ones, and the assignments were not too easy or too challenging. There was a lot of potential to dive deeper into topics as well, with advanced tutorials and the extra lectures at the end as well.",
                "SARA IS AMAZING! Take this course with her and you will fall in love with the subject",
                "Going into this course, I had zero experience with computer programming and was very worried about it. But Sara is an amazing professor and really does a great job at making sure that her course material is at a level where everyone can learn from it. This course does not favor those with experience and I felt really comfortable in this class and was always able to ask for help when necessary.",
                "Concepts are cool and interesting. The language, Racket, is very basic and boring however.",
                "This is a good intro course, and not too hard if you've taken comp sci before. Racket is definitely a strange programming language, so that takes some getting used to at first, but Sara is a a great lecturer.",
                "I really enjoyed this course. Never took computer science before. Good intro course to comp sci. Learned a lot about how to understand functional programming so I'm happy I took this course. Definitely a bit challenging at times but once you understand a concept you're good.",
                "I was scared but Sara really helped me understand and eased my fears. It is truly an amazing start if you are thinking about being a CS major",
                "Sara is the best! Racket is a bit tedious. I found the course to get a lot easier with a small bump in the middle. (Trees are hard!)",
                "For those unfamiliar with coding/programming, CS 111 is THE course for said newbies. Yes, you will feel overwhelmed at several points, but the assignments are comprehensive and a good overview of the subject at\u2013hand.",
                "sick class.",
                "This is a very interesting course if you have never programmed before. It is challenging, especially if you are a non\u2013McCormick major, as most of the class has some background, at least with Matlab. If you put effort into the assignments and try to learn the most from them, you will most likely do well on this course, but the exams are a bit tricky.",
                "good class.",
                "Initially I was a little nervous about being taught Racket, but I'm glad that I chose to take this class. It can definitely be frustrating at times, but it's also fairly easy to reach out and ask TA's or Sara for help. The class helped me take a step back from my typical CS background of Java and C++ and understand what I was coding.",
                "This class is great. Professor Sood does a great job of being flexible and paying attention to her students' needs. The assignments are manageable and there are a lot of resources for help so take this class if you get the chance.",
                "This is a very interesting and well\u2013organized class!! I feel like it was the perfect introductory course, especially given that Sarah was the one teaching it. She was an amazing professor, very kind and patient, and I would definitely recommend taking it with her!",
                "Great class, great professor. Learned a lot about computer programming.",
                "This course made me want to pursue a degree in computer science.",
                "Take this course with Sara!! She is the absolute best! If you go to her office hours to work on the homework, you will get it done, and actually learn the material.",
                "This was an excellent introductory computer science course! Although Racket is probably not a useful language for the future, I really enjoyed this course. Professor Sood is a great lecturer and really stimulated my interest in the subject. She wanted everyone to succeed and would constantly allow time for questions even in a 300 person course. Make sure you go to peer mentor hours for the assignments, as that will help you get through everything. Finding a specific peer mentor to go to every week was great for me, as they became invested in helping me. Definitely a manageable and A\u2013attainable course that I enjoyed!",
                "A really great course to introduce coding. Sara is amazing.",
                "The assignments took a lot of time because racket is a very marginal language, with no online support community to speak of. Because we never get access to the whole language, we are often hamstrung by the constraints of the language.",
                "compsci is super useful, but racket is not. I understand that it is a beginner language, but its formatting is very convoluted and can thus be a bit frustrating to work with",
                "I enjoyed this class. Sara Sood is a great professor who gives engaging lectures that are easy to follow. She truly wants students to succeed and checks with the class if she is going too fast during lectures. The weekly exercises were fun and challenging, but not too hard or time consuming. I highly recommend this class as an introduction to programming even if you are not majoring in comp sci.",
                "hard, but worth it! sara is an awesome professor and the weekly tutorial sessions are very helpful in understanding the ideas of the course. definitely a lot of work each work so wouldn't recommend taking on top of an already difficult courseload.",
                "Wow. What a ride. This quarter was definitely unorthodox due to the actions of the university reacting to COVID\u201319. Sara was very accommodating with completing assignments and deadlines as well as how the exams were graded. The class itself, though it was supposed to be an introductory course, was sometimes very difficult to keep up with. It was very fast\u2013paced and there are assignments each week. It takes a lot of time and practice to understand the awful syntax of Racket, though it was more so better towards the end of the quarter in terms of material. Peer mentors were very helpful as well as office hours so I would highly recommend getting help if you are struggling.",
                "Sara is fantastic! I waited to take this course with her. I recommend taking this as a fifth class during your freshman winter \u2014 I really wish I took it then, instead of as a sophomore. One program per week, tutorial once a week, and two midterms. Very easy.",
                "This was a great introduction course \u2013 I didn't feel like the exercises were too difficult, though the exams were pretty tough. Sara is an excellent professor, and I learned a lot, having never taken programming courses before. I really enjoyed this one, though I do feel like I didn't learn super applicable skills. Good introduction, but if you want to program in the real world, you'll have to continue in the sequence.",
                "I actually found this class pretty engaging and enjoyable. Sara is a GODDESS, literally the best, most fair, most understanding professor I\u2019ve had and she makes understanding concepts so easy. This class was a breeze with her!! Racket isn\u2019t too bad as long as you go to class, she breaks everything down really well and the weekly exercises can be fun sometimes",
                "This class was pretty tough but it was a great intro class. The tests are pretty hard but the activities are doable and the grade is split up very nicely.",
                "I've never taken anything related to computer science ever and genuinely enjoyed being in this course. But it was a lot of work. I spent a lot of time in Office Hours (which there are plenty of\u2013\u2013 every weekday and Sunday).I loved getting to know Sara, Daniel, and all the other TA's. I have a new interest for something now that I didn't have the chance to be exposed to before college. Please take this class and don't be scared of it. ANYONE can do it as long as they utilize the many resources that come with the course. Also, this particular course was taught as COV\u201319 became more serious.  Sara was SO accommodating and responsive. She truly cares about her students.",
                "I did not like using Racket in place of a more common language.",
                "I really liked the tutorials because they were very helpful in reviewing material covered in the lectures.",
                "Sara is an amazing Professor who is so kind and helpful and knowledgeable. The work load is reasonable though it does require a lot of outside of class time (peer mentor hours saved me). You get out of this class what you put into it.",
                "Prof. Sood is one of the best I have had! I had never programmed before and after taking this class I want to major in Computer Science. The exercises are a bit tricky but there are a ton of office hours. I spent most of my time there doing my homework and got perfect grades in all of them while also learning a lot. The tests can be a bit tricky but they are fair!!",
                "I came into this class having taken APCS A in high school, and so I knew Java. I was quite suspicious of Racket, but I came to like it. It was a new way of thinking and I learned a ton.",
                "Sara is a really helpful, encouraging professor. She made this course so much easier to understand and process. Definitely recommend taking 111 with her.",
                "Worth taking the class because Sara is so good. The information she teaches is not really worth knowing unless you are going to do the major or minor. Id recommend taking 110 for more pertinent languages.",
                "The fact that we had to use Racket was a blessing and a curse. It forced me to pay more attention and to learn more, but there were some times where I only had frustration for the language.",
                "Take this class with Sara, she's a great professor and really cares about her students and wants them to do well. If you pay attention in lecture and go to office hours you'll do great.",
                "So obviously Sara is the best teacher for intro CS classes. She goes over personally and writes code and adjusts to the learning pace of the students. Though she goes fast sometimes, paying attention to what she is saying throughout is really helpful and you can learn a lot from it. But towards the end of the quarter you will find yourself falling asleep a lot.",
                "I had never coded before this class, but with computers becoming more and more relevant I thought I'd take an introductory class and see what the hype was all about. After taking this class,  wish I had started coding years ago! Looking back, we learned so much in this course, but Sarah taught it so clearly that I feel like we could have covered even more and it wouldn't have been a problem. This is honestly the first class that left me wanting more and not wanting to move on and never look back. CS111 was easily the best course I've take at NU and Sarah was easily the best instructor. I highly recommend this class, especially with professor Sood.",
                "CS 111 is a great course for anyone at Northwestern. It introduces you to a very valuable skill that you may find to be very interesting. Taking this course for no requirement has made me want to take more classes in computer science. Sara is amazing, truly the best.",
                "The exams are exactly like the practice exams so there are no surprises. Sara is one of the best professors in McCormick, she is the nicest and most caring professor ever. She'll make you want to be a CS major",
                "It was fine, got the job done, not terribly difficult",
                "Mastering recursion becomes so easy once you take this course.",
                "A pretty fun course after four quarters of Matrix Laboratory haha. Definitely solidifies the basics of programming useful for future programming skills. Recommended for both CS and non\u2013CS majors! Sarah's so engaging!",
                "Interesting class, not that difficult. Sara is great professor. Going to class not super important as long as you understand the assignments.",
                "This is a great course. If you are interested in programming at all, I highly recommend taking this course \u2013 especially with Sara. DrRacket as a language is kind of annoying, but it is very good at teaching you the basics of programming. Assignments are often fun, and tutorials are useful in helping you learn the material. I generally looked forward to lectures and to doing the assignments. They were almost like puzzles. Also, Sara is amazing.",
                "Sarah is very nice. Definitely take this class with her.",
                "this course has a lot of good material and is pretty easy but you won't really understand much.",
                "Defining variables, classes (structs), and recursion are the main topics. I thought it was pretty interesting. Make sure to do your best to do the hw yourself or the midterms will be really confusing!",
                "I had to put extra work into understanding the concepts because I had no previous experience in coding, but office hours always helped",
                "Sara is amazing. I'm just terrible at Comp Sci.",
                "This course was beneficial in learning the fundamentals of coding, but only in a very abstract sense, as Drracket is not a useful language.",
                "This was a good course. Sara is the best person ever and the work is difficult, but rewarding when finished.",
                "Was generally easy. You can not pay attention in lecture and still be able to do all the homework and tests. Sara Sood was incredibly nice.",
                "I really liked this class, Sara is great, but the content is definitely a bit difficult.",
                "Sara was a great professor, extremely helpful, open and engaging, as were many of the peer mentors. The assignments are a lot harder than the exams and can be time consuming but going to peer mentor hours is very beneficial. As someone who came in with no programming experience, this course was definitely doable and surprisingly enjoyable to an extent.",
                "It was a helpful introductory class to computer science.",
                "To be honest, I had no idea what was going on at any point. I tried paying attention, but it felt like the class was geared towards those who already had some coding knowledge. The exercises were pretty hard, I had to do them with friends every time.",
                "This was an easy and fun class. Sara is a really enthusiastic lecturer and it was enjoyable to come in and learn new things.",
                "This was a difficult class for me. I got behind early, and didn't have any prior experience with coding. However, I still managed to get an A. The peer mentors were very helpful with the assignments, which were relatively difficult. Sara very obviously cared about her students; she was the first of my professors to cancel anything due to COVID\u201319. She was very kind and made sure that she was going at a good pace by having us close our eyes and raise our hands to indicate whether or not she was going too fast/too slow/just right.",
                "This is a decent intro course for those with no programming experience but not very helpful for those who have any programming experience.",
                "Easy assignments, easy exams.",
                "This was a good course. It was challenging but not overbearing and we covered a lot of material. Racket can seem frustrating at first, but it grows on you, and you find it's actually an elegant language.",
                "Professor Sood is a great professor that really cares about her students. Going to office hours is really worth it for this class as there are weekly assignments that they can help you to complete and understand fully.",
                "Professor Sood is really good at lecturing since she's very clear, willing to explain hard concepts again, and has an energetic presence. There's plenty of peer mentor hours and office hours to get help on assignments. The exercises make you think without feeling impossible.",
                "The classs takes a lot of time and effort, but once you figure out the logic it is pretty easy to get the right answer on the works.",
                "It is difficult to hold a computer science class that is geared to both students with and without coding experience. In Comp Sci 111, if you have coding experience, it will be very easy. While racket can be annoying at times, it is fairly easy to catch onto if you understand the underlying concepts already. In fact, you may find the lectures somewhat slow. However, for students who do not, this class may require slightly more work. But the professor and TAs did a good job of making themselves accessible and helping answer questions. Grading is also not too difficult because the class is 50% assignments. All in all, I would recommend this class to anyone.",
                "The course is nothing really special. The programming language, Racket, is not an important language that you will end up using in your career, however, the course does a good job in teaching you how to think like a programmer if you do not already know how to. Sara is a good instructor and walks through all the processes that are important in a slow way that helps everyone understand what they should know. If you are already familiar with programming in any way, this course will probably not benefit you. All work in the course including the exams are pretty easy.",
                "I enjoyed this course. Sara is a very good instructor who clearly cares about her students and there are plenty of resources that you can use to get help on homework or exam questions.",
                "Sara is very engaging with the students and truly teaches the material very well. The class was very manageable and some of the projects were fun",
                "Great class for an introduction to the programming aorld",
                "If you're a neuroscience major taking this class for your requirement and have absolutely no intention of taking any other computer science classes don't take this course.  I was really excited because a lot of people I know have taken it and really enjoyed it, but I was busy doing other classwork and never properly tried in this class.  Besides, 110 is better since python is way more applicable than racket.",
                "The instruction was great but the content was not as great.",
                "The class really teaches you a lot about DrRacket. It was my first time learning about compsci, and I feel like it was a really interesting and informative session to first be introduced to the subject. Just know before going in that the class is on DrRacket, which is a language not most people tend to learn. Take CompSci 110 if you want to learn about Python. Sara is an amazing instructor, really engaged in the subject and the lectures, and cares a lot about her students. There's so many sources that you can use to get help in the course, both from the TAs and Sara herself. The tutorial sessions help you a lot, but make sure to look over the lecture notes beforehand if you didn't go to class because you'll be lost. If you're planning on skipping class or not going at all, make sure to look over the lecture notes, and actually do the assignments because it'll help you understand things. That being said, just go to class and listen in sometimes because that'll be more useful. Plus, they're really interesting because Sara is a great instructor and public speaker.",
                "This class is great. If you've spent time programming before, you'll be absolutely fine. If not, there are endless ways for you to get support. There is plenty of time to get assignments done, and the topics for the exams are clearly explained. Everything about this class is clear and well\u2013defined, and Sara does a great job making sure students make it through the course in one piece. While Racket isn't the most useful language, the fundamentals behind it are important, and Sara makes the assignments interesting.",
                "AMAZING CLASS. Sara is so committed to creating a learning environment for new programmers and seasoned programmers alike. I had never had any interest in computer science and this class completely changed my perspective. The course relies on coding assignments every week, padded by weekly tutorial (discussion) sections. If you are a new programmer I highly recommend taking a green tutorial (beginners only). This class is taught by people who want you to succeed, people who're committed to keeping you interested, and people who genuinely love what they do. Don't miss out.",
                "This class can get really hard if you don't intentionally dedicate time to it. Definitely go to office hours, and do the work, and it will be fine.",
                "This class is easy with Sara. Just make sure to go to office hours and ask questions whenever you're stuck so you won't fall behind",
                "I don't feel like I am terrible at programming, but I really did not understand this class.",
                "This course is one of the best courses you can take Freshman year at Northwestern. It provides a brilliant foundation for CS and Sara is the best professor I've had yet. She makes it possible to learn in a 400 person lecture hall, which is quite a feat. If you take this class\u2013 take it with Sara.",
                "Very well organized and taught class. Lectures could be pretty dull but they were clear and organized and helped a lot with homework. Homework is pretty hard so I had to utilize a lot of out of class help from peer mentors but they make sure there are plenty of office hours at all times so it wasn't a problem.",
                "The course used a functional language as an introductory language, which I thought was absolutely insane. It was sure difficult at times because of that. If you have previous programming experience it might be a hindrance.",
                "It helped Racket and I was not familiar with it before.",
                "She is a good lecturer",
                "With any semblance of computer science background, this class should be a breeze (despite Racket being a ridiculous programming language). Professor is good though if you pay attention at all.",
                "Sara is a phenomenal professor. I really enjoyed this class because of her teaching. It is very doable if you go to office hours, particularly Sara's, and get help on things you don't understand.",
                "Take it with Sara! She's a fantastic lecturer and I think that I learned a lot from this class. I didn't go to office hours so I can't say how helpful they are but they have them all the time. Tutorials with peer mentors are also pretty helpful. Overall, I learned a lot. It was a good class.",
                "READ LECTURE NOTES BEFORE CLASSSara is my favorite teacher at this school",
                "Racket is weird, Sara is great",
                "As someone who had never taken a computer science course before/had no experience with coding, I think this class was very manageable. I found the weekly assignments to be challenging but not so challenging that they were a pain. Going to office hours is incredibly helpful!! Also, Sara was such an approachable professor and she was so willing to help. I definitely think that I would not have been as successful in this class if I had taken it with another professor. If you have no prior coding experience don't be afraid to take this course with Sara, she is so willing to help and doesn't make you feel bad about asking questions in class or at office hours.",
                "Sarah is a fantastic lecturer who constantly checks in with students to ensure we're following. Assignments in this class are tough and require a good amount of time to complete, however the peer office hours are extremely beneficial. This class is challenging but rewarding. Definitely piqued my interest in CS as a non\u2013major.",
                "Got a good idea of what coding on racket is like",
                "Sara's lectures were great and I ended up learning a lot",
                "Sara is the best professor I've had at this entire school.",
                "Overall, this is a great class. Sara is a wonderful teacher and you will learn a lot. However, exams are difficult because I personally found it hard to take a comp sci exam on paper. In real life, you can use trial and error, but not on the exam. That being said, if you do your work 1/2 of your grade will be a 100. The tutorials were kind of annoying, and assignments were helpful but very time consuming. I was in mentor hours a lot toward the end of the course. Definitely don't leave work until the last minute, and you'll enjoy this class. I'm taking CS 295 because I want to learn more CS with Sara!",
                "The instruction was very good and access to resources was plentiful.",
                "If you are considering to take 111, take it with Sara! The lectures are super easy to follow and you can do well on the exams as long as you understands the lecture contents.",
                "The course was taught well and structured well, but could be boring for people who already knew the topics",
                "Sarah is an excellent lecturer. She's always clear, and she always gauges the classroom to make sure she's going at a good pace for everyone. The language learned was a strange one, but not a bad first language. I learned a lot, and the exercises were reasonable in terms of difficulty, and they definitely helped me better understand the lectures.",
                "Sarah is really great at making sure everyone understands her in such a big lecture. She routinely asks people, with eyes closed, to vote on how confident they feel on what she is currently presenting, and she will adjust her teaching speed and clarity based on that. She will also often ask people to ask her questions.",
                "This class is extremely insightful and I would highly recommend that anyone interested in computer science or questioning whether or not you want to study it further take this class as soon as possible. Racket may seem to be a little unintuitive at first, I thought the exact same thing and I have been around coding since grade school, but you quickly learn what the language is supposed to look like. The great thing about this class is that literally anyone can take it and I guarantee that they will walk with more knowledge and confidence when it comes to coding. The exercises are relatively straightforward and don't take too long, the tutorials are helpful, but depending on your TA's, you may need to be more vocal about your questions, and I would highly highly recommend that you take this class with Sara as she is so good at explaining every topic and makes this class truly feel like an introduction insuring that no one gets left behind.",
                "Sarah is a great instructor, definitely take this class with her (and any other class that Sarah teaches). She is super understanding and a great lecturer. If you're already proficient in programming, you'll probably find this class easy.",
                "The instruction was excellent, the entire team was very caring about students and wanted them to succeed. There was always a clear effort to make the assignments as engaging and fun as possible. Tutorials could have been stronger, or perhaps simply changed to make them more conducive to discussion.",
                "If you are into technology and coding, I'm sure this class will work for you. However, given that this is an intro class, I do think it is quite challenging. The majority of my free time throughout the week was spend in peer mentor hours to get help on the exercises. there were not enough peer mentors, and even less qualified and helpful peer mentors, for all the students who needed help. the professor was extremely flexible during the whole corona shut\u2013down thing and it really helped. as tough as it was, it was super interesting and i don't regret it even though my final grade isn't good.",
                "Very good for an introductory course. Sood strikes a good balance between teaching to new programmers and teaching more experienced students. Lectures and assignments are very clear and everybody involved in teaching the course is very reasonable. This was my only class that had a proper response to COVID\u201319. Racket is very annoying at first, but it's pretty easy once you get used to putting parentheses around everything.",
                "This class moves fast so be prepared. Sara is great and does a really good job of explaining things, but I was not ready for how quickly we would move through topics. Go to office hours if you are having trouble on the assignments. Also, the midterms are far easier than the assignments so do not worry. You don't have to write any actual code on them, just work with existing code. It is very possible to get an A if you just put in the work.",
                "This class is amazing if you take it with Sara! She genuinely cares about students in her class doing well and being able to understand and complete the assignments. Her explanations of lecture topics are very clear, and the workload is super manageable. Highly recommend!",
                "Great introduction to computer programming. Racket isn't the easiest to use but is a great tool that requires you to understand the logic behind the code (and provides even playing field for everyone). Prof. Sood is enthusiastic and very effective in teaching material, TAs are also pretty helpful. Engaging and challenging.",
                "SARA SOOD IS AMAZING! This class made me really interested in computer science, so much so I might pursue it as a major! Not hard at all, esp. if you have literally even the smallest amount of coding background",
                "Professor Sara teaches this class very well. If you have had no experience in computer science and have no intention of majoring or minoring in it, take Comp Sci 110 instead. Comp Sci 111 is taught in Racket, a language that is not commonly used to even the playing field. I spent hours in office hours a week to do the homework and asked friends for help as well so I could do well on the exercises. The course is not easiest for those who have not had coding experience. You have to study for the exams but if you are very good a coding, this class should not be difficult.",
                "Sarah is an amazing lecturer. Too bad I was absolutely bored of the language by the 3rd week of the course. The language is so unintuitive and useles. They say the reason they are teaching us such a primitive language is because most languages like C++ and python will be replaced in the future, what they fail to realise is that something like python will help me with my other courses. Whatever happened to interdisciplinary learning.",
                "I think this course is a very good introductory course for comp sci. Sara is already known for being a great professor and her class reflects that. Make sure you take advantage of all the resources so you feel confident about the material. As long as you stay on top of it, you should do well in the class.",
                "I feel the course is solid and Sara is arguably the best lecturer I have ever seen. She is helpful and responsible.",
                "Sarah Sood is the GOAT(greatest of all time). She is a God.",
                "If you want an easy A with no work this is not the class. It is not hard to get an A but you definitely need to put in work and the HW becomes so long and takes hours and hours to complete towards the end of the course. Sara is a great teacher and there are a bunch of office hours but don't assume that this class is easy.",
                "I really enjoyed that the professor cared about her students. Though the class could have been taught a little bit slower, I think the professor is great when it comes to clarifications or any repeating of material!",
                "Good class",
                "This class is amazing, take it if you see even the slightest possibility that you might be interested in something remotely CS related. Sara is a great professor to take it with, throughout the quarter she made sure we weren't lost (despite the big class), and she handled the coronavirus situation at the end of the quarter in such a thoughtful manner.",
                "Pretty chill class, assignments aren't too hard. Course materials provide everything you need. Sara is great! Love that girl",
                "This is a great class and I recommend taking CS 111 with Sara Sood if you can! She is an amazing lecturer and makes the concepts simple to understand. She also provides lots of examples of code and presents students with many opportunities for learning, so if you are interested in computer science and coding, I would take this intro class with her!",
                "very good instruction, Sara is amazing",
                "Only went to class once. Tutorials seemed unnecessary but gave me time to do my work.",
                "I really liked this class! Before I took it, I heard a lot of people (especially people with prior programming experience) complaining about it being taught in Racket, but it really wasn't that bad. Sara Sood was a great instructor, and the peer mentors were really good! The head PM Daniel Birnbaum was particularly fantastic at explaining concepts. The format of the exams is a little weird, but there were review sessions led by Daniel that made them a lot easier.",
                "Sara is a great lecturer and makes the class very fun! This class isn't very hard either.",
                "this class is a super good introduction. Racket however is not ideal. Class lectures and homework were very aligned so that it really helps solidify learned concepts.",
                "Not a difficult class at all. Paced very well. Exams and exercises are not that difficult.",
                "Please take this with Sara! There is no other professor who has as much empathy and genuine care for her students. She makes class very inviting for those of us who have never coded before. You do need to put in work on a daily basis to get an A if you've never coded before, but make use of her office hours and the plethora of peer mentors.",
                "This was a very engaging and informative class. Racket is a bit of a rough language but I understand its use as a tool for teaching the concepts we went over in this course. Sara was very good at answering questions from the class instead of going off on a tangent and not really getting to the question like a lot of teachers do. The workload was very manageable and everything seemed pretty easy to follow. The only real complaint I have is the tutorials did not seem very effective at all. The assignments were okay, but almost no one ever asked any questions or really justified an extra meeting.",
                "It teaches you how to code",
                "111 is no joke but i haven't learned this much in ten weeks in forever. Don't fall behind and go to a lot of office hours. Sara is amazing but a 300\u2013person lecture can only go so far in explaining tough concepts. study for the exams in groups, ahead of time, and don't worry because the assignments stay about a week behind the lectures. The serotonin rush of learning how to code a game is amazing but may take a zillion hours to attain.",
                "The class was a great introduction to computer science. If you've taken CS before, the class should be pretty easy, but Sara does a great job of explaining the concepts behind the code, which makes the class understandable for everyone.",
                "This course is a bit difficult if you, like me, are new to coding. Sara is a great professor but often went a little too fast for me. She stops for questions when she goes to fast but if you aren't sure what to ask, which nearly always happened, she'd just continue on the same as before. If you are new to coding and struggling, GO TO OFFICE AND PEER MENTOR HOURS, especially with help on assignments\u2013\u2013 it will save you in this class!",
                "As someone already familiar with computer programming from high school, I really appreciated the new ways of thinking required by lambda calculus. Though, I do think racket has some naming conventions.",
                "This class with Sara is okay for those with no coding experience, but if you\u2019ve never coded expect to spend a lot of time in office hours. Weekly assignments a midterm and a final exam",
                "Really good for learning the fundamentals. Highly recommend if you're interested in pursuing comp\u2013sci.",
                "The course is well designed overall. Assignments are challenging and exams have no big surprises. Weekly tutorials are slightly inefficient in my opinion.",
                "Very doable course. I did not have much coding experience before taking this class, and did not find it as difficult as much as I thought I would.",
                "This class is not too difficult. If you've coded before it won't be that hard but the formatting of code is very frustrating. Overall pretty good class, would recommend taking with Sarah Sood/Owsley",
                "Even though I had already programmed before, the course taught me techniques that helped improve my code a lot.",
                "The class was difficult because Racket is a hard language to learn. However, Sarah is a fantastic teacher and makes the material understandable if you pay attention in class.",
                "I think this class is a great beginner class. If you have some experience, then this is a pretty easy class. If you do the homework and study a little then you can get an A for sure.",
                "Good intro programming class and Sarah is a great professor who teaches the material really well.",
                "Good class. Homework can be fun in this class because it's like a puzzle.",
                "Grading was extremely fair, class time was used really effectively, and it held the students' interest throughout.",
                "This class was amazing. The lecture was taught extremely well to help us understand the concepts and then the assignments each week allowed me to make sure I understood the concepts and how to use them. The exams were fair and tested the understanding of how the programming works, which was much different than the weekly assignments."
            ]
        },
        {
            "course_code": "EECS_111-0_20",
            "course_name": "Fund Comp Prog",
            "instructor": "Sara Owsley",
            "year": "2019",
            "quarter": "Winter",
            "instr_rating": {
                "mean": "5.80",
                "count": "230"
            },
            "course_rating": {
                "mean": "5.25",
                "count": "231"
            },
            "comments": [
                "I thought the tutorials were a waste of time, and for the most part did not help me directly with the exercises. The first midterm wasn't too hard,  for the most part it followed the practice midterm. The second midterm was awful. It was nothing like what the practice was, it was confusing, not easy to follow, and I do not think we were prepared in the right areas to be able to do well on that test.",
                "This course is great in teaching the basics of programming. Sara is a great teacher and all of the peer mentors are very helpful and helped me complete weekly assignments. The exams were slightly difficult, but I think if you make it a point to keep up with lectures and concepts you will be fine. Im glad I took this class.",
                "While listening to the lectures can be boring at times, Sara does a great job at teaching programming to beginners and makes it interesting.",
                "I wish we used a more common language than Racket.",
                "Sara is an amazing instructor, super helpful and easy to listen to. The course material was a breeze for me, but I still found the class very interesting and enjoyable. Highly recommend",
                "The class is pretty easy if you can think logically. The slides are very helpful and enough to provide you with the knowledge needed to do the homework.",
                "Take this class with Sara! She is the best and wants you to succeed! If you have a little bit of programming experience then this class shouldn\u2019t be too hard. Racket is a little weird but you\u2019ll get through it.",
                "Sara is an incredible professor, too bad I'm not continuing computer science after this quarter. Would have liked to take more courses with her. Homework assignments are very time consuming and I feel like the lectures did not prepare us that good to complete them. Nice class overall, not a super easy A (time\u2013consuming)",
                "Sara Sood is a compassionate and caring person and this reflects across how she structures EECS 111. Exams and assignments are fair, and there is plenty of support available if you are struggling. Additionally, she makes herself as accessible as possible in office hours and accommodates to her students whenever possible. Truly a class act.",
                "Take it with Sara! She's great and so understanding. One of the best professors I've had here. Just do the assignments/go to OH to make sure you did them right, and the exams should be easy.",
                "My every waking moment was spent in Peer Mentor Hours this quarter. So, just for the record this is a hard class, it will take up all of your time, but it is rewarding and you will learn a lot about critical thinking in the form of computer programming skills. Sara Sood is one of the most amazing professors I've had at NU. She explains things clearly and frequently gauges how fast she's going and readily adjusts. She is engaging and thorough. She is also personable, for a class of roughly 400 she still knew my name individually. That being said, I hate the Racket language with a passion (I came from already knowing some Python basics which is a VERY different language) and you will never use this language again but it does its job in teaching you the fundamentals of how computer languages work in excruciating detail. I often felt I was getting too much help but it seems that I was not alone and collaboration is a keystone in CS. I loved this class, really I did, and was challenged intellectually but because I had such a difficult time \u2013 pushing the rigor beyond what should be normally asked of an intro or one\u2013off class \u2013 I'm not sure I will be able to continue forward in the EECS department.",
                "This course was really good overall. Sara is a great lecturer, though some of the assignments are a little tricky (and require a bit of time outside of class)",
                "This course is very easy, and has a good structure to instill basic principles of programming and how they work, but goes a little slowly and doesn't maintain interest very much.",
                "Sarah is such a great teacher of the class. The information is not too hard to follow, but you need to make sure to do the work on your own and understand the concepts to not be underprepared for the tests.",
                "This class was pretty fun, the assignments are manageable, though can get frustrating at times. Sara is great and frequently checks whether we are following and is always welcoming of questions.",
                "Sara is literally so amazing, I wanted to do well for her. It was pretty challenging, it's a lot of work and frustration if you're not great with this kind of stuff, but overall I'm glad I got through it and would recommend everyone take a course like this just to keep up with where the world is going.",
                "It was a lot of fun! I think it was interesting and I feel pretty confident in my programming as a result.",
                "If you are going to take this course, definitely take it with Sara \u2013 she is an amazing professor and is always willing to help. However, this class is difficult and requires a lot of time and effort in order to complete the assignments (I had to go to peer mentor hours every week in order to complete the homework). The class is not curved, but Sara does provide extensive resources to help you study and engage with the material.",
                "Sara is an amazing teacher! She was very focused on making this class accessible for everyone, regardless of major/background experience, which I really appreciate. She also was fantastic at making more difficult concepts easy to understand, and used many different methods of explanation to clear them up.",
                "This course is not too much work and if you have compsci experience it is pretty easy",
                "I learned a lot about the fundamentals of computer science.",
                "Take the class with Sara!! She is the best. Even though I did not have any previous experience with coding, she simplified everything while explaining the topics. The exams were pretty easy compared to the exercises.",
                "Sara is definitely a good instructor!",
                "If you have prior coding experience, this class will be a breeze. Most of the coding concepts covered are the essential ones that would be covered in other languages too. Racket syntax was the annoying part of the course. Sara does a really good job adjusting her pace to make sure as few people get left behind as possible, but the pace will feel slow to those who have coded before.",
                "Sara is a great professor and lecturer. In addition, the assignments are very helpful in understanding the content. The midterm is relatively easy, however the final is difficult and the principles tested need to be truly understood to do well.",
                "I liked CS a lot more than I expected to and Sara is a great professor. I highly recommend taking the course with her.  Not too much work besides the weekly programs, which don't take too long.",
                "This course helped me understand programming as a discipline and gave a very quick introduction to concepts within programming. It was also interesting to note how imperative and functional programming are two different things",
                "The material is engaging and fun to work with if you spend the time on it.",
                "Professor Sood is a great professor, she explains topics very patiently and goes into more depth when asked. The assignments, however, depending on your past computer science experience can get really difficult. Also, there is a required tutorial session outside of class that you must attend. There is basically a tutorial and an exercise due every week which can get to be a lot of work. Assignments every week until the very end of the quarter so no breaks.",
                "This is definitely a class for people who have never coded before, but that doesn't mean it's not challenging. The assignments range from easy to hard but if you take advantage of peer mentor hours, it won't seem too too bad.. it's kind of a time commitment with the 1\u2013hour tutorial session once a week and then (if you're a beginner/don't pick up on everything right away) likely having to go to office hours for the weekly assignments, but in the end not too bad. Would highly recommend taking this with Sara ! Her energy makes the course more enjoyable and she usually makes confusing concepts easy to understand.",
                "Sara is good. Take the class with her",
                "Sara Sood is an incredible instructor, and I learned so much from this class. I had never programmed before this class, but she made me feel very comfortable and excited about computer science. If you have the class to take 111 with her, you absolutely should!",
                "This course was really great. Computer science can seem very difficult to understand at times, but Sara made it easier and fun to learn. She was very open to feedback from the students and would adjust her lessons as such. The tutorials and assignments can seem tedious at times, but it makes everything so much easier to understand.",
                "Sarah is absolutely brilliant, and if you take this class with anyone else you're doing yourself a disservice. She is the most thorough, thoughtful teacher I could've hoped for. I think I could learn any EECS if she was teaching it.",
                "This course was very helpful in deciding the majors I wanted to choose from. Even though racket was sometimes confusing, as someone who doesn't know Java or C++ or Python, it was relatively easy to grasp.",
                "Sara was really great about adjusting her lectures so that everyone could follow. The peer mentors were also very helpful and able to answer all questions. I would always recommend going to Sara's office hours to talk about majors or minors, she was very helpful with that. The class as a whole was not too hard and I found it pretty fun. I know a lot of people have issues with the fact that this class is taught in Racket, but as someone who has never programmed before, I didn't mind it. It felt like a good introduction to computer programming.",
                "I thought this class would be easier than it really is. I went in with no experience coding but thought I'd be able to easily grasp the concepts. I was wrong. But as long as you go to office/peer mentor hours when you're confused and take time (be patient) to do the assignments, you should have no problem. I still liked this class and learned a lot.",
                "Good course, great instruction.",
                "The weekly assignment in this course is reasonably hard and long, but Sara gives many hints about it in class so definitely doable. Just completing the assignment helps understanding racket so you might not really have to prepare for the midterms much. She uploads lecture notes, and the way material is presented is very clear and interesting.",
                "I really enjoyed this class; I had no previous coding experience, but Sara was great at helping students of all levels understand the content. There were also office hours all week long, making it  extremely easy to access help with assignments or difficult concepts.",
                "I had to seek a lot of outside help for this class. Racket is so hard to work with, even if you already have coding experience. Sara does not prepare you well for the tests besides giving you practice tests.",
                "I really enjoyed this class. Sara is the professor to take it with and she definitely made this class great. You need to take the time to do the exercises to actually learn the material, but the learning process is rewarding. The midterm was very reasonable, but I found the final exam to be extremely difficult and not like the practice exam. Just take more time to study for the final and you'll be fine.",
                "Sara kept the lecture interesting and the assignments were challenging, but nothing too crazy",
                "Sara is a really good lecturer, although if you have programmed before even in other languages, the class is simple and you don't really need to go to lecture. The discussion sections are mandatory but completely useless, I learned absolutely nothing in them.",
                "This class is a great class if you take it with Sara. The homework programs are not hard to complete even if you don't have any coding experience. There are peer mentor office hours all the time if you need help and Sara posts the lecture slides on canvas which really helps complete the assignments. I really learned a lot in this class and made me excited to pursue a CS major.",
                "If you took AP Computer Science or have equivalent experience, you will find this course easy.  That being said, this course provided me a solid foundation of recursion and programming through Scheme.  I think that whether one is a novice or expert in programming, they can learn something from this course.",
                "Sara is awesome for sure. I really enjoyed the course. I am not majoring in computer science and have never coded before, so I was really worried about it being too hard. The good news is that no one has programmed before in Racket, so everyone is on the same page. The class is really doable, it just sucks because in order to complete the assignments you HAVE to go to mentor hours. Just be open to asking for help and going to mentor hours, and you'll be fine. I had never coded before, and I loved the class and will continue to take more eecs classes. Also, Sara is an amazing lecturer. Take with her FOR SURE.",
                "Sara was a great professor and made difficult concepts understandable. Tutorials and homework are structured well for the class. It takes a lot of work outside of class but try to come to every class because it\u2019s easy to fall behind",
                "Pretty straightforward, well\u2013taught, chill course.",
                "Great intro to EECS: definitely take it with Professor Sood! She makes everything clear and easy and xtra fun.",
                "As someone who has significant programming experience, the course wasn't very challenging(besides one or two assignments) but I often found Racket(the language the course is taught in) to have annoying conventions.",
                "If you can take this class with Sara Sood do it!!! She's so so amazing. Like every class, she asks for people to raise their had on the pace shes going at to make sure that she isn't going too fast. She is a really great teacher. The class is taught in racket with is gross but its ok. I learned a lot from the course and it was really interesting",
                "I've never really had experience in programming, but I was excited for this course. Sara is very clear from the beginning that this course is for both people who have 0 experience and people who may have had a bit of experience. She also does this thing where she makes us close our eyes and asks us if shes's going too fast, too slow, or just right, and she uses that as direction for her class. There is homework due every week, which get harder :( There is a midterm which some will say was hard and others will was easy; the average was an 89 this year. It was pretty easy, and there are practice tests from other years. There is also a final with another practice test. There is a lot of help available through tutorials (like a discussion section, but more hands\u2013on that you pick in the first or second week of class) and peer mentor hours. Good course.",
                "This class was a clear and good introduction into coding. There are people from all backgrounds, so don't feel as if you'll struggle if you have not coded. This class is not hard if you put in the time. Go to mentor hours for the assignments and generally follow along in class. Sara is extremely nice, helpful, and interested in the field. She would stop us numerous times to ensure she wasn't going to fast and was generally just an amazing professor. This is a great class to take, just be ready for weekly coding assignments (some of which are shorter than others).",
                "This class was amazing. Sara does a great job teaching this course and is one of the best professors I've had at Northwestern so far. You should take this class.",
                "Fun course. If you've never coded before you actually can do it. TA's are super helpful.",
                "Sara is such an amazing teacher. She really cares about her students and she is always there to help understand concepts if you didn\u2019t during class. Her lectures are super clear and helpful, so I really recommend going to them and paying attention even though there is no attendance. Grades are good as long as you complete all assignments but if you go to peer mentor hours it\u2019s super easy to get 100%. Also, tests aren\u2019t hard as you don\u2019t have to actually code for them.",
                "The course that made me stop doing coding. Sara is nice and knows her stuff, but the class is just structered horribly without much progression. The assignments each week does not build on the previous one and sometimes the TA can't even figure out what's happening.",
                "sarah sood is the best person to take this with. great lecture style. racket can be stupid, but it's a good intro class",
                "Although the course is open to people who have never coded before it is really challenging to keep up with others who have coded before. Even though everyone is learning a new language, for people who haven't coded it's about learning a language as well as the concepts, while people who have coded just need to learn the language and are set. Aside from that, it is a pretty challenging course, but not hard to do well in. Exams are worth half your grade and the other half is assignments and tutorials, so you just need to go to all tutorials and get 100s on all the assignments to do well. DEFINITELY GO TO PEER MENTOR HOURS\u2013\u2013don't ask your friends for help with assignments because it gets annoying and the peer mentors are literally there 10am\u20138pm getting paid $20/hour to help you\u2013\u2013it's their job. Recommend setting aside at least 4 hours if you want to get things done at peer mentor hours because it takes a while to get to everyone's questions. Also, try to come in with part of it done or at least read through the assignment.",
                "Definitely take this class with Sara if you can. She really cares about her students and makes each and every class entertaining and enjoyable to go to. If you you have no coding experience you don't have to worry about being a step behind the class as Sara structures the course to start out and gradually work its way up in difficulty. If you have a lot of coding experience don't worry about being too bored in the class, Sara allows you to tinker with your own code during lecture and the concepts are almost always engaging enough to keep people of any skill level engaged.",
                "The course shouldn't be challenging if you have experience in programming. Some of the assignments were difficult though.",
                "Take this course during Winter Quarter. Even though CS may seem daunting, there's so many resources that are available (peer mentors, office hours, online documentation). Sara is a really good lecturer and always tries to make sure no one is left behind.",
                "Good class. Sara is a terrific instructor and very helpful. Would recommend taking her if you need 111. The TA hours all the time make it very manageable to do the assignments.",
                "Taking 111 with Sara was great, despite Racket being a somewhat frustrating language. However, it really is meant to be an introductory course; don't be daunted by it",
                "It was a great course. Sara Sood is a fantastic professor.",
                "I thought it was a very well taught intro computer programming course",
                "I dislike Dr. Racket, and while I think the class is not a terrible introduction to computer science course, I feel that the same could still be accomplished with another language that is far more useful.",
                "I cannot give Sara high enough praise for this course. Logistically, it wasn't super strenuous\u2013\u2013I spent between one and six hours on each of the weekly homework assignments and didn't have to do much else. The exams are easy if you know what's going on and impossible if you don't. However, the class worked toward building computational thinking, learning how to think recursively, work with data types, and troubleshooting with error messages. Sara is a phenomenal professor who genuinely cares about her students and is excited about the content; she encourages you to call her by her first name and come to office hours to discuss life, creates a very comfortable learning environment, and uses the best examples in class. Even if you aren't a CS major, I recommend this course if you're remotely interesting in having some familiarity with programming.",
                "TAKE THIS CLASS WITH SARA. She was honestly the sweetest professor and was so committed to helping students succeed. The class was very engaging, and lectures are worth attending! The test formats are very manageable and the assignments are fair. Plenty of resources are available to you if you are struggling!",
                "Sara is an amazing professor! It's a tough course, you will have to spend time on this course, but Sara is so kind and really wants to help her students.",
                "Do this class with Sara. She is LEGEND.",
                "If you have experience, this class is very easy with Sarah. Still somewhat useful getting experience with function oriented programming and objects",
                "It made me a lot more comfortable with coding.",
                "A good way to start learning CS, although I had some issues with Racket.",
                "lectures were helpful, but I learned the most in tutorials. Sara is awesome. office hours are a must. assignments can be challenging. great class overall. take it!",
                "Take this course with Sara!! She made the lectures engaging and definitely worth your time to attend. She was also very conscious of the speed of the course and made sure that every concept introduced would be understood regardless of previous programming experience. This was a great class for someone like me who had no experience but wanted to learn! Some assignments near the end are a little more time consuming but peer mentor hours are very helpful in completing them!",
                "Take this course with Sara! She's great and it's really not that scary",
                "WIth no prior coding experience, this course was certainly challenging but also completely manageable and very rewarding. The assignments can get tricky, but there is ample assistance with tutorials and peer mentor hours. Sara is amazing!",
                "It was good",
                "Pretty easy course. Like easy enough that you don't need to go to class. Ever. And, you can still quite literally ace this course (or get pretty damn close). I didn't go to class so I can't provide much feedback on the instruction. But, if you have any sort of programming experience coming into the class, it'll be a cakewalk.",
                "This class is not for the busy student, it can very quickly become time consuming, because assignments get kind of tricky. But if you have the time and the interest, it is SO rewarding, and I highly recommend. The tests are not hard or scary by any means and the peer mentors are super helpful when it comes to assignments. Beware, though, there are \"tutorials\" which is basically discussion section/lab, where it is hands\u2013on learning instead of lecture. They don't tell you about it, though, until the class actually starts, so there is that extra time element. But you do most of the learning in tutorial, so don't let that scare you off. I genuinely encourage anyone who is interested to take this course. I'm so happy that I did and I'm literally a psych major. Absolutely zero need for me to take this, but I still loved it.",
                "really good teaching, sara is great and super understanding. best programming instruction i have ever had. peer mentors were super helpful",
                "class will be a breeze if you have coded before",
                "This class is fairly easy if you've ever programmed before. Weekly assignments and two midterms. Sara is an amazing instructor, and I think everyone felt supported through the class. However, BE AWARE THAT YOU HAVE TO SIGN UP FOR A WEEKLY PEER MENTOR TUTORIAL. These tutorials will likely be a huge waste of your time, and in my case were at an extremely inconvenient time (and you won't know you have to take one until you sign up during the first week of classes). Basically, its mandatory office hours once per week, and not knowing that would happen ahead of time is frustrating.",
                "Overall, it's a pretty good class. You learn to code in Racket, so the concepts are good but the computer language isn't too commonly used outside of Northwestern. GO TO MENTOR OFFICE HOURS. They are some of the best and most helpful people I've ever met!!!",
                "good class, everyone should take to at least be familiar with programming",
                "Sara is a great instructor. Really enthusiastic about teaching the class and provided good slides and examples of code. She also really walks you through new code so its much easier to learn by watching her code and listening to her walk through the code itself.",
                "Sara is great. Take this class with her if possible. It's kind of counterintuitive if you have programming experience, but it's definitely manageable.",
                "Very cool, through, challenging, and a great beginners class",
                "This class was great. The only way I would have wanted to learn computer science. As someone who has dreaded taking EECS for my entire undergrad career, I was pleasantly surprised to find that I actually loved the challenge that this class presented and the way that it pushed students to really think and use their critical thinking skills. Sara is the best professor, and she lives up to her positive reputation. If you're willing to put in the time to truly understand the concepts of this course, you'll really get a lot out of it! Assignments are sometimes difficult and can require quite a bit of time, but the peer mentors and Sara herself are the best resources and they are so open to helping students. Exams are fair as well, and you're given plenty of study resources. Overall I really enjoyed this class and would recommend that all students take it just to be exposed to this way of thinking and working!",
                "Great class, very well done. Sara is amazing I can't recommend her highly enough. I would say for the most part lectures aren't super necessary to attend because she posts the notes online.",
                "Very helpful professor and peer mentors.",
                "It was well structured, a lot of help and office hours were available. Very, very well taught.",
                "Most wholesome class I've taken at NU.",
                "Take this with Sara, she is an amazing teacher.",
                "Sara is an absolutely amazing professor and the peer mentors were so helpful. She has this course worked out to the T and makes it extremely accessible to people who have never coded before.",
                "Sara is amazing, if you can take it with her absolutely do. She's super supportive if you've never taken computer science and there are so many resources and office hours to help. This class definitely takes up a lot of time if you haven't done coding before, but its doable.",
                "Sarah is one of the best professors I have ever had. She is understanding and will explain everything so well. 100% take the course with her.",
                "Sara is amazing.  She knows exactly which points in the lecture students are most focused and teaches the harder material at those times.  Peer mentors are amazing and tutorials were so helpful.  TAKE THIS COURSE WITH SARA.  Racket is not used by many companies so material learned in this course will likely not be used in the future.   That is the main negative of the course.  In spite of this, Sara teaches the material very well. Love her allbirds.",
                "This class is kind of annoying because you're learning a language that isn't really applicable to the real world, but it is good if you don't come in with any prior coding experience. Sara is also great and makes the large lecture feel personal and if you put in the work and go to peer mentor hours the weekly assignments aren't too hard.",
                "I was very anti\u2013anything in the EECs realm, but had to take this class for my major. It was not bad at all! The exams were really easy and fair. Also, the assignments are challenging but you have so many resources to help you. Also Sara is lovely.",
                "Sara is a great professor. Assignments take a longgg time, and it's easier if you sit with the peer mentors and work on them in office hours.",
                "I have never coded before. I was really worried about this class as a Weinberg student, but honestly it was not that bad at all. The grading is very generous\u2013\u2013basically just do your assignments and you'll get the points, go to tutorial, and the exams aren't too difficult (much easier than assignments). I did struggle with some of the assignments so I highly recommend going to peer mentor hours because they're incredibly helpful. This class is great because at the end you feel like you learned so much! Don't get behind though because it's difficult to catch up.",
                "This was a great course! I would say it is a good choice for a distro even if you do not plan to take any other programming classes. Sara is an amazing professor and person, and she made the class so fun and engaging. The assignments are challenging but absolutely manageable. The discussion section was very helpful for me, and the peer mentor office hours were great for help with assignments and understanding material. I had no prior knowledge of programming and am now planning to pursue it as a major. I would recommend the course!",
                "If you take this class, take it with Sara! She's amazing, and she really sparks interest in the language you work in.",
                "The course is not too difficult if you enjoy the mathematics and computer science type thinking. It is not easy necessarily to pick up the intuition it takes to code, but if you can do so, this class is not particularly difficult. Also, Sara is the best. Absolutely the best. Take the class with her.",
                "Great class, Sara is the absolute best",
                "Sara is a great professor and all TA are really helpful!",
                "Amazing course, Sara is the best!",
                "Prof. Sood was excellent at teaching the requisite coding concepts, as well as at connecting the skills we were learning to concepts that are more commonly applicable. She's very passionate about what she's teaching, and the homework assignments we got always supported what we were learning without needing too much more than what we had already fully gone over in lecture or tutorial.",
                "SARAH IS THE MOST AMAZING PROFESSOR. I had never coded before, but she explained things in a really clear way while also making sure that nobody felt weird about where they were at in terms of coding experience. Not gonna move on to 211, but happy I learned some computer programming basics.",
                "Interesting course, but you definitely need to pay attention in lectures to fully understand what is going on to do the labs and for the test. Office hours is a lifesaver and you can get most of your labs done through there, but definitely try to pay attention in lectures. Sara is super interesting",
                "Great class. The class offers something for every skill level. There are enough resources and office hours for getting help. Even if you find it easy, the course content allows you to challenge yourself by making small modifications to practice problems or lecture examples.",
                "Great class! A lot of info is just in the ppts, so lectures are just a way to solidifu",
                "TAKE THIS CLASS WITH SARA! She's great. The class is relatively easy, but since it is taught in Racket, the information isn't that useful going forward.",
                "Relatively easy, the tutorials are a good way to understand concepts you might have missed during lecture but Sara is an amazing lecturer.",
                "Do you know what recursion is? Do you know Binary Search? Have you coded in Python or Java? If you have answered yes to all three of these you can expect to get an A. Just remember to be present at tutorials and to do your work.For the rest as long as you put in the time and effort and go see TAs during office hours you can get an A as well.",
                "Sara does a fantastic job engaging students and answering questions with answers that make sense. She is very welcoming, and happily helps anyone who asks for it.",
                "Take this with Sara!!! She's so awesome and cares so much about her students \u2013 there's weekly assignments due, but they're not too bad. The one negative side to this course is the programming language \u2013 this course is taught in Racket, which you will literally never use again in your life.",
                "A truly awesome introductory course to take. I had no experience programming beforehand, so I didn't know what to expect. I found programming to be fun, engaging, and more or less easy (at least what we did in class). This class as a whole, if taken with Sara or Ian, is very easy and informative. Also if you're confused about anything just go to office hours.",
                "love sara. take this class with her!",
                "EECS\u2013111 is a class that you get what you give out of it. Professor Sood is an incredible lecturer and icon for womyn STEM majors, and she shows very clearly how much she cares that students learn and engage with the material. If you don't have a basis in computer programming this class can be challenging at times, but overall the course load and coursework is very manageable and super necessary if you want to learn how to think about programming.",
                "This is a really good class in the CS major sequence, however the language of the class, Racket, is extremely frustrating as someone who has coded in other languages before. Sara and the peer mentors are SUPER helpful during office hours as well as responding on Piazza. Definitely take this class with Sara.",
                "Sara is a really good professor who explains concepts well. Assignments can take a decent amount of time, but exams are pretty easy.",
                "Pretty average course, but the second midterm was MUCH more difficult than the first, and had I known where the course was going I probably would have thought about dropping it earlier in the quarter. Beware!",
                "This is a super fun class! Racket is a little weird at first but definitely not too difficult to pick up with or without any coding background. Sara does a great job teaching the class and making the content easy to pick up.",
                "If you have never coded before this is a good place to start. If you have it won't be that challenging. Sometimes it's hard to focus in class but the assignments are fairly understandable and if not there are plenty of opportunities to get help.",
                "I really enjoy this course, especially with Sara. It's not too difficult and the office hours provided are insanely helpful.",
                "Very interesting course. Sara is very good at introducing the subject even to those without any prior knowledge.",
                "111 is a good introduction to the computer science field, and the course is rather easy for anyone who's ever spent just a couple hours playing around with basic coding. Sara is intentional about making sure the pace isn't too fast for those with prior experience, which sometimes made lecture unhelpful for those with that background. Overall a well\u2013taught course, thought I would have liked more opportunity to explore additional concepts and make it more worthwhile.",
                "For a non CS major, just taking the course for a distro requirement, I was really pleasantly surprised by my enjoyment of the class. The assignments we do each week can be very intellectually engaging and challenging, but are really a fun break from the monotony, because it feels like I'm completing a puzzle.",
                "i'm not too interested in coding",
                "I found the course challenging but rewarding at the same time",
                "I really liked this course. Professor Sood is very good at teaching and keeping you engaged. I highly recommend taking this course with her. Go to office hours for assignments. They will make your life 10x easier. Other than that, go to class and start assignments early and you should more than fine.",
                "I learned a lot and never felt like I didn't belong in the class despite having no prior experience with computer programming. Sara is a good lecturer and provides PLENTY of opportunities to get help outside of class. Everything about the course was accessible, engaging, and the perfect degree of challenging for an introductory class.",
                "This is a fantastic intro class if you're interested in computer science.  Racket isn't a super useful language, but it's great to learn on and works great for introducing coding concepts.",
                "this course was A LOT of work homework\u2013wise. like hours per week, and you NEED to go into office hours. overall, it wasnt necessarily hard but the fact that the course is not curved can really suck if you mess up on one homework or one of the two midterms",
                "I'm going to start off by saying that Sara is an amazing professor and person. She was very accommodating and patient with me and met with me to help me. Unfortunately, I can't say the same for the course. I don't think that a class has ever made me cry this much. I'm not saying that the course is bad, I just think that I made a big mistake when I signed up for this class. DO NOT listen to your ex when they say that EECS is like learning another language and recommend that you take the class because you can speak three languages. EECS IS NOT AN INTUITIVE LANGUAGE. I've always been bad at computers, and I was hoping that this course would help me out, but I confirmed that coding is not for me. I tried SO hard to get into CS, but CS did not try hard to get into me. If you know for sure that coding will be a challenge, then do what I didn't and really consider taking another course. I thought that I could make it (turned out to be unrealistic) and actually do well. I went to hella peer mentor hours for help, but I still felt like a dumb potato. I'd just like to reiterate that the problem wasn't the class at all (even though it is extremely challenging), I'm sure that people will do well if they put in enough effort. But in my case, I put in a lot of effort and I don't think it paid off. Just putting it out there that if you don't necessarily need to do EECS and if you know you're not the best with computers, you should probably consider taking another formal distro. Otherwise you'll end up like me and see a peer mentor at Starbucks and start talking to them about the class and have them tell you that those who went to peer mentor hours tended to do very well on exams but you know that on the first midterm the average was an 89% so you believed that you could actually do well, but then checked your grade in class and got a 42% and started crying quietly in lecture (and every time you came out of Tech) because you felt like a dumbass and then you start crying in Starbucks in front of your peer mentor because you've given up hope on doing well on the final and feel ashamed because there's a high chance that a peer mentor you know will be grading your final. Anyways, I'm leaving this class in fear because I'm afraid that if I see a peer mentor on campus that graded my tests that they'll think I'm dumb. But yeah, a lot of people enjoyed this class and it gave me a chance to express myself with tears. I love you Sara (and peer mentors/tutorial instructors who tried their best to help a lost cause).",
                "Super good class to take for beginners, Sara is super good at explaining and also keeping class fun and interesting. Overall 10/10 would recommend taking it even if you are a beginner. Can be a bit challenging at first but Peer mentors are really helpful and so is tutorial",
                "Solid course. Sara covers content well in lecture but it moves quite quickly during the Powerpoint component. Exams are easy but reflect the material well. Assignments are fair and useful for mastering the material. Racket is a useful language for learning the fundamentals, so I don't mind learning it.",
                "The exams are structured very differently from the homework. In the exams, you really need to understand how to debug without actually having the ability to run the program. This can be hard to do if it is not the way you program.",
                "Sara Sood may very well be the best teacher you ever have. Queen of CS, incredibly supportive and validating of all her students from day 1. A well\u2013structured class that is challenging in all the right ways!",
                "Fun and intriguing course. Does a good job at teaching the foundations of CS.",
                "this is definitely not a class you should take if you're looking for an easy distro. You do have to put in work because it is not a class for non\u2013majors, it is the first in the sequence specifically for majors. It was very interesting and Sara is super nice. the assignments do get fairly difficult and i spent a lotttt of time in office hours. the hardest part was definitely the exams because even though they always claimed they weren't forcing you to write code on the actual exam, they basically ask you to in one section and studying for it is pretty difficult",
                "She teaches it the best. That's it. Take it with her.",
                "Really excellent class for anyone looking to get involved in CS. The assignments are a little annoying but the course is well\u2013designed and Sara is an excellent instructor; if you're a complete beginner or relatively inexperienced you will learn a lot just by being in lecture and doing assignments. Make sure to go to office hours; the peer mentors and instructor are extremely helpful and patient and you'll learn a lot from those as well.",
                "I wish that we could have learned a different language. Even though it is just intro, I think a language that is more scalable would have been nice.",
                "Take this class with Sara. She is amazing and always wants to help her students succeed! Also half of the course is assignments which help your grade out. But 100% take with Sara.",
                "Great class, easy intro to CS. racket is kinda pointless to learn though",
                "Great class and manageable workload if you stay on top of it throughout the quarter.",
                "This was a great intro course as someone who had never taken a CS class! Sara is a really great professor and explains everything really clearly. I would really recommend taking this even if you have never done CS because it makes it feel really accessible and the TA Office hours are basically all day every day because there are so many of them. The assignments were manageable and they provide you so much help with multiple review sessions. Take this class with Sara!",
                "I really enjoyed Sara! She is the best EECS teacher we have. During class she goes through examples and lectures using code as well as powerpoint presentations. I have already taken AP comp sci so a lot of the topics weren't new to me. The projects aren't too bad. There are plenty of office hours to get help if you need it",
                "Focused on executing code in racket. Was difficult but, taught a lot.",
                "Not an easy class if you're not a right brain type of person. My brain just doesn't work that way so after the first few weeks I found the class v difficult",
                "Assignments can be pretty time consuming, ask peer mentors for help for sure. Also Sara is a great prof",
                "The language racket is not a common language used nowadays. However, it serves as a good tool to introduce a general strategy and thinking of computation science.",
                "Sara is amazing! She is great in office hours and great in lecture too.  However, in order to do the assignments, you must go to office hours on your own time with the peer mentors.  This class does take a significant portion of your schedule.  It is great if you are actually interested in CS.",
                "Pretty do\u2013able course, I was a total beginner and I've been able to understand and do well on assignments and exams",
                "LOVE Sara, she always makes sure most people understand what's going on. Office hours are like constantly happening and so important because being there and asking questions makes a big difference.",
                "It was the fundamentals of programming which I had already learned in my prereq course, but it used a language that is not intuitive at all and I found it rather annoying.",
                "This course was excellent from start to finish. It is easily accessible for people who've never coded before, and Sara taught the material so clearly! She's inspired me to consider CS as a potential major and I'm now taking more CS courses. The assignments are difficult, especially towards the end of the course, but there is plenty of help and they truly help understand the material. The tutorials are also clearly taught and they explain anything you might've missed in class.",
                "If you have any coding experience at all, this course will be the easiest A you have ever received.",
                "The course was very enjoyable. I learned so much, and it was taught very well. I did not have a lot of knowledge in computer science coming in and I thought this class was very doable, yet valuable.",
                "take it with sara she'll make sure you get it.Also Sara actually codes in her lectures which is really helpful.",
                "This course is perfect for anyone looking to try programming but has no prior experience. Sara is an incredibly good teacher and is helpful for people of all skill levels.",
                "This class completely wrecked me. I had absolutely zero computer science experience going in and I was way in over my head from day 1. Sara is a really sweet and kind professor but I think this class inherently is not geared for non\u2013CS people, even though they say it is. The lectures are full of CS jargon that one has to decipher. Lectures teach you little about how to approach the assignments and as a result students must over\u2013rely on TAs in order to finish them. Furthermore, there is way too much crammed into 10 weeks. Before students could fully understand one topic, we were moving on to the next topic.",
                "This course is great. I've only had minimal exposure to programming, but could follow along well. While it's normal to struggle on the assignments once and a while, they're mostly cake walks. Just remember to write them check\u2013expects and go to office hours if there's any trouble. (THEY ALWAYS HAVE OFFICE HOURS, WHICH IS AWESOME. YOU WONT HAVE AN EXCUSE FOR NOT GOING!) Also the classic comment on how you should the course with Sara because she's great.",
                "Sarahs the best take this with her :)",
                "Good class. Sara is an amazing teacher, even though programming did not come naturally to me at all.",
                "after taking this course i want to major in cs",
                "Do the homework on your own before going to tas office hours. Also pay full attention in class as the tests will be really easy if you do.",
                "This class was great for people who have never tried computer science before. Sara was a great prof, very open to new students and accommodating, and passionate. New topics were explained in a way that was easy to comprehend",
                "They said this class was ok for people who never coded before and I definitely fit that description. I didn't even know how to unzip a file before taking this class, and I learned to code. That being said, I could not have done it with out knowing a lot of CS majors who were able to help me. If you're a beginner to coding and you want to take this class, make sure you have someone you can ask for help or just live in the office hours.",
                "Sara's a pretty good teacher, but she moves fast. The homework gets significantly harder after the first few weeks and it's really easy to get lost since it's such a big lecture. If you actually want to learn and not just copy other people's homework, go to office hours.",
                "The course was overall well designed. The weekly programs varied in difficulty quite a bit though, so its always best to start them early. There was an abundance of TA office hours, and many of your friends will be in this course too so its always easy to find help. The exams, however, I did not like at all. They give a large glossary of functions so there isn't much memorization required, but short 'one word' questions can be anywhere between 5\u201315 points, and making a tiny error can really affect your score as they do not give much partial credit. I lost 15 points for making these errors in my final, and though you can tell from my approach that it was along the correct lines, they didn't offer partial credit so I got 0/5 on three of these types of questions.",
                "I loved this class, and Sara is an amazing professor! She explains everything really well.",
                "This class is meh, no one pays attention during lecture and we all just learned it while doing the homework",
                "Sara is the absolute best EECS professor on this campus. She teaches at a steady pace and is always available.",
                "exercises were very time consuming and would\u2019ve been extremely difficult had I not gone to mentor hours. The mentors are really good."
            ]
        },
        {
            "course_code": "COMP_SCI_111-0_20",
            "course_name": "Fund Comp Prog",
            "instructor": "Sara Owsley",
            "year": "2021",
            "quarter": "Winter",
            "instr_rating": {
                "mean": "5.72",
                "count": "159"
            },
            "course_rating": {
                "mean": "5.37",
                "count": "159"
            },
            "comments": [
                "Loved this course. Professor Sood is the goat. Racket is not that bad, just takes some getting used to. Convinced me to switch to a cs major.",
                "I thought the teacher was great, and the assignments are structure in a way that makes quite a bit of sense. Allows you to do a moderate amount of coursework on your own time, and provides the tools you need to succeed.",
                "There are a lot of small mini\u2013quizzes. The main portion of the course can either be done with a small group over zoom or on your own. The flexibility the course offers was extremely helpful given the current remote situation. It was nice being able to do everything on my own time and then go to office hours for help when needed. Great course.",
                "The Professor showed genuine effort to help students learn and while maintaining an environment that gave students leniency when it came to turning in assignments on time.",
                "With only EA1 MATLAB as prior coding experience (does that even count?), it was not too challenging a course. There are a lot of peer mentors to help a ton with your code if needed. However, lectures and instructions are clear enough to be able to work through most code alone with some thought.",
                "Course was an easy A. Just watch the lectures and do the programming assignments and you'll excel in this class.",
                "I enjoyed the process of writing interesting programs",
                "This is a great course because it is organized efficiently and the assignments are interesting and stimulating, but not too challenging.",
                "TAKE THIS CLASS WITH PROFESSOR SOOD. She is the best, and super understanding about any circumstance. Structured as watching videos, take a quiz, and complete an assignment. No tests for this quarter. However, the programming language is entirely Racket (which is a dialect of Scheme I think). It's super confusing in relation to Python and you can't do much with the language. I also think it's less intuitive, but it's used well in this course.",
                "Structure of the course made it easy to ask questions and learn the content at your own pace.",
                "Go to office hours! They were super helpful",
                "This course was intriguing and not too difficult, a nice class to have under the belt.",
                "Both the instructor ans structure of this course were extremely helpful. Even in a remote setting, I felt that I got a lot of one\u2013on\u2013one attention and help when I needed it. Great introductory course!",
                "The asynchronous lectures were very convenient and easy to understand",
                "This class is essentially built like a normal online class that you'd take in high school. You pretty much learn everything on your own (watch a few videos, take a few simple quizzes), and you have a few peers/TAs you can talk to if you're really stuck on a program.",
                "Not terrible, Sara's very nice and helpful but I wish some lecture material was covered in class but also nice to get homework done during class. Peer mentors were very helpful.",
                "The course was taught as a flipped classroom which I though was great! With the large class size, it was much more convenient for me to watch lectures on my own time and ask questions or work on exercises (homework) during class time in breakout rooms.",
                "Class consisted of weekly programming assignments, three really short weekly quizzes based on pre\u2013recorded pre\u2013lectures and class participation (which could be waived by submitting work you did throughout the day). Professor Sood did a great job of keeping you on top of your assignments and towards the end was very understanding of difficult times during the quarter and offered grace periods as well as a week with no extra learnt material (during midterms week). The class uses Racket which was something I had never heard of prior to taking the class but I actually enjoyed learning how it functioned. Sadly, most likely will never use it again after this class but I am certain the concepts we learned will be applicable in more advanced CS courses. I honestly loved the asynchronous teaching style of the course and the flexibility of resources available for help.",
                "I was told this was an easy class. That was wrong. This was easily my hardest class this quarter, despite it being a beginner level CS class. Sara's lectures and demonstrations were easy\u2013to\u2013understand, but the exercises (which are a large portion of your grade) were much harder and only seemed tangentially related. Shu\u2013Hung is amazing and very understanding.",
                "The Racket language is very different from most programming languages (including the one I was familiar with, Python) and although I could do the exercises, I did not conceptually understand what was going on with Racket very well. It felt to me like a very counterintuitive language. I didn't like that the difference between functional and imperative programming was not laid out at the beginning, because I feel like that would have helped me understand Racket a lot better. That being said, Prof. Sood is good at explaining things, and the peer mentor during \"team meetings\" was very helpful, guiding me through issues I had rather than simply telling the answer. The team meetings weren't very team\u2013like though, basically just me interacting with my PM. Despite the convoluted language, I feel like this was quite an easy course.",
                "This is a really great class. The professor is really knowledgable, and the peer advisors are super helpful. The work is also super manageable.",
                "I thought that the weekly exercises were very engaging and helpful in teaching me various introductory CS topics.",
                "The course was very enjoyable, I felt I learned a lot, but the workload was still very manageable and the exercises were enjoyable and felt a bit like puzzles. Sara was very accommodating and helpful.",
                "If you are thinking about CS don't be afraid to take this!!! Sara is an amazing prof, very friendly, and she puts so much into this course to make it beneficial for everyone. There are 2\u20133 weekly quizzes on videos (flipped classroom) that are very easy, no trick questions, then an exercise due each Friday that's not too bad. This course is very accommodating; during midterm weeks Sara made sure to lighten our load on the quizzes and towards the end of the quarter she was super generous with extensions (during finals week giving us all a 5 day extension!) She's great and so is this class!",
                "Fantastic course, highly recommend.",
                "Sara is one of the most responsible and kindest teachers I've ever had. The course however is in DrRacket. Racket is not the most useful coding language you can learn. FInally, TAs are really nice and basically do your exercises for you, which may be detrimental to your learning and conducive to your grade.",
                "Professor did a great job with explanations and being flexible. There will countless opportunities to get help if one needed it during the course and it is very straight forward in terms of what is required from the student when.",
                "Sara is an awesome professor, very kind and extremely knowledgeable. Racket was a little tricky to get a hang of, but the resources this class provides in terms of peer mentors and office hours are really next level. Great class!",
                "Professor Sood is a great professor, she'll take the time to help you if you ask. The lectures are helpful, so I suggest watching them. I took cs 110 before this, and it's not necessary at all for 111, but it was helpful coming in with a small base of coding \u2013 it made the learning curve less steep. I would consider this a very manageable class, definitely an easy A.",
                "Professor Sood really wants you to succeed in the course as do all the PMs. They are all more than welcome to answering questions and concerns about everything. She sets up the lectures very well and they really help with completing assignments.",
                "I was only here to finish a distro, and I'm glad I was able to do that well thanks to lots of help. The TA, specifically Rafael and Peter were the best I've ever had.",
                "I had no prior programming experience before taking this course so I wasn't sure what to expect, but I do think I got a good handle on the basics.",
                "If you have previous programming experience, this class is a breeze. If not, there is a lot of TA peer tutor and office hours available and you can always get the help you need. Definitely recommend for everyone, you also get to make fun games for projects that you get to play!",
                "The modules/video lectures were very helpful and instructive for the assignments and general structure of the course. The assignments were difficult, but not overwhelming, especially since we have peer advisors and classmates to assist us. I think the team meetings could have been better, but the course allowed students to be flexible with their own schedule.",
                "Owsley is a great professor. The videos are easy to understand and she provides multiple examples. She and the TA's answer questions pretty quickly and point out the tiny things that mess up your code.",
                "Take this course with Sara! She is a great professor and the class is structured well. Try not to save the weekly homework assignments until the last minute.",
                "This was a really easy class. Anyone with any experience programming will get through no problem. As long as you read the homework assignment documents thoroughly and check for all cases in your code, its an easy A.",
                "Sara Sood is an AMAZING teacher. Even over Zoom, she sought to understand students, and gave us so many extensions. She made herself very available and made it known that she cared about our wellbeing. Even though this was such a big class, she made it feel very personable. In terms of the actual class, it was probably by far the easiest class I've taken at Northwestern. Just keep up with the exercises and mini quizzes and you'll do great! Go to peer mentor hours!!",
                "yes",
                "The TAs did an excellent job of explaining concepts during team meetings and the abundance of office hours helped a lot for the projects. I found the course material to be challenging with a lack of computer programming experience, but all the team meetings and office hours got me through it.",
                "Lots of help was available to students.",
                "As someone who has never taken a CS course in my life, I feel like this introductory course really helped to pique my interest in programming. Sood is probably one of the best professors I have ever had, and she was always so understanding and kind and laid back with assignments. I probably will be continuing with more CS courses in the future because I had such a good experience here. I also really loved the abundance of office hours and support outside of the classroom to help with the weekly assignments, which I thought were always fun and interesting to complete. Overall 10/10 would recommend.",
                "I learned so much through this course. Great use of flipped classroom. Very understanding and AWESOME PROFESSOR!! Great PM\u2013student group model for classes!",
                "Sara is greeeeatt. Take this with Sara.",
                "Sara is good. The class gave me some ideas about functional programming and imperative programming. I do feel we could cover more topics though.",
                "This course was honestly really nice. If you ever take this course, take it with Sara. She's extremely nice, lenient and a very great teacher. If you stay focused and attend class, this class is an easy A",
                "Sara is an incredible professor and she made difficult concepts a lot easier to understand. Some of the exercises were difficult but there are so many TA office hours that getting help was never an issue. Great class",
                "This course was not that fun to be honest. Racket is weird and did not stimulate my interest for comp sci. Sara is an absolutely amazing professor that is super chill. There are no exams, the quizzes are very easy, and she makes sure that we are not overloaded during midterms/finals. The assignments are pretty hard so you should make sure to have a friend that knows how to code well or hope that you have a good TA that helps out a lot (I know mine did!)",
                "This course is awesome. Before taking it, I thought it would be boring lectures, but this course utilized flipped learning which really allowed me to learn at my own pace.",
                "Taking this class online this quarter felt just as good as if it were in person. The use of asynchronous lecture and then working on homework during the allotted class time made it so that I never felt very overwhelmed with the class, nor did I need to spend a lot of time on it outside of class periods. Sara is also a very compassionate lecturer and that made the class and content very enjoyable.",
                "Most of the learning was done by watching videos and then we worked on our homeworks during class.",
                "I loved this class. The exercises were challenging but very fun and worth it. There is so much help available if stuck.",
                "This class is extremely helpful for even the most beginner programmers who have no experience. It has a low time commitment and will give you a good idea of if you are interested in coding in the future. Definitely take it with Sara, as her lecture videos and coding guidance was extremely helpful.",
                "Course was super fast, hard to keep up especially if you're not a CS major/lack general interest in CS. If you put in the time and effort and ask questions in breakout rooms and find a mentor that works for you, you will learn a lot and it will be enjoyable. Grading makes this class an doable A.",
                "The course did a great job introducing programming, but in a semi\u2013useless language.",
                "I loved that the teacher cared more about our learning than bogging us down with unnecessary work outside of class.",
                "I loved this class. If you are taking this class, take it with Professor Sara Owsley. Her explanations are very clear and she is willing to answer all kinds of questions. In the online format, the class is divided into small groups lead by a peer mentor, which helped me a lot to feel comfortable asking questions. If you watch the recording on time and go to class, you pretty much can finish everything during class time. Peer mentors also holds tons of office hours if you need to work on exercises outside class time.",
                "I really enjoyed this course as it helped me learn the concepts of code and was engaging because it's an image\u2013based language that allows you to see your code play out right in front of you.",
                "I liked this class a lot. I'll start with the only thing I dislike which is Racket. Racket is not the best language, in my opinion, but at least it was not too difficult to pick up. Now for the things I liked, professor Sood was great. The class's format was to watch short videos prior to class, and then, as crazy as it sounds, do the homework during class with your team. So for most homework assignments, the three class meetings a week are enough to finish them up and submit them. This was great because it meant this class barely took any work time outside of class, which is obviously great.",
                "The quizzes are well designed to test the key knowledge in the recorded videos. They do not try to trick you.",
                "I liked this course, and it wasn't that bad at all. If I didn't have prior experience, I would have had some trouble with the faster pace of the course, but it was right for my level of experience. The automated system, however, is a little annoying because it means that if there's a small error in your assignment, your grade could seriously pay for it. Just a heads up before taking this course.",
                "I appreciated the distribution of our grades and how she had quizzes, participation, and assignments, so there were a lot of things you could do to make sure you had a good grade in the class.",
                "I had never done coding before, but this class was fairly easy and I learned a lot. The short quizzes weren't hard, and the assignments were manageable. The TAs were great because I could ask them questions about the assignments during their office hours. It is really nice because there are no midterms, and there is no final.",
                "This course is well structured for the current situation; I learned a lot, but there wasn't really anything to be stressed about.",
                "This is a great intro to computer science. It's definitely not a one and done experience with comp sci because you learn Racket, as opposed to one of the more notable languages, but I think it's a great start to the sequence. I only needed this class for my major concentration but I am definitely hoping to take 150 soon. Not having assessments (tests/ quizzes) made this class that much better. I always did the reading and completed the assignments without stressing over a timed assessment and I learned a lot while doing it. The activities every week are an incredible practice run for the modules and I think the flipped classroom works amazing for coding. My weekly \"team meetings\" were so helpful and I loved my group and peer mentor.",
                "Sara is amazing at teaching and super nice!",
                "Sara is the absolute best and so helpful",
                "This class was, for me, the perfect blend of being stimulating and challenging while not being mind\u2013numbingly difficult. I found the assignments to be very fun, and it's satisfying to figure out what to do. I also loved the collaborative nature of the class, with teams meetings and being able to bounce your problems off of your classmates and TA. The programming language itself (Racket) is a little bit weird, but it's nothing too bad. If you have no programming experience at all, you will probably find it difficult to wrap your head around. But the resources in the class are good at helping you succeed.",
                "Chill class but I also learned a lot.",
                "Sara is a great professor and even in a class of 200 kids you can tell she cares about your success. Her lectures are very clear and easy to understand. The course itself is fairly easy, but the language it's taught in, Racket, is pretty awful. You will likely never use it again.",
                "So far, this is the best class I have taken at NU. Sara made sure to level the playing field regardless of your programming background. She is the epitome of a perfect teacher. Grading is fair and the exercises are challenging but very doable. Additionally, the support is unbelievable. Highly recommended.",
                "Knew nothing about how to code upon entering the course \u2013 this class really gave me a solid foundation and was super interesting/fun. Sara is the best!",
                "So far, this has been one of my favorite classes I've taken at Northwestern. I loved the structure of this class \u2013 Professor Sood makes sure to keep a weekly bulletin up that outlines exactly what is due for the week, which is great for keeping track of what you need to do. Each class session is just time to work on the assignments due that week, which is great for both people new to coding and those who have experience coding before. The lecture material isn't too difficult but you are still learning, and the support system of TAs was fantastic. Professor Sood was also super sympathetic to things like midterm season, where she gave us a break on assignments and various extensions. Seriously, take this class. It's amazing.",
                "I thought the professor explained concepts very well and made assignments manageable and fun.",
                "I loved this class, I went in knowing nothing about computer science (I am a bio major) and between office hours and the split classroom setup, I was able to understand the course. Sara was super understanding that we had other responsibilities which I really really appreciated. This class was awesome :)",
                "This course is really good! Sara and the peer mentors are really helpful.",
                "This course was super informative and not too time consuming. The asynchronous structure of the lectures allowed me to take my time understanding the material, and the quizzes weren't stressful at all. I like how the class allowed me to really choose how much time to invest, and how in depth I wanted to learn. I also found help very easily whenever I needed it, and Sara was always very understanding when I was confused providing lots of resources before assignments were due.",
                "I want to be taught and learn the material in an engaging matter, not just sit on a computer",
                "This is a great course. Sara is an awesome teacher. If you're new to CS this course will help you understand the very basics in a way that will be a huge strength going into other courses. Highly recommend for anyone that isn't a CS major but wants to learn how coding works. Not a hard course either.",
                "Overall useful course however not too challenging if you have prior coding experience.",
                "I had no CS experience before but I think this course is not as hard as I expected it would be. It can be time consuming but definitely worth it! Assignments were not unreasonably hard, and you can get good scores if you go to office hours or peer mentors for help.",
                "The course showed me a different approach to coding which can be built upon in later courses.",
                "Racket, the language used in the class, is questionable. However, I do understand the sentiment of trying to teach the concepts behind coding instead of specific languages themselves, which the use of racket tries to do. The structure of the course allows you to take the entire class on your own if you wanted to, which is nice. You don't even need to show up to class. Of course, if you needed help, it's definitely there. Specifically the Peer Mentors in this class are insanely helpful, so even if the professor's office hours aren't available you can still get help at basically any time.",
                "This class is amazing. I knew nothing about CS and took this class to learn about something that kind of scared me. Sara is incredibly helpful, and the flipped structure of the class (short async lecture videos, then doing the assignments in class in groups) was a great way to handle it. It starts out very simple but the learning curve isn't too steep and peer mentors and the professor do a lot to make it manageable.",
                "TAKE this class with Sara! She is wonderful and incredibly helpful. I've never taken a comp sci class and was pretty intimidated at the beginning of this course. They make it very accessible to beginners.",
                "Taught well",
                "Sara is the best! And Aura is the best TA \u2013\u2013 join her team. This class is definitely not beginner level but is manageable with the help of office hours. But, I think there should be more main discussion with Sara, rather than all of us going to teams.. would like to recap some of the videos (which are very long and definitely something that I always watched on 2x).",
                "Made a flipped classroom work without doubling the workload",
                "Take this course with Sara Sood!!! Must take for any STEM major, in my opinion.",
                "Take CS111 with Sara! Although Racket is kinda strange and different from Python, but the ways of thinking learned is quite useful for anyone interested in programming.",
                "This class will be easier for people that have experiences with programming.",
                "I enjoyed the video lectures at my own pace.",
                "the professor does a great job in explaining the logic behind the codes that we are constructing, and makes sure that we are able to use the logic in the racket language for future use in other more advanced programming languages.",
                "Sara is amazing. Every Northwestern student should take a class with her. I'm not a CS genius by any means and she and (most of) the TA's were so helpful and approachable when I didn't understand things.Workload included watching pre\u2013recorded lectures, daily (very easy 3\u2013question MC) lecture quizzes, and weekly assignments that could be kind of difficult, but the amount of peer mentor hours available meant it was super easy to get help. 15% of the grade was participation, which was literally just based on showing up to class and getting marked present. If class structure/grading stays the same, there's no reason not to get an A.",
                "This course was a really good foundational course and I think it will help me learn CS better in the future",
                "This course was relatively easy and very forgiving. However, I still learned a lot about the base techniques of computer science. Additionally, the remote and asynchronous options were incredibly nice.",
                "Not too challenging but very informative course that definitely covers the basics of computer science.",
                "Generally it is a great and well\u2013structured introductory course for computer science. It is not very difficult and covers topics that are important to  computer programming. Sara is a great professor. She is very nice and cares about the students.",
                "I really enjoyed this class and learning from Sara. I came in with some Python and Java knowledge, but racket is pretty different. Sara's lecture videos are really great; however, they can sometimes take a long time. The exercises can sometimes be tricky, but go to peer mentor office hours!",
                "This is a good class. For experienced programmers, you learn a few new things and can enjoy a good review and learning Racket. For people with no experience, I think it's a great introduction to basic programming concepts.",
                "The expectations of us in this class were very manageable. There were modules due three times a week that take about an hour, and exercises due once a week. It is important to keep up and not fall behind in the pre\u2013recorded lectures.",
                "Sara was awesome! Not having exams in a shortened quarter was a game\u2013changer and I feel like she really cares about how we do, not just in the course but with all of our studies. Racket is pretty useless but it will teach you how to program.",
                "I feel like it did a good job of its intention, being introducing students to programming, but in terms of cooperative/group work experiences, it lacked.",
                "Sarah was really the best professor. Not only was she incredibly knowledgable with class content, she was so understanding of personal conflicts and helping to adjust things if needed. The PM's were also very helpful.",
                "I liked being able to watch videos on my own time"
            ]
        },
        {
            "course_code": "COMP_SCI_111-0_1",
            "course_name": "Fund Comp Prog",
            "instructor": "Connor Bain",
            "year": "2021",
            "quarter": "Fall",
            "instr_rating": {
                "mean": "5.09",
                "count": "173"
            },
            "course_rating": {
                "mean": "4.49",
                "count": "294"
            },
            "comments": [
                "Overall the course is a good introduction to computer science and a requirement for a lot of majors within engineering.",
                "it taught me a lot",
                "The class does help you with basic features of programming, however, being entirely taught in racket there is no practical application of the things which I was taught.",
                "The glaring issue of this course is that it is in Racket. Racket is a terrible programming language. Maybe an argument could be made that it's good for an intro course, but as someone who's programmed a bit before, I just think Racket is an utterly abysmal language. Other than that, fun course.",
                "The pace of the course and the difficulty of the quizzes and exercises were very reasonable.",
                "This course is great! Professor Horswill is a great lecturer and I never felt burdened by the course at all. CS111 is a good class and I suggest you take it",
                "A good introduction to computer science, although the choice of Racket as an introductory language feels questionable.",
                "This was a pretty good intro course, and while Racket was an interesting language for an intro course it did do a good job of forcing a functional programming style. I wasn't a huge fan of the flipped lecture style since it just felt like lecture wasn't particularly useful at that point.",
                "It was pretty easy, but if I had to do it all over again, I'd make sure to not fall behind. The content was definitely not hard, and as somebody who has never coded before (basic R doesn't count), it wasn't too hard to catch up.",
                "It's an interesting structured CS class. I think Ian and Brian are trying their best to help everyone get most out of the class, but it's hard with a 400 ppl class.",
                "Its required for all students in the CS major/minor. As someone with coding experience, the course isn't too difficult but the language can be frustrating to deal with.",
                "Overall a pretty good course, but Racket is pretty annoying to deal with. If you have programming experience, it should be pretty alright for you. Ian is also a cool guy and stuff.",
                "Ian was a great professor. Very willing to answer questions.",
                "Ian goated",
                "Going to lectures was not really helpful. Watching lecture videos were more helpful.",
                "Everything about this course was great: the instruction, the assignments, and the final project. I really found the instruction to be incredibly insightful and effective from day one. The only thing that I was disappointed on was why there was a third cumulative quiz. I feel that the final project was sufficient enough as a testing of the students' cumulative knowledge of the course, and having a final (quiz) and a project due on the same week was overkill.",
                "Good course overall.",
                "Nice class. Ian is a nice.",
                "It stimulated my interest in CS and the class was not boring.",
                "Did not enjoy this course. I just don't see how Racket is useful. But it is a simple course that doesn't require much time and if you have to take it take it with Ian.",
                "Wish NU didn't use Racket as the intro course; it really sucks that we have to spend a whole quarter learning a language that isn't used. While the course is well\u2013structured and well taught, it was also frustrating that we had to watch lectures before class because they take a long time. Not a fan of flipped classroom when class time wasn't used to do the exercises.",
                "CS 111 is a good class that serves as a very appropriate intro to computer science. The class is run in a flipped classroom environment, where students are expected to have watched lecture decks at home before our in\u2013person lectures. What ended up happening is we would just go over very similar lecture decks in class, which made the at\u2013home lectures seem redundant. The class is definitely not too challenging but is interesting enough to keep beginning and experienced programmers engaged. Ian and Connor are engaging and understanding professors who are willing to answer any questions that come up.",
                "At first, I loved this class and I was extremely excited about it, but then I did not enjoy it as much. The lectures were boring, confusing, and the tests were not easy. Even though the tests were not long, for me the format and what was expected on the tests were confusing and challenging. I know most students loved this class, but sadly that was not the case for me.",
                "It was my first language and Ian did a solid job at teaching it for beginners but I didn't love the structure of the course. The troupe activities didn't work at all and I didn't like having to watch the lectures beforehand.",
                "You will teach yourself everything. Literally everything. Going to class is pretty useless. You have to each yourself everything.",
                "Initially, I was very confused because I couldn't find a tangible connection between what I knew and what was been discussed in lecture. It turns out that those were the fundamental ideas of programming that I had never learned in any of the programming courses that I had taken before, so these were important elements of coding that I had never learned while learning other languages.",
                "It wasn\u2019t a good reaction, there was a lot of frustration because we were using a programming language that had no real world use",
                "I thought Ian was a fantastic instructor, but found it hard to engage with the course due to its content and structure. The course is taught in Racket, a language which largely fails to be applicable outside of this class, and the course itself covers extremely introductory material while providing no opportunity for students with prior programming experience to test out of it. I also was not a fan of the \"flipped classroom\" structure: we were asked to watch lecture videos prior to class, then do exercises and discuss in class, but in a 400\u2013person lecture, this proves difficult, and the lectures were more\u2013so a repetition of the videos we were assigned to watch for homework. Though I loved Ian's instruction, I felt as though the class was overall redundant, inapplicable, and overly rudimentary.",
                "Great class to take with Ian, he is an excellent teacher.",
                "course uses racket as a way to \"level the playing field\" but after about week 2 the gap between the experienced and the new is basically back to where it was. the course teaches a lot of basic programming concepts in a way that would sound unnecessarily complicated for those who already know it and somewhat obscure for those who don't. coding examples in lectures help a lot, as well as tutorials. interacting with classmates via discord was also a cool new experience.tests are fairly straightforward, homework programs are a bit tricky at times \u2013 especially as it gets to recursion. ian's cats are cool.there are a lot of people taking this class. a lot. means you can find help in a lot of placesoh, and final project groups are very important if you don't want to have your life turn for the worse as you are preparing for a paper and three finals.",
                "They tried doing a flipped classroom where students were meant to watch the lectures beforehand and class time would be devoted to group work and micro\u2013quizzes. However, as the quarter went on the structure basically unflipped, and the class became more traditional. Other than that weird thing, pretty good course.",
                "Having the flipped classroom lecture style was definitely new and required some time to get used to. I liked the idea but if the professor was going to go over the same slides in the lecture again, it felt a bit redundant.",
                "I like the class a lot, but I am a little frustrated with the choice of language. Racket makes sense from a teaching perspective, but I don't really see the practical uses of it in any industry anywhere.",
                "Very good course, not a huge fan of the game\u2013style assignments at the end (I don't think they taught CS as well as assignments would've), but still very good course with very good quality instruction.",
                "This course was very chill. It was a flipped classroom style class where the lectures reviewed what was went over in the videos as well as having some practice with your troupes. Ian does a really good job explaining concepts and at answering questions.",
                "If you have any interest in CS past an intro level course, you will have to take this class. With that being said, it was a relatively interesting class, but the lectures felt unnecessary as they were repetitive of the content that was discussed in online video lectures. Assignments and quizzes are not too hard and the final project seems easy enough.",
                "Ian is a fantastic professor and I felt that the flipped classroom environment really reinforced learning as a whole. We could learn the whole lecture through videos, but Ian would also cover the main points of the lecture in class which helped understand concepts.",
                "Great examples",
                "I honestly think the Racket language is not conducive to learning how to program. I already have a lot of coding experience from my previous school since I\u2019m a transfer student, but if I didn\u2019t, then I think this class might have discouraged me from continuing with CS. Racket is not really useful or related to any of the other languages I\u2019ve learned in any meaningful way. That being said, this class wasn\u2019t super difficult, just not engaging or interesting. Also, I found that I didn\u2019t gain much from the in person lectures because of the flipped classroom structure. I think the professor meant well when he used this structure, but it creates more work and it\u2019s not super realistic for college students who have a lot of priorities to balance at once.",
                "Ian Horswill is a wonderful human being who makes the course easy for a reason. There is no pressure in that course and that made learning racket bearable.",
                "I enjoyed most of the homework programs.",
                "This course provided a good foundation to continue learning computer science by explaining more general concepts.",
                "I liked the individual and cooperative aspects of the course! All the office hours and tutorials were very helpful. I also enjoyed how Professor Ian didn't want to give us stress and provided extensions for each exercise.",
                "If you have taken a Computer programming class before, especially AP Computer Science, this class will be easy. Racket is a little confusing at first but not intimidating once you get used to it. Lectures are flipped, i.e. prerecorded on canvas. Weekly assignments were reasonable. Lots of office hours available every day including weekends, TAs are very helpful.",
                "The exercises, excluding the first couple, were pretty hard for me. I struggled a lot during the first month of classes trying to complete them, barely understanding what was going on. It wasn't until I went to office hours that I started to really learn the material. Even if you have done CS before, please listen to me: don't be afraid to ask for help, and go to office hours. It will save you so much time. The exams were pretty straight forward and the instructors were always nice. I wasn't a huge fan of the Tutorials themselves (my TA was super nice though). Overall, I thought the human experience in class was great.",
                "I feel like this course would be great for beginners, however as someone who experienced programming before this course, the course came off as redundant. Also was not a fan of the reverse classroom format",
                "Racket is a stupid language, but this class is important",
                "I really liked the structure of this class. I liked the video lectures because you go back and rewatch something if you needed it. I think there was sufficient practice with Racket.",
                "Racket is a horrible language to start learning computer science with.",
                "I had basically no programming experience and this class was pretty challenging for me, although  not un\u2013doable. The quizzes were difficult and the exercises took a long time.  (I recommend going to office hours and finding a good TA if you have issues or need problems with exercises!) Luckily, the grading wasn't too hard/harsh (we have a final project and participation grades that help out) and Ian does genuinely care about his students.",
                "This course is definitely not cake. You will spend hours every week coding the exercises. Definitely, an easy A if you do all of the exercises though. Shouldn't be too difficult for someone without a coding background either.",
                "Ian is a god!!",
                "Having minimal coding experience, this class really wasn't too difficult at all. I thought that Ian's recorded lectures could drag on at times, but throw that baby in 2x speed and you're good to go. Sometimes the class lectures were a bit redundant, but the troupe activities were very helpful in letting us fully understand the application of certain concepts. The assignments could be frustrating at times, but they weren't too bad. You can definitely pass the quizzes with minimal studying, and the final project is actually quite fun. I recommend you find 3 nice and hardworking people to be in a troupe with, and this class will be way more enjoyable.",
                "d",
                "This course was challenging for me because I've never coded before this class. Although I struggled a little bit throughout the quarter, I still managed to learn new things.",
                "The course was great \u2013 not as stressful as other courses for McCormick freshman, and also fruitful in the sense that you can learn programming fundamentals. The language used in the course was pretty frustrating at times if you've programmed in the past, but overall the course was beneficial.",
                "It was really challenging for me.",
                "This is a good course that introduces important CS concepts. It is well taught and not too difficult.",
                "I think this is a pretty decent intro course! It uses Racket, which isn't the most helpful language ever, but I do feel like I learned a lot of good principles and skills. The final project and exercises were not too hard (and if you get stuck, there's a lot of office hours) and the midterms and final were very fair if you do the practice tests. I liked Ian a lot, even though I barely paid attention in class. I did not like that class and the prerecorded lectures were nearly identical, as class often felt like a waste of time.",
                "Racket was annoying at first but I got used to it after a bit, coding wise it wasn't too difficult, manageable work load and Ian is awesome!",
                "Ian is legendary! If you take CS 111, you better take it with him. The class is very much taught in a flipped classroom model. MAKE USE of your PM during tutorial \u2013 they can help you get started on the homework if you're struggling. Recursion was hard to understand at first, but the the lecture decks and tutorials were extremely helpful. Pick a good troupe! You'll have to create a final project with them and work together in class to understand new concepts.",
                "This was a great class and a lot of fun. Definitely not a weed\u2013out course, as most people get A's.",
                "Good class! Ian is a nice guy.",
                "As a novice programmer, I found this course to be a great introduction to the basics of coding. While Racket may not be the best language according to experienced programmers, I had no issues understanding the flow of the language. This course also sparked my curiosity in comp sci in general and will lead me to take more cs classes later:)",
                "Not a fan of the flipped classrooms. Ended up not watching any of the recorded lectures since Ian goes over the content in class anyways. Quizzes were relatively easy, provided you studied with the associated practice quiz. Ian and TAs were helpful, and there is a dedicated Discord server for the class.",
                "I personally think Northwestern should scrap the course. I don't understand why racket is used as an introduction to programming, when it holds very little in common with other more commonly used languages such as Java, C, and C++. I also didn't appreciate that we had to watch pre\u2013recorded lectures before going to class, which doubles the lecture time for that class. In that case, they should have made the class count for more credit hours because that is essentially what is happening. The professor is extremely knowledgeable, but I think the class itself is the problem.",
                "It formalized code and taught the basics thoroughly to serve as a foundation. It was helpful even as someone who already coded by giving a stable foundation to build more complex coding onto of.",
                "Pretty good intro course, the exercises don't take long to do. Exams are kind of tricky because it's different than what you do in class",
                "I liked this course even though it was a little tedious to learn the racket language I think it helped me as a programmer overall.",
                "The way that professor Horswill presents the topics in the lectures is easy to follow and understandable. As long as you have a decent logical understanding of things, the class should be relatively easy. Going to office hours helps a lot if you are stuck with your code. One thing that I don't recommend is copying code from your friends because the homeworks really help you understand the material presented in class.",
                "You have to learn racket, which is kind of a terrible language, but Ian is really good at explaining topics and takes the extra mile to make sure everyone understands.",
                "Course was very good. If you just take a little time to understand, the midterms are pretty easy and homework is very doable.",
                "The course was slow at first but then was interesting and challenging towards the middle of the quarter.",
                "I really enjoyed the course and developed an interest in CS in general. I was not a big fan of the Racket coding language but it was not a huge issue.",
                "Racket is just so unnecessary and it's very annoying that this is the intro course for majors/minors. I know the point is that it's supposed to put everyone on equal footing, but that will never really be the case, if you have prior coding experience it will still help. Also, the kids who took AP CS in high school will still be able to skip CS 150 etc so it doesn't really do much. Sort of felt like a waste of time ? Although I did somewhat enjoy it. Exercises and tutorials were good. Lecture felt unnecessary because it is the same as what we watch for homework. I really liked Ian though, he made lectures as entertaining as they could be. Sort of wish the tests were longer...I felt like my grade was ruined if I missed one question. Easy to do well on all the other grades though.",
                "It's an introductory course, but it's still a very fun course.The \"tutorials\" have an \"Advanced\" section with more challenging activities for people who may be more experienced in programming.The flipped style allows for activities in class, which is a good way to practice what you have learned.",
                "Horswill is a really good professor and he made CS 111 an enjoyable class. I liked how you could get a 48\u2013hour extension on any homework assignment just by filling out your name and id on a form.",
                "Ian is a cool dude, but Racket sucks. I imagine it would be a lot more challenging to someone brand new to programming and the core concepts (recursion, object oriented programming, etc). The tests were more difficult than expected. All of the TA's I worked with were really nice. Make sure you read the homework carefully.",
                "Racket is really nice for learning recursion and absolutely painful for everything else. As it is an intro course, I thought it moved slowly and I found it hard to engage with the lectures. Ian is amazing, though!",
                "easy with cs experience",
                "I believe that this class was a fairly good beginning class for CS. There are lecture videos you have to watch before every class which I wish we didn't have to do because the content is typically covered in class anyway, but the coursework is fairly reasonable and you only have one homework assignment a week which is fine. Ian is really passionate about his job and tries his best to engage the class when he can.",
                "Good intro course, not a lot of work outside the class. Ian is a great teacher and cares a lot about their students",
                "This class is definitely an introductory class. If you have never coded before you will definitely have to work a whole lot harder than if you have coded before. The assignments were lengthy but you have a whole week to do them. The quizzes were somewhat difficult but not impossible. The full lecture class makes it somewhat hard to learn in class but watch the lectures before class then you will be able to follow.",
                "The class did a good job covering important programming concepts",
                "This class is pretty easy, especially if you've taken AP Computer Science. It uses the Racket language, which can be frustrating at times, especially if you have prior programming experience, so going in with no experience at all may even be better. Ian is very nice and very enthusiastic about what he teaches, which is nice. This class is in no way meant to be a weed out class (which the professor directly stated multiple times throughout the quarter) but is just meant to provide an introduction to programming, with a focus on functional programming.",
                "Professor Ian is a great instructor and the concepts he taught are very clear.",
                "This class is very chill. Very easy to fall asleep in, but even then you can still keep up. It gets a bit harder in the middle/end but nothing you can't manage",
                "The class is graded pretty fairly however it is full of a lot of experienced coders which made the average on the exams really high. This was difficult as someone who wasn't experienced with coding at all which is why I don't think I did that well.",
                "As an intro course, this course has a lot of resources to make failing as hard as possible. If you put in the work and look in the right places it\u2019s very easily A\u2013able. Recorded lectures, uploaded lecture slides, practice quizzes with explanations, tutorials with TAs, and a Discord server for further questions all help. It may get hard and abstract but if you use the resources you\u2019ll catch up quick. This class describes itself as a \u201cflipped classroom\u201d but Ian is a fantastic, enthusiastic professor who still thoroughly goes through the material in class. The class includes some groupwork including the final project but still provides avenue for solo work. Overall the course covers a lot of bases and gets you to think like a programmer, and I had fun doing it.",
                "Very interesting class. I never have programmed before it and still, despite many students taking the class took AP CS, I managed to perform extremely well and learned a lot.It's a BIG class. However, there are several OH available that are extremely useful.",
                "The overall class was pretty easy and going to office hours was super helpful if you got stuck on an assignment. If you are trying to learn a more useful language and just want the one class to do that, I wouldn\u2019t recommend taking this course unless you are a CS Major.",
                "It was a good course but be prepared to spend a lot of time working on your own to get a good grade",
                "It was structured very well. Class assignments were interesting and fun and always got me to think. The advanced tutorial was also enjoyable\u2013 though I did not absorb the material on creating a compiler as well as I would've liked, the peer mentor system was awesome, and I really liked my PM. Quizzes were easy and free of stress; LOVED the final project. A really enjoyable course.",
                "pretty simple course, just make sure to watch the lecture decks",
                "This class is so good. You can learn a lot and those practices are so helpful. If you want to see if cs is your thing, take this class.",
                "A good intro to CS class. Racket as a language is annoying, but helps to level the playing field, and always fun to try out new languages. Prof. Ian is really nice and answers any questions you may have, even with a class of 450. The structure of this course involved pre\u2013recorded lectures and discussion of the content during lecture time, but I found class fairly redundant as it was just a summary of the recorded lecture if you had watched it. The workload was very light, and grading/quizzes are pretty easy. I really enjoyed the tutorial part of the class, and I think it's quite interesting if you choose to be in the Advanced sections.",
                "Because we stopped having in\u2013class microquizzes halfway through the quarter and because Ian posts lecture recordings and slides before class, class attendance wasn't essential. Chill class especially if you have prior programming experience.",
                "This course is very basic and although I can see why they make you take it, but it is easy.",
                "The exams are not hard if you do the exercises and attend the mandatory tutorials.",
                "The basics of computer programming within Racket was a great way to start my introduction to computer science. The gradual build of skills and knowledge was a great way to structure the class.",
                "The course was interesting in learning about a new language and familiar aspects of programming with different execution, but was affected by the fact that I'm likely never using it again. Racket is a different language, and can be used to make really cool things as seen with the tutorials and programs we have, but knowing its obscurity in industry, I can't help but feel underwhelmed.",
                "It was a pretty good introductory course but the way the quizzes are structured and graded really sucked because of how one small mistake can make you lose a lot of points. I would rather have more questions to answer and be punished less grade\u2013wise if I mess one up.",
                "I thought the class was run well and Ian was a great professor.",
                "Used the racket programming language throughout the class, which might not be everyone's preference. Not very challenging.",
                "Racket is a really annoying language to both use and learn, I don't buy the whole functional vs imperative programming idea as justification for using it. There are plenty of better and more useful languages that can teach the same things as Racket. Other than that, the course wasn't that hard but it just seemed like a waste to make us watch lectures before class and then go over that exact material in the lectures.",
                "Unnecessary amount of work. Too much busy work. Lectures went over the same thing in the videos.",
                "The lectures are created to be watched outside of class, and it gets really easy to just stop watching them and get behind. The content isn't very difficult, but the class itself isn't very engaging and Racket is an annoying language to deal with.",
                "This is a good intro computer science course for anyone who wants to learn a bit of programming, though I would recommend CS 110 instead, since I had never heard of Racket (the language we use in this class) before, whereas with 110, Python is a very well\u2013known language. The course is flipped classroom, so there are daily lecture videos on Panopto, and then Ian basically goes over the same slides during class. There are some micro quizzes during class, but they stopped around halfway through the quarter. The assignments are very manageable, and the quizzes aren't bad if you've gone through the lecture slides. The final project is actually pretty fun. Overall, a good course, and it's honestly an easy A if you put in the work.",
                "I enjoyed Professor Horswill's in\u2013person lectures and thought they were pretty insightful, and the homework was always shorter but still great at reinforcing my familiarity with the content",
                "This class was very good for review as well as for people without programming experience, It was not a major time commitment, but was still able to be extremely informative.",
                "The class was interesting. Ian was really helpful and enthusiastic every time he taught class. The homework exercises were challenging at times, but working with a group is helpful.",
                "CS 111 was definitely a great starting point for me\u2013 someone who has never coded before and with no prior CS experience. Professor Horswill was an excellent instructor and was always happy to answer questions. The homework exercises were straightforward and manageable; if you need help, there are plenty of resources available, so don't be afraid to ask for help. Overall this was a great intro class and most definetely spiked my interest in Comp Sci.",
                "Don't take this class unless you need it for a major/ minor etc. This class is lowkey a lot of work and lowkey very difficult. There are quizzes, a final exam, AND a final project. If you do take this class make sure you have a passion for coding/ have friends in the class to work with.",
                "I had never coded before this class and now I have a great understanding of the world of CS. For homework GO TO OFFICE HOURS, the TA's are the best and will explain anything you are unsure of. Ian is a great professor but I feel like the lectures were tough to stay engaged.",
                "For someone who had no prior programming knowledge before, the learning curve was very steep at the beginning but with time, I started getting the concepts and it became a lot easier. Ian takes time to make sure everyone understands which is reassuring. Go for office hours if you get stuck.",
                "I felt like the material wasn't bad at all, but do expect to spend a couple hours on each assignments and carve out room in your schedule for office hours. Peer mentors are super helpful, so be sure to consult them if you need any help! Be wary of the pacing\u2013\u2013 it's easy to fall behind especially since the beginning is so slow paced. The flipped classroom model works to increase understanding, but I feel like in class lectures don't really add anything to my understanding, besides the troop activities.",
                "Good course",
                "I enjoyed the reverse structure that allowed me to learn on my own and ask questions that pertained to my immediate and personal struggles within the class. I thought this class functioned really well in the aspect of gaining help when you struggled.",
                "This was a fun entry level computer science course.",
                "This class is manageable. I really like the tutorial sessions because they help you learn about the topics that will show up on the homework. This class also used a flipped classroom model, but since we ended up reviewing the lectures in class anyway, it kinda defeated the purpose. I would have rather spend time doing small coding exercises in class based on the lecture materials. But this class probably has the most robust support network out of any class I have taken in McCormick. There are office hours scheduled for every day of the week, the TAs are really knowledgeable, and the assignments come with a pdf file that explains the homework really well. I liked the style of the midterms and file because they emphasized troubleshooting and recognizing the types of different objects rather than the return value of an expression. I also appreciated that the test were weighed less than the assignments. The final project was also very fun and manageable.",
                "This course teaches you Racket, which is essentially a useless language. It is super inconvenient and I would not recommend this class as an introductory course to coding for beginners. However, once you get the hang of it, it\u2019s pretty easy to use, but still very tedious and has no similarities to other languages. Prior to taking the class, I had experience coding and still struggled but it\u2019s manageable.",
                "Big class, terrible programming language, and a cat\u2013loving instructor.",
                "CS 111 is a relatively straight forward course for those with past CS experience. The biggest challenge is getting used to the unorthodox language (Racket) and learning to write code in it.",
                "If you understand recursion and object\u2013oriented programming, this class is a joke. Did not watch lectures or go to class half of the time. Did not get a single test question wrong the entire quarter. The advanced tutorials are nice as I did some interesting programming in those. For people with no programming experience, I can see how this could be difficult and take some time. For people who have a lot of experience, it is a joke. Great to take on top of 3 other hard classes or even as a 5th class.",
                "If you are taking this because you are a transfer and need it for later course requisites, prepare for a very easy time. This is a very simple intro CS course if you've studied the material. Racket can be frustrating though, so heads up.",
                "As someone who has taken APCS before, this course started out fairly easy and got complicated (but manageable). The grading is not at all lenient. If you make a really really minor mistake, you could get a 0% and you can't really argue for a better grade. This has never happened in my other classes. Overall, I would still say the course is designed fairly well, and there is a big support system (the peer mentors) that you could utilize as long as you are on top of things and not cramming last minute.",
                "I wouldn't say the class is a great first introduction to computer science, but it taught recursion well at least. Racket kind of sucks as a language. It's super syntax heavy and hard to read. But since most of the people who took this class had some prior experience in coding, I guess it was an alright second step. I can see why it's used as a teaching language.",
                "The course isn't so hard as long as you do your work to understand the concepts.",
                "Good course and good instruction, but a weird way to introduce many people to programming.",
                "This is a required course for CS majors so if you're reading this you may have to take it regardless. I personally didn't enjoy this course all that much. I thought the lectures weren't all that useful really. It's weird though because I felt that this is the only course I've taken where I've felt I strongly understood the material and could breeze through homework and yet the tests didn't reflect what I considered to be a solid understanding (maybe because they were pencil and paper). It wasn't the worst thing ever but definitely a bit frustrating at times.",
                "Racket is basically a useless language and honestly I felt like it hurt me to have previous experience with coding. The concepts that you learn, though, are quite useful and important fundamentals in computer science. I just wish the language was better chosen.",
                "Class was not difficult but often boring. Weekly homework did not take too long to complete and the quizzes were not too hard.",
                "This course wasn't too bad in my opinion. I even found it fun at some points, as it was satisfying finally figuring out the logic for a problem. But, the concepts were definitely difficult to understand at certain times and the course went pretty fast near the end of it.",
                "If you have a lot of CS experience, this class is mostly review. DrRacket is annoying but I got used to it pretty fast.",
                "I was completely new to programming. It's a little more challenging than one would expect for a beginner, don't fall behind on the lectures and the exercises. Racket isn't really useful to other languages so it doesn't really make sense why we have to take this course.",
                "This is a great class, especially with Ian. He is engaging and makes class fun. He also does a good job of making the class enjoyable for everyone, regardless of previous experience. If you have prior experience, the class is not challenging, but it's still a fun class.",
                "First off, Racket is the language used, which is different from the Java/C/Python that are typically used in introductory CS classes at other school. Many are not a fan of it. HOWEVER, Professor Horswill does a great job explaining CS concepts that carry over to other languages. As someone who came in with no coding experience, I found the weekly assignments to be kind of frustrating, but after utilizing classmates' help, the Discord server (Horswill and the TAs are there to answer questions even late into the night), and in\u2013person office hours, I was able to make it through this class. In addition, being new to coding initially worried me, but Professor Horswill emphasizes frequently during his lectures that he understands that not everyone has taken \"AP CS\" and allievates the stress that way. The exams are also quite easy as long as you do the practice and review the lectures. Overall, with the exception of Racket being the coding language of instruction, I have no concerns about CS 111.",
                "Unless you are a CS major/minor and need to take this course, would not recommend this class as one for people to see if they're interested in CS or learn some useful CS skills.",
                "It was nice to refresh on the basics of computer programming, and I think it will help me take harder computer science courses throughout my time at Northwestern.",
                "Racket as a language is a very unconventional one, but prof. Horswill is great and it is certainly a class worth taking if you are interested in going into Computer Science.",
                "I was worried about lack of access to TAs and resources in such a large class but there was ample support from the PMs for when I was confused.",
                "If you have no experience with programming, I would definitely recommend CS110 instead of this course, but this class is very helpful and interesting for people with a little experience. Racket can be a little confusing and unwieldy, but generally this class is incredibly important and useful, and Ian is a great professor.",
                "Not a fan of the flipped classroom. Racket was confusing.",
                "It wasn't too bad. Just go to class, do the assignments, and definitely go to office hours. I'm not a big programmer so it was hard getting acclimated to the whole computer science thing. Once you get it though, it becomes much easier.",
                "Good intro to CS even if you haven't taken a CS class before",
                "The course was not very entertaining, but seems to be a great course if you are interested in learning CS. If you are taking it as a major requirement, it is not very challenging/fun.",
                "This course was solid. Not too difficult or time consuming.",
                "This course was brutal. The in person lectures were exactly like the lectures he posted online. When someone asked a question in class, Ian would never repeat the question which was very frustrating",
                "I did not find this class to be too difficult. Midterms and the final is only worth 13% of your grade so it was a pretty low stress class. It was a good intro class to take and introduced students to basic computer science concepts.",
                "It gets more complicated as it goes on. Just watch the pre\u2013lecture vids and go to office hours if there's something you don't understand. You should be good, if you did APCS then you're chilling.",
                "The teaching and the general coding concepts were super cool and useful, but the exercises were too easy and the language taught in the course could be confusing for beginners.",
                "The course focuses on functional programming in the early stages of this class, and covers imperative and object oriented programming later on. Its primary programming language is Racket. The language was a new experience, and I found it interesting to have to problem solve using what was essentially one function call with more function calls as its inputs, so on and so forth.The class is quite chill, with the professor directly stating that the class was designed so that everybody could get an A. There is no class curve, but the materials and assessments are more than doable even without it. There's a discord server with TAs, the professor, and fellow students there to answer questions which adds to the friendly nature of this course.",
                "This course isn't bad at all. If you have already taken AP CS then it will be a good, but fairly boring refresher. If you haven't taken any CS before, it is a good introduction to CS overall. You'll be using Racket to program and everyone will hate on it.",
                "Very doable, working through programming Racket step\u2013by\u2013step and very reasonable quizzes and assignments. Overall well set\u2013up class.",
                "This class is pretty easy if you coded before at all. The lecture videos are good to watch but I always sped them up and didn't take notes. Never really needed notes for anything and the assignments weren't that bad just try to start them before your tutorial so you can ask questions.",
                "Pretty useless course tbh. Can\u2019t really think of something I learned other than racket syntax which I\u2019ll never use again.",
                "I think this course starts out pretty easy and gets harder at recursion (which is for midterm 2). I think general tips for studying would be to look over any notes from the lectures, do the extra practice problems, and definitely the practice quiz as that is the exact format of the real quiz.",
                "Very good. Intellectually stimulating but not too hard. Assignments can be tough, but there are many office hours you can go to to get help. Tests are very fair for a class that is mainly programming\u2013based. The class is flipped classroom, which means you watch lectures before coming to class. I think it helps immensely because it helps you learn the material in your own time. There are some other programming\u2013based classes that would heavily benefit from this model of learning.",
                "This class is super interesting and cool. However, it is kind of difficult to really learn anything during the class meetings. I definitely learned the majority of the information by watching the assigned panopto videos before class.",
                "ok",
                "This was a good introduction course that allows people with different programming experiences to be challenged in different ways. The tutorials were helpful and stressful at the same time. The tutorial built on what we were learning in class but in different ways that were not as obvious at first.",
                "good introductory computer science course. not too hard even if you're brand new, just make sure you go to class",
                "Racket programming",
                "I'M NEW TO CS SO I WON'T LIE I STRUGGLED A BIT. BUT THE TEACHER IS SO LENIENT AND THERE ARE ALWAYS PEOPLE WILLING TO HELP. THE EXAMS ARE FAIRLY EASY AND THE TEACHER PROVIDES A LOT OF MATERIAL TO HELP YOU LEARN FROM.",
                "It's really easy to fall behind in this course and slack off until the quizzes or until an assignment is due. Putting things off made me fall behind in the class and then made it difficult to understand in\u2013class lectures. I would not say this class is an easy A and Racket is definitely very different from other languages. Overall, if I had dedicated more time to the class I think I would have learned a lot and it would've felt easier overall.",
                "I had never really programmed before this class, and I feel as though I walked away with the ability to successfully complete programs in racket. Many people say they dislike Racket, but I actually think it was a great language to use. I found the learning curve to the language to be rather low, and I found the language to actually be quite cool. I really liked the troupe exercises and the format of the class. Not too difficult, but definitely stimulates interest in the topic.",
                "Tough class",
                "Ian is a cool person, and teaches well. However, I am not a big fan of the flipped classroom format. Time off class has to be taken to watch pre recorded lectures but the same material is covered in the in person lecture, making the flipped classroom redundant.",
                "The way you are taught to reason about code and a chance to understand the importance of what you learn made me enjoy the class so much.",
                "This course was a great intro to computer science and has left me with a good understanding of how to conceptualize different approaches to an assignment. Learning Racket really isn't that bad and I honestly enjoyed it. Its not that much work and if you need help on anything, theres tons of office hours",
                "If you are just looking to take some CS classes, this might not be the one. Grading is fair but quizzes/assignments can get tricky at times, but what you learn is very siloed into what would only be most practical if you're pursuing CS. Feel like 110 would be the better option since it teaches Python",
                "Taking this class is like taking $5000 and setting it on fire, but it takes 10 weeks.",
                "This course definitely seemed like a good introductory course to programming and it didn't waste too much time on having to teach the syntax of the programming language. The instructor was very responsive to students and made class enjoyable. However, the concepts taught in the class were for the most part things you would have learned if you had experience with programming courses in the past.",
                "If you took AP CS, this is a fun class that's only a little challenging. By far it was my favorite class of the quarter. Many people don't like the programming language that this class used but I think it was only the experienced programmers that complained about it. Overall, take this class for a good introduction to coding!.",
                "Ian is incredible in his own way, and the course is pretty laid back but does a decent job of enforcing the intended concepts. However, it is too slow for most of the people taking it, resulting in it being kind of a blowoff class. Racket is extremely annoying, but the class is still a good introduction to the world of computer science.",
                "CS 111 is really a fun class taught by a professor who is really eager for his students to do well and succeed. He is super passionate in the material he teaches, and the inclusion of his cats in his recorded lectures makes that class even better. I will note that there are moments where you really are intellectually challenged but after that small bump the class goes pretty smooth. You just have to stay organized and you will do well, the structure of the class is very simple, you have a hw program to do each week (it isn\u2019t as bad it sounds), a group final project at the end, and 3 quizzes (which is basically your two midterms  and final).",
                "This course was pretty easy. Sometimes things got really confusing. The tutorials helped me learn the most because that was when I could really practice coding using the principles that I learned in class. It was also a little annoying that the style of this class was a flipped classroom. But overall, the class was pretty chill and taught me a lot. Also the TAs, PMs (peer mentors), and Professors are all really chill and understanding so you could almost always get extensions on HW assignments which was nice.",
                "This course felt reasonable. I think the TAs are pretty helpful when you get stuck, and if you just pay attention it's not that difficult.",
                "The biggest downfall of this class was the fact that we had to use Racket. Prof. Horswill is a good lecturer, and he's very engaging, I just feel like the course content was restricted by using Racket. This course was also taught as a \"flipped classroom\" where we watched recorded lectures on our own. This wasn't my favorite because all we did in class was review the lecture we watched at home. Overall the class is very doable. Midterms are really hard to study for and we're only given one practice quiz for each. Assignments are pretty quick and you have ample time to complete them.",
                "This class was pretty easy. Coming out of AP CS, adjusting to Racket (the language we used) was a little bit difficult. Racket is kind of useless and, as far as I'm concerned, is not used for much in the professional world. I only watched the lecture videos and did the assignments and did well in the class. Does not require much time, but you do need to do the little that is asked of you in order to succeed. Professor Horswill is amazing. Super nice person, very fair and genuinely wants to see his students succeed. I would recommend this class. However, if you have never coded before, you will struggle more than the AP CS people. If you are new to coding take 110 before 111.",
                "This course was pretty interesting and I enjoyed it. The workload was very manageable and the live lectures are pretty much just reviews of the taped lectures that we are supposed to watch. I found the content interesting and a good foundation for CS.",
                "I've never coded before so this course was very difficult for me. I only took it because there was nothing else open and I had a really late registration time. I thought I might be interested in compsci, but I had no way to tell. Racket is supposedly a confusing language but I have no comparison. The class is split between compsci majors who need 111 for the requirement (bc they need to learn racket) and then others who don't know what they're doing and it's really hard to keep up/grasp concepts. Ian teaches the class reverse lecture and there's no point in going to class you won't be able to pay attention (his long, flowing hair is distracting). I don't think this is a good intro class to coding, but at least I don't hate compsci yet it's just ridiculously hard to jump into a class with a bunch of experienced coders that ace the \"quizzes.\" Ian's a chill dude watch for his cats. Take 110 first if you don't have experience.",
                "Ian is a great professor. He's super understanding and really wants his students to do well. Sometimes the pre lectures are kinda annoying but generally class is helpful. office hours tho are where its at if you have questions ever and they're provided all the time. Racket's a super annoying language but you generally learn the basics and Ian's a great prof to have if you have to code with racket.",
                "Ian is a great professor! I found he explains the base concepts really well, and between his cats frequent appearance in his recorded lecture, and his random comments during the class itself I was always entertained which made the whole experience more enjoyable. The group set up for the class worked pretty well, and having a good group makes the final project that much better (you design a text\u2013based adventure game). If you are someone who doesn't have a lot of coding experience getting used to Racket in the beginning may be difficult but there are so many office hours for this class to go to for help. Altogether a really great class, and good starting course for the CS major.",
                "As someone who came into this class with minimal programming experience, I found that this truly is a wonderful class designed to be accessible to people who have little more than the desire and motivation to learn about programming and computer science. Ian posts the recorded lectures prior to lecture, and it is expected that you watch and understand them prior to coming to class. I believe that this flipped classroom setting is ideal for offering the best understanding of the course material. Also, during lecture, Ian is very open to answering questions, and gives phenomenal answers. The TA guided tutorial sessions are a great opportunity to get a baseline understanding of what you'll need to know to complete the weekly exercises. Because the exercises can be somewhat challenging, the tutorials are a resource that one should certainly make the most of. Ian's grading policies are incredibly fair, and you are offered a very fair amount of time to complete all exercises and assignments as well. All of the teaching staff members are incredibly kind, down to earth, and knowledgable. They certainly made this class as great as it was, and have fostered a great interest in computer science for me.Of course, this course is taught in Racket, which may seem like a strange language for anybody that has programmed in other languages before. However, as I put the time into it, I came to appreciate it for what the incredible language that it is. In my opinion, it is an intuitive and beginner\u2013friendly language, that does not overwhelm you with pre\u2013defined higher\u2013level procedures, but has these procedures if you don't want to construct them yourself. Looking back, it is a near\u2013perfect language to teach an introductory programming class in, even if it isn't a language most people program in outside of this class.In all, this class is one that I know that I'll feel nostalgic for. It is a truly wonderful introduction to computer science, and is everything and more than I expected it to be. Thus, I could not recommend it more highly for anybody interested in programming.",
                "Ian Horswill is the cool uncle I want in my life. Please take the course with him.",
                "Racket is a terrible language. Horswill is an expert, but he teaches in a way that assumes that everyone knows the language already. It becomes mildly frustrating when he mixes regular code with pseudocode and it is hard to tell the difference at times.",
                "Ian is great and really nice, however, going to class was sometimes a little bit useless. It is a reverse lecture so sometimes class would just be questions or a repeat of what the lecture you watched online. In addition, the class will be a tough adjustment if you have never coded before.",
                "The class was hard for me as someone with no coding/computer science experience. The first half of the course was okay, but after the first exam the content was complicated and the class moved at a fast pace. The office hours/peer mentors were very helpful when it came to the homework problems, and Ian was also very willing to help. If you don't have coding experience, you may feel out of place because a lot of people in the class have coded before or taken AP CS.",
                "A good intro to computer science class overall.",
                "I liked working with others in the final project.",
                "Although Racket is a relatively useless language, Ian Horswill makes it as interesting as possible.",
                "Very beginner\u2013friendly, Ian is a very understanding and approachable professor. Racket might be a bit confusing at first, but you get used to it very quickly",
                "I took AP CSA in high school and got a 5 and was completely lost in this class but other people who had no coding experience thought it was easy.  Proves that Racket is just a confusing language and makes what should be an easy introductory course an unnecessarily confusing one.",
                "It was a struggle to get used to programming in Racket at first but the class was really fun and the peer mentors were really helpful and the content was interesting",
                "This class is super beginner friendly; and, if you want to take a CS class and have never coded before, then you'll be fine in this class.",
                "Interesting class. Racket is dumb.",
                "This course is necessary if you want a major/minor in CS, but otherwise I wouldn't go out of my way to take it. I really wanted to take a CS course just to gain overall programming experience and knowledge, but Racket in this class doesn't really help with that. I just don't think the content of this course is very engaging or useful long term. It isn't hard, even if you don't have any coding experience, but it's hard to really enjoy a class when you don't feel like you're learning.",
                "I enjoyed the emphasis placed on recursion in the course and the structure of the advanced tutorials where we could appreciate the nuances of the Racket language.",
                "This class was amazing. I loved the flipped\u2013classroom structure; it really helped me absorb the information. The professors were incredible. Ian did the lecturing, which he made straightforward, fascinating, and funny. Connor was also super helpful when I asked him questions. All of the assignments felt useful in developing my skills and the office hours with peer mentors were an incredible resource for figuring out how to both implement the concepts I had learned in lecture and debug my code. I had almost no experience with coding before this class but I never felt hopelessly lost. If you're in the same position, I would keep in mind that some people in the class will have a lot of coding experience, but Ian does a great job at making sure beginners get the information they need. Some experienced coders will ask complicated questions, but Ian always makes it clear when you shouldn't feel bad that you don't understand. This class uses a Discord server which is another great resource for questions. All in all, I loved this class and would highly recommend it to anyone.",
                "The flipper classroom style of this class is nice in that you can work at your own pace but sometimes annoying because going to lectures is useless.",
                "This course is a wonderful introduction to how to think like a programmer. I had never programmed before and i ended the quarter feeling much more confident in my abilities. Racket sucks :/",
                "This course did not help me learn. It also is way different in the in person format because it follows a flipped classroom style which I'm not sure is the best way for this class to be run. The class also had quizzes, in person, which were also very difficult, and weren't something in the past... if you have the ability, take CS 110 instead, it's easier. If you have to take 111, consider taking it with a different professor",
                "This course was one of my favorite courses this quarter. It provides a comprehensive introduction to the basics of computer science. The availability of peer mentors, the fact that there are office hours every day at virtually every single hour of the day, as well as prof Horswill's patience are the best aspects of this class.",
                "At first it became really challenging because It was harder for me to adapt to racket. However later with a lot of practice and guidance I became more familiar with it.",
                "Racket really just super useless, but the prof is a cool guy and the structure of the class is aight.",
                "Pretty interesting course. Was my first experience with computer science and thoroughly enjoyed it.",
                "Racket sucks. Everything in this class is done in groups so make sure you like your group; if you like your group you'll love the class, if you don't then you won't. Not too difficult of a class, especially if you've programmed before. It's really annoying that we have to learn how to code in Racket but unfortunately if you're a compsci major/minor there's no way around it.",
                "This is a really large course, but Professor Horswill is a great professor. He uses a flipped classroom, wherein lectures are prerecorded and class time is used more for practice, but he goes over a lot of the lecture material in class anyways. The material can be tough, especially if you're new to computer science, but it's definitely do\u2013able and there are TONS of office hours to help you. Try to stay ahead of the weekly exercises, don't forget to go to tutorials, and study for quizzes and you'll be fine.",
                "CS 111 is a great start to CS classes at Northwester. While it felt pretty trivial with an AP CS + personal project background, it was still an interesting class, and Ian did a good job of making it entertaining. Lectures were usually useful and covered good information, and Ian did a good job of mixing in real world anecdotes about the subject matter.I wouldn't say that I learned a ton in this class honestly, but it was a great experience nonetheless. I always felt prepared to do the HW assignments, and tests never felt unfairly challenging.",
                "Professor was great, super welcoming and great at taking questions even in a 400 person lecture hall format. Easy class for those with prior coding experience",
                "The course is meant to teach the most fundamental ideas of computer programming. Having taken CS in the IB program (equivalent of AP), I must say that although the course started smoothly, the ideas and concepts came in a confusing order even If I was somewhat knowledgeable around them in a way that I didn't feel I had a definitive way to go about mastering them fully. It is a challenging course by default but it should have better flow. I think Ian's teaching style of a \"flipped course\" with us having to watch the lectures beforehand did not end up working for most people. I found myself not understanding the lectures very well at times because of how abstract the explanations of concepts were, and I have talked about people who were completely new to CS that had even more trouble in that and had to put an illogical amount of effort to do well in the course. Lastly, i think the evaluation method could be improved. More questions on the quizzes for more points and variety in question styles!",
                "If you've previously covered recursion, this course provides nothing new, aside from learning a new programming language",
                "pretty challenging for people with no coding experience",
                "It's racket, so it ultimately is a language that you'll never use ever again (besides CS214 I guess). For all of you w/ prior exp like I did, you will not learn much. Nonetheless it is a good intro CS das for all. Still, it you r not interested in CS, go take CS110. You will learn more practical stuff, I promise.",
                "Coming in with prior coding experience made this class extremely reasonable and I feel like it wouldn't be very demanding for someone without any experience either. For an intro CS class, I think it did well covering the fundamentals of computer science and taught students who took APCS new concepts and material as well, although I can see how the learning curve might seem steep to people who have no experience whatsoever. Ian was super understanding and patient all quarter and he obviously cares about his students. We would be assigned lectures to watch outside of class and Ian would basically go through the information again the following day in class, making actual class time feel redundant and boring. However, I thought the troupe exercises were a good help and kept me focused."
            ]
        },
        {
            "course_code": "COMP_SCI_111-0_1",
            "course_name": "Fund Comp Prog",
            "instructor": "Ian Horswill",
            "year": "2021",
            "quarter": "Fall",
            "instr_rating": {
                "mean": "5.05",
                "count": "286"
            },
            "course_rating": {
                "mean": "4.49",
                "count": "294"
            },
            "comments": [
                "Overall the course is a good introduction to computer science and a requirement for a lot of majors within engineering.",
                "it taught me a lot",
                "The class does help you with basic features of programming, however, being entirely taught in racket there is no practical application of the things which I was taught.",
                "The glaring issue of this course is that it is in Racket. Racket is a terrible programming language. Maybe an argument could be made that it's good for an intro course, but as someone who's programmed a bit before, I just think Racket is an utterly abysmal language. Other than that, fun course.",
                "The pace of the course and the difficulty of the quizzes and exercises were very reasonable.",
                "This course is great! Professor Horswill is a great lecturer and I never felt burdened by the course at all. CS111 is a good class and I suggest you take it",
                "A good introduction to computer science, although the choice of Racket as an introductory language feels questionable.",
                "This was a pretty good intro course, and while Racket was an interesting language for an intro course it did do a good job of forcing a functional programming style. I wasn't a huge fan of the flipped lecture style since it just felt like lecture wasn't particularly useful at that point.",
                "It was pretty easy, but if I had to do it all over again, I'd make sure to not fall behind. The content was definitely not hard, and as somebody who has never coded before (basic R doesn't count), it wasn't too hard to catch up.",
                "It's an interesting structured CS class. I think Ian and Brian are trying their best to help everyone get most out of the class, but it's hard with a 400 ppl class.",
                "Its required for all students in the CS major/minor. As someone with coding experience, the course isn't too difficult but the language can be frustrating to deal with.",
                "Overall a pretty good course, but Racket is pretty annoying to deal with. If you have programming experience, it should be pretty alright for you. Ian is also a cool guy and stuff.",
                "Ian was a great professor. Very willing to answer questions.",
                "Going to lectures was not really helpful. Watching lecture videos were more helpful.",
                "Ian goated",
                "Everything about this course was great: the instruction, the assignments, and the final project. I really found the instruction to be incredibly insightful and effective from day one. The only thing that I was disappointed on was why there was a third cumulative quiz. I feel that the final project was sufficient enough as a testing of the students' cumulative knowledge of the course, and having a final (quiz) and a project due on the same week was overkill.",
                "Good course overall.",
                "Nice class. Ian is a nice.",
                "It stimulated my interest in CS and the class was not boring.",
                "Did not enjoy this course. I just don't see how Racket is useful. But it is a simple course that doesn't require much time and if you have to take it take it with Ian.",
                "Wish NU didn't use Racket as the intro course; it really sucks that we have to spend a whole quarter learning a language that isn't used. While the course is well\u2013structured and well taught, it was also frustrating that we had to watch lectures before class because they take a long time. Not a fan of flipped classroom when class time wasn't used to do the exercises.",
                "CS 111 is a good class that serves as a very appropriate intro to computer science. The class is run in a flipped classroom environment, where students are expected to have watched lecture decks at home before our in\u2013person lectures. What ended up happening is we would just go over very similar lecture decks in class, which made the at\u2013home lectures seem redundant. The class is definitely not too challenging but is interesting enough to keep beginning and experienced programmers engaged. Ian and Connor are engaging and understanding professors who are willing to answer any questions that come up.",
                "At first, I loved this class and I was extremely excited about it, but then I did not enjoy it as much. The lectures were boring, confusing, and the tests were not easy. Even though the tests were not long, for me the format and what was expected on the tests were confusing and challenging. I know most students loved this class, but sadly that was not the case for me.",
                "It was my first language and Ian did a solid job at teaching it for beginners but I didn't love the structure of the course. The troupe activities didn't work at all and I didn't like having to watch the lectures beforehand.",
                "You will teach yourself everything. Literally everything. Going to class is pretty useless. You have to each yourself everything.",
                "Initially, I was very confused because I couldn't find a tangible connection between what I knew and what was been discussed in lecture. It turns out that those were the fundamental ideas of programming that I had never learned in any of the programming courses that I had taken before, so these were important elements of coding that I had never learned while learning other languages.",
                "It wasn\u2019t a good reaction, there was a lot of frustration because we were using a programming language that had no real world use",
                "I thought Ian was a fantastic instructor, but found it hard to engage with the course due to its content and structure. The course is taught in Racket, a language which largely fails to be applicable outside of this class, and the course itself covers extremely introductory material while providing no opportunity for students with prior programming experience to test out of it. I also was not a fan of the \"flipped classroom\" structure: we were asked to watch lecture videos prior to class, then do exercises and discuss in class, but in a 400\u2013person lecture, this proves difficult, and the lectures were more\u2013so a repetition of the videos we were assigned to watch for homework. Though I loved Ian's instruction, I felt as though the class was overall redundant, inapplicable, and overly rudimentary.",
                "Great class to take with Ian, he is an excellent teacher.",
                "course uses racket as a way to \"level the playing field\" but after about week 2 the gap between the experienced and the new is basically back to where it was. the course teaches a lot of basic programming concepts in a way that would sound unnecessarily complicated for those who already know it and somewhat obscure for those who don't. coding examples in lectures help a lot, as well as tutorials. interacting with classmates via discord was also a cool new experience.tests are fairly straightforward, homework programs are a bit tricky at times \u2013 especially as it gets to recursion. ian's cats are cool.there are a lot of people taking this class. a lot. means you can find help in a lot of placesoh, and final project groups are very important if you don't want to have your life turn for the worse as you are preparing for a paper and three finals.",
                "They tried doing a flipped classroom where students were meant to watch the lectures beforehand and class time would be devoted to group work and micro\u2013quizzes. However, as the quarter went on the structure basically unflipped, and the class became more traditional. Other than that weird thing, pretty good course.",
                "Having the flipped classroom lecture style was definitely new and required some time to get used to. I liked the idea but if the professor was going to go over the same slides in the lecture again, it felt a bit redundant.",
                "I like the class a lot, but I am a little frustrated with the choice of language. Racket makes sense from a teaching perspective, but I don't really see the practical uses of it in any industry anywhere.",
                "Very good course, not a huge fan of the game\u2013style assignments at the end (I don't think they taught CS as well as assignments would've), but still very good course with very good quality instruction.",
                "This course was very chill. It was a flipped classroom style class where the lectures reviewed what was went over in the videos as well as having some practice with your troupes. Ian does a really good job explaining concepts and at answering questions.",
                "If you have any interest in CS past an intro level course, you will have to take this class. With that being said, it was a relatively interesting class, but the lectures felt unnecessary as they were repetitive of the content that was discussed in online video lectures. Assignments and quizzes are not too hard and the final project seems easy enough.",
                "Ian is a fantastic professor and I felt that the flipped classroom environment really reinforced learning as a whole. We could learn the whole lecture through videos, but Ian would also cover the main points of the lecture in class which helped understand concepts.",
                "Great examples",
                "Ian Horswill is a wonderful human being who makes the course easy for a reason. There is no pressure in that course and that made learning racket bearable.",
                "I honestly think the Racket language is not conducive to learning how to program. I already have a lot of coding experience from my previous school since I\u2019m a transfer student, but if I didn\u2019t, then I think this class might have discouraged me from continuing with CS. Racket is not really useful or related to any of the other languages I\u2019ve learned in any meaningful way. That being said, this class wasn\u2019t super difficult, just not engaging or interesting. Also, I found that I didn\u2019t gain much from the in person lectures because of the flipped classroom structure. I think the professor meant well when he used this structure, but it creates more work and it\u2019s not super realistic for college students who have a lot of priorities to balance at once.",
                "I enjoyed most of the homework programs.",
                "This course provided a good foundation to continue learning computer science by explaining more general concepts.",
                "I liked the individual and cooperative aspects of the course! All the office hours and tutorials were very helpful. I also enjoyed how Professor Ian didn't want to give us stress and provided extensions for each exercise.",
                "If you have taken a Computer programming class before, especially AP Computer Science, this class will be easy. Racket is a little confusing at first but not intimidating once you get used to it. Lectures are flipped, i.e. prerecorded on canvas. Weekly assignments were reasonable. Lots of office hours available every day including weekends, TAs are very helpful.",
                "The exercises, excluding the first couple, were pretty hard for me. I struggled a lot during the first month of classes trying to complete them, barely understanding what was going on. It wasn't until I went to office hours that I started to really learn the material. Even if you have done CS before, please listen to me: don't be afraid to ask for help, and go to office hours. It will save you so much time. The exams were pretty straight forward and the instructors were always nice. I wasn't a huge fan of the Tutorials themselves (my TA was super nice though). Overall, I thought the human experience in class was great.",
                "I feel like this course would be great for beginners, however as someone who experienced programming before this course, the course came off as redundant. Also was not a fan of the reverse classroom format",
                "I really liked the structure of this class. I liked the video lectures because you go back and rewatch something if you needed it. I think there was sufficient practice with Racket.",
                "Racket is a stupid language, but this class is important",
                "Racket is a horrible language to start learning computer science with.",
                "I had basically no programming experience and this class was pretty challenging for me, although  not un\u2013doable. The quizzes were difficult and the exercises took a long time.  (I recommend going to office hours and finding a good TA if you have issues or need problems with exercises!) Luckily, the grading wasn't too hard/harsh (we have a final project and participation grades that help out) and Ian does genuinely care about his students.",
                "This course is definitely not cake. You will spend hours every week coding the exercises. Definitely, an easy A if you do all of the exercises though. Shouldn't be too difficult for someone without a coding background either.",
                "Ian is a god!!",
                "Having minimal coding experience, this class really wasn't too difficult at all. I thought that Ian's recorded lectures could drag on at times, but throw that baby in 2x speed and you're good to go. Sometimes the class lectures were a bit redundant, but the troupe activities were very helpful in letting us fully understand the application of certain concepts. The assignments could be frustrating at times, but they weren't too bad. You can definitely pass the quizzes with minimal studying, and the final project is actually quite fun. I recommend you find 3 nice and hardworking people to be in a troupe with, and this class will be way more enjoyable.",
                "d",
                "This course was challenging for me because I've never coded before this class. Although I struggled a little bit throughout the quarter, I still managed to learn new things.",
                "The course was great \u2013 not as stressful as other courses for McCormick freshman, and also fruitful in the sense that you can learn programming fundamentals. The language used in the course was pretty frustrating at times if you've programmed in the past, but overall the course was beneficial.",
                "It was really challenging for me.",
                "This is a good course that introduces important CS concepts. It is well taught and not too difficult.",
                "I think this is a pretty decent intro course! It uses Racket, which isn't the most helpful language ever, but I do feel like I learned a lot of good principles and skills. The final project and exercises were not too hard (and if you get stuck, there's a lot of office hours) and the midterms and final were very fair if you do the practice tests. I liked Ian a lot, even though I barely paid attention in class. I did not like that class and the prerecorded lectures were nearly identical, as class often felt like a waste of time.",
                "Racket was annoying at first but I got used to it after a bit, coding wise it wasn't too difficult, manageable work load and Ian is awesome!",
                "Ian is legendary! If you take CS 111, you better take it with him. The class is very much taught in a flipped classroom model. MAKE USE of your PM during tutorial \u2013 they can help you get started on the homework if you're struggling. Recursion was hard to understand at first, but the the lecture decks and tutorials were extremely helpful. Pick a good troupe! You'll have to create a final project with them and work together in class to understand new concepts.",
                "This was a great class and a lot of fun. Definitely not a weed\u2013out course, as most people get A's.",
                "Good class! Ian is a nice guy.",
                "As a novice programmer, I found this course to be a great introduction to the basics of coding. While Racket may not be the best language according to experienced programmers, I had no issues understanding the flow of the language. This course also sparked my curiosity in comp sci in general and will lead me to take more cs classes later:)",
                "For someone who had no prior programming knowledge before, the learning curve was very steep at the beginning but with time, I started getting the concepts and it became a lot easier. Ian takes time to make sure everyone understands which is reassuring. Go for office hours if you get stuck.",
                "Not a fan of the flipped classrooms. Ended up not watching any of the recorded lectures since Ian goes over the content in class anyways. Quizzes were relatively easy, provided you studied with the associated practice quiz. Ian and TAs were helpful, and there is a dedicated Discord server for the class.",
                "I personally think Northwestern should scrap the course. I don't understand why racket is used as an introduction to programming, when it holds very little in common with other more commonly used languages such as Java, C, and C++. I also didn't appreciate that we had to watch pre\u2013recorded lectures before going to class, which doubles the lecture time for that class. In that case, they should have made the class count for more credit hours because that is essentially what is happening. The professor is extremely knowledgeable, but I think the class itself is the problem.",
                "It formalized code and taught the basics thoroughly to serve as a foundation. It was helpful even as someone who already coded by giving a stable foundation to build more complex coding onto of.",
                "Pretty good intro course, the exercises don't take long to do. Exams are kind of tricky because it's different than what you do in class",
                "I liked this course even though it was a little tedious to learn the racket language I think it helped me as a programmer overall.",
                "The way that professor Horswill presents the topics in the lectures is easy to follow and understandable. As long as you have a decent logical understanding of things, the class should be relatively easy. Going to office hours helps a lot if you are stuck with your code. One thing that I don't recommend is copying code from your friends because the homeworks really help you understand the material presented in class.",
                "You have to learn racket, which is kind of a terrible language, but Ian is really good at explaining topics and takes the extra mile to make sure everyone understands.",
                "Course was very good. If you just take a little time to understand, the midterms are pretty easy and homework is very doable.",
                "The course was slow at first but then was interesting and challenging towards the middle of the quarter.",
                "I really enjoyed the course and developed an interest in CS in general. I was not a big fan of the Racket coding language but it was not a huge issue.",
                "Racket is just so unnecessary and it's very annoying that this is the intro course for majors/minors. I know the point is that it's supposed to put everyone on equal footing, but that will never really be the case, if you have prior coding experience it will still help. Also, the kids who took AP CS in high school will still be able to skip CS 150 etc so it doesn't really do much. Sort of felt like a waste of time ? Although I did somewhat enjoy it. Exercises and tutorials were good. Lecture felt unnecessary because it is the same as what we watch for homework. I really liked Ian though, he made lectures as entertaining as they could be. Sort of wish the tests were longer...I felt like my grade was ruined if I missed one question. Easy to do well on all the other grades though.",
                "It's an introductory course, but it's still a very fun course.The \"tutorials\" have an \"Advanced\" section with more challenging activities for people who may be more experienced in programming.The flipped style allows for activities in class, which is a good way to practice what you have learned.",
                "Horswill is a really good professor and he made CS 111 an enjoyable class. I liked how you could get a 48\u2013hour extension on any homework assignment just by filling out your name and id on a form.",
                "Ian is a cool dude, but Racket sucks. I imagine it would be a lot more challenging to someone brand new to programming and the core concepts (recursion, object oriented programming, etc). The tests were more difficult than expected. All of the TA's I worked with were really nice. Make sure you read the homework carefully.",
                "Racket is really nice for learning recursion and absolutely painful for everything else. As it is an intro course, I thought it moved slowly and I found it hard to engage with the lectures. Ian is amazing, though!",
                "easy with cs experience",
                "I believe that this class was a fairly good beginning class for CS. There are lecture videos you have to watch before every class which I wish we didn't have to do because the content is typically covered in class anyway, but the coursework is fairly reasonable and you only have one homework assignment a week which is fine. Ian is really passionate about his job and tries his best to engage the class when he can.",
                "Good intro course, not a lot of work outside the class. Ian is a great teacher and cares a lot about their students",
                "The class did a good job covering important programming concepts",
                "This class is pretty easy, especially if you've taken AP Computer Science. It uses the Racket language, which can be frustrating at times, especially if you have prior programming experience, so going in with no experience at all may even be better. Ian is very nice and very enthusiastic about what he teaches, which is nice. This class is in no way meant to be a weed out class (which the professor directly stated multiple times throughout the quarter) but is just meant to provide an introduction to programming, with a focus on functional programming.",
                "Professor Ian is a great instructor and the concepts he taught are very clear.",
                "This class is very chill. Very easy to fall asleep in, but even then you can still keep up. It gets a bit harder in the middle/end but nothing you can't manage",
                "The class is graded pretty fairly however it is full of a lot of experienced coders which made the average on the exams really high. This was difficult as someone who wasn't experienced with coding at all which is why I don't think I did that well.",
                "As an intro course, this course has a lot of resources to make failing as hard as possible. If you put in the work and look in the right places it\u2019s very easily A\u2013able. Recorded lectures, uploaded lecture slides, practice quizzes with explanations, tutorials with TAs, and a Discord server for further questions all help. It may get hard and abstract but if you use the resources you\u2019ll catch up quick. This class describes itself as a \u201cflipped classroom\u201d but Ian is a fantastic, enthusiastic professor who still thoroughly goes through the material in class. The class includes some groupwork including the final project but still provides avenue for solo work. Overall the course covers a lot of bases and gets you to think like a programmer, and I had fun doing it.",
                "Very interesting class. I never have programmed before it and still, despite many students taking the class took AP CS, I managed to perform extremely well and learned a lot.It's a BIG class. However, there are several OH available that are extremely useful.",
                "The overall class was pretty easy and going to office hours was super helpful if you got stuck on an assignment. If you are trying to learn a more useful language and just want the one class to do that, I wouldn\u2019t recommend taking this course unless you are a CS Major.",
                "It was a good course but be prepared to spend a lot of time working on your own to get a good grade",
                "It was structured very well. Class assignments were interesting and fun and always got me to think. The advanced tutorial was also enjoyable\u2013 though I did not absorb the material on creating a compiler as well as I would've liked, the peer mentor system was awesome, and I really liked my PM. Quizzes were easy and free of stress; LOVED the final project. A really enjoyable course.",
                "pretty simple course, just make sure to watch the lecture decks",
                "This class is so good. You can learn a lot and those practices are so helpful. If you want to see if cs is your thing, take this class.",
                "A good intro to CS class. Racket as a language is annoying, but helps to level the playing field, and always fun to try out new languages. Prof. Ian is really nice and answers any questions you may have, even with a class of 450. The structure of this course involved pre\u2013recorded lectures and discussion of the content during lecture time, but I found class fairly redundant as it was just a summary of the recorded lecture if you had watched it. The workload was very light, and grading/quizzes are pretty easy. I really enjoyed the tutorial part of the class, and I think it's quite interesting if you choose to be in the Advanced sections.",
                "Because we stopped having in\u2013class microquizzes halfway through the quarter and because Ian posts lecture recordings and slides before class, class attendance wasn't essential. Chill class especially if you have prior programming experience.",
                "This course is very basic and although I can see why they make you take it, but it is easy.",
                "The exams are not hard if you do the exercises and attend the mandatory tutorials.",
                "The basics of computer programming within Racket was a great way to start my introduction to computer science. The gradual build of skills and knowledge was a great way to structure the class.",
                "The course was interesting in learning about a new language and familiar aspects of programming with different execution, but was affected by the fact that I'm likely never using it again. Racket is a different language, and can be used to make really cool things as seen with the tutorials and programs we have, but knowing its obscurity in industry, I can't help but feel underwhelmed.",
                "It was a pretty good introductory course but the way the quizzes are structured and graded really sucked because of how one small mistake can make you lose a lot of points. I would rather have more questions to answer and be punished less grade\u2013wise if I mess one up.",
                "I thought the class was run well and Ian was a great professor.",
                "Used the racket programming language throughout the class, which might not be everyone's preference. Not very challenging.",
                "Racket is a really annoying language to both use and learn, I don't buy the whole functional vs imperative programming idea as justification for using it. There are plenty of better and more useful languages that can teach the same things as Racket. Other than that, the course wasn't that hard but it just seemed like a waste to make us watch lectures before class and then go over that exact material in the lectures.",
                "Unnecessary amount of work. Too much busy work. Lectures went over the same thing in the videos.",
                "This is a good intro computer science course for anyone who wants to learn a bit of programming, though I would recommend CS 110 instead, since I had never heard of Racket (the language we use in this class) before, whereas with 110, Python is a very well\u2013known language. The course is flipped classroom, so there are daily lecture videos on Panopto, and then Ian basically goes over the same slides during class. There are some micro quizzes during class, but they stopped around halfway through the quarter. The assignments are very manageable, and the quizzes aren't bad if you've gone through the lecture slides. The final project is actually pretty fun. Overall, a good course, and it's honestly an easy A if you put in the work.",
                "I enjoyed Professor Horswill's in\u2013person lectures and thought they were pretty insightful, and the homework was always shorter but still great at reinforcing my familiarity with the content",
                "This class was very good for review as well as for people without programming experience, It was not a major time commitment, but was still able to be extremely informative.",
                "The lectures are created to be watched outside of class, and it gets really easy to just stop watching them and get behind. The content isn't very difficult, but the class itself isn't very engaging and Racket is an annoying language to deal with.",
                "The class was interesting. Ian was really helpful and enthusiastic every time he taught class. The homework exercises were challenging at times, but working with a group is helpful.",
                "CS 111 was definitely a great starting point for me\u2013 someone who has never coded before and with no prior CS experience. Professor Horswill was an excellent instructor and was always happy to answer questions. The homework exercises were straightforward and manageable; if you need help, there are plenty of resources available, so don't be afraid to ask for help. Overall this was a great intro class and most definetely spiked my interest in Comp Sci.",
                "Don't take this class unless you need it for a major/ minor etc. This class is lowkey a lot of work and lowkey very difficult. There are quizzes, a final exam, AND a final project. If you do take this class make sure you have a passion for coding/ have friends in the class to work with.",
                "I had never coded before this class and now I have a great understanding of the world of CS. For homework GO TO OFFICE HOURS, the TA's are the best and will explain anything you are unsure of. Ian is a great professor but I feel like the lectures were tough to stay engaged.",
                "I felt like the material wasn't bad at all, but do expect to spend a couple hours on each assignments and carve out room in your schedule for office hours. Peer mentors are super helpful, so be sure to consult them if you need any help! Be wary of the pacing\u2013\u2013 it's easy to fall behind especially since the beginning is so slow paced. The flipped classroom model works to increase understanding, but I feel like in class lectures don't really add anything to my understanding, besides the troop activities.",
                "Good course",
                "I enjoyed the reverse structure that allowed me to learn on my own and ask questions that pertained to my immediate and personal struggles within the class. I thought this class functioned really well in the aspect of gaining help when you struggled.",
                "This was a fun entry level computer science course.",
                "This class is manageable. I really like the tutorial sessions because they help you learn about the topics that will show up on the homework. This class also used a flipped classroom model, but since we ended up reviewing the lectures in class anyway, it kinda defeated the purpose. I would have rather spend time doing small coding exercises in class based on the lecture materials. But this class probably has the most robust support network out of any class I have taken in McCormick. There are office hours scheduled for every day of the week, the TAs are really knowledgeable, and the assignments come with a pdf file that explains the homework really well. I liked the style of the midterms and file because they emphasized troubleshooting and recognizing the types of different objects rather than the return value of an expression. I also appreciated that the test were weighed less than the assignments. The final project was also very fun and manageable.",
                "This course teaches you Racket, which is essentially a useless language. It is super inconvenient and I would not recommend this class as an introductory course to coding for beginners. However, once you get the hang of it, it\u2019s pretty easy to use, but still very tedious and has no similarities to other languages. Prior to taking the class, I had experience coding and still struggled but it\u2019s manageable.",
                "Big class, terrible programming language, and a cat\u2013loving instructor.",
                "CS 111 is a relatively straight forward course for those with past CS experience. The biggest challenge is getting used to the unorthodox language (Racket) and learning to write code in it.",
                "If you understand recursion and object\u2013oriented programming, this class is a joke. Did not watch lectures or go to class half of the time. Did not get a single test question wrong the entire quarter. The advanced tutorials are nice as I did some interesting programming in those. For people with no programming experience, I can see how this could be difficult and take some time. For people who have a lot of experience, it is a joke. Great to take on top of 3 other hard classes or even as a 5th class.",
                "If you are taking this because you are a transfer and need it for later course requisites, prepare for a very easy time. This is a very simple intro CS course if you've studied the material. Racket can be frustrating though, so heads up.",
                "As someone who has taken APCS before, this course started out fairly easy and got complicated (but manageable). The grading is not at all lenient. If you make a really really minor mistake, you could get a 0% and you can't really argue for a better grade. This has never happened in my other classes. Overall, I would still say the course is designed fairly well, and there is a big support system (the peer mentors) that you could utilize as long as you are on top of things and not cramming last minute.",
                "I wouldn't say the class is a great first introduction to computer science, but it taught recursion well at least. Racket kind of sucks as a language. It's super syntax heavy and hard to read. But since most of the people who took this class had some prior experience in coding, I guess it was an alright second step. I can see why it's used as a teaching language.",
                "The course isn't so hard as long as you do your work to understand the concepts.",
                "Good course and good instruction, but a weird way to introduce many people to programming.",
                "This is a required course for CS majors so if you're reading this you may have to take it regardless. I personally didn't enjoy this course all that much. I thought the lectures weren't all that useful really. It's weird though because I felt that this is the only course I've taken where I've felt I strongly understood the material and could breeze through homework and yet the tests didn't reflect what I considered to be a solid understanding (maybe because they were pencil and paper). It wasn't the worst thing ever but definitely a bit frustrating at times.",
                "Racket is basically a useless language and honestly I felt like it hurt me to have previous experience with coding. The concepts that you learn, though, are quite useful and important fundamentals in computer science. I just wish the language was better chosen.",
                "Class was not difficult but often boring. Weekly homework did not take too long to complete and the quizzes were not too hard.",
                "This course wasn't too bad in my opinion. I even found it fun at some points, as it was satisfying finally figuring out the logic for a problem. But, the concepts were definitely difficult to understand at certain times and the course went pretty fast near the end of it.",
                "If you have a lot of CS experience, this class is mostly review. DrRacket is annoying but I got used to it pretty fast.",
                "I was completely new to programming. It's a little more challenging than one would expect for a beginner, don't fall behind on the lectures and the exercises. Racket isn't really useful to other languages so it doesn't really make sense why we have to take this course.",
                "This is a great class, especially with Ian. He is engaging and makes class fun. He also does a good job of making the class enjoyable for everyone, regardless of previous experience. If you have prior experience, the class is not challenging, but it's still a fun class.",
                "First off, Racket is the language used, which is different from the Java/C/Python that are typically used in introductory CS classes at other school. Many are not a fan of it. HOWEVER, Professor Horswill does a great job explaining CS concepts that carry over to other languages. As someone who came in with no coding experience, I found the weekly assignments to be kind of frustrating, but after utilizing classmates' help, the Discord server (Horswill and the TAs are there to answer questions even late into the night), and in\u2013person office hours, I was able to make it through this class. In addition, being new to coding initially worried me, but Professor Horswill emphasizes frequently during his lectures that he understands that not everyone has taken \"AP CS\" and allievates the stress that way. The exams are also quite easy as long as you do the practice and review the lectures. Overall, with the exception of Racket being the coding language of instruction, I have no concerns about CS 111.",
                "Unless you are a CS major/minor and need to take this course, would not recommend this class as one for people to see if they're interested in CS or learn some useful CS skills.",
                "It was nice to refresh on the basics of computer programming, and I think it will help me take harder computer science courses throughout my time at Northwestern.",
                "This class is definitely an introductory class. If you have never coded before you will definitely have to work a whole lot harder than if you have coded before. The assignments were lengthy but you have a whole week to do them. The quizzes were somewhat difficult but not impossible. The full lecture class makes it somewhat hard to learn in class but watch the lectures before class then you will be able to follow.",
                "Racket as a language is a very unconventional one, but prof. Horswill is great and it is certainly a class worth taking if you are interested in going into Computer Science.",
                "I was worried about lack of access to TAs and resources in such a large class but there was ample support from the PMs for when I was confused.",
                "If you have no experience with programming, I would definitely recommend CS110 instead of this course, but this class is very helpful and interesting for people with a little experience. Racket can be a little confusing and unwieldy, but generally this class is incredibly important and useful, and Ian is a great professor.",
                "Not a fan of the flipped classroom. Racket was confusing.",
                "It wasn't too bad. Just go to class, do the assignments, and definitely go to office hours. I'm not a big programmer so it was hard getting acclimated to the whole computer science thing. Once you get it though, it becomes much easier.",
                "Good intro to CS even if you haven't taken a CS class before",
                "The course was not very entertaining, but seems to be a great course if you are interested in learning CS. If you are taking it as a major requirement, it is not very challenging/fun.",
                "This course was solid. Not too difficult or time consuming.",
                "This course was brutal. The in person lectures were exactly like the lectures he posted online. When someone asked a question in class, Ian would never repeat the question which was very frustrating",
                "I did not find this class to be too difficult. Midterms and the final is only worth 13% of your grade so it was a pretty low stress class. It was a good intro class to take and introduced students to basic computer science concepts.",
                "It gets more complicated as it goes on. Just watch the pre\u2013lecture vids and go to office hours if there's something you don't understand. You should be good, if you did APCS then you're chilling.",
                "The teaching and the general coding concepts were super cool and useful, but the exercises were too easy and the language taught in the course could be confusing for beginners.",
                "The course focuses on functional programming in the early stages of this class, and covers imperative and object oriented programming later on. Its primary programming language is Racket. The language was a new experience, and I found it interesting to have to problem solve using what was essentially one function call with more function calls as its inputs, so on and so forth.The class is quite chill, with the professor directly stating that the class was designed so that everybody could get an A. There is no class curve, but the materials and assessments are more than doable even without it. There's a discord server with TAs, the professor, and fellow students there to answer questions which adds to the friendly nature of this course.",
                "This course isn't bad at all. If you have already taken AP CS then it will be a good, but fairly boring refresher. If you haven't taken any CS before, it is a good introduction to CS overall. You'll be using Racket to program and everyone will hate on it.",
                "Very doable, working through programming Racket step\u2013by\u2013step and very reasonable quizzes and assignments. Overall well set\u2013up class.",
                "This class is pretty easy if you coded before at all. The lecture videos are good to watch but I always sped them up and didn't take notes. Never really needed notes for anything and the assignments weren't that bad just try to start them before your tutorial so you can ask questions.",
                "Pretty useless course tbh. Can\u2019t really think of something I learned other than racket syntax which I\u2019ll never use again.",
                "I think this course starts out pretty easy and gets harder at recursion (which is for midterm 2). I think general tips for studying would be to look over any notes from the lectures, do the extra practice problems, and definitely the practice quiz as that is the exact format of the real quiz.",
                "Very good. Intellectually stimulating but not too hard. Assignments can be tough, but there are many office hours you can go to to get help. Tests are very fair for a class that is mainly programming\u2013based. The class is flipped classroom, which means you watch lectures before coming to class. I think it helps immensely because it helps you learn the material in your own time. There are some other programming\u2013based classes that would heavily benefit from this model of learning.",
                "This class is super interesting and cool. However, it is kind of difficult to really learn anything during the class meetings. I definitely learned the majority of the information by watching the assigned panopto videos before class.",
                "ok",
                "This was a good introduction course that allows people with different programming experiences to be challenged in different ways. The tutorials were helpful and stressful at the same time. The tutorial built on what we were learning in class but in different ways that were not as obvious at first.",
                "good introductory computer science course. not too hard even if you're brand new, just make sure you go to class",
                "Racket programming",
                "I'M NEW TO CS SO I WON'T LIE I STRUGGLED A BIT. BUT THE TEACHER IS SO LENIENT AND THERE ARE ALWAYS PEOPLE WILLING TO HELP. THE EXAMS ARE FAIRLY EASY AND THE TEACHER PROVIDES A LOT OF MATERIAL TO HELP YOU LEARN FROM.",
                "It's really easy to fall behind in this course and slack off until the quizzes or until an assignment is due. Putting things off made me fall behind in the class and then made it difficult to understand in\u2013class lectures. I would not say this class is an easy A and Racket is definitely very different from other languages. Overall, if I had dedicated more time to the class I think I would have learned a lot and it would've felt easier overall.",
                "I had never really programmed before this class, and I feel as though I walked away with the ability to successfully complete programs in racket. Many people say they dislike Racket, but I actually think it was a great language to use. I found the learning curve to the language to be rather low, and I found the language to actually be quite cool. I really liked the troupe exercises and the format of the class. Not too difficult, but definitely stimulates interest in the topic.",
                "Ian is a cool person, and teaches well. However, I am not a big fan of the flipped classroom format. Time off class has to be taken to watch pre recorded lectures but the same material is covered in the in person lecture, making the flipped classroom redundant.",
                "Tough class",
                "The way you are taught to reason about code and a chance to understand the importance of what you learn made me enjoy the class so much.",
                "This course was a great intro to computer science and has left me with a good understanding of how to conceptualize different approaches to an assignment. Learning Racket really isn't that bad and I honestly enjoyed it. Its not that much work and if you need help on anything, theres tons of office hours",
                "If you are just looking to take some CS classes, this might not be the one. Grading is fair but quizzes/assignments can get tricky at times, but what you learn is very siloed into what would only be most practical if you're pursuing CS. Feel like 110 would be the better option since it teaches Python",
                "Taking this class is like taking $5000 and setting it on fire, but it takes 10 weeks.",
                "This course definitely seemed like a good introductory course to programming and it didn't waste too much time on having to teach the syntax of the programming language. The instructor was very responsive to students and made class enjoyable. However, the concepts taught in the class were for the most part things you would have learned if you had experience with programming courses in the past.",
                "If you took AP CS, this is a fun class that's only a little challenging. By far it was my favorite class of the quarter. Many people don't like the programming language that this class used but I think it was only the experienced programmers that complained about it. Overall, take this class for a good introduction to coding!.",
                "Ian is incredible in his own way, and the course is pretty laid back but does a decent job of enforcing the intended concepts. However, it is too slow for most of the people taking it, resulting in it being kind of a blowoff class. Racket is extremely annoying, but the class is still a good introduction to the world of computer science.",
                "This course was pretty easy. Sometimes things got really confusing. The tutorials helped me learn the most because that was when I could really practice coding using the principles that I learned in class. It was also a little annoying that the style of this class was a flipped classroom. But overall, the class was pretty chill and taught me a lot. Also the TAs, PMs (peer mentors), and Professors are all really chill and understanding so you could almost always get extensions on HW assignments which was nice.",
                "CS 111 is really a fun class taught by a professor who is really eager for his students to do well and succeed. He is super passionate in the material he teaches, and the inclusion of his cats in his recorded lectures makes that class even better. I will note that there are moments where you really are intellectually challenged but after that small bump the class goes pretty smooth. You just have to stay organized and you will do well, the structure of the class is very simple, you have a hw program to do each week (it isn\u2019t as bad it sounds), a group final project at the end, and 3 quizzes (which is basically your two midterms  and final).",
                "This course felt reasonable. I think the TAs are pretty helpful when you get stuck, and if you just pay attention it's not that difficult.",
                "The biggest downfall of this class was the fact that we had to use Racket. Prof. Horswill is a good lecturer, and he's very engaging, I just feel like the course content was restricted by using Racket. This course was also taught as a \"flipped classroom\" where we watched recorded lectures on our own. This wasn't my favorite because all we did in class was review the lecture we watched at home. Overall the class is very doable. Midterms are really hard to study for and we're only given one practice quiz for each. Assignments are pretty quick and you have ample time to complete them.",
                "This class was pretty easy. Coming out of AP CS, adjusting to Racket (the language we used) was a little bit difficult. Racket is kind of useless and, as far as I'm concerned, is not used for much in the professional world. I only watched the lecture videos and did the assignments and did well in the class. Does not require much time, but you do need to do the little that is asked of you in order to succeed. Professor Horswill is amazing. Super nice person, very fair and genuinely wants to see his students succeed. I would recommend this class. However, if you have never coded before, you will struggle more than the AP CS people. If you are new to coding take 110 before 111.",
                "This course was pretty interesting and I enjoyed it. The workload was very manageable and the live lectures are pretty much just reviews of the taped lectures that we are supposed to watch. I found the content interesting and a good foundation for CS.",
                "I've never coded before so this course was very difficult for me. I only took it because there was nothing else open and I had a really late registration time. I thought I might be interested in compsci, but I had no way to tell. Racket is supposedly a confusing language but I have no comparison. The class is split between compsci majors who need 111 for the requirement (bc they need to learn racket) and then others who don't know what they're doing and it's really hard to keep up/grasp concepts. Ian teaches the class reverse lecture and there's no point in going to class you won't be able to pay attention (his long, flowing hair is distracting). I don't think this is a good intro class to coding, but at least I don't hate compsci yet it's just ridiculously hard to jump into a class with a bunch of experienced coders that ace the \"quizzes.\" Ian's a chill dude watch for his cats. Take 110 first if you don't have experience.",
                "Ian is a great professor. He's super understanding and really wants his students to do well. Sometimes the pre lectures are kinda annoying but generally class is helpful. office hours tho are where its at if you have questions ever and they're provided all the time. Racket's a super annoying language but you generally learn the basics and Ian's a great prof to have if you have to code with racket.",
                "Ian is a great professor! I found he explains the base concepts really well, and between his cats frequent appearance in his recorded lecture, and his random comments during the class itself I was always entertained which made the whole experience more enjoyable. The group set up for the class worked pretty well, and having a good group makes the final project that much better (you design a text\u2013based adventure game). If you are someone who doesn't have a lot of coding experience getting used to Racket in the beginning may be difficult but there are so many office hours for this class to go to for help. Altogether a really great class, and good starting course for the CS major.",
                "As someone who came into this class with minimal programming experience, I found that this truly is a wonderful class designed to be accessible to people who have little more than the desire and motivation to learn about programming and computer science. Ian posts the recorded lectures prior to lecture, and it is expected that you watch and understand them prior to coming to class. I believe that this flipped classroom setting is ideal for offering the best understanding of the course material. Also, during lecture, Ian is very open to answering questions, and gives phenomenal answers. The TA guided tutorial sessions are a great opportunity to get a baseline understanding of what you'll need to know to complete the weekly exercises. Because the exercises can be somewhat challenging, the tutorials are a resource that one should certainly make the most of. Ian's grading policies are incredibly fair, and you are offered a very fair amount of time to complete all exercises and assignments as well. All of the teaching staff members are incredibly kind, down to earth, and knowledgable. They certainly made this class as great as it was, and have fostered a great interest in computer science for me.Of course, this course is taught in Racket, which may seem like a strange language for anybody that has programmed in other languages before. However, as I put the time into it, I came to appreciate it for what the incredible language that it is. In my opinion, it is an intuitive and beginner\u2013friendly language, that does not overwhelm you with pre\u2013defined higher\u2013level procedures, but has these procedures if you don't want to construct them yourself. Looking back, it is a near\u2013perfect language to teach an introductory programming class in, even if it isn't a language most people program in outside of this class.In all, this class is one that I know that I'll feel nostalgic for. It is a truly wonderful introduction to computer science, and is everything and more than I expected it to be. Thus, I could not recommend it more highly for anybody interested in programming.",
                "Ian Horswill is the cool uncle I want in my life. Please take the course with him.",
                "Racket is a terrible language. Horswill is an expert, but he teaches in a way that assumes that everyone knows the language already. It becomes mildly frustrating when he mixes regular code with pseudocode and it is hard to tell the difference at times.",
                "Ian is great and really nice, however, going to class was sometimes a little bit useless. It is a reverse lecture so sometimes class would just be questions or a repeat of what the lecture you watched online. In addition, the class will be a tough adjustment if you have never coded before.",
                "A good intro to computer science class overall.",
                "I liked working with others in the final project.",
                "The class was hard for me as someone with no coding/computer science experience. The first half of the course was okay, but after the first exam the content was complicated and the class moved at a fast pace. The office hours/peer mentors were very helpful when it came to the homework problems, and Ian was also very willing to help. If you don't have coding experience, you may feel out of place because a lot of people in the class have coded before or taken AP CS.",
                "Although Racket is a relatively useless language, Ian Horswill makes it as interesting as possible.",
                "Very beginner\u2013friendly, Ian is a very understanding and approachable professor. Racket might be a bit confusing at first, but you get used to it very quickly",
                "I took AP CSA in high school and got a 5 and was completely lost in this class but other people who had no coding experience thought it was easy.  Proves that Racket is just a confusing language and makes what should be an easy introductory course an unnecessarily confusing one.",
                "It was a struggle to get used to programming in Racket at first but the class was really fun and the peer mentors were really helpful and the content was interesting",
                "This class is super beginner friendly; and, if you want to take a CS class and have never coded before, then you'll be fine in this class.",
                "Interesting class. Racket is dumb.",
                "This course is necessary if you want a major/minor in CS, but otherwise I wouldn't go out of my way to take it. I really wanted to take a CS course just to gain overall programming experience and knowledge, but Racket in this class doesn't really help with that. I just don't think the content of this course is very engaging or useful long term. It isn't hard, even if you don't have any coding experience, but it's hard to really enjoy a class when you don't feel like you're learning.",
                "I enjoyed the emphasis placed on recursion in the course and the structure of the advanced tutorials where we could appreciate the nuances of the Racket language.",
                "This class was amazing. I loved the flipped\u2013classroom structure; it really helped me absorb the information. The professors were incredible. Ian did the lecturing, which he made straightforward, fascinating, and funny. Connor was also super helpful when I asked him questions. All of the assignments felt useful in developing my skills and the office hours with peer mentors were an incredible resource for figuring out how to both implement the concepts I had learned in lecture and debug my code. I had almost no experience with coding before this class but I never felt hopelessly lost. If you're in the same position, I would keep in mind that some people in the class will have a lot of coding experience, but Ian does a great job at making sure beginners get the information they need. Some experienced coders will ask complicated questions, but Ian always makes it clear when you shouldn't feel bad that you don't understand. This class uses a Discord server which is another great resource for questions. All in all, I loved this class and would highly recommend it to anyone.",
                "The flipper classroom style of this class is nice in that you can work at your own pace but sometimes annoying because going to lectures is useless.",
                "This course is a wonderful introduction to how to think like a programmer. I had never programmed before and i ended the quarter feeling much more confident in my abilities. Racket sucks :/",
                "This course did not help me learn. It also is way different in the in person format because it follows a flipped classroom style which I'm not sure is the best way for this class to be run. The class also had quizzes, in person, which were also very difficult, and weren't something in the past... if you have the ability, take CS 110 instead, it's easier. If you have to take 111, consider taking it with a different professor",
                "This course was one of my favorite courses this quarter. It provides a comprehensive introduction to the basics of computer science. The availability of peer mentors, the fact that there are office hours every day at virtually every single hour of the day, as well as prof Horswill's patience are the best aspects of this class.",
                "At first it became really challenging because It was harder for me to adapt to racket. However later with a lot of practice and guidance I became more familiar with it.",
                "Racket really just super useless, but the prof is a cool guy and the structure of the class is aight.",
                "Pretty interesting course. Was my first experience with computer science and thoroughly enjoyed it.",
                "Racket sucks. Everything in this class is done in groups so make sure you like your group; if you like your group you'll love the class, if you don't then you won't. Not too difficult of a class, especially if you've programmed before. It's really annoying that we have to learn how to code in Racket but unfortunately if you're a compsci major/minor there's no way around it.",
                "This is a really large course, but Professor Horswill is a great professor. He uses a flipped classroom, wherein lectures are prerecorded and class time is used more for practice, but he goes over a lot of the lecture material in class anyways. The material can be tough, especially if you're new to computer science, but it's definitely do\u2013able and there are TONS of office hours to help you. Try to stay ahead of the weekly exercises, don't forget to go to tutorials, and study for quizzes and you'll be fine.",
                "CS 111 is a great start to CS classes at Northwester. While it felt pretty trivial with an AP CS + personal project background, it was still an interesting class, and Ian did a good job of making it entertaining. Lectures were usually useful and covered good information, and Ian did a good job of mixing in real world anecdotes about the subject matter.I wouldn't say that I learned a ton in this class honestly, but it was a great experience nonetheless. I always felt prepared to do the HW assignments, and tests never felt unfairly challenging.",
                "Professor was great, super welcoming and great at taking questions even in a 400 person lecture hall format. Easy class for those with prior coding experience",
                "The course is meant to teach the most fundamental ideas of computer programming. Having taken CS in the IB program (equivalent of AP), I must say that although the course started smoothly, the ideas and concepts came in a confusing order even If I was somewhat knowledgeable around them in a way that I didn't feel I had a definitive way to go about mastering them fully. It is a challenging course by default but it should have better flow. I think Ian's teaching style of a \"flipped course\" with us having to watch the lectures beforehand did not end up working for most people. I found myself not understanding the lectures very well at times because of how abstract the explanations of concepts were, and I have talked about people who were completely new to CS that had even more trouble in that and had to put an illogical amount of effort to do well in the course. Lastly, i think the evaluation method could be improved. More questions on the quizzes for more points and variety in question styles!",
                "If you've previously covered recursion, this course provides nothing new, aside from learning a new programming language",
                "pretty challenging for people with no coding experience",
                "It's racket, so it ultimately is a language that you'll never use ever again (besides CS214 I guess). For all of you w/ prior exp like I did, you will not learn much. Nonetheless it is a good intro CS das for all. Still, it you r not interested in CS, go take CS110. You will learn more practical stuff, I promise.",
                "Coming in with prior coding experience made this class extremely reasonable and I feel like it wouldn't be very demanding for someone without any experience either. For an intro CS class, I think it did well covering the fundamentals of computer science and taught students who took APCS new concepts and material as well, although I can see how the learning curve might seem steep to people who have no experience whatsoever. Ian was super understanding and patient all quarter and he obviously cares about his students. We would be assigned lectures to watch outside of class and Ian would basically go through the information again the following day in class, making actual class time feel redundant and boring. However, I thought the troupe exercises were a good help and kept me focused."
            ]
        },
        {
            "course_code": "EECS_111-0_1",
            "course_name": "Fund Comp Prog",
            "instructor": "Jesse Tov",
            "year": "2019",
            "quarter": "Spring",
            "instr_rating": {
                "mean": "4.30",
                "count": "53"
            },
            "course_rating": {
                "mean": "4.17",
                "count": "54"
            },
            "comments": [
                "I don't think that the way that this course is structured was really for totally novice programmers. Ultimately, if you have experience programming and are comfortable behind my computer, I feel like you will be fine in this class.",
                "I feel that I learned a good amount from the class, but sometimes struggled a lot with concepts.  Professor Tov was a good lecturer but a lot of what we discussed in class wasn't relevant to the homeworks.  Also, many of the peer mentors didn't have Professor Tov when they took the class and sometimes weren't as helpful because of this.",
                "I thought it was a good course however I felt Tov didn't do the best job making the content digestible",
                "Difficult",
                "This class is hard but you will definitely learn a lot. I feel that grades are not proportional to the time spent working on each element. I literally spent 12hours per week on homework while only spending at most two hours preparing for the exam. However, the homework only counts for 30% of your grades. Also, it's fine to feel lost or confused you can always contact a TA or the Professor (the Professor is extreeeemely helpful in his office hours). Sometimes he shows us confusing concepts that are way more advanced than what we study, you will feel overwhelmed but don't worry, the exams are pretty easy.",
                "EECS111 with Professor Tov is probably the hardest intro class you will ever take in your life. His homework assignments are extremely difficult especially for students who have no experience in coding. However, if you stick with this class I gurantee you that by the end of the quarter you will learn SO MUCH more than any other professor teaching EECS111 and develop a confidence that you can actually code!",
                "You learn a lot but it seems harder than it should be for an intro coding class.",
                "Hard course. Jesse makes it exceptionally hard. I really enjoyed the class however.",
                "Actually coding on our homework \u2013\u2013 especially with a partner \u2013\u2013 allowed us to learn better",
                "came in with no experience. Lived to tell about it. Don't expect to learn a popular language, it's all in Racket, but that's because the class is much more about design principles than working code \u2013 readability, conciseness, etc. \u2013 honestly not too bad, way better if you keep up on readings but it's tough. Unless your partner is amazing, expect to have to grind for several hours on the weekly projects, but they are doable. exams tbh not too bad if you can do the homework",
                "the lectures were hard to follow along with, I recommend spending extra time reading the book to have a deeper understanding of the material",
                "Jesse is a good teacher who moves at a quick pace. Some of his examples in class are extremely complicated and often confusing. The length of the class usually tires students out but staying focused is the key to understanding the points. The readings were very long and the class itself doesn't cover much of them. However, doing the readings and paying attention in class put you ahead of other students. The tests are easier and very similar to the study guides.",
                "I feel like this course is intended for students with no experience. I feel like my prior knowledge helped me do the homework, but it didn't help me learn more or reinforce my knowledge.",
                "Homeworks definitely challenging, tests not too bad. By no means an \"easy A\" class and far harder than w/ the other professors from what I've heard. BUT I think it's a good class if you're willing to put the work in and want a solid intro to computer science. Only frustrating thing is the partner system... literally pointless and it essentially results in one person doing all the work.",
                "Take with Tov! Tov is the best! He broke things into simple parts and made it easy to understand. In the end we learn more than people with other instructors.",
                "reaction is nuetral",
                "I came into this course with an interest in pursuing a comp. sci. major. After taking this course, I can safely say that enthusiasm has been killed in me. Not because of the class difficulty, but because of how boring it all was.",
                "The class was interesting, but at times I felt that it was taught sort of like a \"puzzle\"\u2013 most of the class focused on understanding the abstract components of coding, and didn't focus much on applications. The final midterm reflected this\u2013 we were given a reference sheet of functions, which was like the pieces of a puzzle, and most of the problems were basically equivalent to assembling the pieces of the puzzle into some useful form. Maybe this is what computer programming is, fundamentally; but to me it felt unsatisfying, as if I had not really accomplished anything. My goals for computer programming are to create small programs that will help me with other aspects of my studies in science or math, and I'm unsure that this intro course helped prepare me for that kind of programming.",
                "I enjoyed the course content but felt that it moved too quickly at times.",
                "I heard a lot of negative things about this class going in, about how it was going to be super easy and how it's in a bad language (racket). I had lots of coding experience before taking this class, and while it made the class easier, it certainly didn't make the class easy. This class forces you to think recursively, and definitely worth taking.",
                "it was a difficult class especially without a partner dedicated to work on assignment with me",
                "this class was very puzzling and frustrating at times but the feelings after understanding a concept or finishing a homework problem was so rewarding. would only recommend if you have some interest.",
                "This class is difficult. Lectures can be a drag because it is just the professor at the front coding while you watch. It is too fast for you to code and follow along. if you do the homeworks, you will learn what you need to. Towards the second half of the class, you have to actually pay attention in class because most of what's on the second exam will not be covered in homeworks. Homework can be incredibly tedious and tricky.",
                "Professor Tov is an amazing professor! He is so smart and really wants his students to do well and understand the material. It is clear that he devotes a lot of time to the class and is very willing to meet with his students in office hours. There is an online discussions platform used called Piazza and Professor Tov usually responds to posts extremely quickly. The class is a lot of work, though requiring around 8 hours per week to get top scores on the weekly homework. If you are truly interested in learning and understanding comp sci, then take this with Professor Tov. If you just want to learn the basics, and don't want to spend as much time working on comp sci, then you should probably take it with Sarah. After taking comp sci for three years in high school, I feel like I got a much better foundation to programming in this class!",
                "Professor Tov is tough but he is passionate and you learn a lot.",
                "This was my favorite class this quarter. Im sure most of the other ctecs are going to say something like \"racket sucks\" or \"take it with sarah\" or something like that but honestly because the course was challenging, it forced us to learn a lot! I feel like I have a very good programming foundation because of this class.",
                "If you have the space in your schedule to spend 9 hours a week on a 100 level class, this is an amazing class. You always end up doing better than you thought you could. You build pretty cool programs, and learn a lot. It isn't too hard, but it is a lot of work.",
                "Though this class is interesting, the weekly homework is extremely difficult (probably way more difficult than it should be, given the material learned) and very time consuming. Furthermore, the material on the midterms is decently different from what we learn in class, so before each midterm, I had to learn a lot of other new information in the few days between when we got a practice midterm and when the real midterm occurred.",
                "Professor Tov is evidently passionate and well\u2013informed about the material that he teaches. Although, the pace and difficulty of the class is beyond that of the other two quarters of EECS 111.",
                "it\u2019s like OK, you\u2019ll survive. lectures don\u2019t match readings and the tests match the lectures so do with that as you will.",
                "I think I did learn a lot, but as a beginner there is a really steep learning curve. I felt really behind most of the class. I think best advice is to do the readings. You can go a little slower than the schedule says because the readings go way ahead of what we learn in class. It was really helpful to have the practice exams with an almost identical structure to the real exams. Office hours are also very crucial for this course because the homework is really hard and time\u2013consuming. Even though this class is a lot of work, it's really cool to see how much I've learned and I'm able to do now.",
                "Pay attention in class. Jesse can be kind of dry, but he's more than willing to help if you have problems.",
                "Exams were easy but homework was unnecessarily difficult.",
                "I was surprised with how many office hours where available and realized they were very helpful for finishing assignments.",
                "This was a very good class. The instruction was helpful and Professor Tov was always available for questions. The abundance of office hours was extremely helpful as well. However, every single homework except for the first was a partner project, which very quickly got annoying. I was stuck with most or all of the work for every homework, so it's important to make sure your partner does their part. The homeworks can be difficult, especially if you have to do them alone or mostly alone. The earlier ones can be finished quickly but other takes many hours. Additionally, learning Lisp doesn't seem to be that useful for programming in other languages, although I haven't tried that yet so I can't be sure. Professor Tov is great, however, he explained everything well in and out of class and in general was extremely helpful.",
                "This course is a good amount of work for an intro course, but it covers a lot of material. Homeworks were challenging but a good way of learning the concepts, exams were easy. Readings were useful in the beginning but then cover stuff we don't talk about in class. The lectures were sometimes pretty engaging, other times they are hard to follow. I thought it was interesting how the prof. would go into tangents about programming theory/history, but a lot of this stuff went over my head, but we weren't really expected to know a lot of it",
                "The course was pretty challenging, but stick to the practice exams and get started on your homework at least 4\u20135 days before it's due.",
                "It would be better if he didn't just expect us to learn by following him code, because for an hour and a half its hard to pay attention to that level of detail for that long and expect to retain most of it. tutorials are really helpful and though they're optional I highly recommend you still go",
                "This class requires you to learn a lot of material on your own, but it is easy to do so by completing the homework assignments and applying yourself during them.",
                "I would not recommend taking this class with Tov. I took it for the neuro major requirement, and the class description says that it is beginner level but it was extremely difficult without any prior programming experience. My partner and I spent at least 15 hours on every homework assignment, and sometimes the TAs didn't even know what was going on to be able to help us. If you're like me and don't have that kind of time or the desire to do anything CS after this class, save your sanity and take it with a different prof.",
                "The lectures are not helpful at all and weekly homework is unnecessarily hard/time\u2013consuming. However people say the professor is great for more advanced EECS classes"
            ]
        },
        {
            "course_code": "COMP_SCI_111-0_20",
            "course_name": "Fund Comp Prog",
            "instructor": "Ian Horswill",
            "year": "2020",
            "quarter": "Fall",
            "instr_rating": {
                "mean": "5.51",
                "count": "278"
            },
            "course_rating": {
                "mean": "5.04",
                "count": "281"
            },
            "comments": [
                "The most important part to this course is that the language chosen was racket. Having previous experience in Java and Python, racket brought a new set of skills to the table such as a large focus on recursion and inheritance (something I did not have too much experience with in Java and Python).",
                "Great Intro to CS class. It was a huge class but Prof. Horswill was very good about teaching at the right pace and answering questions. If you have previous CS experience or took AP CS, the class isn't very difficult, and if you've already learned racket or lisp, this class is a nice review.",
                "This course is a great place to start if you want to learn computer science. The professor is great and the lectures are actually helpful, unlike many other courses. Unfortunately, the class is taught in Racket, so only take this class if you are considering a CS major or want to take other CS classes.",
                "This was my favorite class this quarter. Ian is a great instructor and he was very accomodating about issues with remote learning. Also he and Andie, the TA, would both frequently put their cats on the camera during the Zooms.If you've taken AP CS, this class is a breeze. It seemed like it was also accessible enough to people with no programming experience.",
                "This is an amazing class for new and old coders alike. Racket is a great equalizer language, and very useful for teaching functional coding. Ian is by far the best instructor I have ever had in coding and general wisdom. The instructors were always extremely helpful and responsive to questions, so I never felt stuck on an assignment. If you are new to coding, this class will give you a great foundation in coding, to test the waters. If you have coded before, this class will still teach you and throw some curveballs. Overall amazing course with amazing resources. Recommend for anyone who wanted to see what coding is like.",
                "The course was a bit slow, and the assignments took very little time. If possible, I recommend you try to place out of it.",
                "This was a great course! I had no previous knowledge of computer science, and I feel that this class was a very helpful introduction.",
                "I loved the pacing of this course, and it really helped me build back my own confidence in my CS skills after several negative experiences with CS classes in high school. I realized that the reason I hated CS in high school and got so frustrated working on assignments was that I always waited until the last minute to complete assignments, and I lacked a fundamental understanding of what my code was doing. With this course, lots of time was spent going over the basics and asking help was always encouraged. Because of that, I had a great time in this course and highly recommend it.",
                "I personally loved this course. I had never taken a computer science course before and Prof. Horsill made me excited for more material. The content was fun and engaging and wasn't to difficult. Just make sure to not think of this as a blow off class because that is not what this class is. Make sure to use office hours if you are having trouble, all the TA's are helpful and willing to help.",
                "The material of the course in and of itself was solid and helped me learn, but I would've preferred if it were taught in another programming language. I found Racket unnecessarily confusing and difficult to grasp.",
                "It's a pretty straight forward class and I felt like I could follow along pretty well as someone who only took AP CS A in high school, the microquizzes are kind of hard to do well on sometimes but it's still not hard to do well in the class since most of the work is group work and most of coding is just problem\u2013solving.",
                "The class was good in introducing me to the basics of programing.",
                "The tutorials were by far my favorite part of this class. I did the advanced tutorials and they were all super interesting and fun to work on, and the format worked well for me \u2013 mostly working by myself but being able to ask the other students for help. The fact that we had a full basic interpreter at the end of the tutorial series was super cool and gratifying to build.",
                "The only negative thing I have to say is that having both class meetings and Panopto lectures was sometimes hard to keep up with, but that's a very minor complaint. A benefit of the Panopto lectures was that they were always there to go back to and listen to if you needed to be reminded of something when working on a coding assignment, and you could do this at any time throughout the quarter, so being able to review earlier material was very helpful. The course was very fun and Ian was very engaging during class meetings. I will say that the course was very loosely structured, and whether that's a positive or negative thing really depends on the student.",
                "We use Racket in this course, and Racket is pretty weird and kind of hard to fully understand logically. I didn't have any prior CS experience coming into this course, but I didn't think it was too difficult. Sometimes I had trouble with the assignments, but there were always TAs holding office hours which was super helpful. I think that if I had also paid more attention in class and spent more time outside of class trying to learn the concepts the class would have also come easier. We had micro quizzes after every lecture, and there were definitely a few that were difficult, but in general most questions were just based off of the lecture slides.",
                "It was a bit different than what i expected because i\u2019d never used racket but other than that i wasn\u2019t too surprised by anything.",
                "If you come into this class with previous computer science experience, it will not be extremely challenging for the most part. Specifically, really the first half of the course is pretty basic, but eventually becomes more challenging (and offers additional challenge through weekly advanced tutorial sessions). Overall, the course material was still interesting and the weekly projects and tutorials offered some challenges and testing of your understanding of the new material.",
                "I thought it was a good basis for learning many concepts in programming. Sure, racket isn't the most useful language, but this is a very good intro class.",
                "First half of the quarter was very manageable but second half of the quarter was confusing and fast paces. Definitely would be a hard class for someone who has never coded before",
                "This course was fine for me, considering I already had experience with programming, though I do feel like I would've struggled without such background experience, since the troupe activities were done pretty fast (which was enough for most questions, but some questions needed a bit more than 1 minute to do). Otherwise, the professor is nice and will try to answer the questions as best as they can.",
                "I think the aspect of this class that impacted me the most was Ian's rounded approach to teaching the basics. He is extremely helpful and dedicated to educating. I wish I could take all my CS classes with him if I could.",
                "Racket is such an unnecessarily confusing language, especially if you've had previous programming experience. Using Racket was probably the worst part of the class; the actual material wasn't too bad to learn, and the instruction was excellent. I didn't like the flipped classroom structure because a lot of the time, the professor just ended up repeating the same things from the recorded lectures we watched before class. The tutorials were very helpful in understanding any confusing parts of that week's lessons.",
                "I love Ian",
                "Ian is a great professor. He is super nice and always answered questions. He teaches in a clear, thorough manner. This class started out easy but then progressively got harder so be prepared for that. DO NOT start the coding assignments the night before/a few hours before. They take a lot of time and if your code isn't working, then that will take even more time. Use office hours if you need to. We also had three short quizzes a week, so make sure you don't forgot about those.",
                "The course is taught in Racket with a focus on functional programming, which can be very unintuitive for individuals with experience in languages like Java and Python. Ian is very passionate about the topic, though it is easy to fall behind and struggle due to the huge amount of online materials outside of class to go through.",
                "Course was alright, pretty chill. If you have programmed extensively before, this may be boring but definitely took away some things. For the remote course there were no midterms or finals so it wasn't very stressful which was good.",
                "Be patient. They assign an exercise to do every week or so. Look at these exercises as essays. You wont be able to get them done in an hour (some will be able to props to you). Make sure you set a side a good amount of your day for this class.",
                "The professor was good and gave clear enough instruction but racket is the worst language every and really turned me off to coding.",
                "The videos were nice because you could always go back and look at slides or watch them.",
                "This class was very well taught and made coding fun with the interesting assignment given each week. The way that many in\u2013class problems were group\u2013oriented made the class even better because it allowed me to problem\u2013solve with my friends!",
                "It was difficult to adapt to racket's syntax but I felt that the leaning in this class helped me get into better practices.",
                "The course moves slowly at first, which is great, but if you have computer science/programming knowledge from high school, it can feel painfully slow at first. Learning a functional language like Racket is great, especially if you're coming from AP CS and haven't used a functional language before. It does feel a bit ham\u2013fisted at the end of the course when we start doing imperative programming with the student languages, but it's not too bad.",
                "I entered the class with no prior experience with computer science, so I was challenged quite a bit during the class. While it did give all the necessary information needed to complete the assignments, the classes themselves did not really help me in learning how to code. This was not a fault in the teacher or class design, but a nature of the subject itself. CS is best learned by doing, so those with prior experience are always and inherently better off. However, the class itself, along with the workload, is quite manageable and easy to succeed. The teacher was cool also.",
                "Professor Horswill is a terrific instructor and a genuinely good person. 111 is taught in Racket, a relatively niche language that often feels discouraging to new programmers. Regardless, you'll cover a range of topics and learn a lot over the course of the quarter.",
                "This class is not overly demanding as their is only one main programming assignment a week. I appreciated the tutorial sections because they let me ask questions about topics I was confused about and the small group setting was nice. The professor has been the nicest professor I had this quarter and the lectures were had a relaxing vibe to them.",
                "I thought it was a great course. Goes over a wide array of topics, so a great place to start with CS. The workload is not too bad, the only way I could've survived this quarter because my other classes took so much time I spent only the time needed for the weekly HW assignments (~3 hours,  give or take depending on the difficulty). Prof. Horswill was also really understanding given all of our different remote situations, and he's a great professor overall as well.",
                "This course is super fine. Ian is awesome, and I generally enjoyed class time. If you have some programming experience though, you're not going to learn a ton of new stuff. The language we use, Racket, is not super intuitive, but it makes sense why they start us out with this. The class is moreso teaching us programming discipline rather than direct skills. Overall still a good class. Good intro to CS \u2013\u2013 if you go to tutorials and do the exercises you'll be fine.",
                "Overall, the course was extremely clear in a subject that can be done in many ways. This made it easier to grasp the key concepts and basics.",
                "Ian and this course were both incredible. The transition to Racket was not difficult at all coming from someone who has mainly used Java. Ian is very good at explaining concepts and loves to help his students any way he can. It was also easy to get an A since the microquizzes weren't difficult at all and the final project is a group project.",
                "I liked that the language used levelled the playing field because of how obscure it was, but at the same time, much of the course was learning syntax/techniques of specifically Racket instead of actually learning programming. I do understand, though, that it built up some useful programming skills such as problem\u2013solving and being systematic/logical, which I was definitely use in the future.",
                "This is a very interesting course and isn't that hard. Professor Horswill is extremely chill and makes this class very enjoyable. Don't fall behind though because this course begins to move fast very quickly and it'll be hard to catch up once you fall behind.",
                "This course meets the needs of students at various levels of coding experience, including mine which was none at all prior to coming to NU. Ian was the best because it was evident that he truly cared about his students and wanted us all to succeed. Being a beginner, the tutorials helped me fully understand the material presented that week. Since I had no experience, learning Racket was not really an issue since I had nothing to compare it to, despite this Ian presents the material in a very approachable manner.",
                "This course was well organized, and low pressure, which made it very fun and informative without being stressful. I feel that that interactiveness of the class helped me retain more information than high pressure tests.",
                "The class isn\u2019t much harder than 110 as long as you pay attention. The quizzes are pretty easy and the HW is solvable if you paid attention. However, the class is way better if you go in with a friend as there is group work",
                "I feel like this class basically just exists to teach you recursion, but that's an important and tough concept so.Love Ian. Hate Racket.I wish the advanced tutorials had been something other than the interpreter week after week cuz it got kinda boring. I also feel like the synchronous lectures were basically just repeats of the Panopto lectures, and as such they weren't suuuper helpful...",
                "If you're going to take this class remotely, be prepared to watch a lecture's worth of material to prepare for the same amount of time in a synchronous class review what you just watched. I thought that was super frustrating and was generally pretty useless. That said, Ian and the TAs are all so helpful and competent, they're really willing to guide you through problems step\u2013by\u2013step, and they're available essentially around the clock. The workload is pretty light too, maybe a couple of hours on a weekly assignment and super short micro quizzes 3x a week count for ~70% of your total grade.",
                "This course was nice because I got to rewatch any lectures I had issues with as well as the numerous TAs who help if you have any questions.",
                "The course was very basic in terms of the concepts and material that it taught, but that's to be expected. The live lectures went over the exact same material as the lecture videos, so the live lectures were kind of pointless apart from potentially providing a platform to review and ask questions about the material in the lecture videos.",
                "There was an incredible amount of support which was important as someone new to computer science. There was also a big emphasis on hands on learning rather than just lectures and tests.",
                "I hadn't done any coding in a while outside of the homework for some McCormick courses, so this course was a decent refresher on fundamental concepts.",
                "I thought this class would be a lot harder than it was, but Ian made it very simple and easy to understand. Some of the coding assignments could be tough, but there are a lot of office hours to get help in (some can be a hit or miss). Overall, it was a very manageable course. The only minor issue would be the microquizzes, since they are only worth about 1\u20133 points on average, but a bunch were dropped at the end.",
                "Ian is once again an amazing person and lecturer, and this course was awesome. As long as you keep up with the lecture videos you'll understand racket, and assignments are very reasonable as well as the microquizzes. I sometimes felt that lecture meetings were kind of a repeat of what we already watched at home rather than a chance to introduce something else or talk about questions, though. I know Ian loves racket and he has good reasons for using it for this course, but I still can't help but feel that it's not a great language to start with since it is so different from most other common languages.",
                "As someone who learned most of his coding outside of the classroom the course helped me clear up some of the fundamental cs basics that I often neglected when simply coding for a goal. For example, learning the difference between functional and object oriented programing.",
                "I enjoyed this course overall as it allowed me to delve more into computer science. Racket as a language, however, is quite difficult to understand.",
                "This was overall an easy class, especially if you have any coding background. The live classes were really boring because they were completely review from the prerecorded lectures that we were supposed to watch (even the same slides). There isn't much work to do for this class, which was nice.",
                "This course was great. The structure required a bit of extra time as we'd watch the lectures outside of class and then have class meetings where we went over examples. However, it actually helped in reinforcing my understanding of the material. The homeworks were easy enough where I was never worried about finishing but they were challenging enough to where I really felt like I had learned the material when I was done. Ian was a wonderful instructor and I highly recommend taking this course if you need a requirement or are just interested in CS.",
                "Very much recommend this course. The content was well paced, and the assignments were engaging.",
                "The course was enjoyable and interesting. Ian was very understanding and reasonable with grading and workload.",
                "Ian is the GOAT. He is understanding of the difficulties students face and he adapts as needed. He is also great at communicating with students and is quick to answer questions and offer help. Overall, an enjoyable class that can be difficult but is more than manageable.",
                "Ian is awesome! He truly wants everyone to do well in his class. I had no coding experience whatsoever going into the class, and did just fine. So, if you're nervous about being behind don't worry\u2013\u2013 the class is taught at a beginner level. Definitely utilize office hours\u2013 sometimes the TAs were confused too, but (most) of them were very helpful. Also, my troupe was the best and I wouldn't have gotten through the class without them. I signed up for this class reluctantly, and now I want to be a CS major!",
                "This was a great course, with a fantastic professor. Ian was able to make the class feel small using troupes and in\u2013class exercises, despite the number of students being around 300. This class was a great introduction to programming, and it was pretty much a grade booster for most people.",
                "Nice class, really easy if you had a decent amount of experience with programming before. Racket will take some getting used to but it can be somewhat fun for certain things, actually.",
                "Racket be a frustrating language to learn, and that's mainly due to the absence of external resources on the internet (outside the Racket handbook itself) dedicated to helping students understand it. That being said, Ian usually doesn't ask you to do anything too complex with it and a lot of the homework is pretty basic applications of the code that's covered in class and the lectures. The bulk of the grading is very small 1\u20132 question quizzes every other day and weekly assignments, both of which are very manageable. Ian's a great teacher as well.",
                "The professor is really cool. The class is not really hard, but it still requires you to put some time and efforts in it. At first Racket is super confusing, but after you get used to it things will be much more clearer.",
                "If you've taken CS before, you may find Racket pretty annoying. It'll get better as you go on. Note you are not trying to learn the language, but to strengthen the concepts. You'll learn a lot with that mindset.",
                "This course was designed really well, and I learned a lot from each lecture. CS 111 was a really good introduction course to take, since Ian helped us understand the meaning behind certain approaches and the evolution of human\u2013computer interactions. I definitely feel that I learned a lot beyond just programming, and was intrigued by the culture around computer science. In addition, I was really struck about how much Ian sincerely cares about his students. It felt that CS 111 was one of the only classes to have made accommodations due the new remote nature of the course. Ian provided us with multiple ways of getting clarification on the class content, and the pretty regular opportunities to get help at office hours was also nice. More than other courses, there was a community around CS 111 due to the material. I am excited to explore other computer science courses in coming quarters.",
                "I enjoyed this course as it gave a basic introduction to the core concepts of computer science. I thought Ian was a great teacher and always tried to help students. It doesn't take up a lot of time and is beneficial if you are looking to minor or major in computer science.",
                "Overall pretty solid course.",
                "I hated the format of this course. The reversed class format was not as helpful as it should have been \u2013 going to class felt like a waste of time in the end. Tutorials and homeworks was where most of my learning came from, and I never felt like lectures really helped me get through them.",
                "My only prior programming experience was APCSA. I think this class was really good. The weekly assignments were challenging but still doable, the microquizzes were simple but a bit annoying, and the tutorial sessions were useful. Learning Racket was a bit of a struggle at first but it gets easier once you know the basics. But it's definitely very easy to slip up and cost you some points. Make sure to test your code thoroughly and don't miss the microquizzes. I think anyone could succeed in this course, especially since there are several TAs to help out during office hours and there was also a Discord server. I think Ian is a really cool prof and he did a great job of making this class virtual\u2013learning\u2013friendly.",
                "This class is straightforward and very forgiving in terms of the microquizzes and tutorials. I did not need to spend much time studying or doing homework outside of class except for the final project, which I actually enjoyed doing compared to an exam.",
                "Ian is great and is really approachable. Since we didn't have any exams this quarter, it was really easy to fall behind since the daily quizzes could be completed without a comprehensive understanding of the material. This class is an easy A, but it is up to you to make sure you learn the content, because you can not understand much and still get an A as well.",
                "This is not a challenging class, and the concepts are quite simple and fundamental.",
                "I enjoyed it. The language it presented was very interesting, as it presented aspects of programming that I had always wanted to be able to use, but had never found a language that supported it.",
                "Overall, I thought this was a pretty decent class. None of the material was overly complicated, and the worst it got was doing recursion (and even then, it wasn't too hard to get used to). Even if you haven't taken a computer science course before, I think you'd be perfectly fine taking this (though CS 110 is always an option as well). Grading is overall really fair:40% Assignments (one per week, a couple hours each)30% Microquizzes (one the day after every lecture, 5\u201310 min each, bottom 10% are dropped)20% Tutorial Session Participation (one per week, and you just have to make an effort on the material to get the full grade)10% Final Group Project (we got a couple weeks to do it, and the requirements were far from impossible)For the tutorials, I don't know that I'd recommend doing an advanced one (as opposed to classic). While my TA was very nice and helpful, the material was honestly kind of useless. We spent most of our time learning how to write Racket inside of Racket, and I frankly couldn't tell you how almost any of it worked. Advanced tutorials are supposed to be for people who've done computer science previously (AP, etc), but what we did ended up just being mostly frustrating and irrelevant to the course material.",
                "Really great introductory course for computer science that strengthened my interest in the field and made me think of programming in new ways.",
                "I thought that this course was a good introduction to computer programming even though Racket is a difficult language to work with. Learning recursion right off the bat will probably serve me well.",
                "It's a good class with a good professor but the language is pretty weird and felt sort of useless to learn. The class was prerecorded lectures and class time was spent reviewing and doing group activities.",
                "I thought this was a pretty interesting course and it did a good job of helping me build my Computer Science knowledge. The class uses Racket for a programming language and while it's a bit weird a first, you'll get used to it.",
                "It is frustating learning a language that you won't use practically in the real world. We learned a lot of the fundamental concepts of cs, but when it comes down to practicality, it was lacking. Also, I sometimes struggled with the way the material was taught. If you already know a good amount of cs, it might not have been confusing, but a lot of the times, the way things were worded, presented or explained weren't easy to understand.",
                "Ian is a great professor and this course is easy to do well in and learn in. The exercises are fairly straight forward and go along with the lectures seamlessly. If you're looking for an introduction to coding, this is an excellent option. Racket is definitely a bit strange but Ian makes it work.",
                "its a fine class. find someone else in the class to work together on stuff with",
                "Even though you will not be using Racket much beyond this course, this is an exceptional class for anybody interested in learning the basics of Computer Science! Ian is a wonderful instructor, and this class covers all of the essential subjects. The workload is not intense \u2013 you will have to do weekly assignments that cover that week's material, and TA office hours are extremely accessible if you need help.",
                "This course is pretty chill in terms of workload. Ian teaches through powerpoint, which is a little frustrating in a CS class, but he's really understanding and reasonable when it comes to expectations. He's also probably the only professor I had this quarter who really understood the mental toll Zoom University takes on you, and he adjusted the course and the grading accordingly. The final project was a lot though.",
                "A great intro class to computer science. Ian is a great instructor and you really do learn a lot in this class.",
                "The best way to describe this class is that it's just such a low priority that you think about it less and less.",
                "Prof Horswill teaches well and is nice in class and out of class. He was great with accommodating you if the situation called for it. Learned a lot but it was a lot of pre\u2013lecture videos to watch.",
                "I had heard that 111 was pretty hard and that Racket was an awful language, but I didn't find either to be true.  Granted I took 110 before this, but honestly, I found this class easier than 110.  Racket does take a little bit to get used to, but it's really just a basic and straightforward language.  I really enjoyed Ian's teaching as well.  Very responsive to questions (in class, discord, etc.) and is just a cool and chill guy in general.  I can say that 111 went much better than anticipated.",
                "The course itself is quite interesting, and for someone new to CS you will certainly learn a lot. Prof. Ian is great and his lectures and classes are interesting and informative. Racket isn't the nicest language but it gets the job done.",
                "Ian is a great professor and the TAs are very helpful! Make sure you do the assignment earlier in the week because I would do them last minute and I'd always get stuck.",
                "Ian is a very good instructor. Going through the slides was very helpful for the hw assignments. And the hw assignments were very helpful for really understanding the material. I didn't like the fact that we had both prerecorded and live lectures (it takes longer time than planned). The prerecorded lectures were very helpful for understanding the material.",
                "I thought that it was very helpful in learning the logic behind coding and how coding works however I would say that Racket was not fun. Racket often times made things more confusing and maybe another language would work better.",
                "I liked this course because it was mainly working at your own pace. The assignments were manageable but appropriately challenging.",
                "In my opinion Racket is a questionable language for an intro course but I can understand some of the logic behind it. The choice to use the Racket student languages was even more questionable, especially towards the end when we started doing more complicated things that the student languages don't support. This resulted in some features being hacked into the student languages which was less than ideal. On the other hand, the topics covered in this course were definitely the right concepts and it gave a good look at some of the different specializations within CS. Overall pretty good, but I do think the level of challenge could be increased a bit.",
                "This course was certainly what I expected to be as someone who has studied computer science before; it was a nice review of concepts I already knew, effective at teaching me a new language, and effective at teaching me what it means to program functionally.",
                "Great instruction, Ian is fantastic at explaining things, the size was just rough to have a faster paced course if you wanted it.",
                "Racket is a unique language. It was very different from languages that I used to learn, but learning Racket expanded my understanding of computer programming.",
                "This class was structured differently than normal due to virtual teaching. It was a flipped classroom, with pre\u2013recorded lectures to watch before class and then class consisted of doing examples. For grading, we had canvas quizzes 3 times a week, assignments, tutorials, and a small group final project. Overall, I think having the class via Zoom was helpful to see Ian\u2019s screen when coding.",
                "This was my favorite class this quarter. Ian is a fantastic teacher and very responsive to students' needs and questions. The pacing was slow to start, but I'm grateful for the class's approach to the virtual learning scene. Bravo.",
                "CS111 is a required course for all people interested in CS, it teaches the basics of programming. It's well structured and the professor knows what he's doing!",
                "I wanted to learn how to code and I did so I was happy about that. I was a little disappointed we didn't code in a more practical language but I suppose that's what the following courses are for.",
                "Ian is an extremely understanding professor. Considering I had a lot of workload in other classes, this particular class was way easier to handle than the others. The only slight issue is that we have 1\u20132 question quizzes 3 times a week that are worth a substantial amount of our grade. So if you do not understand the material, you could lose a lot of points from those. However, some are dropped which is extremely helpful.",
                "Very basic stuff if you have already taken APCS. If you haven't, the course material is explained thoroughly and quite well. If you pay attention as someone new (or rusty) to CS, you should do very well. For more experienced people, it should be very very easy. They also didn't make us use Lockdown Browser, which was a plus.",
                "I thought this was a great class. I definitely enjoyed learning the language even though Racket is a difficult language to understand. I did not enjoy the microquiz system because each quiz is only a few questions and if you miss one question your grade drops significantly. Otherwise, the class was great.",
                "The class is what you make of it. If you really want to learn Racket then you have to manage both taking the time to learn the concepts and pushing through advanced student questions to ask something simple. I simply did not vibe with the class layout.",
                "Having no familiarity with computer science prior to this course, having a teacher who would slow down to explain topics more clearly was essential.",
                "I thought that Ian taught the course very well! He is also very approachable with questions and always stayed after class to answer them. Overall a great class!",
                "For students taking this who are already at or above an APCSA level:You will probably be bored the majority of the course. This particular course took place during COVID(which it hopefully will be in person in the future), which allowed me to not go to any lectures. You will probably end up doing the same if you already know a decent amount of programming. If you are scared of the \"recursion\" part, don't be. It sounds intimidating but is not too difficult in reality. I thought imperative programming would be a completely different viewpoint for coding, but by the end of the course you effectively are just using racket for OOP.For people taking this as their first CS class:It probably won't be particularly fun at first. Coding has a difficult learning curve, but this class is a pretty decent intro class. If you are thinking that you just want to learn coding and take one cs class, from the people I have talked to, 110 is a better option for a one\u2013and\u2013done CS class experience.Also racket isn't fun or intuitive, but you get used to it and it become easier and less painful.",
                "Good class. Comp Sci isn't for me, but I liked this class. Easy A even with no experience programming.",
                "Honestly, this was a fun class! I think people are probably going to have mixed feelings about the pacing/difficulty because people with lots of coding experience are going to think it was way too easy and beginners are going to think it was hard, but I feel like that's just kinda how it is for intro classes. Personally, I started off with very little real coding experience (I basically only knew a little HTML/CSS), and I found this class difficult but manageable. Even if you don't know anything at first, you'll be able to more or less write basic programs by the end of the class if you put in the work, which is pretty neat :) The assignments really help solidify everything you learn in the lectures, so as long as you take the time to actually understand the content and do the homework, you'll be fine! Everyone hates Racket when they first see it, but once you get used to it, it's really not as bad as people say! We just like to complain lol. If anything, I think Racket was actually really helpful because you only need to learn a few basic components and you can build those up into more complex programs. Plus it's designed so that you can think of everything like a function, so it really helps you get the hang of functional and imperative programming. Ian is a really fantastic prof and a lovely human being! My fav part of class was seeing his cats barge into the Zoom <3 He's very knowledgeable and passionate about CS, and you can tell he genuinely cares about helping us learn. He does a really good job of explaining the main concepts in a way that's engaging and easy to follow, and he's always willing to answer any questions you might have. Virtual learning just sucks in general, but I think he did a great job of accommodating for the situation and making sure we weren't super overwhelmed with work, which I really appreciated given how stressful this quarter was for everyone. I would definitely recommend taking this class with him if you can!",
                "It is was a good review of fundamental CS concepts.",
                "The class is very fair, and Professor Horswill is an extremely kind professor. He teaches with clarity. One of the best parts about this course is the number of TAs present. There will almost always be around 8 hours of office hours everyday. There are a lot of resources for this class.",
                "This class can be a bit frustrating and challenging when trying to make your code work. However I think if you make an effort to understand the videos, use class time to ask questions about the slides/videos, start the homework early, and go to office hours when necessary, then you'll be fine. Troupe members are also a good resource to ask for help or understanding from. This was definitely my easiest class this quarter (from a Mccormick student)",
                "The learning process was fairly paced enabling enough time to digest the material.There was enough time and resources to practice outside class.",
                "I really enjoyed this course and found the work very interesting. I think I was able to learn a lot about the subject.",
                "This class was a great intro class. Coming in I had minimal CS experience and felt like lots of other kids already took AP CS in high school or another coding class, but it did a great job of bending to the level of each student. Professor Horswill encouraged questions for beginners but also helped with more advanced coding as well. Make sure you attend each tutorial, and don't skip the first couple of micro\u2013quizzes (those are the easier ones so make sure to do well on them). The final was also lots of fun, and I was able to make new friends despite the remote environment.",
                "I definitely learnt more about how to think like a programmer. I had no issue following the class structure, and if I ever had any questions, both Ian and the TAs were very easy to reach out to.",
                "Pick your troupe wisely and take advantage of office hours if needed. This class is very collaborative if you allow it to be.",
                "I honestly still don't know the benefit of starting off with Racket vs a language like Python for an introductory class.",
                "This course is great for introducing students to computer science. Low stress assignments and Ian is the nicest professor. Definitely did not regret taking this class.",
                "Overall, the course did a decent job at going over some basic programming skills such as recursion, inheritance, and functions. However, sometimes the professor would explain things in a really confusing way, or not go over something well enough and I would be confused on the exercise (which the later ones did a good job of challenging me). But Ian is really nice and hes happy to clear up any confusion over anything, and will try to help you as much as possible. The class is a pretty easy A, as long as you pay attention, but be prepared to be a bit confused on the recursion segment of the course, especially if you have never programmed before.",
                "The class was organized great, especially online and especially with a size of 300+ students. Ian is great at communicating the lesson material, and really held all of the organization together. There are lots of TAs you can go to for help if you get stuck on the homework. Great class, coming from a beginner in programming.",
                "Racket is really weird, but you have to accept it. You will definitely understand how it works by the end of the year. Something I wish I did was to follow along during Ian's lectures, I think that would have helped me understand the concepts better. Go to the tutorials and follow along with the professor and you're set!",
                "As someone who has no prior coding experience, this class really helped me learn the fundamentals of programming, and is a good basis for anyone who is remotely interested in coding in the future. With no prior experience, the language used was fine and not too complicated for a beginner to learn, and most of the TAs are very helpful for when you get stuck.",
                "This course covered fundamental concepts via Racket, which was an interesting and new way to learn computer science.",
                "The structure of the course was great",
                "Micro\u2013quizzes and weekly homeworks constitute the majority of your grade, and you have plenty of time to complete them and lowest scores are dropped. Tutorial sessions are pass/fail and pretty fun.",
                "This course was structured very well. The Panopto lectures watched before class were pretty clear on their own and were solidified in class when Ian would go back over them. The exercises were challenging but the instructions and ideas were clear which made them a lot easier.",
                "Good content, nice professor, didn\u2019t like micro quizzes.",
                "Prof Horswill did a very great job with teaching this course. His lectures were very interactive and you could always ask questions, either in Discord, on Piazza, or by going to office hours, which were there basically all the time during the week.As long as you put the work in to understand the material, this course is an easy A. There's not much else to say besides that.",
                "CS 111 is definitely manageable compared to other first year classes, especially if you have some prior experience with CS. If you pay attention during lecture you should be fine \u2013 the homework programs in CS 111 are much easier than the homework programs in EA1.",
                "The structure of the course was well\u2013planned and Ian's teaching is easy to understand. Microquizzes were weird at first but once you understand what they're asking they become a lot more manageable. I definitely learned a lot in this course and even though I came into it not sure if I even wanted to pursue CS at all, this course made me like the subject a lot more.",
                "Ian is a fantastic person and professor and truly cares about his students. The course is taught with a student version of a language called Racket which is very odd. I wish it wasn't taught in this language, but that is what the department has decided on. The course does teach fundamentals pretty well, but the language won't be too helpful in the real world.",
                "This course was rocky, at first It did not pique my interest and wasn't like what I thought it would be originally, but as I kept learning, it was more understandable and the coding assignment became more fun and enjoyable.",
                "Professor Horswill is the coolest and most approachable professor I've encountered here. Not just because he does video game research or whatever, but because he answers any questions asked to him and never makes students feel like a nuisance. I really appreciated that.lecture IS a discussion section; it's hard to learn from lecture activities unless you really understood the (hour long) lecture videos you'd have to watch each week. So make sure you watch the lecture videos!",
                "I think the course was okay. Ian is an amazing professor and is very passionate. The lectures were optional and I stopped going to them halfway through the quarter because he had prerecorded lectures that were half as short as the live lectures. The weekly projects can sometimes take a bit. I started off doing them in a few hours but then it became somewhere between 6\u20138 hours. It's not hard to get an A in this class since Ian gave us a few extra quiz drops due to the election. I personally very much dislike Racket but other than that, it's a good class for beginners in CS.",
                "i thought the troupe idea was one of the biggest pluses to this course, especially with online learning. being in a group of people who can all discuss issues theyre having is really useful. the tutorials were also a good way to refine what you may have learned in class.",
                "This class is amazing! Ian is awesome, the homework is easy but helps you learn, the class is structured well is is very engaging (weekly tutorials, and troupe activities). We even had a mental health week where there was no homework and optional quizzes.",
                "I loved the course, and was grateful that Ian did an alternate time zone meeting. Some of the concepts were a little harder to grasp at first, but tutorials also really helped us out!",
                "I really liked the course. Ian is awesome and explains things very well and is always willing to answer questions during class time. The course material isn't too bad, recursion can be a little tough but Ian made it pretty easy to understand overall. Final project is pretty fun in my opinion, you get to work with your friends and its pretty open ended. Overall, great class, especially with Ian.",
                "Great class but weird language to start off with.",
                "While this course was mainly review for me, I think it was very well\u2013taught and well\u2013organized, especially after the first 2 weeks or so.  Ian was a very considerate and helpful professor, and I gained more appreciation for the Racket programming language during this course because of his teachings.",
                "I took this class as a complete beginner and boy did I struggle. I probably should have taken CS 110 not 111 \u2013 no idea why I chose this course over 110. The virtual structure of the class was recorded lectures to watch before class, and then Ian would basically repeat the lectures over Zoom. Then there were (almost) daily microquizzes and weekly assignments. No midterms and just a final project. I started skipping the zoom lectures because they were so similar to the recorded ones and it was difficult to learn anything by just watching slideshows. The weekly tutorials with TAs were helpful but overall I found myself spending hours late into the night trying to figure out how to do the weekly exercises. It was extremely stressful and by the end I felt like I was just floating through the class without absorbing anything because I just had no idea what I was doing. My grade didn't suffer thankfully since I was able to do well on the exercises, but I'm just leaving this class with even LESS interest in CS than I did before and the pretty useless skill of operating racket. Ian's very chill and nice but if you don't have experience in CS don't take this class.",
                "Ian posted all the slides on canvas which was immensely helpful. BIG fan of the panoptos, since we could go back to them and relearn whenever necessary. Genius idea to have troupes, since it solves so many issues with online learning (like difficulty making new friends, not enough practice, etc.). Discord, tutorials, TA office hours were all very very helpful. I think the way this class was organized could not be any better. Racket just takes a longggg time to understand. Transitioning from thinking about problems from a java lens to a racket lens took some time.",
                "this class is very easy to get a good grade in even if you put the effort in and keep up with the lectures.",
                "The exercises are key in maintaining coding fluency. These by far taught me the most.",
                "The instruction was great, though the lectures were pretty boring/pointless because it was just going over Powerpoint slides instead of example coding. I really didn't like Racket, but the course wasn't difficult overall.",
                "The course was very low maintenance. Weekly assignments that you can get a lot of help on from TA's and quizzes every other day that arent bad really.",
                "I know the quarter system is fast, but this class was a pretty abrupt \"Welcome to Northwestern\" class for me as a first\u2013year student. I think I just didn't know what I was getting myself into. This was one of the classes where I just tried to take away as much as I could even if it meant I was behind in the mastering the concepts in class.",
                "The course is interesting and Ian did a great job as a professor. I don't think Racket is the most useful language to learn and this course will probably not be enough as a prerequisite for a course like 211. That said, I believe anyone interested in CS will find this course interesting because it will make you think in a slightly different manner.",
                "It was a very simple structured class, but sometimes the amount of videos we had to watch would be very high, especially when you're only given 2 days to watch them and it's very easy to fall behind and never catch up. If you have zero coding experience, you might struggle in this class a bit, but it's still doable.",
                "As a potential CS major, I enjoyed the class. I was surprised though when I found out it was in Racket, as it seems like a useless language. While I'll never really use it in life, the concepts were taught well and I know I'm set up well for the rest of the sequence.",
                "This course is a great introduction to those who haven't had any experience in computer science or programming. I personally didn't enjoy programming in Racket at all, but I'm sure there is a good reason why this class is taught in it.",
                "This course is really awesome and there is just so much support. I never felt stuck on assignments because there were always TAs or lecture videos that I could turn to for assistance.",
                "The course was a very good introductory course. It followed a great progression from conceptually understanding code to coding more advanced things.",
                "As someone with no prior CS knowledge, I thought this course was pretty good at introducing it.",
                "This course was really enjoyable.Ian Horswill was a really fun and accommodating professor with a great sense of humour. He's the type of professor that really cares about his students. Just one example, he gave an alternate class meeting time for those students in the Eastern Hemisphere due to timezone issues. It was at 10 pm his time, which I found to be super nice of him and definitely helped me to learn more in the class. I found Racket to be quite an easy language to understand given that I've had no prior programming experience, but I have heard from others that it may be too simple to the point its counterintuitive. The latter mainly came from those who have had prior experience with CS so I guess it comes down to personal preference. While some of the exercises were quite challenging, the documents explaining the exercises will generally guide you through what you need to do and provide some hints.",
                "I found Racket a little difficult to understand, but the TAs really helped.",
                "Overall very easy class if you have previous programming experience. Only challenging thing is getting used to Racket syntax. Ian is a very nice professor and class is enjoyable. Recorded lectures are not really necessary to watch. Work load is low. Advanced tutorials are also pretty interesting and makes the material a little bit more challenging/fun.",
                "good stuff",
                "I came into the class having never done anything with computer science and I really enjoyed this class. It wasn't hard, challenging at times, but never were you felt that computer science wasn't meant for you. The assignments were fun to work on and bring accomplishment once they worked, and the TAs were always more than willing to help on those when you were stuck, even if you simply didn't know where to start. The final project was also really fun.",
                "I largely found the lectures to be quite easy along with the quizzes that followed. The tutorial is what gave me a good challenge, which was also the most interesting part of the course.",
                "A pretty interesting course that keeps you engaged and active with the content.",
                "I was very impressed by how this course excelled in teaching in a pandemic. I felt like this class was one of the few classes to change the class expectations to reflect the differences in what can be expected in an all online learning environment were it is harder to get help versus normal times. On top of that, this class had TA hours throughout the week so that you could always find a time to get help if needed.",
                "I really enjoyed this course! While being in a big zoom lecture can be a little boring, the assignments and content were very engaging and the course has inspired me to pick up a CS minor.",
                "You never get to actually code something useful. I literally could not focus on any class because it was so boring. Ian is great though. One of the best professors I have had, he really understands his students.",
                "This course was a really good introductory CS course. Professor Horswill taught everything very well, but if you have some coding background, don't expect this course to really challenge you.",
                "Really enjoyed this class. Racket isn't super fun to work with or very practical, but even as someone with very little coding experience I was able to get the hang of it. Ian is great, and the entire support network of TAs he has is an awesome resource. Not a whole lot of work for this class, which is nice.",
                "If you've never had coding experience it's not an easy A. Make sure to go to office hours and get help.",
                "This class is what you expect for an intro CS class. Some people are not the biggest fans of Racket/Scheme (the language this class uses), but it's not that bad. You just need to get used to the syntax a bit. As someone who had previous programming experience, this class was not that hard. Most of these concepts are from AP CS, but just using functional programming. If you coded before, this should be an easy A for you. Also, grading is very fair. It's pretty just assignments, quizzes (pretty simple), and showing up to tutorials.",
                "This was an interesting course. I think it did a good job of teaching the fundamentals of computer science in a way that made sense. However, it felt kind of unnecessary to teach the class in Racket, a language that is not really used to my knowledge in the real world. The professors do a good job of explaining why they made the decision to use it, as it provides a good way of introducing all the core concepts that most other programming languages are built upon and I actually agreed with them. Racket does a good job of forcing an understanding of computer science fundamentals. However, I still don't think it's worth it. I feel like the costs of using Racket to introduce students to CS outweigh the benifits. I would've rather spent the quarter learning a more popular language like Java or Python instead because I feel like the points this class tried to teach with Racket would have also been doable in more mainstream languages.",
                "The workload is fairly light \u2013 lecture microquizzes weren't all that bad (although there were frequently errors in them which was kind of annoying) and I actually had fun doing the assignments. Racket is a nice language for teaching basic concepts of programming, but I don't know that it has a lot of real\u2013world applications and I don't know how much value there is in making experienced programmers learn it.",
                "The material covered a lot of key topic in programming and was framed in a way that made it easy for a beginner to understand what was going on. The pace never felt to fast, and it never felt like there were gaps in the content.",
                "This class is very much manageable as long as you attend lectures. And if that isn't enough office hours can provide to be really helpful.",
                "This course is a very good intro course for Computer Science, but it starts slow so anyone with previous coding experience will likely find most of the course not challenging and overall boring.",
                "This is a chill class. Not much work is needed for this class other than going to the lectures. The only thing that you might struggle with is the programming language itself. Racket is not intelligent and not intuitive.",
                "Not only were the lectures very short, digestible, and interactive, but they are also extremely informative and fun to learn. To me, that is the hallmark of a great course and a great instructor.",
                "This is a very good course to take, especially if you are a freshman. Racket takes some getting used to if you have worked in other languages before but once you are over that initial hump, it is pretty straight forward. Not a high stress course. A bit redundant between recorded and in person lectures, however.",
                "Course teaches the fundamentals of CS. Makes you think very conceptually.",
                "Fair class, Ian is a great professor. Not a fan of racket, don\u2019t underestimate it.",
                "This course is great. Ian is goated.",
                "I really enjoyed this course. It was interesting, it was not hard to be successful in, and it was really enjoyable to do work for. Ian was an amazing professor, and I liked this class so much that I wound up deciding to major in computer science after all (was already a passion of mine \u2013 but this class reminded me of how fun it can be). It was definitely easier for me because I knew CS coming in and had taken AP CS and done programming on my own. I never struggled w/the work but there were definitely other people in the class who did. So, it's an easy class if you know CS but might be a bit more challenging if you don't. Still, it is not a hard class, and there are a lot of built\u2013in aspects that make it easy to do well in (quiz drops, automatic extensions, etc). Advanced tutorials were pretty challenging though. Also the quizzes are a huge chunk of your grade but often only one or two questions, so make sure to do well on those!",
                "I was very pleased with this course and especially grateful that he offered advanced tutorial sessions that stretched my abilities.",
                "Ian is a great professor! He is very supportive and encouraging, and allows 48\u2013hour extensions for projects without questions asked. Microquizzes can be hard sometimes, but he also drops the bottom 10% of your quiz grades so as long as you don't bomb every single quiz then you should be fine. One thing is though, the pre\u2013recorded videos on panopto overlaps with our zoom lectures quite frequently, so it feels a little boring sometimes having to watch a lecture before class just for Ian to repeat the same material again with no substantial changes. There are also a lot of power user questions that were present during our meetings that kinda excluded people who have no prior experiences with coding.",
                "This course introduces Racket well, but learning some concepts yourself would make coding even more fun. As usual with learning to code, actively learning and writing interesting code would make the class fun for any student.",
                "If you have any programming experience, this class is mostly review. Racket, however, is a pain and Ian's method of teaching programming (through powerpoints) is not the best. The programming assignments were always straightforward and didn't take too long if you paid attention in lectures and class meetings. The tutorial sessions are also very straightforward and the TAs are willing to help",
                "I liked how the instructor and the TAs were all low stress and always helpful and ready to assist in a students' struggles.",
                "I learned python extensively before. The content of this course did not make much sense to me at first. Racket is a very complicated, but unnecessary coding language. However, the teacher did a great job managing all of this. Overall, not a hard course.",
                "This course is a good introductory course in computer science. Ian is an awesome professor and incredibly nice. I think that if you have any programming experience at all this course will be quite easy and there is not a lot of work at all. I sort of wish they allowed people to petition out of it, but it was interesting to learn about programming in a functional programming language.",
                "I don't think this class is absolutely necessary. You do learn the fundamentals of computer programming, but I think you'd be better off taking a class that taught another program.",
                "Ian is a great professor who will guide you step by step in learning how to code. HIGHLY recommend this class with Ian.",
                "I loved this class. If you have a free slot in your schedule and have any interest in programming I would highly recommend it. Ian was a great professor and highly accommodating given the challenges of remote learning.",
                "I feel as if I am more confident in learning a new coding language than I was before.",
                "Great course! Pretty easy even with no proper programing experience, as long as you go to lecture!",
                "I was new to computer science and plan on majoring in computer science, so I was really looking for a course that introduced me to the topics of computer science. Racket wasn't my favorite language, but it helped me to learn the general ideas of coding.",
                "Taking 111 with Ian was pretty great. He is a great professor and would answer nearly every question. The course is taught in Racket which was weird at first but you get used to it after a bit. Workload is very manageable, one homework assignment a week that doesn't take too long.",
                "It's a fun course if you could get over the Racket programming language syntax. It's really not bad at all and frankly simpler than other mainstream languages. Ian is an awesome instructor and makes the class very interesting. The homework is decently challenging but doesn't take too long to complete. There are daily micro\u2013quizzes that can get annoying if you forget to do them often. You also have programming \"tutorials\" with TAs that are ok... probably the weakest part of the course since they're basically supervised homework. The final project is fun if you work with a group.",
                "Learning Racket seemed like a pain at first, but I really liked how it helped everyone to start at the same place. Racket seemed annoying as it was really easy to miss a parentheses and get a syntax error. However, at the same time, it helped me become a better programmer and taught me the importance of writing a more concise and well\u2013structured code.",
                "I really enjoyed this course and feel like I learned a lot. While Racket can be kinda annoying, Ian is great, and the course really sparked my interest in CS even more.",
                "Definitely a lot easier if you've taken a computer science class before. Racket is a hard language to wrap your head around, but it's not too bad once you get the hang of it. Exercises aren't super difficult, but it's usually a problem solving problem more than anything else. Ian was always quick to answer questions and go through the confusing bits."
            ]
        },
        {
            "course_code": "COMP_SCI_111-0_1",
            "course_name": "Fund Comp Prog",
            "instructor": "Sara Owsley",
            "year": "2022",
            "quarter": "Winter",
            "instr_rating": {
                "mean": "5.50",
                "count": "179"
            },
            "course_rating": {
                "mean": "4.93",
                "count": "179"
            },
            "comments": [
                "Sara is one of the best professors. Really understands the needs of students, gives helpful advice on careers and just navigating the CS class successfully. She dropped some of the lectures during a week which was difficult for students cos of midterms and all. She held one on one student advising sessions which were really helpful!",
                "I really enjoyed this course. I was a little bit familiar with coding before taking this class, but I feel so much more comfortable with it now. Sara is a great professor who cares a lot about whether you understand the course material. She is so good at answering questions and makes herself available if you ever need help. There are also so many peer mentor office hours which makes it really easy to get help if you are stuck on homework or studying.",
                "The professor was amazing. The course load was very manageable but the tests were very challenging.",
                "I personally don't prefer the asynchronous style of the class, but the professor is very lenient in terms of time given to complete assignments and she clearly emphasizes learning over test\u2013taking",
                "This class was very difficult for me as it was my first Computer Science course. It was definitely not an easy A for me, although it is helpful that about 50% of the grade is comprised of assignments, attendance, and mini quizzes, all of which are simple to gain full credit for. Professor Sood is a very helpful instructor and she wants the best for her students. The TA's are really attentive, patient, and supportive as well. Definitely go to office hours! I also highly recommend taking this class with friends or making friends to work on the problem sets with. Overall, I would only recommend taking this course if you have experience with Comp Sci.",
                "Low time commitment and relatively straight forward class; not super easy in absolute terms, but relative to other courses this one is pretty easy. Professor Owsley explains the material very well both during lectures and in the tutorial videos, but she does not address questions or concerns too well and always refers you to one of the peer mentors.",
                "This class was fine. Sara is a good prof but the way the class is structured is not that great. First of all it's taught in Racket which while they say is a powerful programming language, is completely useless and you will never use again. It's reversed classroom, where you learn outside of class and work on problems in class, and usually I think this is fine but in this class i didn't like it at all. There are there usually 2 20\u201330 minute lectures to watch before every class AND a canvas Quiz, which would be fine except the class attendance is also mandatory and graded so it's basically just doubling the amount of class. And in class all we do is work on homework/ungraaded assignments, which i would rather just do outside of class, so it would just be better all around if the material was actually just taught in class. Exams are pretty fair so at least there's that. Take this class if you must, it'll be fine and is easier that most compsci classes, but i dont feel like i came out of it with much applicable knowledge and it was pretty annoying the whole time.",
                "I liked it.",
                "Chill intro programming course.",
                "There's a bit of a learning curve at the beginning of the quarter when you're first adjusting to Racket, but the more you practice, the more familiar it becomes. Sara was great at explaining topics and was accommodating; there were also a lot of peer mentor office hours that were super helpful. The weekly exercises were pretty challenging, but nothing impossible with office hours. Overall, I would recommend this course to anyone who is looking to major in CS.",
                "I loved Prof. Sood \u2014 if you want to take CS 111, take it with her!",
                "TAKE THE CLASS WITH SARA SOOD. Only my second quarter here, but definitely one of the best professors. I didn't have a lot of experience going in and the class was super doable, focus during class and watch the videos, you'll be fine.",
                "Sara is a really good professor and she genuinely cares about her students and wants them to succeed. This was a pretty easy intro CS class and I definitely recommend taking it with Sara",
                "I'm not as interested in CS generally and took the class as a prereq for other majors. I have taken a year of java in high school so the class is not a hard one at all; tho it takes some time to adjust to Racket. Weekly exercises are the major assignment; 2 tests each is 20% and these are relatively easier.",
                "Great class, great teacher, great lectures, great TAs, highly recommend if interested in Comp sci",
                "Oh my god Professor Sarah is the absolute best. Take this class with her. She is so helpful, makes sure you understand everything, her lecture videos are easy to follow, and she really cares about you and tried to get to know as many of the 250ish kids in her class as she could. Tests are easy if you study and the exercises are guaranteed 100s if you go to office hours and get them right.",
                "I didn't really like the flipped classroom situation since we didn't really learn much in class, but it was also good because it forced me to get started on assignments that I probably would've started the day before it was due.",
                "Overall, pretty good course. It's a prereq so most people need to take it. It's in Racket which is somewhat odd/different, but you do learn the very basic coding logic. If you're doing python after this, that is much better! Also Sara Sood is SO nice, you should try to talk to her one on one at least once. She is very encouraging, whether you're a CS major/minor/just taking it for different reason.",
                "Engaging",
                "This course requires a lot of self motivation as the lessons are meant to be learning outside of class, and in class is time to work on assignments. I really enjoyed how collaborative this course was. It was a great introduction to comp sci and Sarah was an amazing teacher \u2013 very understanding and supportive!",
                "this class was fine. racket kind of sucks but its not that hard to do well in it especially if u take 110 first",
                "Sood is a great professor and made the course very digestible for someone without any computer science experience. While at times the course felt like it was moving slowly, it helped me ensure that I understood every concept well.",
                "CS\u2013111 is an easy class. Especially taking this class with Sara, she provides the tools for you to do extremely well. If you have had any experiencing coding before, this class will seem like a waste of time. However, if this is your first coding class, then I believe this will be an invaluable experience for you.",
                "Take this course!! Sara is the best professor I ever had here and she really incentivized me to continue pursuing CS. The class is not very hard, especially if you go to some peer\u2013mentor office hours to clarify any doubts.",
                "The course was great and the professor was also really good at explaining the stuff.",
                "People hate rackets for a passion and there's a reason. Language is very repetitive and looks long lmao. Outside of the pure pain from the programming language, instructions are very clear and Sara offers a lot of resources (even outside of the classroom). TA is extremely helpful!",
                "Highly recommend this class, especially with Professor Sood. Honestly, I actually enjoyed coding in racket, but I went into the class with no CS experience. This class gave me confidence and skills to take more cs classes in the future.",
                "Professor is extremely talented at teaching and engaging, I understood everything pretty well thanks to how thorough her lectures were.",
                "This course was fine, however I think that the language used (Racket) is really unuseful.",
                "Prof was very accommodating to the current circumstances of the world and allowed us to submit our work to count for daily attendance rather than going to class. I do wish that rather than making us do modules at night in our own time that she would have taught the content in class and made our mini classwork exercises into homework. I never went to office hours and I did good in the class, but it is important to read the assignment pdfs very carefully.",
                "This course is really fun and an easy intro class if you want to see if you have an interest in computer science. The workload is very easy to manage and there's a lot of peer mentors that hold office hours all the time, so it is easy to get help. Definitely take the class with Sara she's an amazing professor.",
                "Great intro to fundamental programming concepts. I have a good bit of programming experience under my belt and still learned a good bit from the class. Professor is nice and there are many resources for help and answering questions. Be warned, however, that Racket and the IDE it uses are pretty dreadful if you have experience with standard programming languages like C++.",
                "Overall, this course was pretty simple. It does get a little confusing if you don't pay attention to the lecture videos, so make sure you watch those. Exercises were not too bad.",
                "Sara is a great professor, lectures were kind of useless. Attainable A if you dedicate the time necessary, mainly just go to office hours, but more challenging that a lot of people make it out to be, for sure focus on getting a good group",
                "Other than the fact that you are working with Racket, which is just so random that you will not find a single resource online to refer from, I think that this course is amazing. It really teaches you how to think step by step like a machine. Takes it from me, a person who cannot code for my dear life, and I managed to figure a lot of the homework out by myself. Professor Sood does a great job of explaining the code and the way that the machine carries out that code. Furthermore, the homework is much much harder than the exams themselves and they also account for most of our grades, so there is no way that you will walk out of this course failing. Highly recommend the course.",
                "This course is simple if you have previous programming experience. Sara is a really good professor, and you should take it with her if possible!",
                "If you have no interest in CS and are just taking one for IMC or something just take 110 bc its a lot easier.",
                "Learned a good amount!",
                "good class",
                "Sara Sood is amazing! She is really really nice and actually cares about her students and is also really good at explaining everything thoroughly. Definitely go to peer mentor hours too\u2013\u2013they are life\u2013saving. Overall, this class is pretty chill even as long as you kind of know what's going on.",
                "This is a good course for students with no programming experience, and helped me with declaring my major.",
                "This class was required for my major in McCormick, but I'd recommend to ANYONE. Super fun, easy, and interesting. The assignments felt like puzzles to figure out each week, and the work was light outside of class. Professor Sood was awesome as well! \"If there were a bus full of cats, how would you count them?\"",
                "Drracket is not the besstttt code format but you just gotta perserve. Sarah Sood is an absolute icon \u2013 she's an amazing teacher, and always takes the time to help each and every student. There's an exercise due each week and then 2 midterms \u2013 there are many practices on canvas. Have fun :) GO TO PEER TUTOR HOURS",
                "Sorod is a an awesome teacher and makes the class interesting. The flipped classroom is a bit annoying but not awful. Exams were somewhat difficult, but not horrible. Only take this class if you need to though because learning racket is not very helpful or a good way to get introduced to programming.",
                "Professor Sood is a good teacher. The peer mentor hours were very helpful. Because of the flipped classroom structure of the class, I felt a bit disconnected though.",
                "Very easy class, and easy A. Professor Sood is an amazing professor. She is extremely resourceful and good at explaining/walking through difficult computer science concepts. Personally, the only thing I didn't like about the class is that Racket is kind of a useless and annoying language to work with. If you took AP Computer Science, this class will be extremely easy, with most if not all of the concepts being review.",
                "This class was extremely informative and definitely greatly expanded my knowledge about Programming. The course load was manageable and the content was not too difficult.",
                "I was worried I would not be able to follow because I knew nothing of code, but professor was really good at explaining and really cares for her students.",
                "This class is proof that even the most challenging course can be enjoyable if enough help is provided. Thank you to whoever thought that TAs should hold office hours from early in the morning till late at night, EVERYDAY. Sara is the kindest, and funniest lecturer and it was so nice to be able to approach her to ask questions. Thankful that I took this class when I did with Sara and this set of TAs.",
                "This course was definitely challenging but manageable. It was similar to my cs 110 class, except racket was harder to understand than python. But Sara did a very good job explaining Racket and how easy it could be to understand the language.",
                "This course was very difficult to do on your own. IF YOU ARE NOT A COMP SCI MAJOR AND WANT AN INTRO CLASS, I WOULD SUGGEST 110. Professor Sood is amazing, but definitely would not recommend this class if you aren't interested in pursuing comp sci related studies",
                "The professor explains concepts extremely well and there are a lot of peer mentor hours available if you are struggling. DrRacket is just a very annoying language to learn that we likely won't have to know ever again. I would say that that is the only downside of this course.",
                "Although racket is a strange coding language, this was a great introductory course in computer science and definitely sparked my interest in the subject.",
                "I loved this class. Professor Sood is amazing and super helpful!",
                "Overall, a great course. Super manageable, easy workload, but you still learn a lot. Sara is really nice. And there are infinite office hours. I took this course after taking CS 211, because I needed it as a prereq for CS 214. It was an interesting class with very manageable workload, but I feel like I could have learned imperative programming and recursion without having to take the full course. If you have taken other CS classes at Northwestern already, only take this class if you have to.",
                "Flipped classroom style definitely adds to the workload outside of the classroom. That being said\u2013 lecture is often optional depending on your comfort with the weekly coding assignment. Overall  a fulfilling introduction to coding for someone completely new to the discipline.",
                "There were moments when the class work felt very overwhelming. There are parts of this course that feel very self guided and that left me feeling a little lost. That being said its a very interesting and for the most part engaging class.",
                "Sara was an amazing professor, who was understanding of our workload as a student and accommodating for different situations. She and the peer mentors were accessible for help if you needed it. This class was also pretty easy and had a low workload that you could finish in class.",
                "Professor Sood is an amazing professor. She is a very effective lecturer and seems very down\u2013to\u2013earth. In terms of the course, the homework assignments are very doable, even for someone who has no experience in computer programming prior to this class. Lectures are online modules, and class time is usually reserved for group work and asking for help. Going to peer mentor hours is incredibly useful if you need assistance, and there are plenty of peer mentors available. Exams aren't too bad either as long as you study and look at the past exams. Overall, pretty good and doable intro course.",
                "Overall, I was disappointed with this course because the professor made it seem that the material would be correspond accordingly with the tasks but it seemed like there was more time spent on trying to complete the hard assignments.",
                "While racket is difficult to use, I enjoyed learning the topics and they are all apparently important for future classes.",
                "The instructor was great and the flipped classroom structure makes perfect sense for an intro class like 111. The work was very manageable and peer mentor office hours were helpful when I needed help or clarification.",
                "It's a surprise to me that we need to learn new concepts by watching the videos on our own before the class. I didn't like this method at first. But it turned out great. I could pause the video to think about it when I was confused, and I could skip the part that I've already understood. These are things I can't do if it was taught through lectures in person.",
                "3 module quizzes each week, one assignment, workload ok",
                "As long as you keep up with the modules and homework tasks you should be fine. There are so many opportunities for office hours to get clarification from peer mentors that even if you don\u2019t plan ahead to attend one, chances are that there is an office hour happening at that very moment so you can seek help. I would say that doing things like exercises/ studying ahead of time (even just 1\u20132 days before) makes a big difference in terms of office hours because you have a more likely chance of one\u2013on\u2013one with the peer mentors. Only two exams (midterm and final), both of which are very fair and reasonable. BUT if you\u2019re doing this for a distro, would recommend COMP_SCI 110 with Prof Sarah simply because Racket is less intuitive than Python. Sara Owsley is an incredible Prof \u2013 despite the class being roughly 200 or so in size, she put in a lot of effort to get to know her students.",
                "This was an amazing course taught by an amazing professor. It is definitely a really great course for anyone without much CS experience that would like to get a grasp on what CS is all about. It is a very welcoming environment for someone who does not have any background in CS",
                "This course is definitely challenging. The exercises can get tedious so I highly recommend asking the PMs for help in class or go to office hours. Sara is awesome and is really helpful if you have any questions.",
                "Sara was an amazing professor hands down. Didn't really like the idea of learning DrRacket at first but it turned out to be very interesting.",
                "Comp Sci majors can skip this cuz you have to take it anyway. Anyone taking this for another major or out of curiosity, this course may seem scary, but Sara is such a caring and helpful professor that you will feel like a better programmer no matter what. While there are some annoying parts about the course (recursion), it's super rewarding to be able to tear down your fears about programming like you'll do in this class. I encourage you to take this class. Unlike 110 (which I also took, for complicated reasons), you'll be learning in Racket, but I'm finding that understanding how to code in Racket makes you think about learning other languages in a different way, with more of a focus on understanding possibilities (Sara mentioning how to think about constructors, modifiers, etc will be forever stuck in my head) and less on \"how do i do this\". I highly recommend this class, even if to just make you less scared of Comp Sci.",
                "this class was effective and not difficult. sara was super nice and assignments weren't too difficult",
                "This course is great for people new to coding, though I also think it would be great supplemented by a bit of self study on coding logic in order to best prepare oneself for future courses. Teacher was great, and no complaints on material. Easy class, but still useful for learning Racket syntax.",
                "Sara is such a great instructor and the course is super organized. solid intro course that's not too hard but def helpful",
                "Pretty good course! Professor Sood and the peer mentors were super helpful when helping us with assignments. However, I felt like it was very easy to lose a large amount of points on exams for small mistakes.",
                "I didn't have any pror knowldege to coding, so that's the main reason why I struggled a bot in the class. However, Professor Sarah Sood is the BEST! She's so considerate.",
                "Flipped classroom design was low stress but made put a bunch of responsibility on the student. If I wanted to learn a lot, I could, but other times I may have not learned as much as I would have liked to. Mini quizzes were easy as long as the lecture videos were watched. The exercises are definitely manageable given the time and resources given.",
                "Although I was a bit hesitant when it came to using Racket, I found it to be quite instructional and intuitive. I think this course gave me a good foundation in computer science and better enabled me to succeed in any future computer science endeavors. I quite enjoyed the course and am now considering minoring in computer science.",
                "I wasn\u2019t the biggest fan of the flipped classroom, but if you you needed the extra time, it is very good for learning at your own pace and there are plenty of examples to do outside the assignments. If you already know how to code, this class is pretty easy, but if not, there is a lot of support to make sure you get everything. The assignments were pretty easy and the exams weren\u2019t terribly difficult. And Sarah does a good job of keeping class interesting.",
                "I didn't like the flipped classroom. I felt that the reliance on libraries made me even more confused.",
                "This course was absolutely wonderful. Professor Sood is hands down one of the best teachers I\u2019ve ever had. She genuinely cares about each student and is so thorough in her teaching style. Highly reccomend for anyone considering computer science.",
                "I wasn't a fan of Racket, but this class was pretty good overall. I thought it was pretty challening for an intro to CS class, but the plentiful peer mentor hours means you always have help pretty much whenever you want.",
                "Sara is a great professor and teaches the class well, however it is very difficult and you will definitely need to attend peer mentor hours to succeed.",
                "I enjoyed the flip lectures\u2013\u2013 where you watch on your own time and go to class to ask questions. I also like that Prof. Sara was very helpful with the assignments and taught very well.",
                "Overall not a super difficult course. Professor Sood really cares about her students and tries to get to know everyone. The only problem I had with the class was the exams because one question could drop you a letter grade which is frustrating.",
                "I initially thought this course would be boring since I am a CS major and have taken many CS classes but I still managed to learn a lot.",
                "it was great",
                "This class was a breeze but I did feel like I learned a lot. The teacher is very reasonable with the work load and also fairly flexible with deadlines. The exams were cake.",
                "I loved the way we used racket (although it was a bit frustrating at times) and how much I have learned. I was very pleasantly surprised since I didn't like how most of the engineering/science courses are taught at McCormick.",
                "Amazing. Midterms were okay. Content was reasonable. So many peer mentors available to help.",
                "This course was a really great introduction to computer programming. It's super accessible to people with know previous knowledge (although having taken 110 definitely makes the class significantly easier and I'm coming from that perspective) and the format of the class is really flexible so you get what you put in. I especially appreciated class time being dedicated to homework. As for the Racket controversy I get why people complain about it being the intro language and it can take some adjusting when you have a basis in another language but I promise by the end you'll have, albeit begrudgingly, a respect for the skill set it offers.",
                "This is a big jump from CS 110, just in terms of the programming language. Racket is much more different than Python, but definitely manageable.",
                "Very easy class. Watch the videos and do the assignments and you should be fine.",
                "This class was interesting and Professor Sood is great!",
                "I thought the class was very fairly graded. Sara is amazing, however be ready to put some time into the class if you are new to coding.",
                "good course professor is really nice",
                "Course was very interesting including an exercise weekly pertaining to the subject we were learning and videos to help explain those subjects",
                "I had this course with Sara and it was my favorite class so far at NW. She makes the class fun and the work load is not too bad. I definitely recommend.",
                "This course is a great intro course. Not a lot of work and pretty easy as long as you stay on top of it.",
                "Professor Sood was amazing! She really was able to make the class of a reasonable difficulty level where you felt encouraged to think and had to put in effort but also made sure that it wasn't discouraging. She also cares a lot of students' mental health which is so refreshing so you constantly felt really supported in the class as a whole. Overall loved this class and def take it with Sara :)",
                "I went into it already knowing computer science so it was really easy",
                "CS 111 with Sara Sood is an EXCELLENT intro CS course. Racket can be frustrating at times, especially you have learned other languages before, however Professor Sood is amazing and there really are a lot of resources to help you succeed. The course utilized a flipped classroom model, so we had to watch an hour long lecture before each class period. Overall, I recommend this class.",
                "Sara was a great instructor and always helpful! Fairly easy class if you have prior background with any high school CS class. There is plenty of help available for the work that is due and before exams.",
                "Take this class with Sood, she\u2019s the best professor in the department.",
                "Sarah is a great teacher! Her lectures are effective and easy to follow. As long as you keep up with the video lectures, the assignments tend to be pretty intuitive. One thing I will say\u2013 throughout the class, recursion is said to be the most challenging concept, but I happened to find the lessons after recursion to be more difficult.",
                "Sara relies on her Peer Mentors to teach you (PMs have office hours outside of class time and they're designated to help you on assignments, but nearly every time I went on a PM's zoom office hours, the meeting hadn't even started/they don't even show up) and she banks on the fact that people will watch her pre\u2013recorded lectures and then come to class the next day ready to put their new computer science skills or knowledge already to use. She barely does any teaching. I learned how to get by in the class, not how to code in Racket. With that being said, I do have to say that Professor Sood is a nice woman and assesses the progress of the class and caters the schedule to what she thinks students need.",
                "The way the course is designed is great. It challenges you, while giving you all the necessary resources to succeed. It is not necessarily easy though. Professor Sood makes everything better, with her amazing teaching and will to make everyone understand not only how to code, but what the computer is doing while you run your program.",
                "This class was a wonderful introductory course for Comp Sci. It was exactly what I wanted from a comp sci class!",
                "The teacher was great, but it was not an intro compsci course, and the language was really redundant.",
                "The reverse learning style used in this course makes it very difficult for me to personally motivate myself and learn the material. The extremely large class size also compounds this, making it difficult to ask questions and follow along during class time. The saving grace is the office hours, which are organized extremely well and open almost all hours of the day. The TA's are a blessing and help you fill in whatever you missed during class.",
                "The structure and the presentation of the content is very well done where you have video content every other day on the basic ideas and terms needed. Furthermore, there are exercises  that are assignments in place where you practice what you have learned throughout the week. However, midterm exams for this class were difficult to study for as finding bugs in code is something that you learn as you go along with the course and with your experience in coding.",
                "Racket is a super annoying language but the professor is very helpful and there are lots of TA hours you can go to, weekly assignments can be hard but TAs will help a lot. Exams aren't that hard and outside of weekly assignments not too much work",
                "You really get out what you put into this class, though it is easy to get by with little effort. Easy A if you try. You don't really need to go to lecture, we only occasionally get a hint for the activity that week or an answer to a part of the activity. All learning takes place through weekly lecture recordings and quizzes which are slightly time consuming but manageable. Only assignments are exercises which are weekly, can be time\u2013consuming but you can get through them a lot faster if you go to office hours (available all day throughout the week!)",
                "This course was a really good course to take, especially with Sara. The peer mentors are extremely useful in helping to complete the exercises each week and the exams themselves are not too difficult with Sara being very clear on the format and providing practice to help prepare for them.",
                "I don't feel as though I got an actual feel of what coding is like. I wish we had used Python or a more applicable language.",
                "This class was very flexible. There were many peer mentor office hours to attend to complete exercises and class time was usually time to work on our own or in groups.",
                "I would not have taken this course if it were not a prerequisite to basically every single CS class. It's not too difficult but the course material is not at all fun."
            ]
        },
        {
            "course_code": "COMP_SCI_111-0_20",
            "course_name": "Fund Comp Prog",
            "instructor": "Ian Horswill",
            "year": "2019",
            "quarter": "Fall",
            "instr_rating": {
                "mean": "4.84",
                "count": "223"
            },
            "course_rating": {
                "mean": "4.50",
                "count": "225"
            },
            "comments": [
                "Ian is awesome! Really works hard and cares about teaching the whole class.",
                "Good intro to CS class. Although many students don't like that the class is taught in Racket, it nonetheless does a pretty good job of introducing students to fundamental CS ideas \u2013 skills that are transferable across any language. At times, the syntax of Racket could be a bit tedious and annoying, but overall, the class does a good job of teaching you how to program in general, as opposed to just in one language. Pretty accessible even without a CS background IMO.",
                "Racket isn't great and I don't think it's the best choice as a first coding language. It is significantly less intuitive and much harder to follow than other languages like Java despite its apparent simplicity. It falls to the trap of making it so simple that it's actually harder to understand what's going on.",
                "As a student coming in with a lot of programming experience (Java, Python, etc), this class was not super interesting and I didn't learn a whole lot, but it did its job as an intro class. Ian is a very friendly and approachable professor, but basically all of the lectures were done based on some PowerPoint slides, which I really did not like because it's hard to learn how to code and problem\u2013solve if you just see code printed on slides. Because I had programming experience, I felt like learning Racket was much more challenging because the organization and structure and syntax of the language is drastically different from anything else I had done, so I initially struggled with that, but if you at least partially do the weekly tutorial activities and do all of the weekly exercise assignments, you'll get the hang of it by the end of the quarter. That said, I learned the most from going through the week's slides before I did each assignment, and then completing and making sure I understand my work for each problem of the assignment. Doing the practice quizzes is for sure the best way to study for the quizzes, and it is really helpful that you get a glossary with the full documentation for every single procedure/method you could possibly need on each quiz. Overall, I think it was a pretty good intro course.",
                "Lecture was good, but sometimes slow. Ian was very good about answering questions even though the lecture hall was huge. You get to look and mark up the slide deck, which I found helpful. The course acknowledged and allowed for group work very well, which I appreciated highly. The quizzes were low stress but still managed to hit on a lot of the big points of lecture. Weekly tutorials allowed for low stakes practice, which was nice, and the weekly assignments were well paced.",
                "The way this course is structured is great for students with no CS experience. The tutorial sessions are very helpful and the in\u2013class quizzes help make this a pretty low\u2013stress course. Ian is passionate and entertaining in lecture.",
                "Good course with great teaching. Perfect level of challenging.",
                "This class begins very slow and grows exponentially in difficulty from there. The HW assignments are extremely harder than the exams and are very different.Tutorials help solidify the skills learned in class through actual examples, many of which are helpful for exams.",
                "The easy first step towards to cs major or minor",
                "This is an easy class if you have prior coding experience. The assignments are all you really need to practice for the exams/quizzes.",
                "I really liked this class. I thought Ian did a great job at making the coursework fun and interesting, and he clearly cares a lot about our engagement and learning. Super fun class.",
                "The pace at which the course material was presented was just right and gave me time to fully understand the material. Also there are a lot of resources I could use whenever I needed help.",
                "This was an nice intro to cs",
                "Alright course, go to Tutorials and get to know your TA",
                "The language that we learn is not very intuitive, but it is nice that we really understand how code works and why.",
                "I had no coding experience going into this course and I thoroughly enjoyed it.  Ian's lectures were interesting and he explained the material well.  You definitely learn how to code in Racket in this class, which is fun and not too difficult to pick up.  Definitely would recommend for someone who's never coded, but wants to try.",
                "The professor explained each concept in a clear manner. In addition, we had ample time to finish each assignment.",
                "Good class overall, but could have covered more topics",
                "This course is pretty straightforward. Ian is a great lecturer who has slides that make a lot of sense and are easy to decipher. Ian is also super knowledgeable if you go to his office hours with more specific or advanced questions.",
                "It was really weird learning racket at first, but it gets better. Make sure to pursue other cs projects outside of class.",
                "The class is fine and Ian Horswill does a great job teaching. However, I did not like the language picked for this course at all. Racket is extremely unintuitive to those who have programmed before and is not really representative of how most coding is done. There is a CS exercise due each week that is fairly difficult compared to the quizzes/midterms which are much simpler.",
                "I'd already done some computer programming before taking this class, so it wasn't very challenging for me. Racket is kind of weird to get used to though, so if you've programmed before I think that's the biggest struggle. If you're just starting out programming, then I really recommend this course! It's a great way to introduce you to a lot of basic programming concepts. And Ian and the TAs are all really great and genuinely want to help you learn. Even though the course was easy for me though, I still enjoyed it because Ian's a really cool guy and the assignments were still pretty fun.",
                "I really enjoyed relearning some of my previously learned content, but the racket language still did not feel like a good way to learn the material.",
                "The course is fine overall. No curve which is a little tough but if you understand the exercises you should be fine. If the exercises cause you trouble just sit in office hours and have the TA's help you through them. Good low work low stress class for the most part, especially if you've taken AP CSA.",
                "I really enjoyed this course! I think that the difficulty was right where it needed to be, and Ian is great at using understandable analogies to demonstrate his ideas! I also really liked the discussion section system with the tutorials; it helped to compensate for the lack of intimacy in such a large class.",
                "For those who got 5 in AP CS: It is a very easy class overall and I did not feel that I learned much. However, some advanced tutorial problems (especially those about compilers) could be intellectually challenging.",
                "This class is cool if you\u2019ve never coded before but Dr. Racket isn\u2019t that cool of a language to learn in my opinion.",
                "The weekly tutorials was effective in providing practical engagement with content learned in the course.",
                "Ian is a great professor and the tests are pretty easy if you have any experience with programming.",
                "Solid introduction to comp_sci. The class was very fun at times.",
                "Lot of fun, we love coding",
                "It was important to learn CS principles but racket isn't a great way to learn them...",
                "It did a good job of focusing on Computer Science concepts, and a great introductory course for anyone who hasn't taken CS before.",
                "I've never coded before and felt that this course was a good intro course. Even though I have never used a different coding language I admit Racket is very annoying, but not terrible if you haven't had previous experience.",
                "Ian is a great lecturer in my opinion, and he really cares about his students.There are three midterm \"quizzes\" (one of them takes place during the final exam period, but all three are weighted equally, so it's not a \"real final\"). These quizzes are pretty short (they don't involve writing original code or long answers, just a few words or making minor corrections to given code), so in my experience there's plenty of time to complete them. It's worth studying for them by doing the practice quizzes though; even if you're confident with the material, it's worth it to make sure you don't make simple mistakes (which seem to be the most common).NOTE: This class has a weekly 50\u2013minute discussion (tutorial) section! Caesar did not notify us of this fact when registering; hopefully this will be fixed for future quarters. Don't stress about these weekly tutorials though; you're only graded by participation (showing up and attempting them), and in my experience they're pretty chill.If you took AP computer science in high school, it should be a pretty straightforward class (just make sure you keep up with the syntax of the Racket programming language, since it's a bit unique). I can't speak for those new to programming, but there are plenty of resources available to get help if needed (lots of TAs with office hours, Ian's office hours, asking peers, etc).Regarding Curriculum: Some of my peers who were more experienced with CS actually found it a bit boring, teaching things they already knew, but I personally found it interesting to learn this new language and the general programming concepts that are taught through it; worst case you can \"multitask\" during lecture at times (I wouldn't zone out or not show up though; 90+% of the lectures had at least a few things related to Racket that even experienced programmers wouldn't know that you need to know for the assignments/quizzes). I think there are pros and cons to combining students new to programming with experienced students; on the plus side, all CS majors have a common baseline experience, and it provides an easy transition to CS in college for experienced programmers, but on the other hand, some peers I've talked to have said that they would rather have a more advanced intro class specifically for experienced programmers to avoid having to re\u2013learn concepts or go slower than necessary. There's also the question of whether this course adequately prepares students for 211, which I've heard is much harder.If you're a non\u2013CS major, keep in mind that the course's main value is in learning programming concepts rather than specific programming language skills (Racket isn't widely used for practical programming in the real world). So, if your main goal is to just learn the basics of a programming language like Python, maybe look into CS 110 instead. But if you're intellectually interested in CS or want to pursue it beyond basic programming language skills, then take this; it doesn't assume any previous CS experience.Overall, an enjoyable class that gave me an easy start to studying CompSci at NU.",
                "Racket was not very intuitive language and I don't think it was a good choice for an introductory CS course. Otherwise, Ian was a great lecturer and taught the concepts very well.",
                "Like everyone says, Racket is very obtuse and finicky which can be frustrating regardless of programming experience. However, if you stick with it you can gain a deeper understanding of programming concepts that can definitely be applied to other languages. Just don't expect this to be an easy class even if you have a lot of CS experience because getting used to Racket takes a long time. Don't take this as a distro if you don't plan on taking more CS classes \u2013 110 is much more manageable and practical.",
                "Easiest class, no need to show up to lecture just read slides ez 100",
                "This course is mediocre despite Ian being a super interesting lecturer. It's paced fine but Racket is just an annoying language to work in and there are sometimes tangents into things like the history of coding that feel unnecessary.",
                "The class was relatively easy for someone with no programming experience. It depends on how easy programming will come to you. The quizzes were the only part of the class that really affected ones grade and could be graded pretty harshly (one question wrong is 10% of your quiz grade which is 1.6% of your final grade) but for the most part they were pretty easy. Ian has a very theatrical way of teaching which can be engaging at times, but was somewhat rude when I spoke to him during office hours. Overall the course was easy and well taught though.",
                "Racket, the language used in this class makes it unnecessarily difficult in my opinion because there aren't any materials to help you understand what you are learning. What I mean by that is there isn't a textbook to look up information in. All there is to teach you is the slides from class. If you are not intuitive enough it can be extremely frustrating to figure out how to do some of the homework problems.",
                "I enjoyed the subject matter, but wish the lectures had been more engaging.",
                "Ian is a great professor, very fair about grades, really cares about his students and will do a lot to help. That said, the course itself was very frustrating, especially if you are a student coming in with knowledge in computer science. Racket works in a way that is so different than popular programming languages and can be hard to understand. The TAs are very helpful during office hours and on Piazza and the homework assignments really don't consume too much time. Go over the practice tests! They are so helpful.",
                "Pretty good and easy class! The time commitment isn't high at all \u2013 just an assignment per week. The assignments were definitely helpful in solidifying concepts discussed in class, and the peer mentors are great. I highly recommend going to the peer mentors' office hours if you need help on an assignment, there's pretty much endless office hours for this class so there's endless help which I really appreciated. As someone with no prior programming experience, I was a little nervous about taking this class, but the use of Racket seems to actually sort of level the playing field since we were all pretty much new to the language. Sometimes in lecture all of the people with programming experience would ask questions about things that I'd have no idea about, but I still managed to do pretty well in the course so it's not a huge deal. I personally didn't find the tutorial sessions to be that helpful, during my session we all kind of sat there in silence doing the assignment. Ian is a pretty good lecturer and tries really hard to entertain us all, but lecture could sometimes be a bit boring. If you have the choice, I would go with Sara just because I like her lecture style more (she does live examples during class so it's easier to contextualize the concepts you're talking about), but that is by no means saying that Ian is bad.",
                "Easy class in general except the A cutoff is pretty high but if you do all the homework and sit through the tutorial sessions, it'll turn out fine",
                "I liked the professor a lot, but the lectures were unnecessary for people with prior coding experience. Racket is not great. The quizzes were super easy.",
                "Overall, I would say that the course was pretty decent. The quizzes aren't too difficult if you have a moderate grasp of computer programming or pay attention in class. Plus, the instructor is really chill.",
                "Good easy class. Teacher is funny and not much work.",
                "I found the course to be helpful in learning the extreme basics of computer programming. The lectures are hard to follow since Ian goes over the slides confusingly, and I found that learning the material by myself was more impactful than actually going to lecture. Ian is great and extremely kind, however the language used in this class is confusing and not really helpful in my opinion in learning the basics of computer programming. The workload is definitely manageable and the quizzes are easy, fair, and straightforward. I would recommend taking this class with Ian; the real fault in this class is the language used, Racket.",
                "This course allowed me to break apart the code and understand how machines process commands in a more clear way.",
                "Learning Racket was made more confusing by my experience with other programming languages. But it was the teaching that I disliked more than the language. A lot of people really liked Ian's teaching style, but I didn't think he used class time effectively and spent a lot of time rambling. Then again, this isn't my first programming course (I'm a transfer, so it's my 5th). It makes sense that one should go slow for people who haven't learned a computer language before. It's just that it made class tedious for me and made me wish I had tried to place out of 111. On the bright side, this course is very accessible to beginners.I also like the policy of giving test answers out right after completing the test.",
                "I sorta died a lot.",
                "Well organized and structured course. I personally think this is the easiest class I have taken at Northwestern so far (as a sophomore).",
                "its hard but easy A. great class.",
                "Honestly a fantastic class.  Ian is a strong professor and there is plenty of outside help you can get through the TAs. The projects all helped me learn the concepts and the tests were fairly easy",
                "I enjoyed this course and thought it was a good introduction to Computer Science. Not too challenging. Weekly tutorials were helpful in practicing material and weekly project were good is assessing understanding.",
                "Be warned: Ian won't start actually teaching the course curriculum until Week 4. He is not good at communicating his ideas, announcements, or updates regarding the course either. I had a homework assignment that was misgraded four weeks ago. I emailed him screenshots of my old and updated code the day I got my grade back, and explained that my code wasn't wrong (it just wasn't written exactly how the auto\u2013grader wanted it written, but it still worked) and he still hasn't responded to my email; it's been over a month. I get that it's a large section so it might be hard for him to answer emails from 300 students, but he could have at least forwarded it to a TA and had them take care of it. If you're the kind of person who doesn't need help from TA's with assignments and doesn't mind having zero contact with their professor, then you'll do fine in this course. If you pay attention in lecture and take notes, the weekly tutorials and exercises actually aren't that bad. What gets frustrating is how carelessly they grade the quizzes and how much effort you have to put in outside of class to correct their mistakes and get the grades you truly earned and deserved.",
                "recursion",
                "Easy course. But since everyone is getting a nearly perfect score. A very small mistake such as missed a parenthesis may bury your A.",
                "This course was a terrible way to learn computer science. The homework is fine but the quizzes are not really a good way to test your skills and are impossible to study for. Professor never even coded during lecture and this made it very hard to learn.",
                "The course challenges you just the right amount but figuring out how to use racket's language is the hardest part of the course.",
                "This was a good class overall. The assignments were easy enough that I didn't tear my hair out, but also hard enough that I was challenged and had to use some critical thinking. I didn't mind coding in Racket, probably because it's the first language I've learned. The quizzes were very straightforward, and I appreciated that their format was consistent for all 3. Ian did a fine job teaching the lectures.",
                "Ian is a wonderful professor \u2013 very reasonable, approachable, and funny. Recursion is a really useful topic that I was never exposed to in my MechE programming courses, so this class was really useful for that.",
                "As someone who had already taken a number of beginner\u2013level programming classes before taking this class, I was half\u2013expecting to come out of this class having learned nothing worthwhile and viewing Racket as a completely useless language.  To my surprise, however, I found that this class was quite helpful in helping me relearn the core fundamentals of computer science, and that Racket as a programming language, while at times frustrating and somewhat counter\u2013intuitive, was overall helpful in re\u2013teaching me many concepts that I had forgotten over the years.  Given that this course is required for the computer science minor, even if you believe that the course will be useless and simply a review of things you've already learned, I would recommend going into it with an open mind, as at least for me it was decently helpful in updating my understanding of computer science and making sure I was ready to take the higher\u2013level classes in the field.  The actual course itself can occasionally feel rather disorganized and all over the place, especially if you end up missing some lectures, but as long as you make a good effort to understand the material and make use of the resources provided to you when needed, this class should definitely be manageable.",
                "I think this course made me realize that computer science isn't quite for me but I did find it interesting to logically go through code and try to see what it is doing.",
                "The class was a really easy A; however, racket is not a useful language in life, and I feel like our assignments did not teach us a lot about it anyway",
                "This course is a great intro to comp sci. The first couple lectures are a VERY broad overview of computation that are not particularly relevant to the course but still interesting. Racket is a difficult language to get used to but solving homework programs and tutorial assignments is quite gratifying.",
                "Overall, it's a totally solid introduction to coding. I found most assignments to be helpful in learning the content.",
                "I honestly think whether or not you enjoyed this course says whether or not you will enjoy CS in the future. Sure the lectures were boring and dry as hell, but the tutorials and the exercises were very worthwhile and really did well to apply the concepts we were taught in lecture into practical applications. And yes, everybody complains about Racket, but (and I know this is very niche) if you've every coded in Excel before, it's very similar to that or any database language. If you're familiar with Java or Python or most modern coding languages, most of the class is spent learning how to use Racket because the concepts are very familiar to the typical CS curriculum.",
                "This is an odd class; it seems incredibly easy for those with prior AP experience, but quite challenging for those new to programming. If you ask me, it should be restructured to focus on either one demographic or the other. The summary of multiple different paradigms of programming is a good approach to the material, but if you're a non\u2013major or minor, you should probably take 110 instead.",
                "Racket is irritating, but this class is a major requirement, so I gotta do what I gotta do.",
                "I would recommend this course to someone interested in computer science because it allows you to learn the basics of compsci without being a very difficult course.",
                "Interesting collection of problems handled, from some amount of images to more traditional comp sci problems.",
                "The class overall is good. The homeworks can take a while, especially if you're not great at programming to start with, so be sure to either find a friend to work through ideas with or go to office hours early. Overall, it's not that bad.",
                "Take this class with Horswill! He's an awesome prof and explains material really well. The exams aren't terrible and the TAs really help out with answering questions. Although I wouldn't recommend the class for kids trying to fill out a distro, the class is an easy A.",
                "Great course. Exams are quite easy. The homework assignments are very tough though.",
                "Ian is a cool and chill professor. I think, however, I learned the most when doing homework assignments. If you have some CS background, you don't have to worry about this class \u2013 if not, this is a good start too!",
                "A very good class to take 1st quarter. Racket is not so good but the quizzes are doable",
                "I don't understand the significance of learning Racket yet.",
                "Homework is hard, quizzes aren't. Go to office hours, they are super helpful. Make sure you understand recursion!!",
                "I think that as long as you do your homework, show up to ta sections, and pay attention in class, you should definitely be on track to get an A or A\u2013. This is a really good fundamental course to take, and Ian Horswill is a good professor who explains everything in depth. One drawback is I wish there was some more live coding in class, but other than that it was good.",
                "Reasonable class, the language we use is odd and probably not necessary, but it's not the worst and doesn't take too much time to do the homeworks. The quizzes seem fine. Would be nice if the people with significant CS experience could skip this class, then maybe there might be a curve. Instructor was okay but I hear another might be better.",
                "This class is great for getting a good foundation. It is not very difficult. The quizzes and homework assignments are very doable and the class is not time\u2013consuming at all. The lectures could be more engaging/interesting but overall it's a good class.",
                "Racket is a very complicated language, despite being made to introduce people into the world of computer science. The syntax is quite difficult, but the programs are doable. As long as you look at the documentation, you should be fine in this course. The lectures are not super helpful.",
                "Don't like Ian's lecture style. Homework assignments are hard on your own but you can pretty much get them completed in office hours. Hard to follow lectures because Ian types out example code in the powerpoints instead of coding things step by step in class.",
                "This class was very good and straightforward. Ian is a great teacher and really cares about the content.",
                "It was a good reaction because it explored fundamentals well",
                "It is taught in racket which is terrible.",
                "Not a very difficult class even if you have never programmed before.",
                "Conceptually the material was somewhat challenging and the homework programs took a long time, but the exams were relatively easy in comparison.",
                "Yes",
                "If you've never programmed before this class can be a little tricky but it might be worth it just to witness Ian's lectures. He's a strange man but you gotta love him. If you go to office hours or ask questions after class it makes it easier. The tutorials can be kind of tedious and seem a little unnecessary (attendance is mandatory), and some of the exercises could be difficult. If you need a distro, there are probably easier ones, but it's not too bad overall.",
                "Felt redundant having transferred from another institution with a full year of CS class experience.",
                "Very easy course that was nice.",
                "If you have taken a lot of CS in high school this course will be very easy. I spent ~1 hour per week on assignments, sometimes less and have an 100% in the class. Kind of relaxing to go to a class that makes complete sense though and good to practice with an auto grader maybe.",
                "The course is interesting and Ian is a great lecturer, but the homework is not comparable to the lectures at all. Office hours are essential in doing the homework. The quizzes are a lot easier than the homework but the questions are few so one mistake can cost you.",
                "The programming language taught by this course if very different from any other programming language usually taught in high school, and it does take a few weeks to get used to. The good thing is, there is not a huge advantage for students who have computer science programming compared to students stepping into the field for the first time, because it is a learning curve for everybody. As frustrating as the programming language was, the professor was excellent in explaining the logic behind using this programming language, and the slides used in class were easy to follow. This course is useful for gaining skills in how to think like a computer programmer, which is important for any programming language. The work load is very light as well.",
                "If you have prior coding experience, the class will be fairly easy. However, it is very doable for people with no experience too.",
                "I had no programming experience before this and it was helpful",
                "This course is fairly straightforward if you pay attention to lecture. Prof. Horswill does a great job of breaking complex ideas into parts that are easily understandable, and he's obviously very passionate about the subject matter of the course. I had minimal prior programming experience, but I didn't mind Racket as much as most people. In fact, I see why it is useful because it often breaks things down into their most simple parts, forcing the programmer to really understand what's going on behind the code and not just implementing random procedures.",
                "It didn\u2019t really focus on a specific language besides Racket. It didn\u2019t really give me insight into what CS is really like.",
                "I enjoyed learning from Ian. It's clear that he's passionate about the subject and will strive to ensure his students succeed. The language (Racket) is non\u2013traditional for those who have already learned Java/Python, but the concepts are transferable across all languages.",
                "COMPSCI 111 is a course that you need to get familiar with a strange language Racket first and apply these computer concepts. Professor Ian is funny and helpful. But if you look for more practical computer science skills and not consider majoring/minoring CS, maybe think about taking CS110.",
                "Ian is very kind and he seems to know a lot but his lectures were terribly boring. I went to every lecture, but usually I could read through the slides after class and learn everything in about 15 minutes (the slides are fantastic). He just seemed to take really long\u2013winded explanations to convey each little bit of information. Office hours were incredibly useful and I usually ended up going once or twice a readings to complete assignments. Tests were easy.",
                "I did not feel I was creating code that was in any way useful.",
                "This course is taught in Racket, which may not be the most practical of languages in the industry. But it's an easy enough language for a beginner and has all the core functionality that's needed for the concepts taught in class. The concepts span a broad area and are valuable.",
                "The course is hard as noone likes racket and the lectures are really hard to understand. The course goes by in a flash so you really need to be on top of your work.",
                "the class was not easy and not useful for anyone not majoring in CS",
                "It was way too easy for a CS class",
                "Racket is a crappy language that besides this class, you will never use in your life. Go to CS 110, which teaches Python to learn a more practical language. And This class is hard.",
                "Ian taught the course well and managed to make some of the easier, dry material more interesting.",
                "Ian is a cool teacher but I personally found it difficult to pay attention at times. Studying is slides is usually enough but staying on top of assignments and doing the tutorials would be very helpful. First quiz is very easy, but cramming doesn't work as well for the second quiz which is probably also true for the final. It is fun to watch Ian sit on his feet during class while lecturing and see his anime shirts.",
                "It teaches you how to program, and emphasis on debugging.",
                "It doesn't matter if you have taken a CS course before.  The class is taught in racket (scheme based), meaning literally no one has seen the syntax before.  The class mainly focuses on coding concepts, not syntax.  The concepts and their applications are well explained.  Despite the amount of material covered, the course load is extremely manageable, and the quizzes (tests) cover only the simplest concepts from class.",
                "The course was generally taught well. While not interesting, course material is well covered and assignments are of reasonable length while also teaching you the components of the class that you need to master.",
                "The class is taught in a lecture style and can be very boring and feel like hes not actually teaching and then you get your hw and it just feels super hard.",
                "Good instruction and availablity for office hours",
                "Ian is a really good teacher to have for cs 111. He's very excited about the course material + midterms reflect really well on what you've learned in the course. Recommend him for any cs class.",
                "For whatever reason, I absolutely could not focus during lectures. All the info you need to know is on the slides though, and reading over those before quizzes was extremely helpful. Also, going to office hours for the exercises taught me everything I needed to know.",
                "This course is helpful for learning the fundamentals of coding, but racket is basically useless outside of class. The course is not too hard if you understand the slides and work through assignments. Assignments might take a while but completing them is the best way to learn the material.",
                "This course was good because it makes everyone on equal footing regardless of coding experience",
                "Ian Horswill is an AMAZING professor! Lectures are not super interesting and not 100% necessary to go to. BUT, take this class! We didn't have homework until around week 5 and even when we did the homeworks were fun and engaging. There are 3 quizzes as exams and they are not that difficult. Highly recommend. (Note: came into this class having taken comp. sci. in high school).",
                "I didn't like the use of Racket, it made the code very hard to read and debug sometimes.",
                "Let me start by saying that I had never seen a line of code before in my life before taking this class. I had gotten 1 formal studies credit from AP Calc in high school, and I needed another one but definitely did not want to go any further with calc. I was always interested in learning how to code, so I took 111 to fulfill the distro. Because I'm new to coding, I did not really relate to my classmates' frustration with the clunkiness of Racket because I didn't know any different. Ian is literally the nicest, most understanding guy and it's so clear that he wants everyone to learn and is so passionate about computer science. The peer mentor program & office hours literally saved me in this class\u2013\u2013 the tutorial sessions were awesome, especially because I took the easiest level so my TA really walked us through the concepts step by step. My only criticism of Ian would be of his lecture style. He used powerpoints and just talked, which made the concepts seem super theoretical and hard to understand. I wish he wold have been coding on the board and having us follow along. Watching the lectures was kind of like watching a powerpoint about how to play the violin; you can only really learn by DOING, which was what these lectures were lacking. I learned the most by actually doing the homeworks and tutorials, because then you're applying the concepts instead of listening to him talk about them.  My most important piece of advice would be: GO. TO. OFFICE. HOURS. FOR. THE. TAS. The first few assignments I struggled through on my own, spending hours trying & failing. Then, I realized you could go to office hours, sit there for a couple hours, and have the TAs help you do the homework. It was amazing because it took way less time and you walked away actually understanding instead of just doing trial and error. If you've never coded before, you can do it!!",
                "This course almost made me not want to do cs anymore. The structure and lectures make it seem like all cs classes are like this in NU. Hopefully they aren't",
                "I really enjoyed this course. Although people say Racket isn't a very useful language in the long run, I do feel like I've learned a lot about programming in general thanks to it. The assignments aren't too difficult either, and there is only 1 a week, so it's not hard to work ahead and finish it several days before it's due. Ian does a pretty good job teaching; he goes slow enough so the content is understandable, but he still gets through a lot of material. The tutorials are also nice, but I felt like the TAs sometimes didn't care as much as they should.",
                "Racket is a horrible program, Ian's lectures are fine but Abby's are amazing",
                "First of all, I had trouble with this class. Racket was just very confusing for me to learn and I'm in McCormick. I needed a lot of help with the homework assignments. It was very frustrating because I had previous some CS experience beforehand, too. But most of the people I knew did not have much of a problem with this class. Ian's lectures can be boring but they are worth listening to. And he is very willing to answer questions DURING lecture which is very nice. He will literally wait for people to ask questions. Like who takes the time to take questions during a 300 person lecture???Midterm wise, the quizzes are basically midterms. There are two midterms and a final quiz. The practice quizzes are a very good indicator on how well you know the material so definitely do those. If you understand most of the logic, you should be fine for the quizzes.",
                "Basically this class was a pain in my behind. I learned nothing. Took Comp sci for two years in high school and loved it and now I can\u2019t even look at it. This class has very little help and the homework\u2019s are the only way to learn but because there are so many students nobody actually gets feedback so you just fumble along and hope you did most of it correct every single time. Not worth my time and effort essentially.",
                "I thought the professor for this course was great, so if you have to take the class take it with him if you can. However the course itself was kind of easy and didn't go to the level that I wanted a computer science class to go to. You code in Racket, which is a language that you will literally never use again, so overall the class itself sometimes felt kind of like a waste of time. However it was a nice overview of the basics of functional programming and some imperative programming as well.",
                "Ian is absolutely amazing. You have to take his class if you can. Graduating Northwestern without taking a class from Ian is just a tragedy.",
                "I was a huge fan of how the course was structured, with the three equally weighted quizzes and no final. I also liked the tutorial sections. As a whole, I thought they did a really good job of handling the huge size of the class which was impressive.",
                "It is very tough having never done comp sci but manageable",
                "good class, easy for experienced students",
                "I definitely spent a lot of time figuring out the assignments, and asked my TA a lot of questions. Also, I think it was a little hard initially since I did not have a lot of coding experience, but seeking out the different resources offered in this class was really helpful. After a while, I started understanding coding better, and it got a little easier.",
                "This course gives a good introductory to computer programming, but it's not that engaging. It's not too bad, but if you're looking to take one CS class and be done, take 101.",
                "I loved this course. I had no computer science experience coming in and I thought the course was great. I didn't feel that I was behind anyone else because they had done CS before. The lectures weren't amazing and I thought that it was very easy to zone out but they were a good base to build on and tutorials and exercises (homeworks) were great for consolidating my knowledge.",
                "This course was good at teaching basic programming skills, although it can move a little slowly sometimes. Great for people who want to get an introduction to computer programming.",
                "I thought this course was pretty interesting. The one thing I will say is that this course is meant to teach the fundamentals of programming rather than the fundamentals of a certain programming language. The language used, Racket, is not very practical outside of its use in the class.",
                "The assignments are much harder than the quizzes",
                "While the coding language used in the class is awful, and generally not that applicable in the real world, the class still did a good job of teaching the fundamentals.",
                "This was a huge lecture with over 300 people and it's really hard to stay focussed and pay attention. Although they try to break it down through smaller tutorials and TA office hours it is extremely hard to learn. There is a huge range of ability in the course, some find this class a breeze and others struggle the whole time. Even though I thought I was prepared for the quizzes, I did not do as well as expected. The quizzes are short so each questions has a lot of weight put on it.",
                "This course was well structured and relatively interesting.",
                "Course material was engaging throughout. Lectures can get boring, but the slides are always made available and it's easy to learn from those alone. Exercises were challenging, especially in the middle of the quarter.",
                "I was scared of taking this class because i had never coded before. But it turns out that teh TAs and Ian were super helpful, and I am now taking 211 in winter and thinking about a minor in CS.",
                "It was a nice course, except that racket is not the best language in my opinion, however, I believe it makes sense to teach Racket in an introductory course as puts students who have coded before and those who havent on the same level because its such a different language than any other. Lectures are not that important even though they do help, but you could also just read the lectures by yourself and do great",
                "This class really makes me understand the basic of coding. However, the programming language in this class is the downside for me. The most challenging part would be the exercises in every week (it can get pretty hard). The tests are relatively easy.",
                "The lectures weren't that helpful, but I did learn from the homework assignments",
                "I was very confused in this class until the end. I didn't figure out anything until like the last week but I am not sure if that is normal",
                "This course is great for beginners, trying to learn how coding works. The professor is very friendly and will sit right by you and help you understand the course if he must. The lecture slides have anime pictures on them, which makes the class even more cheerful",
                "Ian's slides are 90% fluff. Class not needed to do well. Assignments are hard but class is an easy A if you are competent.",
                "Good, but racket can get weird sometimes",
                "Probably the most important part of the course for me, and the only area I was challenged was learning to program functionally.  That is, it was new for me to program with only one execute statement available, and required me to twist my mind in ways I don't normally do.  However, this could've been done within a week or two, imperative programming just felt like a weak version of object\u2013oriented programming, which I already knew from AP Computer Science A.",
                "Learnt how to code in racket. I personally wanted to learn a more useful language such as JAVA or C++",
                "doing the homework is the best way to learn, listening and looking at lecture slides didn't really help.",
                "I think if you have any prior programming experience, this class will be decently easy. Half of the students didn't go to class after like the 3rd lecture. The professor was pretty chill, and I don't think that it's necessary to go to class because the lectures are posted on Canvas and are pretty self\u2013explanatory, unlike other classes. If you've never programmed before, this class will be a bit more difficult, but if you go to office hours then it'll definitely be bearable, and the final is weighted as much as the other exams, so thats a plus.",
                "This is a pretty easy class and an alright introduction to coding. It\u2019s more about the mindset behind coding rather than learning a language. Racket isn\u2019t a very intuitive language and im not sure how it compares to other languages. The exercises are moderately challenging, but the TAs are very helpful and you can sign up for a free extension. The midterm and finals are very easy.",
                "The concepts are very easy and straight forward, and the assignments aren't that hard, but Racket (in my humble opinion) is a horrible language and very hard to understand.",
                "Taking this class with Ian isn't bad, but some of the lectures are irrelevant when considering material on the quizzes, complete and understand the assignments and you'll be fine",
                "If you come into this course with a moderate amount of coding experience, this will be super easy. It does pick up, though, after around the 1st quiz/midterm, but it shouldn't be anything you can't teach yourself. The homework assignments were helpful, but the tutorial sessions were kind of a waste of time.",
                "This course is incredibly easy if you have any coding experience, especially beyond the scope of AP Comp Sci A. Racket is frustrating at first, but by the end of the quarter, it makes a lot of sense. I would highly recommend this course to anyone looking to try coding for the first time, as the pace is well\u2013suited for that, and there are lots of people in that class who are more than willing to help with assignments!",
                "I believe the course was helpful to me as a starting computer science course as it taught me the fundamentals that will be paramount latter.",
                "Racket is awful. Also, for multiple reasons (Class being so big etc), you literally learn NOTHING in the lectures. I literally had to teach myself the ENTIRE syllabus. Homeworks are very helpful though, but the tutorial sessions are pretty useless. Also, the slide deck is very nice. It is welll\u2013strucutured and clear, so it helps a lot.",
                "It muddled up my knowledge of coding by introducing Racket, but it introduced me to the notions of imperative, functional, and object\u2013oriented programming.",
                "The course was not very effective at teaching me computer science. The class is way too big and basically learned everything during office hours.",
                "Ian is a great professor. Pay attention in class and the quizzes should be easy.",
                "Great course. Prof Ian is a good lecturer and a nice person. The material is challenging for CS rookie, but easy and basic for those with the background.",
                "The homeworks are awful , super difficult and time consuming. Pretty much have to go to office hours to get them done. But the exams are fair and the professor is great",
                "In high school I took AP CS Principles, and I found this course to be manageable. The lectures were kind of boring and I didn't learn much while sitting in the lecture hall. I learned mostly from the homework assignments and tutorials where I was actually able to apply the concepts in the lectures. However, the lecture slides were useful to refer back to while coding. I really don't like language Racket, but I guess it helped teach the fundamentals of computer science. Overall I thought it was a decent introductory course.",
                "Ian is very passionate!",
                "It covered the general computer science concepts without going too deeply into any of them specifically."
            ]
        }
    ]
}
